   1              		.file	"binio.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.rodata
   5              	.LC0:
   6 0000 726200   		.string	"rb"
   7 0003 00000000 		.align 8
   7      00
   8              	.LC1:
   9 0008 556E6578 		.string	"Unexpectedly hit EOF after reading %lu bytes!\n"
   9      70656374 
   9      65646C79 
   9      20686974 
   9      20454F46 
  10              		.text
  11              		.globl	bufAppendFromBinaryFile
  13              	bufAppendFromBinaryFile:
  14              	.LFB4:
  15              		.file 1 "binio.c"
   1:binio.c       **** /*
   2:binio.c       ****  * Copyright (C) 2009-2012 Chris McClelland
   3:binio.c       ****  *
   4:binio.c       ****  * This program is free software: you can redistribute it and/or modify
   5:binio.c       ****  * it under the terms of the GNU Lesser General Public License as published by
   6:binio.c       ****  * the Free Software Foundation, either version 3 of the License, or
   7:binio.c       ****  * (at your option) any later version.
   8:binio.c       ****  *
   9:binio.c       ****  * This program is distributed in the hope that it will be useful,
  10:binio.c       ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:binio.c       ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:binio.c       ****  * GNU Lesser General Public License for more details.
  13:binio.c       ****  *
  14:binio.c       ****  * You should have received a copy of the GNU Lesser General Public License
  15:binio.c       ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:binio.c       ****  */
  17:binio.c       **** #include <stdio.h>
  18:binio.c       **** #include <liberror.h>
  19:binio.c       **** #include "libbuffer.h"
  20:binio.c       **** 
  21:binio.c       **** DLLEXPORT(BufferStatus) bufAppendFromBinaryFile(
  22:binio.c       **** 	struct Buffer *self, const char *fileName, const char **error)
  23:binio.c       **** {
  16              		.loc 1 23 0
  17              		.cfi_startproc
  18 0000 55       		pushq	%rbp
  19              		.cfi_def_cfa_offset 16
  20              		.cfi_offset 6, -16
  21 0001 4889E5   		movq	%rsp, %rbp
  22              		.cfi_def_cfa_register 6
  23 0004 4883EC40 		subq	$64, %rsp
  24 0008 48897DD8 		movq	%rdi, -40(%rbp)
  25 000c 488975D0 		movq	%rsi, -48(%rbp)
  26 0010 488955C8 		movq	%rdx, -56(%rbp)
  24:binio.c       **** 	BufferStatus bStatus;
  25:binio.c       **** 	long length;
  26:binio.c       **** 	long actualLength;
  27:binio.c       **** 	const uint32 currentLength = self->length;
  27              		.loc 1 27 0
  28 0014 488B45D8 		movq	-40(%rbp), %rax
  29 0018 8B4008   		movl	8(%rax), %eax
  30 001b 8945E0   		movl	%eax, -32(%rbp)
  28:binio.c       **** 	uint8 *ptr;
  29:binio.c       **** 	FILE *file = fopen(fileName, "rb");
  31              		.loc 1 29 0
  32 001e 488B45D0 		movq	-48(%rbp), %rax
  33 0022 488D3500 		leaq	.LC0(%rip), %rsi
  33      000000
  34 0029 4889C7   		movq	%rax, %rdi
  35 002c E8000000 		call	fopen@PLT
  35      00
  36 0031 488945E8 		movq	%rax, -24(%rbp)
  30:binio.c       **** 	if ( !file ) {
  37              		.loc 1 30 0
  38 0035 48837DE8 		cmpq	$0, -24(%rbp)
  38      00
  39 003a 7516     		jne	.L2
  31:binio.c       **** 		errRenderStd(error);
  40              		.loc 1 31 0
  41 003c 488B45C8 		movq	-56(%rbp), %rax
  42 0040 4889C7   		movq	%rax, %rdi
  43 0043 E8000000 		call	errRenderStd@PLT
  43      00
  32:binio.c       **** 		return BUF_FOPEN;
  44              		.loc 1 32 0
  45 0048 B8020000 		movl	$2, %eax
  45      00
  46 004d E9300100 		jmp	.L3
  46      00
  47              	.L2:
  33:binio.c       **** 	}
  34:binio.c       **** 	if ( fseek(file, 0, SEEK_END) ) {
  48              		.loc 1 34 0
  49 0052 488B45E8 		movq	-24(%rbp), %rax
  50 0056 BA020000 		movl	$2, %edx
  50      00
  51 005b BE000000 		movl	$0, %esi
  51      00
  52 0060 4889C7   		movq	%rax, %rdi
  53 0063 E8000000 		call	fseek@PLT
  53      00
  54 0068 85C0     		testl	%eax, %eax
  55 006a 7416     		je	.L4
  35:binio.c       **** 		errRenderStd(error);
  56              		.loc 1 35 0
  57 006c 488B45C8 		movq	-56(%rbp), %rax
  58 0070 4889C7   		movq	%rax, %rdi
  59 0073 E8000000 		call	errRenderStd@PLT
  59      00
  36:binio.c       **** 		return BUF_FSEEK;
  60              		.loc 1 36 0
  61 0078 B8030000 		movl	$3, %eax
  61      00
  62 007d E9000100 		jmp	.L3
  62      00
  63              	.L4:
  37:binio.c       **** 	}
  38:binio.c       **** 	length = ftell(file);
  64              		.loc 1 38 0
  65 0082 488B45E8 		movq	-24(%rbp), %rax
  66 0086 4889C7   		movq	%rax, %rdi
  67 0089 E8000000 		call	ftell@PLT
  67      00
  68 008e 488945F0 		movq	%rax, -16(%rbp)
  39:binio.c       **** 	bStatus = bufAppendConst(self, 0x00, length, error);
  69              		.loc 1 39 0
  70 0092 488B45F0 		movq	-16(%rbp), %rax
  71 0096 89C6     		movl	%eax, %esi
  72 0098 488B55C8 		movq	-56(%rbp), %rdx
  73 009c 488B45D8 		movq	-40(%rbp), %rax
  74 00a0 4889D1   		movq	%rdx, %rcx
  75 00a3 89F2     		movl	%esi, %edx
  76 00a5 BE000000 		movl	$0, %esi
  76      00
  77 00aa 4889C7   		movq	%rax, %rdi
  78 00ad E8000000 		call	bufAppendConst@PLT
  78      00
  79 00b2 8945E4   		movl	%eax, -28(%rbp)
  40:binio.c       **** 	if ( bStatus != BUF_SUCCESS ) {
  80              		.loc 1 40 0
  81 00b5 837DE400 		cmpl	$0, -28(%rbp)
  82 00b9 7414     		je	.L5
  41:binio.c       **** 		fclose(file);
  83              		.loc 1 41 0
  84 00bb 488B45E8 		movq	-24(%rbp), %rax
  85 00bf 4889C7   		movq	%rax, %rdi
  86 00c2 E8000000 		call	fclose@PLT
  86      00
  42:binio.c       **** 		return bStatus;
  87              		.loc 1 42 0
  88 00c7 8B45E4   		movl	-28(%rbp), %eax
  89 00ca E9B30000 		jmp	.L3
  89      00
  90              	.L5:
  43:binio.c       **** 	}
  44:binio.c       **** 	rewind(file);
  91              		.loc 1 44 0
  92 00cf 488B45E8 		movq	-24(%rbp), %rax
  93 00d3 4889C7   		movq	%rax, %rdi
  94 00d6 E8000000 		call	rewind@PLT
  94      00
  45:binio.c       **** 	actualLength = fread(self->data + currentLength, 1, length, file);
  95              		.loc 1 45 0
  96 00db 488B45F0 		movq	-16(%rbp), %rax
  97 00df 488B55D8 		movq	-40(%rbp), %rdx
  98 00e3 488B0A   		movq	(%rdx), %rcx
  99 00e6 8B55E0   		movl	-32(%rbp), %edx
 100 00e9 488D3C11 		leaq	(%rcx,%rdx), %rdi
 101 00ed 488B55E8 		movq	-24(%rbp), %rdx
 102 00f1 4889D1   		movq	%rdx, %rcx
 103 00f4 4889C2   		movq	%rax, %rdx
 104 00f7 BE010000 		movl	$1, %esi
 104      00
 105 00fc E8000000 		call	fread@PLT
 105      00
 106 0101 488945F8 		movq	%rax, -8(%rbp)
  46:binio.c       **** 	if ( actualLength != length ) {
 107              		.loc 1 46 0
 108 0105 488B45F8 		movq	-8(%rbp), %rax
 109 0109 483B45F0 		cmpq	-16(%rbp), %rax
 110 010d 7462     		je	.L6
  47:binio.c       **** 		fclose(file);
 111              		.loc 1 47 0
 112 010f 488B45E8 		movq	-24(%rbp), %rax
 113 0113 4889C7   		movq	%rax, %rdi
 114 0116 E8000000 		call	fclose@PLT
 114      00
  48:binio.c       **** 		if ( feof(file) ) {
 115              		.loc 1 48 0
 116 011b 488B45E8 		movq	-24(%rbp), %rax
 117 011f 4889C7   		movq	%rax, %rdi
 118 0122 E8000000 		call	feof@PLT
 118      00
 119 0127 85C0     		testl	%eax, %eax
 120 0129 7423     		je	.L7
  49:binio.c       **** 			errRender(error, "Unexpectedly hit EOF after reading %lu bytes!\n", actualLength);
 121              		.loc 1 49 0
 122 012b 488B55F8 		movq	-8(%rbp), %rdx
 123 012f 488B45C8 		movq	-56(%rbp), %rax
 124 0133 488D3500 		leaq	.LC1(%rip), %rsi
 124      000000
 125 013a 4889C7   		movq	%rax, %rdi
 126 013d B8000000 		movl	$0, %eax
 126      00
 127 0142 E8000000 		call	errRender@PLT
 127      00
  50:binio.c       **** 			return BUF_FEOF;
 128              		.loc 1 50 0
 129 0147 B8040000 		movl	$4, %eax
 129      00
 130 014c EB34     		jmp	.L3
 131              	.L7:
  51:binio.c       **** 		} else if ( ferror(file) ) {
 132              		.loc 1 51 0
 133 014e 488B45E8 		movq	-24(%rbp), %rax
 134 0152 4889C7   		movq	%rax, %rdi
 135 0155 E8000000 		call	ferror@PLT
 135      00
 136 015a 85C0     		testl	%eax, %eax
 137 015c 7413     		je	.L6
  52:binio.c       **** 			errRenderStd(error);
 138              		.loc 1 52 0
 139 015e 488B45C8 		movq	-56(%rbp), %rax
 140 0162 4889C7   		movq	%rax, %rdi
 141 0165 E8000000 		call	errRenderStd@PLT
 141      00
  53:binio.c       **** 			return BUF_FERROR;
 142              		.loc 1 53 0
 143 016a B8050000 		movl	$5, %eax
 143      00
 144 016f EB11     		jmp	.L3
 145              	.L6:
  54:binio.c       **** 		}
  55:binio.c       **** 	}
  56:binio.c       **** 	fclose(file);
 146              		.loc 1 56 0
 147 0171 488B45E8 		movq	-24(%rbp), %rax
 148 0175 4889C7   		movq	%rax, %rdi
 149 0178 E8000000 		call	fclose@PLT
 149      00
  57:binio.c       **** 	return BUF_SUCCESS;
 150              		.loc 1 57 0
 151 017d B8000000 		movl	$0, %eax
 151      00
 152              	.L3:
  58:binio.c       **** }
 153              		.loc 1 58 0
 154 0182 C9       		leave
 155              		.cfi_def_cfa 7, 8
 156 0183 C3       		ret
 157              		.cfi_endproc
 158              	.LFE4:
 160              		.section	.rodata
 161              	.LC2:
 162 0037 776200   		.string	"wb"
 163              		.text
 164              		.globl	bufWriteBinaryFile
 166              	bufWriteBinaryFile:
 167              	.LFB5:
  59:binio.c       **** 
  60:binio.c       **** DLLEXPORT(BufferStatus) bufWriteBinaryFile(
  61:binio.c       **** 	const struct Buffer *self, const char *fileName, uint32 bufAddress, uint32 count,
  62:binio.c       **** 	const char **error)
  63:binio.c       **** {
 168              		.loc 1 63 0
 169              		.cfi_startproc
 170 0184 55       		pushq	%rbp
 171              		.cfi_def_cfa_offset 16
 172              		.cfi_offset 6, -16
 173 0185 4889E5   		movq	%rsp, %rbp
 174              		.cfi_def_cfa_register 6
 175 0188 4883EC30 		subq	$48, %rsp
 176 018c 48897DE8 		movq	%rdi, -24(%rbp)
 177 0190 488975E0 		movq	%rsi, -32(%rbp)
 178 0194 8955DC   		movl	%edx, -36(%rbp)
 179 0197 894DD8   		movl	%ecx, -40(%rbp)
 180 019a 4C8945D0 		movq	%r8, -48(%rbp)
  64:binio.c       **** 	uint32 actualLength;
  65:binio.c       **** 	FILE *file = fopen(fileName, "wb");
 181              		.loc 1 65 0
 182 019e 488B45E0 		movq	-32(%rbp), %rax
 183 01a2 488D3500 		leaq	.LC2(%rip), %rsi
 183      000000
 184 01a9 4889C7   		movq	%rax, %rdi
 185 01ac E8000000 		call	fopen@PLT
 185      00
 186 01b1 488945F8 		movq	%rax, -8(%rbp)
  66:binio.c       **** 	if ( !file ) {
 187              		.loc 1 66 0
 188 01b5 48837DF8 		cmpq	$0, -8(%rbp)
 188      00
 189 01ba 7513     		jne	.L9
  67:binio.c       **** 		errRenderStd(error);
 190              		.loc 1 67 0
 191 01bc 488B45D0 		movq	-48(%rbp), %rax
 192 01c0 4889C7   		movq	%rax, %rdi
 193 01c3 E8000000 		call	errRenderStd@PLT
 193      00
  68:binio.c       **** 		return BUF_FOPEN;
 194              		.loc 1 68 0
 195 01c8 B8020000 		movl	$2, %eax
 195      00
 196 01cd EB60     		jmp	.L10
 197              	.L9:
  69:binio.c       **** 	}
  70:binio.c       **** 	actualLength = fwrite(self->data + bufAddress, 1, count, file);
 198              		.loc 1 70 0
 199 01cf 8B45D8   		movl	-40(%rbp), %eax
 200 01d2 488B55E8 		movq	-24(%rbp), %rdx
 201 01d6 488B0A   		movq	(%rdx), %rcx
 202 01d9 8B55DC   		movl	-36(%rbp), %edx
 203 01dc 488D3C11 		leaq	(%rcx,%rdx), %rdi
 204 01e0 488B55F8 		movq	-8(%rbp), %rdx
 205 01e4 4889D1   		movq	%rdx, %rcx
 206 01e7 4889C2   		movq	%rax, %rdx
 207 01ea BE010000 		movl	$1, %esi
 207      00
 208 01ef E8000000 		call	fwrite@PLT
 208      00
 209 01f4 8945F4   		movl	%eax, -12(%rbp)
  71:binio.c       **** 	if ( actualLength != count ) {
 210              		.loc 1 71 0
 211 01f7 8B45F4   		movl	-12(%rbp), %eax
 212 01fa 3B45D8   		cmpl	-40(%rbp), %eax
 213 01fd 741F     		je	.L11
  72:binio.c       **** 		fclose(file);
 214              		.loc 1 72 0
 215 01ff 488B45F8 		movq	-8(%rbp), %rax
 216 0203 4889C7   		movq	%rax, %rdi
 217 0206 E8000000 		call	fclose@PLT
 217      00
  73:binio.c       **** 		errRenderStd(error);
 218              		.loc 1 73 0
 219 020b 488B45D0 		movq	-48(%rbp), %rax
 220 020f 4889C7   		movq	%rax, %rdi
 221 0212 E8000000 		call	errRenderStd@PLT
 221      00
  74:binio.c       **** 		return BUF_FERROR;
 222              		.loc 1 74 0
 223 0217 B8050000 		movl	$5, %eax
 223      00
 224 021c EB11     		jmp	.L10
 225              	.L11:
  75:binio.c       **** 	}
  76:binio.c       **** 	fclose(file);	
 226              		.loc 1 76 0
 227 021e 488B45F8 		movq	-8(%rbp), %rax
 228 0222 4889C7   		movq	%rax, %rdi
 229 0225 E8000000 		call	fclose@PLT
 229      00
  77:binio.c       **** 	return BUF_SUCCESS;
 230              		.loc 1 77 0
 231 022a B8000000 		movl	$0, %eax
 231      00
 232              	.L10:
  78:binio.c       **** }
 233              		.loc 1 78 0
 234 022f C9       		leave
 235              		.cfi_def_cfa 7, 8
 236 0230 C3       		ret
 237              		.cfi_endproc
 238              	.LFE5:
 240              	.Letext0:
 241              		.file 2 "/usr/lib/gcc/x86_64-linux-gnu/4.9/include/stddef.h"
 242              		.file 3 "/usr/include/x86_64-linux-gnu/bits/types.h"
 243              		.file 4 "/usr/include/stdio.h"
 244              		.file 5 "/usr/include/libio.h"
 245              		.file 6 "/home/asoreyh/Dropbox/projects/lago/lago-software/acqua/brc/lago/makestuff/common/makestu
 246              		.file 7 "libbuffer.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 binio.c
     /tmp/ccSkfVh9.s:13     .text:0000000000000000 bufAppendFromBinaryFile
     /tmp/ccSkfVh9.s:166    .text:0000000000000184 bufWriteBinaryFile

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
fopen
errRenderStd
fseek
ftell
bufAppendConst
fclose
rewind
fread
feof
errRender
ferror
fwrite
