   1              		.file	"hexio.c"
   2              		.section	.rodata.str1.1,"aMS",@progbits,1
   3              	.LC0:
   4 0000 4A756E6B 		.string	"Junk start code at line %lu"
   4      20737461 
   4      72742063 
   4      6F646520 
   4      6174206C 
   5              	.LC1:
   6 001c 4A756E6B 		.string	"Junk byte count at line %lu"
   6      20627974 
   6      6520636F 
   6      756E7420 
   6      6174206C 
   7              	.LC2:
   8 0038 4A756E6B 		.string	"Junk address MSB at line %lu"
   8      20616464 
   8      72657373 
   8      204D5342 
   8      20617420 
   9              	.LC3:
  10 0055 4A756E6B 		.string	"Junk address LSB at line %lu"
  10      20616464 
  10      72657373 
  10      204C5342 
  10      20617420 
  11              	.LC4:
  12 0072 4A756E6B 		.string	"Junk record type at line %lu"
  12      20726563 
  12      6F726420 
  12      74797065 
  12      20617420 
  13              	.LC5:
  14 008f 4A756E6B 		.string	"Junk data byte %d at line %lu"
  14      20646174 
  14      61206279 
  14      74652025 
  14      64206174 
  15              	.LC6:
  16 00ad 4A756E6B 		.string	"Junk checksum at line %lu"
  16      20636865 
  16      636B7375 
  16      6D206174 
  16      206C696E 
  17              		.section	.rodata.str1.8,"aMS",@progbits,1
  18              		.align 8
  19              	.LC7:
  20 0000 52656164 		.string	"Read checksum 0x%02X differs from calculated checksum 0x%02X at line %lu"
  20      20636865 
  20      636B7375 
  20      6D203078 
  20      25303258 
  21              		.section	.rodata.str1.1
  22              	.LC8:
  23 00c7 3A253032 		.string	":%02X%04X%02X"
  23      58253034 
  23      58253032 
  23      5800
  24              	.LC9:
  25 00d5 25303258 		.string	"%02X"
  25      00
  26              		.section	.rodata.str1.8
  27 0049 00000000 		.align 8
  27      000000
  28              	.LC10:
  29 0050 536F6D65 		.string	"Some corruption detected at line %lu - some junk at the end of the line perhaps?"
  29      20636F72 
  29      72757074 
  29      696F6E20 
  29      64657465 
  30 00a1 00000000 		.align 8
  30      000000
  31              	.LC11:
  32 00a8 466F7220 		.string	"For record type EXT_SEG_RECORD, address must be 0x0000 and byteCount must be 0x02 at line
  32      7265636F 
  32      72642074 
  32      79706520 
  32      4558545F 
  33 0106 0000     		.align 8
  34              	.LC12:
  35 0108 5265636F 		.string	"Record type START_SEG_RECORD not supported at line %lu"
  35      72642074 
  35      79706520 
  35      53544152 
  35      545F5345 
  36 013f 00       		.align 8
  37              	.LC13:
  38 0140 5265636F 		.string	"Record type EXT_LIN_RECORD not supported at line %lu"
  38      72642074 
  38      79706520 
  38      4558545F 
  38      4C494E5F 
  39 0175 000000   		.align 8
  40              	.LC14:
  41 0178 5265636F 		.string	"Record type START_LIN_RECORD not supported at line %lu"
  41      72642074 
  41      79706520 
  41      53544152 
  41      545F4C49 
  42 01af 00       		.align 8
  43              	.LC15:
  44 01b0 5265636F 		.string	"Record type 0x%02X not supported at line %lu"
  44      72642074 
  44      79706520 
  44      30782530 
  44      3258206E 
  45              		.section	.text.unlikely,"ax",@progbits
  46              	.LCOLDB16:
  47              		.text
  48              	.LHOTB16:
  49              		.p2align 4,,15
  50              		.globl	bufProcessLine
  52              	bufProcessLine:
  53              	.LFB37:
  54              		.cfi_startproc
  55 0000 4157     		pushq	%r15
  56              		.cfi_def_cfa_offset 16
  57              		.cfi_offset 15, -16
  58 0002 4156     		pushq	%r14
  59              		.cfi_def_cfa_offset 24
  60              		.cfi_offset 14, -24
  61 0004 4155     		pushq	%r13
  62              		.cfi_def_cfa_offset 32
  63              		.cfi_offset 13, -32
  64 0006 4154     		pushq	%r12
  65              		.cfi_def_cfa_offset 40
  66              		.cfi_offset 12, -40
  67 0008 4189F4   		movl	%esi, %r12d
  68 000b 55       		pushq	%rbp
  69              		.cfi_def_cfa_offset 48
  70              		.cfi_offset 6, -48
  71 000c 53       		pushq	%rbx
  72              		.cfi_def_cfa_offset 56
  73              		.cfi_offset 3, -56
  74 000d 4889FB   		movq	%rdi, %rbx
  75 0010 4881EC78 		subq	$888, %rsp
  75      030000
  76              		.cfi_def_cfa_offset 944
  77 0017 64488B04 		movq	%fs:40, %rax
  77      25280000 
  77      00
  78 0020 48898424 		movq	%rax, 872(%rsp)
  78      68030000 
  79 0028 31C0     		xorl	%eax, %eax
  80 002a 803F3A   		cmpb	$58, (%rdi)
  81 002d 488BAC24 		movq	944(%rsp), %rbp
  81      B0030000 
  82 0035 7449     		je	.L2
  83 0037 89F2     		movl	%esi, %edx
  84 0039 488D3500 		leaq	.LC0(%rip), %rsi
  84      000000
  85 0040 4889EF   		movq	%rbp, %rdi
  86 0043 E8000000 		call	errRender@PLT
  86      00
  87 0048 B8070000 		movl	$7, %eax
  87      00
  88              	.L3:
  89 004d 488B8C24 		movq	872(%rsp), %rcx
  89      68030000 
  90 0055 6448330C 		xorq	%fs:40, %rcx
  90      25280000 
  90      00
  91 005e 0F857002 		jne	.L53
  91      0000
  92 0064 4881C478 		addq	$888, %rsp
  92      030000
  93              		.cfi_remember_state
  94              		.cfi_def_cfa_offset 56
  95 006b 5B       		popq	%rbx
  96              		.cfi_def_cfa_offset 48
  97 006c 5D       		popq	%rbp
  98              		.cfi_def_cfa_offset 40
  99 006d 415C     		popq	%r12
 100              		.cfi_def_cfa_offset 32
 101 006f 415D     		popq	%r13
 102              		.cfi_def_cfa_offset 24
 103 0071 415E     		popq	%r14
 104              		.cfi_def_cfa_offset 16
 105 0073 415F     		popq	%r15
 106              		.cfi_def_cfa_offset 8
 107 0075 C3       		ret
 108 0076 662E0F1F 		.p2align 4,,10
 108      84000000 
 108      0000
 109              		.p2align 3
 110              	.L2:
 111              		.cfi_restore_state
 112 0080 488D7424 		leaq	94(%rsp), %rsi
 112      5E
 113 0085 488D7F01 		leaq	1(%rdi), %rdi
 114 0089 4989CE   		movq	%rcx, %r14
 115 008c 4D89C7   		movq	%r8, %r15
 116 008f 4D89CD   		movq	%r9, %r13
 117 0092 48895424 		movq	%rdx, 8(%rsp)
 117      08
 118 0097 E8000000 		call	getHexByte@PLT
 118      00
 119 009c 84C0     		testb	%al, %al
 120 009e 4C8B5424 		movq	8(%rsp), %r10
 120      08
 121 00a3 741B     		je	.L4
 122 00a5 488D3500 		leaq	.LC1(%rip), %rsi
 122      000000
 123 00ac 31C0     		xorl	%eax, %eax
 124 00ae 4489E2   		movl	%r12d, %edx
 125 00b1 4889EF   		movq	%rbp, %rdi
 126 00b4 E8000000 		call	errRender@PLT
 126      00
 127 00b9 B8080000 		movl	$8, %eax
 127      00
 128 00be EB8D     		jmp	.L3
 129              		.p2align 4,,10
 130              		.p2align 3
 131              	.L4:
 132 00c0 0FB64424 		movzbl	94(%rsp), %eax
 132      5E
 133 00c5 488D7B03 		leaq	3(%rbx), %rdi
 134 00c9 4C895424 		movq	%r10, 8(%rsp)
 134      08
 135 00ce 88442418 		movb	%al, 24(%rsp)
 136 00d2 488D4424 		leaq	93(%rsp), %rax
 136      5D
 137 00d7 4889C6   		movq	%rax, %rsi
 138 00da 48894424 		movq	%rax, 16(%rsp)
 138      10
 139 00df E8000000 		call	getHexByte@PLT
 139      00
 140 00e4 84C0     		testb	%al, %al
 141 00e6 4C8B5424 		movq	8(%rsp), %r10
 141      08
 142 00eb 7423     		je	.L5
 143 00ed 488D3500 		leaq	.LC2(%rip), %rsi
 143      000000
 144 00f4 31C0     		xorl	%eax, %eax
 145 00f6 4489E2   		movl	%r12d, %edx
 146 00f9 4889EF   		movq	%rbp, %rdi
 147 00fc E8000000 		call	errRender@PLT
 147      00
 148 0101 B8090000 		movl	$9, %eax
 148      00
 149 0106 E942FFFF 		jmp	.L3
 149      FF
 150 010b 0F1F4400 		.p2align 4,,10
 150      00
 151              		.p2align 3
 152              	.L5:
 153 0110 0FB64424 		movzbl	93(%rsp), %eax
 153      5D
 154 0115 488B7424 		movq	16(%rsp), %rsi
 154      10
 155 011a 488D7B05 		leaq	5(%rbx), %rdi
 156 011e 4C895424 		movq	%r10, 8(%rsp)
 156      08
 157 0123 88442420 		movb	%al, 32(%rsp)
 158 0127 E8000000 		call	getHexByte@PLT
 158      00
 159 012c 84C0     		testb	%al, %al
 160 012e 4C8B5424 		movq	8(%rsp), %r10
 160      08
 161 0133 741E     		je	.L6
 162 0135 488D3500 		leaq	.LC3(%rip), %rsi
 162      000000
 163 013c 31C0     		xorl	%eax, %eax
 164 013e 4489E2   		movl	%r12d, %edx
 165 0141 4889EF   		movq	%rbp, %rdi
 166 0144 E8000000 		call	errRender@PLT
 166      00
 167 0149 B80A0000 		movl	$10, %eax
 167      00
 168 014e E9FAFEFF 		jmp	.L3
 168      FF
 169              	.L6:
 170 0153 0FB64424 		movzbl	93(%rsp), %eax
 170      5D
 171 0158 488D7B07 		leaq	7(%rbx), %rdi
 172 015c 4C89EE   		movq	%r13, %rsi
 173 015f 4C895424 		movq	%r10, 8(%rsp)
 173      08
 174 0164 88442428 		movb	%al, 40(%rsp)
 175 0168 E8000000 		call	getHexByte@PLT
 175      00
 176 016d 84C0     		testb	%al, %al
 177 016f 4C8B5424 		movq	8(%rsp), %r10
 177      08
 178 0174 0F85A500 		jne	.L54
 178      0000
 179 017a 0FB64424 		movzbl	24(%rsp), %eax
 179      18
 180 017f 4C8D5B09 		leaq	9(%rbx), %r11
 181 0183 02442420 		addb	32(%rsp), %al
 182 0187 02442428 		addb	40(%rsp), %al
 183 018b 41024500 		addb	0(%r13), %al
 184 018f 807C245E 		cmpb	$0, 94(%rsp)
 184      00
 185 0194 88442408 		movb	%al, 8(%rsp)
 186 0198 0F84BF00 		je	.L8
 186      0000
 187 019e 31D2     		xorl	%edx, %edx
 188 01a0 48895C24 		movq	%rbx, 24(%rsp)
 188      18
 189 01a5 4C897424 		movq	%r14, 56(%rsp)
 189      38
 190 01aa 4C897C24 		movq	%r15, 64(%rsp)
 190      40
 191 01af 4C896C24 		movq	%r13, 72(%rsp)
 191      48
 192 01b4 89C3     		movl	%eax, %ebx
 193 01b6 4C895424 		movq	%r10, 48(%rsp)
 193      30
 194 01bb 4189D7   		movl	%edx, %r15d
 195 01be 4D89DD   		movq	%r11, %r13
 196 01c1 4C8B7424 		movq	16(%rsp), %r14
 196      10
 197 01c6 EB26     		jmp	.L10
 198 01c8 0F1F8400 		.p2align 4,,10
 198      00000000 
 199              		.p2align 3
 200              	.L9:
 201 01d0 0FB64424 		movzbl	93(%rsp), %eax
 201      5D
 202 01d5 410FB6CF 		movzbl	%r15b, %ecx
 203 01d9 4983C502 		addq	$2, %r13
 204 01dd 4183C701 		addl	$1, %r15d
 205 01e1 01C3     		addl	%eax, %ebx
 206 01e3 44387C24 		cmpb	%r15b, 94(%rsp)
 206      5E
 207 01e8 88440C60 		movb	%al, 96(%rsp,%rcx)
 208 01ec 764F     		jbe	.L55
 209              	.L10:
 210 01ee 4C89F6   		movq	%r14, %rsi
 211 01f1 4C89EF   		movq	%r13, %rdi
 212 01f4 E8000000 		call	getHexByte@PLT
 212      00
 213 01f9 84C0     		testb	%al, %al
 214 01fb 74D3     		je	.L9
 215 01fd 488D3500 		leaq	.LC5(%rip), %rsi
 215      000000
 216 0204 31C0     		xorl	%eax, %eax
 217 0206 410FB6D7 		movzbl	%r15b, %edx
 218 020a 4489E1   		movl	%r12d, %ecx
 219 020d 4889EF   		movq	%rbp, %rdi
 220 0210 E8000000 		call	errRender@PLT
 220      00
 221 0215 B80D0000 		movl	$13, %eax
 221      00
 222 021a E92EFEFF 		jmp	.L3
 222      FF
 223              	.L54:
 224 021f 488D3500 		leaq	.LC4(%rip), %rsi
 224      000000
 225 0226 31C0     		xorl	%eax, %eax
 226 0228 4489E2   		movl	%r12d, %edx
 227 022b 4889EF   		movq	%rbp, %rdi
 228 022e E8000000 		call	errRender@PLT
 228      00
 229 0233 B80B0000 		movl	$11, %eax
 229      00
 230 0238 E910FEFF 		jmp	.L3
 230      FF
 231              	.L55:
 232 023d 4D89EB   		movq	%r13, %r11
 233 0240 885C2408 		movb	%bl, 8(%rsp)
 234 0244 4C8B5424 		movq	48(%rsp), %r10
 234      30
 235 0249 488B5C24 		movq	24(%rsp), %rbx
 235      18
 236 024e 4C8B7424 		movq	56(%rsp), %r14
 236      38
 237 0253 4C8B7C24 		movq	64(%rsp), %r15
 237      40
 238 0258 4C8B6C24 		movq	72(%rsp), %r13
 238      48
 239              	.L8:
 240 025d 488D7424 		leaq	95(%rsp), %rsi
 240      5F
 241 0262 4C89DF   		movq	%r11, %rdi
 242 0265 4C895424 		movq	%r10, 24(%rsp)
 242      18
 243 026a 4C895C24 		movq	%r11, 16(%rsp)
 243      10
 244 026f E8000000 		call	getHexByte@PLT
 244      00
 245 0274 84C0     		testb	%al, %al
 246 0276 4C8B5C24 		movq	16(%rsp), %r11
 246      10
 247 027b 4C8B5424 		movq	24(%rsp), %r10
 247      18
 248 0280 7534     		jne	.L56
 249 0282 0FB65424 		movzbl	8(%rsp), %edx
 249      08
 250 0287 0FB64424 		movzbl	95(%rsp), %eax
 250      5F
 251 028c F7DA     		negl	%edx
 252 028e 38D0     		cmpb	%dl, %al
 253 0290 7447     		je	.L12
 254 0292 488D3500 		leaq	.LC7(%rip), %rsi
 254      000000
 255 0299 0FB6CA   		movzbl	%dl, %ecx
 256 029c 4589E0   		movl	%r12d, %r8d
 257 029f 0FB6D0   		movzbl	%al, %edx
 258 02a2 4889EF   		movq	%rbp, %rdi
 259 02a5 31C0     		xorl	%eax, %eax
 260 02a7 E8000000 		call	errRender@PLT
 260      00
 261 02ac B80F0000 		movl	$15, %eax
 261      00
 262 02b1 E997FDFF 		jmp	.L3
 262      FF
 263              	.L56:
 264 02b6 488D3500 		leaq	.LC6(%rip), %rsi
 264      000000
 265 02bd 31C0     		xorl	%eax, %eax
 266 02bf 4489E2   		movl	%r12d, %edx
 267 02c2 4889EF   		movq	%rbp, %rdi
 268 02c5 E8000000 		call	errRender@PLT
 268      00
 269 02ca B80E0000 		movl	$14, %eax
 269      00
 270 02cf E979FDFF 		jmp	.L3
 270      FF
 271              	.L53:
 272 02d4 E8000000 		call	__stack_chk_fail@PLT
 272      00
 273              	.L12:
 274 02d9 0FB74424 		movzwl	32(%rsp), %eax
 274      20
 275 02de 0FB65424 		movzbl	40(%rsp), %edx
 275      28
 276 02e3 488D0D00 		leaq	.LC8(%rip), %rcx
 276      000000
 277 02ea 4C895424 		movq	%r10, 56(%rsp)
 277      38
 278 02ef 4C895C24 		movq	%r11, 48(%rsp)
 278      30
 279 02f4 BE010000 		movl	$1, %esi
 279      00
 280 02f9 C1E008   		sall	$8, %eax
 281 02fc 09D0     		orl	%edx, %eax
 282 02fe 66894424 		movw	%ax, 24(%rsp)
 282      18
 283 0303 52       		pushq	%rdx
 284              		.cfi_def_cfa_offset 952
 285 0304 0FB7C0   		movzwl	%ax, %eax
 286 0307 4189C1   		movl	%eax, %r9d
 287 030a BA000200 		movl	$512, %edx
 287      00
 288 030f 89442418 		movl	%eax, 24(%rsp)
 289 0313 488D8424 		leaq	360(%rsp), %rax
 289      68010000 
 290 031b 48894424 		movq	%rax, 16(%rsp)
 290      10
 291 0320 4889C7   		movq	%rax, %rdi
 292 0323 410FB645 		movzbl	0(%r13), %eax
 292      00
 293 0328 50       		pushq	%rax
 294              		.cfi_def_cfa_offset 960
 295 0329 440FB644 		movzbl	110(%rsp), %r8d
 295      246E
 296 032f 31C0     		xorl	%eax, %eax
 297 0331 E8000000 		call	__sprintf_chk@PLT
 297      00
 298 0336 0FB64424 		movzbl	110(%rsp), %eax
 298      6E
 299 033b 59       		popq	%rcx
 300              		.cfi_def_cfa_offset 952
 301 033c 5E       		popq	%rsi
 302              		.cfi_def_cfa_offset 944
 303 033d 4C8B5C24 		movq	48(%rsp), %r11
 303      30
 304 0342 4C8B5424 		movq	56(%rsp), %r10
 304      38
 305 0347 84C0     		testb	%al, %al
 306 0349 7465     		je	.L13
 307 034b 4531C9   		xorl	%r9d, %r9d
 308              	.L14:
 309 034e 410FB6D1 		movzbl	%r9b, %edx
 310 0352 488B4C24 		movq	8(%rsp), %rcx
 310      08
 311 0357 BE010000 		movl	$1, %esi
 311      00
 312 035c 4889D0   		movq	%rdx, %rax
 313 035f 440FB644 		movzbl	96(%rsp,%rdx), %r8d
 313      1460
 314 0365 48C7C2FF 		movq	$-1, %rdx
 314      FFFFFF
 315 036c 01C0     		addl	%eax, %eax
 316 036e 4C895424 		movq	%r10, 48(%rsp)
 316      30
 317 0373 4C895C24 		movq	%r11, 40(%rsp)
 317      28
 318 0378 4898     		cltq
 319 037a 44884C24 		movb	%r9b, 32(%rsp)
 319      20
 320 037f 488D7C01 		leaq	9(%rcx,%rax), %rdi
 320      09
 321 0384 488D0D00 		leaq	.LC9(%rip), %rcx
 321      000000
 322 038b 31C0     		xorl	%eax, %eax
 323 038d E8000000 		call	__sprintf_chk@PLT
 323      00
 324 0392 440FB64C 		movzbl	32(%rsp), %r9d
 324      2420
 325 0398 0FB64424 		movzbl	94(%rsp), %eax
 325      5E
 326 039d 4C8B5C24 		movq	40(%rsp), %r11
 326      28
 327 03a2 4C8B5424 		movq	48(%rsp), %r10
 327      30
 328 03a7 4183C101 		addl	$1, %r9d
 329 03ab 4438C8   		cmpb	%r9b, %al
 330 03ae 779E     		ja	.L14
 331              	.L13:
 332 03b0 488B5424 		movq	8(%rsp), %rdx
 332      08
 333 03b5 4801C0   		addq	%rax, %rax
 334 03b8 440FB644 		movzbl	95(%rsp), %r8d
 334      245F
 335 03be 25FE0100 		andl	$510, %eax
 335      00
 336 03c3 488D0D00 		leaq	.LC9(%rip), %rcx
 336      000000
 337 03ca BE010000 		movl	$1, %esi
 337      00
 338 03cf 4C895424 		movq	%r10, 40(%rsp)
 338      28
 339 03d4 4C895C24 		movq	%r11, 32(%rsp)
 339      20
 340 03d9 488D7C02 		leaq	9(%rdx,%rax), %rdi
 340      09
 341 03de 4883CAFF 		orq	$-1, %rdx
 342 03e2 31C0     		xorl	%eax, %eax
 343 03e4 E8000000 		call	__sprintf_chk@PLT
 343      00
 344 03e9 4C8B5C24 		movq	32(%rsp), %r11
 344      20
 345 03ee 4C8B5424 		movq	40(%rsp), %r10
 345      28
 346 03f3 410FB603 		movzbl	(%r11), %eax
 347 03f7 3C0D     		cmpb	$13, %al
 348 03f9 0F95C1   		setne	%cl
 349 03fc 84C0     		testb	%al, %al
 350 03fe 0F95C2   		setne	%dl
 351 0401 84D1     		testb	%dl, %cl
 352 0403 7521     		jne	.L50
 353 0405 EB23     		jmp	.L15
 354 0407 660F1F84 		.p2align 4,,10
 354      00000000 
 354      00
 355              		.p2align 3
 356              	.L57:
 357 0410 4983C301 		addq	$1, %r11
 358 0414 410FB603 		movzbl	(%r11), %eax
 359 0418 3C0D     		cmpb	$13, %al
 360 041a 0F95C1   		setne	%cl
 361 041d 84C0     		testb	%al, %al
 362 041f 0F95C2   		setne	%dl
 363 0422 84D1     		testb	%dl, %cl
 364 0424 7404     		je	.L15
 365              	.L50:
 366 0426 3C0A     		cmpb	$10, %al
 367 0428 75E6     		jne	.L57
 368              	.L15:
 369 042a 488B7424 		movq	8(%rsp), %rsi
 369      08
 370 042f 4C89DA   		movq	%r11, %rdx
 371 0432 4889DF   		movq	%rbx, %rdi
 372 0435 4829DA   		subq	%rbx, %rdx
 373 0438 4C895424 		movq	%r10, 32(%rsp)
 373      20
 374 043d E8000000 		call	strncmp@PLT
 374      00
 375 0442 85C0     		testl	%eax, %eax
 376 0444 4C8B5424 		movq	32(%rsp), %r10
 376      20
 377 0449 754E     		jne	.L58
 378 044b 410FB645 		movzbl	0(%r13), %eax
 378      00
 379 0450 84C0     		testb	%al, %al
 380 0452 0F840401 		je	.L59
 380      0000
 381 0458 3C01     		cmpb	$1, %al
 382 045a 0F84F500 		je	.L51
 382      0000
 383 0460 3C02     		cmpb	$2, %al
 384 0462 0F84A900 		je	.L60
 384      0000
 385 0468 3C03     		cmpb	$3, %al
 386 046a 0F848300 		je	.L61
 386      0000
 387 0470 3C04     		cmpb	$4, %al
 388 0472 7461     		je	.L62
 389 0474 3C05     		cmpb	$5, %al
 390 0476 743F     		je	.L63
 391 0478 488D3500 		leaq	.LC15(%rip), %rsi
 391      000000
 392 047f 0FB6D0   		movzbl	%al, %edx
 393 0482 4489E1   		movl	%r12d, %ecx
 394 0485 31C0     		xorl	%eax, %eax
 395 0487 4889EF   		movq	%rbp, %rdi
 396 048a E8000000 		call	errRender@PLT
 396      00
 397 048f B80C0000 		movl	$12, %eax
 397      00
 398 0494 E9B4FBFF 		jmp	.L3
 398      FF
 399              	.L58:
 400 0499 488D3500 		leaq	.LC10(%rip), %rsi
 400      000000
 401 04a0 31C0     		xorl	%eax, %eax
 402 04a2 4489E2   		movl	%r12d, %edx
 403 04a5 4889EF   		movq	%rbp, %rdi
 404 04a8 E8000000 		call	errRender@PLT
 404      00
 405 04ad B8100000 		movl	$16, %eax
 405      00
 406 04b2 E996FBFF 		jmp	.L3
 406      FF
 407              	.L63:
 408 04b7 488D3500 		leaq	.LC14(%rip), %rsi
 408      000000
 409 04be 31C0     		xorl	%eax, %eax
 410 04c0 4489E2   		movl	%r12d, %edx
 411 04c3 4889EF   		movq	%rbp, %rdi
 412 04c6 E8000000 		call	errRender@PLT
 412      00
 413 04cb B80C0000 		movl	$12, %eax
 413      00
 414 04d0 E978FBFF 		jmp	.L3
 414      FF
 415              	.L62:
 416 04d5 488D3500 		leaq	.LC13(%rip), %rsi
 416      000000
 417 04dc 31C0     		xorl	%eax, %eax
 418 04de 4489E2   		movl	%r12d, %edx
 419 04e1 4889EF   		movq	%rbp, %rdi
 420 04e4 E8000000 		call	errRender@PLT
 420      00
 421 04e9 B80C0000 		movl	$12, %eax
 421      00
 422 04ee E95AFBFF 		jmp	.L3
 422      FF
 423              	.L61:
 424 04f3 488D3500 		leaq	.LC12(%rip), %rsi
 424      000000
 425 04fa 31C0     		xorl	%eax, %eax
 426 04fc 4489E2   		movl	%r12d, %edx
 427 04ff 4889EF   		movq	%rbp, %rdi
 428 0502 E8000000 		call	errRender@PLT
 428      00
 429 0507 B80C0000 		movl	$12, %eax
 429      00
 430 050c E93CFBFF 		jmp	.L3
 430      FF
 431              	.L60:
 432 0511 66837C24 		cmpw	$0, 24(%rsp)
 432      1800
 433 0517 7507     		jne	.L23
 434 0519 807C245E 		cmpb	$2, 94(%rsp)
 434      02
 435 051e 741E     		je	.L24
 436              	.L23:
 437 0520 488D3500 		leaq	.LC11(%rip), %rsi
 437      000000
 438 0527 31C0     		xorl	%eax, %eax
 439 0529 4489E2   		movl	%r12d, %edx
 440 052c 4889EF   		movq	%rbp, %rdi
 441 052f E8000000 		call	errRender@PLT
 441      00
 442 0534 B8120000 		movl	$18, %eax
 442      00
 443 0539 E90FFBFF 		jmp	.L3
 443      FF
 444              	.L24:
 445 053e 0FB64424 		movzbl	96(%rsp), %eax
 445      60
 446 0543 C1E008   		sall	$8, %eax
 447 0546 89C2     		movl	%eax, %edx
 448 0548 0FB64424 		movzbl	97(%rsp), %eax
 448      61
 449 054d 01D0     		addl	%edx, %eax
 450 054f C1E004   		sall	$4, %eax
 451 0552 418907   		movl	%eax, (%r15)
 452              	.L51:
 453 0555 31C0     		xorl	%eax, %eax
 454 0557 E9F1FAFF 		jmp	.L3
 454      FF
 455              	.L59:
 456 055c 8B742410 		movl	16(%rsp), %esi
 457 0560 0FB64C24 		movzbl	94(%rsp), %ecx
 457      5E
 458 0565 488D5424 		leaq	96(%rsp), %rdx
 458      60
 459 056a 410337   		addl	(%r15), %esi
 460 056d 4989E8   		movq	%rbp, %r8
 461 0570 4C89D7   		movq	%r10, %rdi
 462 0573 E8000000 		call	bufWriteBlock@PLT
 462      00
 463 0578 85C0     		testl	%eax, %eax
 464 057a 0F85CDFA 		jne	.L3
 464      FFFF
 465 0580 4D85F6   		testq	%r14, %r14
 466 0583 74D0     		je	.L51
 467 0585 8B742410 		movl	16(%rsp), %esi
 468 0589 0FB64C24 		movzbl	94(%rsp), %ecx
 468      5E
 469 058e 4989E8   		movq	%rbp, %r8
 470 0591 410337   		addl	(%r15), %esi
 471 0594 BA010000 		movl	$1, %edx
 471      00
 472 0599 4C89F7   		movq	%r14, %rdi
 473 059c E8000000 		call	bufWriteConst@PLT
 473      00
 474 05a1 E9A7FAFF 		jmp	.L3
 474      FF
 475              		.cfi_endproc
 476              	.LFE37:
 478              		.section	.text.unlikely
 479              	.LCOLDE16:
 480              		.text
 481              	.LHOTE16:
 482              		.section	.rodata.str1.1
 483              	.LC17:
 484 00da 726200   		.string	"rb"
 485              	.LC18:
 486 00dd 456D7074 		.string	"Empty file!"
 486      79206669 
 486      6C652100 
 487              		.section	.rodata.str1.8
 488 01dd 000000   		.align 8
 489              	.LC19:
 490 01e0 5072656D 		.string	"Premature end of file - no EOF_RECORD found!"
 490      61747572 
 490      6520656E 
 490      64206F66 
 490      2066696C 
 491              		.section	.text.unlikely
 492              	.LCOLDB20:
 493              		.text
 494              	.LHOTB20:
 495 05a6 662E0F1F 		.p2align 4,,15
 495      84000000 
 495      0000
 496              		.globl	bufReadFromIntelHexFile
 498              	bufReadFromIntelHexFile:
 499              	.LFB38:
 500              		.cfi_startproc
 501 05b0 4157     		pushq	%r15
 502              		.cfi_def_cfa_offset 16
 503              		.cfi_offset 15, -16
 504 05b2 4156     		pushq	%r14
 505              		.cfi_def_cfa_offset 24
 506              		.cfi_offset 14, -24
 507 05b4 4989FE   		movq	%rdi, %r14
 508 05b7 4155     		pushq	%r13
 509              		.cfi_def_cfa_offset 32
 510              		.cfi_offset 13, -32
 511 05b9 4154     		pushq	%r12
 512              		.cfi_def_cfa_offset 40
 513              		.cfi_offset 12, -40
 514 05bb 4989F5   		movq	%rsi, %r13
 515 05be 55       		pushq	%rbp
 516              		.cfi_def_cfa_offset 48
 517              		.cfi_offset 6, -48
 518 05bf 53       		pushq	%rbx
 519              		.cfi_def_cfa_offset 56
 520              		.cfi_offset 3, -56
 521 05c0 488D3500 		leaq	.LC17(%rip), %rsi
 521      000000
 522 05c7 4889D7   		movq	%rdx, %rdi
 523 05ca 4989CF   		movq	%rcx, %r15
 524 05cd 4881EC38 		subq	$568, %rsp
 524      020000
 525              		.cfi_def_cfa_offset 624
 526 05d4 64488B04 		movq	%fs:40, %rax
 526      25280000 
 526      00
 527 05dd 48898424 		movq	%rax, 552(%rsp)
 527      28020000 
 528 05e5 31C0     		xorl	%eax, %eax
 529 05e7 C744241C 		movl	$0, 28(%rsp)
 529      00000000 
 530 05ef E8000000 		call	fopen@PLT
 530      00
 531 05f4 4885C0   		testq	%rax, %rax
 532 05f7 4989C4   		movq	%rax, %r12
 533 05fa 0F841001 		je	.L79
 533      0000
 534 0600 4C89F7   		movq	%r14, %rdi
 535 0603 E8000000 		call	bufZeroLength@PLT
 535      00
 536 0608 4D85ED   		testq	%r13, %r13
 537 060b 7408     		je	.L67
 538 060d 4C89EF   		movq	%r13, %rdi
 539 0610 E8000000 		call	bufZeroLength@PLT
 539      00
 540              	.L67:
 541 0615 488D6C24 		leaq	32(%rsp), %rbp
 541      20
 542 061a 4C89E2   		movq	%r12, %rdx
 543 061d BE000200 		movl	$512, %esi
 543      00
 544 0622 4889EF   		movq	%rbp, %rdi
 545 0625 E8000000 		call	fgets@PLT
 545      00
 546 062a 4885C0   		testq	%rax, %rax
 547 062d 0F84ED00 		je	.L80
 547      0000
 548 0633 488D4424 		leaq	27(%rsp), %rax
 548      1B
 549 0638 BB010000 		movl	$1, %ebx
 549      00
 550 063d 48890424 		movq	%rax, (%rsp)
 551 0641 488D4424 		leaq	28(%rsp), %rax
 551      1C
 552 0646 48894424 		movq	%rax, 8(%rsp)
 552      08
 553 064b EB28     		jmp	.L68
 554 064d 0F1F00   		.p2align 4,,10
 555              		.p2align 3
 556              	.L69:
 557 0650 0FB64424 		movzbl	27(%rsp), %eax
 557      1B
 558 0655 83C301   		addl	$1, %ebx
 559 0658 A8FD     		testb	$-3, %al
 560 065a 0F858500 		jne	.L70
 560      0000
 561 0660 4C89E2   		movq	%r12, %rdx
 562 0663 BE000200 		movl	$512, %esi
 562      00
 563 0668 4889EF   		movq	%rbp, %rdi
 564 066b E8000000 		call	fgets@PLT
 564      00
 565 0670 4885C0   		testq	%rax, %rax
 566 0673 746B     		je	.L81
 567              	.L68:
 568 0675 4883EC08 		subq	$8, %rsp
 569              		.cfi_def_cfa_offset 632
 570 0679 4C89E9   		movq	%r13, %rcx
 571 067c 4C89F2   		movq	%r14, %rdx
 572 067f 4157     		pushq	%r15
 573              		.cfi_def_cfa_offset 640
 574 0681 4C8B4C24 		movq	16(%rsp), %r9
 574      10
 575 0686 89DE     		movl	%ebx, %esi
 576 0688 4C8B4424 		movq	24(%rsp), %r8
 576      18
 577 068d 4889EF   		movq	%rbp, %rdi
 578 0690 E8000000 		call	bufProcessLine@PLT
 578      00
 579 0695 89C2     		movl	%eax, %edx
 580 0697 85D2     		testl	%edx, %edx
 581 0699 58       		popq	%rax
 582              		.cfi_def_cfa_offset 632
 583 069a 59       		popq	%rcx
 584              		.cfi_def_cfa_offset 624
 585 069b 74B3     		je	.L69
 586 069d 4C89E7   		movq	%r12, %rdi
 587 06a0 891424   		movl	%edx, (%rsp)
 588 06a3 E8000000 		call	fclose@PLT
 588      00
 589 06a8 8B1424   		movl	(%rsp), %edx
 590 06ab 89D0     		movl	%edx, %eax
 591              	.L66:
 592 06ad 488B8C24 		movq	552(%rsp), %rcx
 592      28020000 
 593 06b5 6448330C 		xorq	%fs:40, %rcx
 593      25280000 
 593      00
 594 06be 0F858C00 		jne	.L82
 594      0000
 595 06c4 4881C438 		addq	$568, %rsp
 595      020000
 596              		.cfi_remember_state
 597              		.cfi_def_cfa_offset 56
 598 06cb 5B       		popq	%rbx
 599              		.cfi_def_cfa_offset 48
 600 06cc 5D       		popq	%rbp
 601              		.cfi_def_cfa_offset 40
 602 06cd 415C     		popq	%r12
 603              		.cfi_def_cfa_offset 32
 604 06cf 415D     		popq	%r13
 605              		.cfi_def_cfa_offset 24
 606 06d1 415E     		popq	%r14
 607              		.cfi_def_cfa_offset 16
 608 06d3 415F     		popq	%r15
 609              		.cfi_def_cfa_offset 8
 610 06d5 C3       		ret
 611 06d6 662E0F1F 		.p2align 4,,10
 611      84000000 
 611      0000
 612              		.p2align 3
 613              	.L81:
 614              		.cfi_restore_state
 615 06e0 0FB64424 		movzbl	27(%rsp), %eax
 615      1B
 616              	.L70:
 617 06e5 3C01     		cmpb	$1, %al
 618 06e7 7458     		je	.L71
 619 06e9 488D3500 		leaq	.LC19(%rip), %rsi
 619      000000
 620 06f0 4C89FF   		movq	%r15, %rdi
 621 06f3 31C0     		xorl	%eax, %eax
 622 06f5 E8000000 		call	errRender@PLT
 622      00
 623 06fa 4C89E7   		movq	%r12, %rdi
 624 06fd E8000000 		call	fclose@PLT
 624      00
 625 0702 B8110000 		movl	$17, %eax
 625      00
 626 0707 EBA4     		jmp	.L66
 627 0709 0F1F8000 		.p2align 4,,10
 627      000000
 628              		.p2align 3
 629              	.L79:
 630 0710 4C89FF   		movq	%r15, %rdi
 631 0713 E8000000 		call	errRenderStd@PLT
 631      00
 632 0718 B8020000 		movl	$2, %eax
 632      00
 633 071d EB8E     		jmp	.L66
 634 071f 90       		.p2align 4,,10
 635              		.p2align 3
 636              	.L80:
 637 0720 488D3500 		leaq	.LC18(%rip), %rsi
 637      000000
 638 0727 4C89FF   		movq	%r15, %rdi
 639 072a E8000000 		call	errRender@PLT
 639      00
 640 072f 4C89E7   		movq	%r12, %rdi
 641 0732 E8000000 		call	fclose@PLT
 641      00
 642 0737 B8060000 		movl	$6, %eax
 642      00
 643 073c E96CFFFF 		jmp	.L66
 643      FF
 644              	.L71:
 645 0741 4C89E7   		movq	%r12, %rdi
 646 0744 E8000000 		call	fclose@PLT
 646      00
 647 0749 31C0     		xorl	%eax, %eax
 648 074b E95DFFFF 		jmp	.L66
 648      FF
 649              	.L82:
 650 0750 E8000000 		call	__stack_chk_fail@PLT
 650      00
 651              		.cfi_endproc
 652              	.LFE38:
 654              		.section	.text.unlikely
 655              	.LCOLDE20:
 656              		.text
 657              	.LHOTE20:
 658              		.section	.text.unlikely
 659              	.LCOLDB21:
 660              		.text
 661              	.LHOTB21:
 662 0755 90662E0F 		.p2align 4,,15
 662      1F840000 
 662      000000
 663              		.globl	bufDeriveMask
 665              	bufDeriveMask:
 666              	.LFB41:
 667              		.cfi_startproc
 668 0760 4154     		pushq	%r12
 669              		.cfi_def_cfa_offset 16
 670              		.cfi_offset 12, -16
 671 0762 55       		pushq	%rbp
 672              		.cfi_def_cfa_offset 24
 673              		.cfi_offset 6, -24
 674 0763 4889FD   		movq	%rdi, %rbp
 675 0766 53       		pushq	%rbx
 676              		.cfi_def_cfa_offset 32
 677              		.cfi_offset 3, -32
 678 0767 4889F7   		movq	%rsi, %rdi
 679 076a 4889F3   		movq	%rsi, %rbx
 680 076d 4989D4   		movq	%rdx, %r12
 681 0770 E8000000 		call	bufZeroLength@PLT
 681      00
 682 0775 8B5508   		movl	8(%rbp), %edx
 683 0778 4C89E1   		movq	%r12, %rcx
 684 077b BE010000 		movl	$1, %esi
 684      00
 685 0780 4889DF   		movq	%rbx, %rdi
 686 0783 E8000000 		call	bufAppendConst@PLT
 686      00
 687 0788 85C0     		testl	%eax, %eax
 688 078a 0F85AD00 		jne	.L84
 688      0000
 689 0790 8B7308   		movl	8(%rbx), %esi
 690 0793 85F6     		testl	%esi, %esi
 691 0795 0F84A000 		je	.L85
 691      0000
 692 079b 4531D2   		xorl	%r10d, %r10d
 693 079e 6690     		.p2align 4,,10
 694              		.p2align 3
 695              	.L86:
 696 07a0 4139F2   		cmpl	%esi, %r10d
 697 07a3 0F839900 		jnb	.L100
 697      0000
 698 07a9 488B7D00 		movq	0(%rbp), %rdi
 699 07ad 0FB64D10 		movzbl	16(%rbp), %ecx
 700 07b1 4489D2   		movl	%r10d, %edx
 701 07b4 4489D0   		movl	%r10d, %eax
 702 07b7 380C17   		cmpb	%cl, (%rdi,%rdx)
 703 07ba 750B     		jne	.L104
 704 07bc EB10     		jmp	.L87
 705 07be 6690     		.p2align 4,,10
 706              		.p2align 3
 707              	.L109:
 708 07c0 89C2     		movl	%eax, %edx
 709 07c2 380C17   		cmpb	%cl, (%rdi,%rdx)
 710 07c5 7407     		je	.L87
 711              	.L104:
 712 07c7 83C001   		addl	$1, %eax
 713 07ca 39F0     		cmpl	%esi, %eax
 714 07cc 72F2     		jb	.L109
 715              	.L87:
 716 07ce 39F0     		cmpl	%esi, %eax
 717 07d0 7469     		je	.L85
 718 07d2 448D5001 		leal	1(%rax), %r10d
 719 07d6 4139F2   		cmpl	%esi, %r10d
 720 07d9 7360     		jnb	.L85
 721 07db 4C8B5D00 		movq	0(%rbp), %r11
 722 07df 4489D2   		movl	%r10d, %edx
 723 07e2 410FB63C 		movzbl	(%r11,%rdx), %edi
 723      13
 724 07e7 403A7D10 		cmpb	16(%rbp), %dil
 725 07eb 75B3     		jne	.L86
 726 07ed 4189F4   		movl	%esi, %r12d
 727 07f0 BA020000 		movl	$2, %edx
 727      00
 728 07f5 4129C4   		subl	%eax, %r12d
 729 07f8 EB16     		jmp	.L93
 730 07fa 660F1F44 		.p2align 4,,10
 730      0000
 731              		.p2align 3
 732              	.L90:
 733 0800 4189C8   		movl	%ecx, %r8d
 734 0803 448D4A01 		leal	1(%rdx), %r9d
 735 0807 43383C03 		cmpb	%dil, (%r11,%r8)
 736 080b 750E     		jne	.L94
 737 080d 4489CA   		movl	%r9d, %edx
 738              	.L93:
 739 0810 8D0C02   		leal	(%rdx,%rax), %ecx
 740 0813 4439E2   		cmpl	%r12d, %edx
 741 0816 4189CA   		movl	%ecx, %r10d
 742 0819 75E5     		jne	.L90
 743              	.L94:
 744 081b 83FA07   		cmpl	$7, %edx
 745 081e 7613     		jbe	.L92
 746              		.p2align 4,,10
 747              		.p2align 3
 748              	.L103:
 749 0820 488B33   		movq	(%rbx), %rsi
 750 0823 89C2     		movl	%eax, %edx
 751 0825 83C001   		addl	$1, %eax
 752 0828 39C8     		cmpl	%ecx, %eax
 753 082a C6041600 		movb	$0, (%rsi,%rdx)
 754 082e 75F0     		jne	.L103
 755 0830 8B7308   		movl	8(%rbx), %esi
 756              	.L92:
 757 0833 39F1     		cmpl	%esi, %ecx
 758 0835 0F8265FF 		jb	.L86
 758      FFFF
 759              	.L85:
 760 083b 31C0     		xorl	%eax, %eax
 761              	.L84:
 762 083d 5B       		popq	%rbx
 763              		.cfi_remember_state
 764              		.cfi_def_cfa_offset 24
 765 083e 5D       		popq	%rbp
 766              		.cfi_def_cfa_offset 16
 767 083f 415C     		popq	%r12
 768              		.cfi_def_cfa_offset 8
 769 0841 C3       		ret
 770              	.L100:
 771              		.cfi_restore_state
 772 0842 4489D0   		movl	%r10d, %eax
 773 0845 EB87     		jmp	.L87
 774              		.cfi_endproc
 775              	.LFE41:
 777              		.section	.text.unlikely
 778              	.LCOLDE21:
 779              		.text
 780              	.LHOTE21:
 781              		.section	.rodata.str1.1
 782              	.LC22:
 783 00e9 776200   		.string	"wb"
 784              	.LC23:
 785 00ec 3A303030 		.string	":00000001FF\n"
 785      30303030 
 785      3146460A 
 785      00
 786              		.section	.rodata.str1.8
 787 020d 000000   		.align 8
 788              	.LC24:
 789 0210 5365676D 		.string	"Segment addresses > 0xFFFF are not supported"
 789      656E7420 
 789      61646472 
 789      65737365 
 789      73203E20 
 790              		.section	.rodata.str1.1
 791              	.LC25:
 792 00f9 3A303230 		.string	":020000"
 792      30303000 
 793              		.section	.text.unlikely
 794              	.LCOLDB26:
 795              		.text
 796              	.LHOTB26:
 797 0847 660F1F84 		.p2align 4,,15
 797      00000000 
 797      00
 798              		.globl	bufWriteToIntelHexFile
 800              	bufWriteToIntelHexFile:
 801              	.LFB42:
 802              		.cfi_startproc
 803 0850 4157     		pushq	%r15
 804              		.cfi_def_cfa_offset 16
 805              		.cfi_offset 15, -16
 806 0852 4156     		pushq	%r14
 807              		.cfi_def_cfa_offset 24
 808              		.cfi_offset 14, -24
 809 0854 4155     		pushq	%r13
 810              		.cfi_def_cfa_offset 32
 811              		.cfi_offset 13, -32
 812 0856 4154     		pushq	%r12
 813              		.cfi_def_cfa_offset 40
 814              		.cfi_offset 12, -40
 815 0858 55       		pushq	%rbp
 816              		.cfi_def_cfa_offset 48
 817              		.cfi_offset 6, -48
 818 0859 53       		pushq	%rbx
 819              		.cfi_def_cfa_offset 56
 820              		.cfi_offset 3, -56
 821 085a 4489C3   		movl	%r8d, %ebx
 822 085d 4883EC58 		subq	$88, %rsp
 823              		.cfi_def_cfa_offset 144
 824 0861 48897424 		movq	%rsi, 8(%rsp)
 824      08
 825 0866 488D3500 		leaq	.LC22(%rip), %rsi
 825      000000
 826 086d 48897C24 		movq	%rdi, 24(%rsp)
 826      18
 827 0872 4889D7   		movq	%rdx, %rdi
 828 0875 4C894C24 		movq	%r9, 32(%rsp)
 828      20
 829 087a 884C242E 		movb	%cl, 46(%rsp)
 830 087e 64488B04 		movq	%fs:40, %rax
 830      25280000 
 830      00
 831 0887 48894424 		movq	%rax, 72(%rsp)
 831      48
 832 088c 31C0     		xorl	%eax, %eax
 833 088e E8000000 		call	fopen@PLT
 833      00
 834 0893 4885C0   		testq	%rax, %rax
 835 0896 4989C4   		movq	%rax, %r12
 836 0899 0F848904 		je	.L159
 836      0000
 837 089f 48837C24 		cmpq	$0, 8(%rsp)
 837      0800
 838 08a5 C644242F 		movb	$0, 47(%rsp)
 838      00
 839 08aa 0F849104 		je	.L160
 839      0000
 840              	.L113:
 841 08b0 488B4424 		movq	8(%rsp), %rax
 841      08
 842 08b5 0FB67424 		movzbl	46(%rsp), %esi
 842      2E
 843 08ba 4531ED   		xorl	%r13d, %r13d
 844 08bd C7442410 		movl	$0, 16(%rsp)
 844      00000000 
 845 08c5 8B4008   		movl	8(%rax), %eax
 846 08c8 89742428 		movl	%esi, 40(%rsp)
 847              	.L135:
 848 08cc 4181C500 		addl	$65536, %r13d
 848      000100
 849 08d3 4139C5   		cmpl	%eax, %r13d
 850 08d6 440F47E8 		cmova	%eax, %r13d
 851 08da 44396C24 		cmpl	%r13d, 16(%rsp)
 851      10
 852 08df 0F833602 		jnb	.L119
 852      0000
 853 08e5 8B442410 		movl	16(%rsp), %eax
 854 08e9 4139C5   		cmpl	%eax, %r13d
 855 08ec 4189C7   		movl	%eax, %r15d
 856 08ef 7631     		jbe	.L120
 857              		.p2align 4,,10
 858 08f1 0F1F8000 		.p2align 3
 858      000000
 859              	.L146:
 860 08f8 488B4424 		movq	8(%rsp), %rax
 860      08
 861 08fd 448B7C24 		movl	16(%rsp), %r15d
 861      10
 862 0902 488B08   		movq	(%rax), %rcx
 863 0905 EB12     		jmp	.L158
 864 0907 660F1F84 		.p2align 4,,10
 864      00000000 
 864      00
 865              		.p2align 3
 866              	.L151:
 867 0910 4183C701 		addl	$1, %r15d
 868 0914 4539EF   		cmpl	%r13d, %r15d
 869 0917 7309     		jnb	.L120
 870              	.L158:
 871 0919 4489F8   		movl	%r15d, %eax
 872 091c 803C0100 		cmpb	$0, (%rcx,%rax)
 873 0920 74EE     		je	.L151
 874              	.L120:
 875 0922 4539FD   		cmpl	%r15d, %r13d
 876 0925 0F84A503 		je	.L161
 876      0000
 877 092b 8B442428 		movl	40(%rsp), %eax
 878 092f 4489FD   		movl	%r15d, %ebp
 879 0932 4401F8   		addl	%r15d, %eax
 880 0935 4439E8   		cmpl	%r13d, %eax
 881 0938 0F874202 		ja	.L123
 881      0000
 882 093e 440FB644 		movzbl	46(%rsp), %r8d
 882      242E
 883 0944 4584C0   		testb	%r8b, %r8b
 884 0947 0F844202 		je	.L140
 884      0000
 885              	.L165:
 886 094d 488B4424 		movq	8(%rsp), %rax
 886      08
 887 0952 488B38   		movq	(%rax), %rdi
 888 0955 4489F8   		movl	%r15d, %eax
 889 0958 803C0700 		cmpb	$0, (%rdi,%rax)
 890 095c 0F848003 		je	.L141
 890      0000
 891 0962 418D5F01 		leal	1(%r15), %ebx
 892 0966 31C0     		xorl	%eax, %eax
 893 0968 EB17     		jmp	.L127
 894 096a 660F1F44 		.p2align 4,,10
 894      0000
 895              		.p2align 3
 896              	.L126:
 897 0970 89DA     		movl	%ebx, %edx
 898 0972 8D4B01   		leal	1(%rbx), %ecx
 899 0975 803C1700 		cmpb	$0, (%rdi,%rdx)
 900 0979 0F842102 		je	.L162
 900      0000
 901 097f 89CB     		movl	%ecx, %ebx
 902              	.L127:
 903 0981 83C001   		addl	$1, %eax
 904 0984 4438C0   		cmpb	%r8b, %al
 905 0987 75E7     		jne	.L126
 906 0989 450FB6F0 		movzbl	%r8b, %r14d
 907 098d 438D043E 		leal	(%r14,%r15), %eax
 908 0991 89442410 		movl	%eax, 16(%rsp)
 909              	.L125:
 910 0995 4C89E6   		movq	%r12, %rsi
 911 0998 BF3A0000 		movl	$58, %edi
 911      00
 912 099d 44884424 		movb	%r8b, 4(%rsp)
 912      04
 913 09a2 E8000000 		call	fputc@PLT
 913      00
 914 09a7 4489F7   		movl	%r14d, %edi
 915 09aa E8000000 		call	getHexUpperNibble@PLT
 915      00
 916 09af 4C89E6   		movq	%r12, %rsi
 917 09b2 0FBEF8   		movsbl	%al, %edi
 918 09b5 E8000000 		call	fputc@PLT
 918      00
 919 09ba 4489F7   		movl	%r14d, %edi
 920 09bd 450FB6F7 		movzbl	%r15b, %r14d
 921 09c1 E8000000 		call	getHexLowerNibble@PLT
 921      00
 922 09c6 4C89E6   		movq	%r12, %rsi
 923 09c9 0FBEF8   		movsbl	%al, %edi
 924 09cc E8000000 		call	fputc@PLT
 924      00
 925 09d1 4C89F8   		movq	%r15, %rax
 926 09d4 0FB6DC   		movzbl	%ah, %ebx
 927 09d7 89DF     		movl	%ebx, %edi
 928 09d9 E8000000 		call	getHexUpperNibble@PLT
 928      00
 929 09de 4C89E6   		movq	%r12, %rsi
 930 09e1 0FBEF8   		movsbl	%al, %edi
 931 09e4 E8000000 		call	fputc@PLT
 931      00
 932 09e9 89DF     		movl	%ebx, %edi
 933 09eb E8000000 		call	getHexLowerNibble@PLT
 933      00
 934 09f0 4C89E6   		movq	%r12, %rsi
 935 09f3 0FBEF8   		movsbl	%al, %edi
 936 09f6 E8000000 		call	fputc@PLT
 936      00
 937 09fb 4489F7   		movl	%r14d, %edi
 938 09fe E8000000 		call	getHexUpperNibble@PLT
 938      00
 939 0a03 4C89E6   		movq	%r12, %rsi
 940 0a06 0FBEF8   		movsbl	%al, %edi
 941 0a09 E8000000 		call	fputc@PLT
 941      00
 942 0a0e 4489F7   		movl	%r14d, %edi
 943 0a11 E8000000 		call	getHexLowerNibble@PLT
 943      00
 944 0a16 4C89E6   		movq	%r12, %rsi
 945 0a19 0FBEF8   		movsbl	%al, %edi
 946 0a1c E8000000 		call	fputc@PLT
 946      00
 947 0a21 31FF     		xorl	%edi, %edi
 948 0a23 E8000000 		call	getHexUpperNibble@PLT
 948      00
 949 0a28 4C89E6   		movq	%r12, %rsi
 950 0a2b 0FBEF8   		movsbl	%al, %edi
 951 0a2e E8000000 		call	fputc@PLT
 951      00
 952 0a33 31FF     		xorl	%edi, %edi
 953 0a35 E8000000 		call	getHexLowerNibble@PLT
 953      00
 954 0a3a 4C89E6   		movq	%r12, %rsi
 955 0a3d 0FBEF8   		movsbl	%al, %edi
 956 0a40 E8000000 		call	fputc@PLT
 956      00
 957 0a45 440FB644 		movzbl	4(%rsp), %r8d
 957      2404
 958 0a4b 4489F9   		movl	%r15d, %ecx
 959 0a4e C1E908   		shrl	$8, %ecx
 960 0a51 8D440D00 		leal	0(%rbp,%rcx), %eax
 961 0a55 4584C0   		testb	%r8b, %r8b
 962 0a58 428D1C00 		leal	(%rax,%r8), %ebx
 963 0a5c 746F     		je	.L128
 964 0a5e 4C8B7424 		movq	24(%rsp), %r14
 964      18
 965 0a63 4183E801 		subl	$1, %r8d
 966 0a67 44896C24 		movl	%r13d, 20(%rsp)
 966      14
 967 0a6c 450FB6C0 		movzbl	%r8b, %r8d
 968 0a70 4189DD   		movl	%ebx, %r13d
 969 0a73 438D7407 		leal	1(%r15,%r8), %esi
 969      01
 970 0a78 498B06   		movq	(%r14), %rax
 971 0a7b 89742404 		movl	%esi, 4(%rsp)
 972 0a7f 4889C2   		movq	%rax, %rdx
 973              		.p2align 4,,10
 974 0a82 660F1F44 		.p2align 3
 974      0000
 975              	.L129:
 976 0a88 4489FB   		movl	%r15d, %ebx
 977 0a8b 4183C701 		addl	$1, %r15d
 978 0a8f 0FB62C1A 		movzbl	(%rdx,%rbx), %ebp
 979 0a93 89EF     		movl	%ebp, %edi
 980 0a95 E8000000 		call	getHexUpperNibble@PLT
 980      00
 981 0a9a 4C89E6   		movq	%r12, %rsi
 982 0a9d 0FBEF8   		movsbl	%al, %edi
 983 0aa0 E8000000 		call	fputc@PLT
 983      00
 984 0aa5 89EF     		movl	%ebp, %edi
 985 0aa7 E8000000 		call	getHexLowerNibble@PLT
 985      00
 986 0aac 4C89E6   		movq	%r12, %rsi
 987 0aaf 0FBEF8   		movsbl	%al, %edi
 988 0ab2 E8000000 		call	fputc@PLT
 988      00
 989 0ab7 498B16   		movq	(%r14), %rdx
 990 0aba 44022C1A 		addb	(%rdx,%rbx), %r13b
 991 0abe 443B7C24 		cmpl	4(%rsp), %r15d
 991      04
 992 0ac3 75C3     		jne	.L129
 993 0ac5 4489EB   		movl	%r13d, %ebx
 994 0ac8 448B6C24 		movl	20(%rsp), %r13d
 994      14
 995              	.L128:
 996 0acd 89D9     		movl	%ebx, %ecx
 997 0acf F7D9     		negl	%ecx
 998 0ad1 440FB6F9 		movzbl	%cl, %r15d
 999 0ad5 4489FF   		movl	%r15d, %edi
 1000 0ad8 E8000000 		call	getHexUpperNibble@PLT
 1000      00
 1001 0add 4C89E6   		movq	%r12, %rsi
 1002 0ae0 0FBEF8   		movsbl	%al, %edi
 1003 0ae3 E8000000 		call	fputc@PLT
 1003      00
 1004 0ae8 4489FF   		movl	%r15d, %edi
 1005 0aeb E8000000 		call	getHexLowerNibble@PLT
 1005      00
 1006 0af0 4C89E6   		movq	%r12, %rsi
 1007 0af3 0FBEF8   		movsbl	%al, %edi
 1008 0af6 E8000000 		call	fputc@PLT
 1008      00
 1009 0afb 4C89E6   		movq	%r12, %rsi
 1010 0afe BF0A0000 		movl	$10, %edi
 1010      00
 1011 0b03 E8000000 		call	fputc@PLT
 1011      00
 1012 0b08 443B6C24 		cmpl	16(%rsp), %r13d
 1012      10
 1013 0b0d 0F87E5FD 		ja	.L146
 1013      FFFF
 1014 0b13 488B4424 		movq	8(%rsp), %rax
 1014      08
 1015 0b18 8B4008   		movl	8(%rax), %eax
 1016              	.L119:
 1017 0b1b 39442410 		cmpl	%eax, 16(%rsp)
 1018 0b1f 0F828B00 		jb	.L132
 1018      0000
 1019              	.L136:
 1020              	.L133:
 1021 0b25 488D3D00 		leaq	.LC23(%rip), %rdi
 1021      000000
 1022 0b2c 4C89E1   		movq	%r12, %rcx
 1023 0b2f BA0C0000 		movl	$12, %edx
 1023      00
 1024 0b34 BE010000 		movl	$1, %esi
 1024      00
 1025 0b39 4531ED   		xorl	%r13d, %r13d
 1026 0b3c E8000000 		call	fwrite@PLT
 1026      00
 1027 0b41 807C242F 		cmpb	$0, 47(%rsp)
 1027      00
 1028 0b46 0F85CA01 		jne	.L163
 1028      0000
 1029              	.L114:
 1030 0b4c 4C89E7   		movq	%r12, %rdi
 1031 0b4f E8000000 		call	fclose@PLT
 1031      00
 1032 0b54 4489E8   		movl	%r13d, %eax
 1033              	.L112:
 1034 0b57 488B7424 		movq	72(%rsp), %rsi
 1034      48
 1035 0b5c 64483334 		xorq	%fs:40, %rsi
 1035      25280000 
 1035      00
 1036 0b65 0F85D101 		jne	.L164
 1036      0000
 1037 0b6b 4883C458 		addq	$88, %rsp
 1038              		.cfi_remember_state
 1039              		.cfi_def_cfa_offset 56
 1040 0b6f 5B       		popq	%rbx
 1041              		.cfi_def_cfa_offset 48
 1042 0b70 5D       		popq	%rbp
 1043              		.cfi_def_cfa_offset 40
 1044 0b71 415C     		popq	%r12
 1045              		.cfi_def_cfa_offset 32
 1046 0b73 415D     		popq	%r13
 1047              		.cfi_def_cfa_offset 24
 1048 0b75 415E     		popq	%r14
 1049              		.cfi_def_cfa_offset 16
 1050 0b77 415F     		popq	%r15
 1051              		.cfi_def_cfa_offset 8
 1052 0b79 C3       		ret
 1053 0b7a 660F1F44 		.p2align 4,,10
 1053      0000
 1054              		.p2align 3
 1055              	.L123:
 1056              		.cfi_restore_state
 1057 0b80 4589E8   		movl	%r13d, %r8d
 1058 0b83 4529F8   		subl	%r15d, %r8d
 1059 0b86 4584C0   		testb	%r8b, %r8b
 1060 0b89 0F85BEFD 		jne	.L165
 1060      FFFF
 1061              	.L140:
 1062 0b8f 44897C24 		movl	%r15d, 16(%rsp)
 1062      10
 1063 0b94 4531F6   		xorl	%r14d, %r14d
 1064 0b97 E9F9FDFF 		jmp	.L125
 1064      FF
 1065 0b9c 0F1F4000 		.p2align 4,,10
 1066              		.p2align 3
 1067              	.L162:
 1068 0ba0 440FB6F0 		movzbl	%al, %r14d
 1069 0ba4 895C2410 		movl	%ebx, 16(%rsp)
 1070 0ba8 4189C0   		movl	%eax, %r8d
 1071 0bab E9E5FDFF 		jmp	.L125
 1071      FF
 1072              	.L132:
 1073 0bb0 448B7C24 		movl	16(%rsp), %r15d
 1073      10
 1074 0bb5 41C1EF04 		shrl	$4, %r15d
 1075 0bb9 4181FFFF 		cmpl	$65535, %r15d
 1075      FF0000
 1076 0bc0 0F872C01 		ja	.L166
 1076      0000
 1077 0bc6 8B5C2410 		movl	16(%rsp), %ebx
 1078 0bca 488D3D00 		leaq	.LC25(%rip), %rdi
 1078      000000
 1079 0bd1 41BEFCFF 		movl	$-4, %r14d
 1079      FFFF
 1080 0bd7 4C89E1   		movq	%r12, %rcx
 1081 0bda BA070000 		movl	$7, %edx
 1081      00
 1082 0bdf 4529FE   		subl	%r15d, %r14d
 1083 0be2 BE010000 		movl	$1, %esi
 1083      00
 1084 0be7 89D8     		movl	%ebx, %eax
 1085 0be9 C1E80C   		shrl	$12, %eax
 1086 0bec 4129C6   		subl	%eax, %r14d
 1087 0bef E8000000 		call	fwrite@PLT
 1087      00
 1088 0bf4 BF020000 		movl	$2, %edi
 1088      00
 1089 0bf9 450FB6F6 		movzbl	%r14b, %r14d
 1090 0bfd E8000000 		call	getHexUpperNibble@PLT
 1090      00
 1091 0c02 4C89E6   		movq	%r12, %rsi
 1092 0c05 0FBEF8   		movsbl	%al, %edi
 1093 0c08 E8000000 		call	fputc@PLT
 1093      00
 1094 0c0d BF020000 		movl	$2, %edi
 1094      00
 1095 0c12 E8000000 		call	getHexLowerNibble@PLT
 1095      00
 1096 0c17 4C89E6   		movq	%r12, %rsi
 1097 0c1a 0FBEF8   		movsbl	%al, %edi
 1098 0c1d E8000000 		call	fputc@PLT
 1098      00
 1099 0c22 4C89F8   		movq	%r15, %rax
 1100 0c25 450FB6FF 		movzbl	%r15b, %r15d
 1101 0c29 0FB6D4   		movzbl	%ah, %edx
 1102 0c2c 89D7     		movl	%edx, %edi
 1103 0c2e 89542404 		movl	%edx, 4(%rsp)
 1104 0c32 E8000000 		call	getHexUpperNibble@PLT
 1104      00
 1105 0c37 4C89E6   		movq	%r12, %rsi
 1106 0c3a 0FBEF8   		movsbl	%al, %edi
 1107 0c3d E8000000 		call	fputc@PLT
 1107      00
 1108 0c42 8B542404 		movl	4(%rsp), %edx
 1109 0c46 89D7     		movl	%edx, %edi
 1110 0c48 E8000000 		call	getHexLowerNibble@PLT
 1110      00
 1111 0c4d 4C89E6   		movq	%r12, %rsi
 1112 0c50 0FBEF8   		movsbl	%al, %edi
 1113 0c53 E8000000 		call	fputc@PLT
 1113      00
 1114 0c58 4489FF   		movl	%r15d, %edi
 1115 0c5b E8000000 		call	getHexUpperNibble@PLT
 1115      00
 1116 0c60 4C89E6   		movq	%r12, %rsi
 1117 0c63 0FBEF8   		movsbl	%al, %edi
 1118 0c66 E8000000 		call	fputc@PLT
 1118      00
 1119 0c6b 4489FF   		movl	%r15d, %edi
 1120 0c6e E8000000 		call	getHexLowerNibble@PLT
 1120      00
 1121 0c73 4C89E6   		movq	%r12, %rsi
 1122 0c76 0FBEF8   		movsbl	%al, %edi
 1123 0c79 E8000000 		call	fputc@PLT
 1123      00
 1124 0c7e 4489F7   		movl	%r14d, %edi
 1125 0c81 E8000000 		call	getHexUpperNibble@PLT
 1125      00
 1126 0c86 4C89E6   		movq	%r12, %rsi
 1127 0c89 0FBEF8   		movsbl	%al, %edi
 1128 0c8c E8000000 		call	fputc@PLT
 1128      00
 1129 0c91 4489F7   		movl	%r14d, %edi
 1130 0c94 E8000000 		call	getHexLowerNibble@PLT
 1130      00
 1131 0c99 4C89E6   		movq	%r12, %rsi
 1132 0c9c 0FBEF8   		movsbl	%al, %edi
 1133 0c9f E8000000 		call	fputc@PLT
 1133      00
 1134 0ca4 4C89E6   		movq	%r12, %rsi
 1135 0ca7 BF0A0000 		movl	$10, %edi
 1135      00
 1136 0cac E8000000 		call	fputc@PLT
 1136      00
 1137 0cb1 488B4424 		movq	8(%rsp), %rax
 1137      08
 1138 0cb6 8B4008   		movl	8(%rax), %eax
 1139 0cb9 39C3     		cmpl	%eax, %ebx
 1140 0cbb 0F820BFC 		jb	.L135
 1140      FFFF
 1141 0cc1 E95FFEFF 		jmp	.L136
 1141      FF
 1142 0cc6 662E0F1F 		.p2align 4,,10
 1142      84000000 
 1142      0000
 1143              		.p2align 3
 1144              	.L161:
 1145 0cd0 488B4424 		movq	8(%rsp), %rax
 1145      08
 1146 0cd5 44896C24 		movl	%r13d, 16(%rsp)
 1146      10
 1147 0cda 8B4008   		movl	8(%rax), %eax
 1148 0cdd E939FEFF 		jmp	.L119
 1148      FF
 1149              	.L141:
 1150 0ce2 44897C24 		movl	%r15d, 16(%rsp)
 1150      10
 1151 0ce7 4531F6   		xorl	%r14d, %r14d
 1152 0cea 4531C0   		xorl	%r8d, %r8d
 1153 0ced E9A3FCFF 		jmp	.L125
 1153      FF
 1154              	.L166:
 1155 0cf2 488B7C24 		movq	32(%rsp), %rdi
 1155      20
 1156 0cf7 488D3500 		leaq	.LC24(%rip), %rsi
 1156      000000
 1157 0cfe 31C0     		xorl	%eax, %eax
 1158 0d00 41BD1200 		movl	$18, %r13d
 1158      0000
 1159 0d06 E8000000 		call	errRender@PLT
 1159      00
 1160 0d0b 807C242F 		cmpb	$0, 47(%rsp)
 1160      00
 1161 0d10 0F8436FE 		je	.L114
 1161      FFFF
 1162              	.L163:
 1163 0d16 488D6C24 		leaq	48(%rsp), %rbp
 1163      30
 1164              	.L137:
 1165 0d1b 4889EF   		movq	%rbp, %rdi
 1166 0d1e E8000000 		call	bufDestroy@PLT
 1166      00
 1167 0d23 E924FEFF 		jmp	.L114
 1167      FF
 1168              	.L159:
 1169 0d28 488B7C24 		movq	32(%rsp), %rdi
 1169      20
 1170 0d2d E8000000 		call	errRenderStd@PLT
 1170      00
 1171 0d32 B8020000 		movl	$2, %eax
 1171      00
 1172 0d37 E91BFEFF 		jmp	.L112
 1172      FF
 1173              	.L164:
 1174 0d3c E8000000 		call	__stack_chk_fail@PLT
 1174      00
 1175              	.L160:
 1176 0d41 488D6C24 		leaq	48(%rsp), %rbp
 1176      30
 1177 0d46 488B4C24 		movq	32(%rsp), %rcx
 1177      20
 1178 0d4b 31D2     		xorl	%edx, %edx
 1179 0d4d BE000400 		movl	$1024, %esi
 1179      00
 1180 0d52 4889EF   		movq	%rbp, %rdi
 1181 0d55 E8000000 		call	bufInitialise@PLT
 1181      00
 1182 0d5a 85C0     		testl	%eax, %eax
 1183 0d5c 4189C5   		movl	%eax, %r13d
 1184 0d5f 0F85E7FD 		jne	.L114
 1184      FFFF
 1185 0d65 84DB     		testb	%bl, %bl
 1186 0d67 7428     		je	.L115
 1187 0d69 488B5424 		movq	32(%rsp), %rdx
 1187      20
 1188 0d6e 488B7C24 		movq	24(%rsp), %rdi
 1188      18
 1189 0d73 4889EE   		movq	%rbp, %rsi
 1190 0d76 E8000000 		call	bufDeriveMask@PLT
 1190      00
 1191 0d7b 85C0     		testl	%eax, %eax
 1192 0d7d 4189C5   		movl	%eax, %r13d
 1193 0d80 7599     		jne	.L137
 1194              	.L117:
 1195 0d82 C644242F 		movb	$1, 47(%rsp)
 1195      01
 1196 0d87 48896C24 		movq	%rbp, 8(%rsp)
 1196      08
 1197 0d8c E91FFBFF 		jmp	.L113
 1197      FF
 1198              	.L115:
 1199 0d91 488B4424 		movq	24(%rsp), %rax
 1199      18
 1200 0d96 488B4C24 		movq	32(%rsp), %rcx
 1200      20
 1201 0d9b BE010000 		movl	$1, %esi
 1201      00
 1202 0da0 4889EF   		movq	%rbp, %rdi
 1203 0da3 8B5008   		movl	8(%rax), %edx
 1204 0da6 E8000000 		call	bufAppendConst@PLT
 1204      00
 1205 0dab 85C0     		testl	%eax, %eax
 1206 0dad 4189C5   		movl	%eax, %r13d
 1207 0db0 0F8565FF 		jne	.L137
 1207      FFFF
 1208 0db6 EBCA     		jmp	.L117
 1209              		.cfi_endproc
 1210              	.LFE42:
 1212              		.section	.text.unlikely
 1213              	.LCOLDE26:
 1214              		.text
 1215              	.LHOTE26:
 1216              		.ident	"GCC: (Ubuntu 4.9.2-10ubuntu13) 4.9.2"
 1217              		.section	.note.GNU-stack,"",@progbits
DEFINED SYMBOLS
                            *ABS*:0000000000000000 hexio.c
     /tmp/ccSaERDv.s:52     .text:0000000000000000 bufProcessLine
     /tmp/ccSaERDv.s:498    .text:00000000000005b0 bufReadFromIntelHexFile
     /tmp/ccSaERDv.s:665    .text:0000000000000760 bufDeriveMask
     /tmp/ccSaERDv.s:800    .text:0000000000000850 bufWriteToIntelHexFile
     /tmp/ccSaERDv.s:3      .rodata.str1.1:0000000000000000 .LC0
     /tmp/ccSaERDv.s:5      .rodata.str1.1:000000000000001c .LC1
     /tmp/ccSaERDv.s:7      .rodata.str1.1:0000000000000038 .LC2
     /tmp/ccSaERDv.s:9      .rodata.str1.1:0000000000000055 .LC3
     /tmp/ccSaERDv.s:13     .rodata.str1.1:000000000000008f .LC5
     /tmp/ccSaERDv.s:11     .rodata.str1.1:0000000000000072 .LC4
     /tmp/ccSaERDv.s:19     .rodata.str1.8:0000000000000000 .LC7
     /tmp/ccSaERDv.s:15     .rodata.str1.1:00000000000000ad .LC6
     /tmp/ccSaERDv.s:22     .rodata.str1.1:00000000000000c7 .LC8
     /tmp/ccSaERDv.s:24     .rodata.str1.1:00000000000000d5 .LC9
     /tmp/ccSaERDv.s:43     .rodata.str1.8:00000000000001b0 .LC15
     /tmp/ccSaERDv.s:28     .rodata.str1.8:0000000000000050 .LC10
     /tmp/ccSaERDv.s:40     .rodata.str1.8:0000000000000178 .LC14
     /tmp/ccSaERDv.s:37     .rodata.str1.8:0000000000000140 .LC13
     /tmp/ccSaERDv.s:34     .rodata.str1.8:0000000000000108 .LC12
     /tmp/ccSaERDv.s:31     .rodata.str1.8:00000000000000a8 .LC11
     /tmp/ccSaERDv.s:483    .rodata.str1.1:00000000000000da .LC17
     /tmp/ccSaERDv.s:489    .rodata.str1.8:00000000000001e0 .LC19
     /tmp/ccSaERDv.s:485    .rodata.str1.1:00000000000000dd .LC18
     /tmp/ccSaERDv.s:782    .rodata.str1.1:00000000000000e9 .LC22
     /tmp/ccSaERDv.s:784    .rodata.str1.1:00000000000000ec .LC23
     /tmp/ccSaERDv.s:791    .rodata.str1.1:00000000000000f9 .LC25
     /tmp/ccSaERDv.s:788    .rodata.str1.8:0000000000000210 .LC24

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
errRender
getHexByte
__stack_chk_fail
__sprintf_chk
strncmp
bufWriteBlock
bufWriteConst
fopen
bufZeroLength
fgets
fclose
errRenderStd
bufAppendConst
fputc
getHexUpperNibble
getHexLowerNibble
fwrite
bufDestroy
bufInitialise
