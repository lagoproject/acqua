   1              		.file	"TestUnitTest++.cpp"
   2              		.text
   3              	.Ltext0:
   4              		.section	.rodata
   5              	.LC0:
   6 0000 44656661 		.string	"DefaultSuite"
   6      756C7453 
   6      75697465 
   6      00
   7              		.section	.text._ZN13UnitTestSuite12GetSuiteNameEv,"axG",@progbits,_ZN13UnitTestSuite12GetSuiteName
   8              		.weak	_ZN13UnitTestSuite12GetSuiteNameEv
  10              	_ZN13UnitTestSuite12GetSuiteNameEv:
  11              	.LFB0:
  12              		.file 1 "../TestSuite.h"
   1:../TestSuite.h **** #ifndef UNITTEST_TESTSUITE_H
   2:../TestSuite.h **** #define UNITTEST_TESTSUITE_H
   3:../TestSuite.h **** 
   4:../TestSuite.h **** namespace UnitTestSuite {
   5:../TestSuite.h **** 
   6:../TestSuite.h ****     inline char const* GetSuiteName ()
   7:../TestSuite.h ****     {
  13              		.loc 1 7 0
  14              		.cfi_startproc
  15 0000 55       		pushq	%rbp
  16              		.cfi_def_cfa_offset 16
  17              		.cfi_offset 6, -16
  18 0001 4889E5   		movq	%rsp, %rbp
  19              		.cfi_def_cfa_register 6
   8:../TestSuite.h ****         return "DefaultSuite";
  20              		.loc 1 8 0
  21 0004 B8000000 		movl	$.LC0, %eax
  21      00
   9:../TestSuite.h ****     }
  22              		.loc 1 9 0
  23 0009 5D       		popq	%rbp
  24              		.cfi_def_cfa 7, 8
  25 000a C3       		ret
  26              		.cfi_endproc
  27              	.LFE0:
  29              		.section	.text._ZN8UnitTest15MemoryOutStreamC1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamC1Ev
  30              		.align 2
  31              		.weak	_ZN8UnitTest15MemoryOutStreamC1Ev
  33              	_ZN8UnitTest15MemoryOutStreamC1Ev:
  34              	.LFB1053:
  35              		.file 2 "../MemoryOutStream.h"
   1:../MemoryOutStream.h **** #ifndef UNITTEST_MEMORYOUTSTREAM_H
   2:../MemoryOutStream.h **** #define UNITTEST_MEMORYOUTSTREAM_H
   3:../MemoryOutStream.h **** 
   4:../MemoryOutStream.h **** #include "Config.h"
   5:../MemoryOutStream.h **** 
   6:../MemoryOutStream.h **** #ifndef UNITTEST_USE_CUSTOM_STREAMS
   7:../MemoryOutStream.h **** 
   8:../MemoryOutStream.h **** #include <sstream>
   9:../MemoryOutStream.h **** 
  10:../MemoryOutStream.h **** namespace UnitTest
  11:../MemoryOutStream.h **** {
  12:../MemoryOutStream.h **** 
  13:../MemoryOutStream.h **** class MemoryOutStream : public std::ostringstream
  14:../MemoryOutStream.h **** {
  15:../MemoryOutStream.h **** public:
  16:../MemoryOutStream.h ****     MemoryOutStream() {}
  36              		.loc 2 16 0
  37              		.cfi_startproc
  38              		.cfi_personality 0x3,__gxx_personality_v0
  39              		.cfi_lsda 0x3,.LLSDA1053
  40 0000 55       		pushq	%rbp
  41              		.cfi_def_cfa_offset 16
  42              		.cfi_offset 6, -16
  43 0001 4889E5   		movq	%rsp, %rbp
  44              		.cfi_def_cfa_register 6
  45 0004 53       		pushq	%rbx
  46 0005 4883EC18 		subq	$24, %rsp
  47              		.cfi_offset 3, -24
  48 0009 48897DE8 		movq	%rdi, -24(%rbp)
  49              	.LBB2:
  50              		.loc 2 16 0
  51 000d 488B45E8 		movq	-24(%rbp), %rax
  52 0011 4883C060 		addq	$96, %rax
  53 0015 4889C7   		movq	%rax, %rdi
  54              	.LEHB0:
  55 0018 E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEEC2Ev
  55      00
  56              	.LEHE0:
  57 001d B9000000 		movl	$_ZTTN8UnitTest15MemoryOutStreamE+8, %ecx
  57      00
  58 0022 488B45E8 		movq	-24(%rbp), %rax
  59 0026 BA100000 		movl	$16, %edx
  59      00
  60 002b 4889CE   		movq	%rcx, %rsi
  61 002e 4889C7   		movq	%rax, %rdi
  62              	.LEHB1:
  63 0031 E8000000 		call	_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEEC2ESt13_Ios_Openmode
  63      00
  64              	.LEHE1:
  65              		.loc 2 16 0 is_stmt 0 discriminator 9
  66 0036 BA000000 		movl	$_ZTVN8UnitTest15MemoryOutStreamE+24, %edx
  66      00
  67 003b 488B45E8 		movq	-24(%rbp), %rax
  68 003f 488910   		movq	%rdx, (%rax)
  69 0042 BA600000 		movl	$96, %edx
  69      00
  70 0047 488B45E8 		movq	-24(%rbp), %rax
  71 004b 4801D0   		addq	%rdx, %rax
  72 004e BA000000 		movl	$_ZTVN8UnitTest15MemoryOutStreamE+64, %edx
  72      00
  73 0053 488910   		movq	%rdx, (%rax)
  74 0056 488B45E8 		movq	-24(%rbp), %rax
  75 005a 4883C058 		addq	$88, %rax
  76 005e 4889C7   		movq	%rax, %rdi
  77              	.LEHB2:
  78 0061 E8000000 		call	_ZNSsC1Ev
  78      00
  79              	.LEHE2:
  80              	.LBE2:
  81              		.loc 2 16 0
  82 0066 EB37     		jmp	.L8
  83              	.L6:
  84 0068 4889C3   		movq	%rax, %rbx
  85              	.LBB3:
  86 006b BA000000 		movl	$_ZTTN8UnitTest15MemoryOutStreamE+8, %edx
  86      00
  87 0070 488B45E8 		movq	-24(%rbp), %rax
  88 0074 4889D6   		movq	%rdx, %rsi
  89 0077 4889C7   		movq	%rax, %rdi
  90 007a E8000000 		call	_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev
  90      00
  91 007f EB03     		jmp	.L5
  92              	.L7:
  93 0081 4889C3   		movq	%rax, %rbx
  94              	.L5:
  95              		.loc 2 16 0 discriminator 28
  96 0084 488B45E8 		movq	-24(%rbp), %rax
  97 0088 4883C060 		addq	$96, %rax
  98 008c 4889C7   		movq	%rax, %rdi
  99 008f E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev
  99      00
 100 0094 4889D8   		movq	%rbx, %rax
 101 0097 4889C7   		movq	%rax, %rdi
 102              	.LEHB3:
 103 009a E8000000 		call	_Unwind_Resume
 103      00
 104              	.LEHE3:
 105              	.L8:
 106              	.LBE3:
 107              		.loc 2 16 0
 108 009f 4883C418 		addq	$24, %rsp
 109 00a3 5B       		popq	%rbx
 110 00a4 5D       		popq	%rbp
 111              		.cfi_def_cfa 7, 8
 112 00a5 C3       		ret
 113              		.cfi_endproc
 114              	.LFE1053:
 115              		.globl	__gxx_personality_v0
 116              		.section	.gcc_except_table._ZN8UnitTest15MemoryOutStreamC1Ev,"aG",@progbits,_ZN8UnitTest15MemoryOu
 117              	.LLSDA1053:
 118 0000 FF       		.byte	0xff
 119 0001 FF       		.byte	0xff
 120 0002 01       		.byte	0x1
 121 0003 12       		.uleb128 .LLSDACSE1053-.LLSDACSB1053
 122              	.LLSDACSB1053:
 123 0004 18       		.uleb128 .LEHB0-.LFB1053
 124 0005 05       		.uleb128 .LEHE0-.LEHB0
 125 0006 00       		.uleb128 0
 126 0007 00       		.uleb128 0
 127 0008 31       		.uleb128 .LEHB1-.LFB1053
 128 0009 05       		.uleb128 .LEHE1-.LEHB1
 129 000a 8101     		.uleb128 .L7-.LFB1053
 130 000c 00       		.uleb128 0
 131 000d 61       		.uleb128 .LEHB2-.LFB1053
 132 000e 05       		.uleb128 .LEHE2-.LEHB2
 133 000f 68       		.uleb128 .L6-.LFB1053
 134 0010 00       		.uleb128 0
 135 0011 9A01     		.uleb128 .LEHB3-.LFB1053
 136 0013 05       		.uleb128 .LEHE3-.LEHB3
 137 0014 00       		.uleb128 0
 138 0015 00       		.uleb128 0
 139              	.LLSDACSE1053:
 140              		.section	.text._ZN8UnitTest15MemoryOutStreamC1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamC1Ev
 142              		.section	.text._ZN17ScopedCurrentTestC2ERN8UnitTest11TestResultsEPKNS0_11TestDetailsE,"axG",@progb
 143              		.align 2
 144              		.weak	_ZN17ScopedCurrentTestC2ERN8UnitTest11TestResultsEPKNS0_11TestDetailsE
 146              	_ZN17ScopedCurrentTestC2ERN8UnitTest11TestResultsEPKNS0_11TestDetailsE:
 147              	.LFB1069:
 148              		.file 3 "ScopedCurrentTest.h"
   1:ScopedCurrentTest.h **** #ifndef UNITTEST_SCOPEDCURRENTTEST_H
   2:ScopedCurrentTest.h **** #define UNITTEST_SCOPEDCURRENTTEST_H
   3:ScopedCurrentTest.h **** 
   4:ScopedCurrentTest.h **** #include "../CurrentTest.h"
   5:ScopedCurrentTest.h **** #include <cstddef>
   6:ScopedCurrentTest.h **** 
   7:ScopedCurrentTest.h **** class ScopedCurrentTest
   8:ScopedCurrentTest.h **** {
   9:ScopedCurrentTest.h **** public:
  10:ScopedCurrentTest.h **** 	ScopedCurrentTest()
  11:ScopedCurrentTest.h **** 		: m_oldTestResults(UnitTest::CurrentTest::Results())
  12:ScopedCurrentTest.h **** 		, m_oldTestDetails(UnitTest::CurrentTest::Details())
  13:ScopedCurrentTest.h **** 	{
  14:ScopedCurrentTest.h **** 	}
  15:ScopedCurrentTest.h **** 
  16:ScopedCurrentTest.h **** 	explicit ScopedCurrentTest(UnitTest::TestResults& newResults, const UnitTest::TestDetails* newDeta
 149              		.loc 3 16 0 is_stmt 1
 150              		.cfi_startproc
 151 0000 55       		pushq	%rbp
 152              		.cfi_def_cfa_offset 16
 153              		.cfi_offset 6, -16
 154 0001 4889E5   		movq	%rsp, %rbp
 155              		.cfi_def_cfa_register 6
 156 0004 4883EC20 		subq	$32, %rsp
 157 0008 48897DF8 		movq	%rdi, -8(%rbp)
 158 000c 488975F0 		movq	%rsi, -16(%rbp)
 159 0010 488955E8 		movq	%rdx, -24(%rbp)
 160              	.LBB4:
  17:ScopedCurrentTest.h **** 		: m_oldTestResults(UnitTest::CurrentTest::Results())
 161              		.loc 3 17 0
 162 0014 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 162      00
  18:ScopedCurrentTest.h **** 		, m_oldTestDetails(UnitTest::CurrentTest::Details())
 163              		.loc 3 18 0
 164 0019 488B10   		movq	(%rax), %rdx
 165 001c 488B45F8 		movq	-8(%rbp), %rax
 166 0020 488910   		movq	%rdx, (%rax)
 167 0023 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 167      00
 168 0028 488B10   		movq	(%rax), %rdx
 169 002b 488B45F8 		movq	-8(%rbp), %rax
 170 002f 48895008 		movq	%rdx, 8(%rax)
  19:ScopedCurrentTest.h **** 	{
  20:ScopedCurrentTest.h **** 		UnitTest::CurrentTest::Results() = &newResults;
 171              		.loc 3 20 0
 172 0033 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 172      00
 173 0038 4889C2   		movq	%rax, %rdx
 174 003b 488B45F0 		movq	-16(%rbp), %rax
 175 003f 488902   		movq	%rax, (%rdx)
  21:ScopedCurrentTest.h **** 
  22:ScopedCurrentTest.h **** 		if (newDetails != NULL)
 176              		.loc 3 22 0
 177 0042 48837DE8 		cmpq	$0, -24(%rbp)
 177      00
 178 0047 740F     		je	.L9
  23:ScopedCurrentTest.h **** 			UnitTest::CurrentTest::Details() = newDetails;
 179              		.loc 3 23 0
 180 0049 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 180      00
 181 004e 4889C2   		movq	%rax, %rdx
 182 0051 488B45E8 		movq	-24(%rbp), %rax
 183 0055 488902   		movq	%rax, (%rdx)
 184              	.L9:
 185              	.LBE4:
  24:ScopedCurrentTest.h **** 	}
 186              		.loc 3 24 0
 187 0058 C9       		leave
 188              		.cfi_def_cfa 7, 8
 189 0059 C3       		ret
 190              		.cfi_endproc
 191              	.LFE1069:
 193              		.weak	_ZN17ScopedCurrentTestC1ERN8UnitTest11TestResultsEPKNS0_11TestDetailsE
 194              		.set	_ZN17ScopedCurrentTestC1ERN8UnitTest11TestResultsEPKNS0_11TestDetailsE,_ZN17ScopedCurrentTest
 195              		.section	.text._ZN17ScopedCurrentTestD2Ev,"axG",@progbits,_ZN17ScopedCurrentTestD5Ev,comdat
 196              		.align 2
 197              		.weak	_ZN17ScopedCurrentTestD2Ev
 199              	_ZN17ScopedCurrentTestD2Ev:
 200              	.LFB1072:
  25:ScopedCurrentTest.h **** 
  26:ScopedCurrentTest.h **** 	~ScopedCurrentTest()
 201              		.loc 3 26 0
 202              		.cfi_startproc
 203 0000 55       		pushq	%rbp
 204              		.cfi_def_cfa_offset 16
 205              		.cfi_offset 6, -16
 206 0001 4889E5   		movq	%rsp, %rbp
 207              		.cfi_def_cfa_register 6
 208 0004 4883EC10 		subq	$16, %rsp
 209 0008 48897DF8 		movq	%rdi, -8(%rbp)
 210              	.LBB5:
  27:ScopedCurrentTest.h **** 	{
  28:ScopedCurrentTest.h **** 		UnitTest::CurrentTest::Results() = m_oldTestResults;
 211              		.loc 3 28 0
 212 000c E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 212      00
 213 0011 4889C2   		movq	%rax, %rdx
 214 0014 488B45F8 		movq	-8(%rbp), %rax
 215 0018 488B00   		movq	(%rax), %rax
 216 001b 488902   		movq	%rax, (%rdx)
  29:ScopedCurrentTest.h **** 		UnitTest::CurrentTest::Details() = m_oldTestDetails;
 217              		.loc 3 29 0
 218 001e E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 218      00
 219 0023 4889C2   		movq	%rax, %rdx
 220 0026 488B45F8 		movq	-8(%rbp), %rax
 221 002a 488B4008 		movq	8(%rax), %rax
 222 002e 488902   		movq	%rax, (%rdx)
 223              	.LBE5:
  30:ScopedCurrentTest.h **** 	}
 224              		.loc 3 30 0
 225 0031 C9       		leave
 226              		.cfi_def_cfa 7, 8
 227 0032 C3       		ret
 228              		.cfi_endproc
 229              	.LFE1072:
 231              		.weak	_ZN17ScopedCurrentTestD1Ev
 232              		.set	_ZN17ScopedCurrentTestD1Ev,_ZN17ScopedCurrentTestD2Ev
 233              		.section	.rodata
 234              	.LC1:
 235 000d 54657374 		.string	"TestUnitTest++.cpp"
 235      556E6974 
 235      54657374 
 235      2B2B2E63 
 235      707000
 236              	.LC2:
 237 0020 56616C69 		.string	"ValidCheckSucceeds"
 237      64436865 
 237      636B5375 
 237      63636565 
 237      647300
 238              		.text
 239              		.align 2
 241              	_ZN12_GLOBAL__N_122TestValidCheckSucceedsC2Ev:
 242              	.LFB1343:
 243              		.file 4 "TestUnitTest++.cpp"
   1:TestUnitTest++.cpp **** #include "../UnitTest++.h"
   2:TestUnitTest++.cpp **** #include "../ReportAssert.h"
   3:TestUnitTest++.cpp **** #include "ScopedCurrentTest.h"
   4:TestUnitTest++.cpp **** 
   5:TestUnitTest++.cpp **** #include <vector>
   6:TestUnitTest++.cpp **** 
   7:TestUnitTest++.cpp **** // These are sample tests that show the different features of the framework
   8:TestUnitTest++.cpp **** 
   9:TestUnitTest++.cpp **** namespace {
  10:TestUnitTest++.cpp **** 
  11:TestUnitTest++.cpp **** TEST(ValidCheckSucceeds)
 244              		.loc 4 11 0
 245              		.cfi_startproc
 246 0000 55       		pushq	%rbp
 247              		.cfi_def_cfa_offset 16
 248              		.cfi_offset 6, -16
 249 0001 4889E5   		movq	%rsp, %rbp
 250              		.cfi_def_cfa_register 6
 251 0004 4883EC10 		subq	$16, %rsp
 252 0008 48897DF8 		movq	%rdi, -8(%rbp)
 253              	.LBB6:
 254              		.loc 4 11 0
 255 000c E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 255      00
 256 0011 4889C2   		movq	%rax, %rdx
 257 0014 488B45F8 		movq	-8(%rbp), %rax
 258 0018 41B80B00 		movl	$11, %r8d
 258      0000
 259 001e B9000000 		movl	$.LC1, %ecx
 259      00
 260 0023 BE000000 		movl	$.LC2, %esi
 260      00
 261 0028 4889C7   		movq	%rax, %rdi
 262 002b E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 262      00
 263 0030 488B45F8 		movq	-8(%rbp), %rax
 264 0034 48C70000 		movq	$_ZTVN12_GLOBAL__N_122TestValidCheckSucceedsE+16, (%rax)
 264      000000
 265              	.LBE6:
 266 003b C9       		leave
 267              		.cfi_def_cfa 7, 8
 268 003c C3       		ret
 269              		.cfi_endproc
 270              	.LFE1343:
 272              		.local	_ZN12_GLOBAL__N_130testValidCheckSucceedsInstanceE
 273              		.comm	_ZN12_GLOBAL__N_130testValidCheckSucceedsInstanceE,56,32
 274              		.local	_ZN12_GLOBAL__N_123adderValidCheckSucceedsE
 275              		.comm	_ZN12_GLOBAL__N_123adderValidCheckSucceedsE,1,1
 276              		.section	.rodata
 277              	.LC3:
 278 0033 6200     		.string	"b"
 279 0035 000000   		.align 8
 280              	.LC4:
 281 0038 556E6861 		.string	"Unhandled exception in CHECK(b)"
 281      6E646C65 
 281      64206578 
 281      63657074 
 281      696F6E20 
 282              		.text
 283 003d 90       		.align 2
 285              	_ZNK12_GLOBAL__N_122TestValidCheckSucceeds7RunImplEv:
 286              	.LFB1345:
  12:TestUnitTest++.cpp **** {
 287              		.loc 4 12 0
 288              		.cfi_startproc
 289              		.cfi_personality 0x3,__gxx_personality_v0
 290              		.cfi_lsda 0x3,.LLSDA1345
 291 003e 55       		pushq	%rbp
 292              		.cfi_def_cfa_offset 16
 293              		.cfi_offset 6, -16
 294 003f 4889E5   		movq	%rsp, %rbp
 295              		.cfi_def_cfa_register 6
 296 0042 53       		pushq	%rbx
 297 0043 4883EC58 		subq	$88, %rsp
 298              		.cfi_offset 3, -24
 299 0047 48897DA8 		movq	%rdi, -88(%rbp)
 300              		.loc 4 12 0
 301 004b 64488B04 		movq	%fs:40, %rax
 301      25280000 
 301      00
 302 0054 488945E8 		movq	%rax, -24(%rbp)
 303 0058 31C0     		xorl	%eax, %eax
 304              	.LBB7:
  13:TestUnitTest++.cpp ****     bool const b = true;
 305              		.loc 4 13 0
 306 005a C645BF01 		movb	$1, -65(%rbp)
  14:TestUnitTest++.cpp ****     CHECK(b);
 307              		.loc 4 14 0
 308 005e BF010000 		movl	$1, %edi
 308      00
 309 0063 E8000000 		call	_ZN8UnitTest5CheckIbEEbT_
 309      00
 310 0068 83F001   		xorl	$1, %eax
 311 006b 84C0     		testb	%al, %al
 312 006d 0F849300 		je	.L14
 312      0000
 313              	.LEHB4:
 314              		.loc 4 14 0 is_stmt 0 discriminator 1
 315 0073 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 315      00
 316 0078 488B08   		movq	(%rax), %rcx
 317 007b 488D45C0 		leaq	-64(%rbp), %rax
 318 007f BA0E0000 		movl	$14, %edx
 318      00
 319 0084 4889CE   		movq	%rcx, %rsi
 320 0087 4889C7   		movq	%rax, %rdi
 321 008a E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 321      00
 322              		.loc 4 14 0 discriminator 3
 323 008f E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 323      00
 324 0094 488B00   		movq	(%rax), %rax
 325 0097 488D4DC0 		leaq	-64(%rbp), %rcx
 326 009b BA000000 		movl	$.LC3, %edx
 326      00
 327 00a0 4889CE   		movq	%rcx, %rsi
 328 00a3 4889C7   		movq	%rax, %rdi
 329 00a6 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 329      00
 330              	.LEHE4:
 331 00ab EB59     		jmp	.L14
 332              	.L20:
 333 00ad 4889C3   		movq	%rax, %rbx
 334              		.loc 4 14 0
 335 00b0 E8000000 		call	__cxa_end_catch
 335      00
 336 00b5 4889D8   		movq	%rbx, %rax
 337 00b8 4889C7   		movq	%rax, %rdi
 338              	.LEHB5:
 339 00bb E8000000 		call	_Unwind_Resume
 339      00
 340              	.LEHE5:
 341              	.L19:
 342 00c0 4889C7   		movq	%rax, %rdi
 343 00c3 E8000000 		call	__cxa_begin_catch
 343      00
 344              	.LEHB6:
 345 00c8 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 345      00
 346 00cd 488B08   		movq	(%rax), %rcx
 347 00d0 488D45C0 		leaq	-64(%rbp), %rax
 348 00d4 BA0E0000 		movl	$14, %edx
 348      00
 349 00d9 4889CE   		movq	%rcx, %rsi
 350 00dc 4889C7   		movq	%rax, %rdi
 351 00df E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 351      00
 352              		.loc 4 14 0 discriminator 11
 353 00e4 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 353      00
 354 00e9 488B00   		movq	(%rax), %rax
 355 00ec 488D4DC0 		leaq	-64(%rbp), %rcx
 356 00f0 BA000000 		movl	$.LC4, %edx
 356      00
 357 00f5 4889CE   		movq	%rcx, %rsi
 358 00f8 4889C7   		movq	%rax, %rdi
 359 00fb E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 359      00
 360              	.LEHE6:
 361              	.LEHB7:
 362              		.loc 4 14 0 discriminator 15
 363 0100 E8000000 		call	__cxa_end_catch
 363      00
 364              	.LEHE7:
 365              	.LBE7:
  15:TestUnitTest++.cpp **** }
 366              		.loc 4 15 0 is_stmt 1 discriminator 15
 367 0105 90       		nop
 368              	.L14:
 369              		.loc 4 15 0 is_stmt 0
 370 0106 488B45E8 		movq	-24(%rbp), %rax
 371 010a 64483304 		xorq	%fs:40, %rax
 371      25280000 
 371      00
 372 0113 7405     		je	.L18
 373 0115 E8000000 		call	__stack_chk_fail
 373      00
 374              	.L18:
 375 011a 4883C458 		addq	$88, %rsp
 376 011e 5B       		popq	%rbx
 377 011f 5D       		popq	%rbp
 378              		.cfi_def_cfa 7, 8
 379 0120 C3       		ret
 380              		.cfi_endproc
 381              	.LFE1345:
 382              		.section	.gcc_except_table,"a",@progbits
 383              		.align 4
 384              	.LLSDA1345:
 385 0000 FF       		.byte	0xff
 386 0001 03       		.byte	0x3
 387 0002 1D       		.uleb128 .LLSDATT1345-.LLSDATTD1345
 388              	.LLSDATTD1345:
 389 0003 01       		.byte	0x1
 390 0004 13       		.uleb128 .LLSDACSE1345-.LLSDACSB1345
 391              	.LLSDACSB1345:
 392 0005 35       		.uleb128 .LEHB4-.LFB1345
 393 0006 38       		.uleb128 .LEHE4-.LEHB4
 394 0007 8201     		.uleb128 .L19-.LFB1345
 395 0009 01       		.uleb128 0x1
 396 000a 7D       		.uleb128 .LEHB5-.LFB1345
 397 000b 05       		.uleb128 .LEHE5-.LEHB5
 398 000c 00       		.uleb128 0
 399 000d 00       		.uleb128 0
 400 000e 8A01     		.uleb128 .LEHB6-.LFB1345
 401 0010 38       		.uleb128 .LEHE6-.LEHB6
 402 0011 6F       		.uleb128 .L20-.LFB1345
 403 0012 00       		.uleb128 0
 404 0013 C201     		.uleb128 .LEHB7-.LFB1345
 405 0015 05       		.uleb128 .LEHE7-.LEHB7
 406 0016 00       		.uleb128 0
 407 0017 00       		.uleb128 0
 408              	.LLSDACSE1345:
 409 0018 01       		.byte	0x1
 410 0019 00       		.byte	0
 411 001a 0000     		.align 4
 412 001c 00000000 		.long	0
 413              	
 414              	.LLSDATT1345:
 415              		.text
 417              		.section	.rodata
 418              	.LC5:
 419 0058 43686563 		.string	"CheckWorksWithPointers"
 419      6B576F72 
 419      6B735769 
 419      7468506F 
 419      696E7465 
 420              		.text
 421 0121 90       		.align 2
 423              	_ZN12_GLOBAL__N_126TestCheckWorksWithPointersC2Ev:
 424              	.LFB1347:
  16:TestUnitTest++.cpp **** 
  17:TestUnitTest++.cpp **** TEST(CheckWorksWithPointers)
 425              		.loc 4 17 0 is_stmt 1
 426              		.cfi_startproc
 427 0122 55       		pushq	%rbp
 428              		.cfi_def_cfa_offset 16
 429              		.cfi_offset 6, -16
 430 0123 4889E5   		movq	%rsp, %rbp
 431              		.cfi_def_cfa_register 6
 432 0126 4883EC10 		subq	$16, %rsp
 433 012a 48897DF8 		movq	%rdi, -8(%rbp)
 434              	.LBB8:
 435              		.loc 4 17 0
 436 012e E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 436      00
 437 0133 4889C2   		movq	%rax, %rdx
 438 0136 488B45F8 		movq	-8(%rbp), %rax
 439 013a 41B81100 		movl	$17, %r8d
 439      0000
 440 0140 B9000000 		movl	$.LC1, %ecx
 440      00
 441 0145 BE000000 		movl	$.LC5, %esi
 441      00
 442 014a 4889C7   		movq	%rax, %rdi
 443 014d E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 443      00
 444 0152 488B45F8 		movq	-8(%rbp), %rax
 445 0156 48C70000 		movq	$_ZTVN12_GLOBAL__N_126TestCheckWorksWithPointersE+16, (%rax)
 445      000000
 446              	.LBE8:
 447 015d C9       		leave
 448              		.cfi_def_cfa 7, 8
 449 015e C3       		ret
 450              		.cfi_endproc
 451              	.LFE1347:
 453              		.local	_ZN12_GLOBAL__N_134testCheckWorksWithPointersInstanceE
 454              		.comm	_ZN12_GLOBAL__N_134testCheckWorksWithPointersInstanceE,56,32
 455              		.local	_ZN12_GLOBAL__N_127adderCheckWorksWithPointersE
 456              		.comm	_ZN12_GLOBAL__N_127adderCheckWorksWithPointersE,1,1
 457              		.section	.rodata
 458              	.LC6:
 459 006f 7000     		.string	"p"
 460              	.LC7:
 461 0071 7020213D 		.string	"p != 0"
 461      203000
 462              		.align 8
 463              	.LC8:
 464 0078 556E6861 		.string	"Unhandled exception in CHECK(p)"
 464      6E646C65 
 464      64206578 
 464      63657074 
 464      696F6E20 
 465              		.align 8
 466              	.LC9:
 467 0098 556E6861 		.string	"Unhandled exception in CHECK(p != 0)"
 467      6E646C65 
 467      64206578 
 467      63657074 
 467      696F6E20 
 468              		.text
 469 015f 90       		.align 2
 471              	_ZNK12_GLOBAL__N_126TestCheckWorksWithPointers7RunImplEv:
 472              	.LFB1349:
  18:TestUnitTest++.cpp **** {
 473              		.loc 4 18 0
 474              		.cfi_startproc
 475              		.cfi_personality 0x3,__gxx_personality_v0
 476              		.cfi_lsda 0x3,.LLSDA1349
 477 0160 55       		pushq	%rbp
 478              		.cfi_def_cfa_offset 16
 479              		.cfi_offset 6, -16
 480 0161 4889E5   		movq	%rsp, %rbp
 481              		.cfi_def_cfa_register 6
 482 0164 53       		pushq	%rbx
 483 0165 4883EC58 		subq	$88, %rsp
 484              		.cfi_offset 3, -24
 485 0169 48897DA8 		movq	%rdi, -88(%rbp)
 486              		.loc 4 18 0
 487 016d 64488B04 		movq	%fs:40, %rax
 487      25280000 
 487      00
 488 0176 488945E8 		movq	%rax, -24(%rbp)
 489 017a 31C0     		xorl	%eax, %eax
 490              	.LBB9:
  19:TestUnitTest++.cpp ****     void* p = (void *)0x100;
 491              		.loc 4 19 0
 492 017c 48C745B8 		movq	$256, -72(%rbp)
 492      00010000 
  20:TestUnitTest++.cpp ****     CHECK(p);
 493              		.loc 4 20 0
 494 0184 488B45B8 		movq	-72(%rbp), %rax
 495 0188 4889C7   		movq	%rax, %rdi
 496 018b E8000000 		call	_ZN8UnitTest5CheckIPvEEbT_
 496      00
 497 0190 83F001   		xorl	$1, %eax
 498 0193 84C0     		testb	%al, %al
 499 0195 7438     		je	.L23
 500              	.LEHB8:
 501              		.loc 4 20 0 is_stmt 0 discriminator 1
 502 0197 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 502      00
 503 019c 488B08   		movq	(%rax), %rcx
 504 019f 488D45C0 		leaq	-64(%rbp), %rax
 505 01a3 BA140000 		movl	$20, %edx
 505      00
 506 01a8 4889CE   		movq	%rcx, %rsi
 507 01ab 4889C7   		movq	%rax, %rdi
 508 01ae E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 508      00
 509              		.loc 4 20 0 discriminator 3
 510 01b3 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 510      00
 511 01b8 488B00   		movq	(%rax), %rax
 512 01bb 488D4DC0 		leaq	-64(%rbp), %rcx
 513 01bf BA000000 		movl	$.LC6, %edx
 513      00
 514 01c4 4889CE   		movq	%rcx, %rsi
 515 01c7 4889C7   		movq	%rax, %rdi
 516 01ca E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 516      00
 517              	.LEHE8:
 518              	.L23:
  21:TestUnitTest++.cpp ****     CHECK(p != 0);
 519              		.loc 4 21 0 is_stmt 1
 520 01cf 48837DB8 		cmpq	$0, -72(%rbp)
 520      00
 521 01d4 0F95C0   		setne	%al
 522 01d7 0FB6C0   		movzbl	%al, %eax
 523 01da 89C7     		movl	%eax, %edi
 524 01dc E8000000 		call	_ZN8UnitTest5CheckIbEEbT_
 524      00
 525 01e1 83F001   		xorl	$1, %eax
 526 01e4 84C0     		testb	%al, %al
 527 01e6 0F84F300 		je	.L22
 527      0000
 528              	.LEHB9:
 529              		.loc 4 21 0 is_stmt 0 discriminator 1
 530 01ec E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 530      00
 531 01f1 488B08   		movq	(%rax), %rcx
 532 01f4 488D45C0 		leaq	-64(%rbp), %rax
 533 01f8 BA150000 		movl	$21, %edx
 533      00
 534 01fd 4889CE   		movq	%rcx, %rsi
 535 0200 4889C7   		movq	%rax, %rdi
 536 0203 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 536      00
 537              		.loc 4 21 0 discriminator 3
 538 0208 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 538      00
 539 020d 488B00   		movq	(%rax), %rax
 540 0210 488D4DC0 		leaq	-64(%rbp), %rcx
 541 0214 BA000000 		movl	$.LC7, %edx
 541      00
 542 0219 4889CE   		movq	%rcx, %rsi
 543 021c 4889C7   		movq	%rax, %rdi
 544 021f E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 544      00
 545              	.LEHE9:
 546 0224 E9B60000 		jmp	.L22
 546      00
 547              	.L31:
 548 0229 4889C3   		movq	%rax, %rbx
  20:TestUnitTest++.cpp ****     CHECK(p);
 549              		.loc 4 20 0 is_stmt 1
 550 022c E8000000 		call	__cxa_end_catch
 550      00
 551 0231 4889D8   		movq	%rbx, %rax
 552 0234 4889C7   		movq	%rax, %rdi
 553              	.LEHB10:
 554 0237 E8000000 		call	_Unwind_Resume
 554      00
 555              	.LEHE10:
 556              	.L30:
 557 023c 4889C7   		movq	%rax, %rdi
 558 023f E8000000 		call	__cxa_begin_catch
 558      00
 559              	.LEHB11:
 560 0244 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 560      00
 561 0249 488B08   		movq	(%rax), %rcx
 562 024c 488D45C0 		leaq	-64(%rbp), %rax
 563 0250 BA140000 		movl	$20, %edx
 563      00
 564 0255 4889CE   		movq	%rcx, %rsi
 565 0258 4889C7   		movq	%rax, %rdi
 566 025b E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 566      00
  20:TestUnitTest++.cpp ****     CHECK(p);
 567              		.loc 4 20 0 is_stmt 0 discriminator 11
 568 0260 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 568      00
 569 0265 488B00   		movq	(%rax), %rax
 570 0268 488D4DC0 		leaq	-64(%rbp), %rcx
 571 026c BA000000 		movl	$.LC8, %edx
 571      00
 572 0271 4889CE   		movq	%rcx, %rsi
 573 0274 4889C7   		movq	%rax, %rdi
 574 0277 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 574      00
 575              	.LEHE11:
 576              	.LEHB12:
  20:TestUnitTest++.cpp ****     CHECK(p);
 577              		.loc 4 20 0 discriminator 15
 578 027c E8000000 		call	__cxa_end_catch
 578      00
 579              	.LEHE12:
 580 0281 E949FFFF 		jmp	.L23
 580      FF
 581              	.L33:
 582 0286 4889C3   		movq	%rax, %rbx
 583              		.loc 4 21 0 is_stmt 1
 584 0289 E8000000 		call	__cxa_end_catch
 584      00
 585 028e 4889D8   		movq	%rbx, %rax
 586 0291 4889C7   		movq	%rax, %rdi
 587              	.LEHB13:
 588 0294 E8000000 		call	_Unwind_Resume
 588      00
 589              	.LEHE13:
 590              	.L32:
 591 0299 4889C7   		movq	%rax, %rdi
 592 029c E8000000 		call	__cxa_begin_catch
 592      00
 593              	.LEHB14:
 594 02a1 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 594      00
 595 02a6 488B08   		movq	(%rax), %rcx
 596 02a9 488D45C0 		leaq	-64(%rbp), %rax
 597 02ad BA150000 		movl	$21, %edx
 597      00
 598 02b2 4889CE   		movq	%rcx, %rsi
 599 02b5 4889C7   		movq	%rax, %rdi
 600 02b8 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 600      00
 601              		.loc 4 21 0 is_stmt 0 discriminator 11
 602 02bd E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 602      00
 603 02c2 488B00   		movq	(%rax), %rax
 604 02c5 488D4DC0 		leaq	-64(%rbp), %rcx
 605 02c9 BA000000 		movl	$.LC9, %edx
 605      00
 606 02ce 4889CE   		movq	%rcx, %rsi
 607 02d1 4889C7   		movq	%rax, %rdi
 608 02d4 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 608      00
 609              	.LEHE14:
 610              	.LEHB15:
 611              		.loc 4 21 0 discriminator 15
 612 02d9 E8000000 		call	__cxa_end_catch
 612      00
 613              	.LEHE15:
 614              	.LBE9:
  22:TestUnitTest++.cpp **** }
 615              		.loc 4 22 0 is_stmt 1 discriminator 15
 616 02de 90       		nop
 617              	.L22:
 618              		.loc 4 22 0 is_stmt 0
 619 02df 488B45E8 		movq	-24(%rbp), %rax
 620 02e3 64483304 		xorq	%fs:40, %rax
 620      25280000 
 620      00
 621 02ec 7405     		je	.L29
 622 02ee E8000000 		call	__stack_chk_fail
 622      00
 623              	.L29:
 624 02f3 4883C458 		addq	$88, %rsp
 625 02f7 5B       		popq	%rbx
 626 02f8 5D       		popq	%rbp
 627              		.cfi_def_cfa 7, 8
 628 02f9 C3       		ret
 629              		.cfi_endproc
 630              	.LFE1349:
 631              		.section	.gcc_except_table
 632              		.align 4
 633              	.LLSDA1349:
 634 0020 FF       		.byte	0xff
 635 0021 03       		.byte	0x3
 636 0022 35       		.uleb128 .LLSDATT1349-.LLSDATTD1349
 637              	.LLSDATTD1349:
 638 0023 01       		.byte	0x1
 639 0024 2B       		.uleb128 .LLSDACSE1349-.LLSDACSB1349
 640              	.LLSDACSB1349:
 641 0025 37       		.uleb128 .LEHB8-.LFB1349
 642 0026 38       		.uleb128 .LEHE8-.LEHB8
 643 0027 DC01     		.uleb128 .L30-.LFB1349
 644 0029 01       		.uleb128 0x1
 645 002a 8C01     		.uleb128 .LEHB9-.LFB1349
 646 002c 38       		.uleb128 .LEHE9-.LEHB9
 647 002d B902     		.uleb128 .L32-.LFB1349
 648 002f 01       		.uleb128 0x1
 649 0030 D701     		.uleb128 .LEHB10-.LFB1349
 650 0032 05       		.uleb128 .LEHE10-.LEHB10
 651 0033 00       		.uleb128 0
 652 0034 00       		.uleb128 0
 653 0035 E401     		.uleb128 .LEHB11-.LFB1349
 654 0037 38       		.uleb128 .LEHE11-.LEHB11
 655 0038 C901     		.uleb128 .L31-.LFB1349
 656 003a 00       		.uleb128 0
 657 003b 9C02     		.uleb128 .LEHB12-.LFB1349
 658 003d 05       		.uleb128 .LEHE12-.LEHB12
 659 003e 00       		.uleb128 0
 660 003f 00       		.uleb128 0
 661 0040 B402     		.uleb128 .LEHB13-.LFB1349
 662 0042 05       		.uleb128 .LEHE13-.LEHB13
 663 0043 00       		.uleb128 0
 664 0044 00       		.uleb128 0
 665 0045 C102     		.uleb128 .LEHB14-.LFB1349
 666 0047 38       		.uleb128 .LEHE14-.LEHB14
 667 0048 A602     		.uleb128 .L33-.LFB1349
 668 004a 00       		.uleb128 0
 669 004b F902     		.uleb128 .LEHB15-.LFB1349
 670 004d 05       		.uleb128 .LEHE15-.LEHB15
 671 004e 00       		.uleb128 0
 672 004f 00       		.uleb128 0
 673              	.LLSDACSE1349:
 674 0050 01       		.byte	0x1
 675 0051 00       		.byte	0
 676 0052 0000     		.align 4
 677 0054 00000000 		.long	0
 678              	
 679              	.LLSDATT1349:
 680              		.text
 682              		.section	.rodata
 683              	.LC10:
 684 00bd 56616C69 		.string	"ValidCheckEqualSucceeds"
 684      64436865 
 684      636B4571 
 684      75616C53 
 684      75636365 
 685              		.text
 686              		.align 2
 688              	_ZN12_GLOBAL__N_127TestValidCheckEqualSucceedsC2Ev:
 689              	.LFB1351:
  23:TestUnitTest++.cpp **** 
  24:TestUnitTest++.cpp **** TEST(ValidCheckEqualSucceeds)
 690              		.loc 4 24 0 is_stmt 1
 691              		.cfi_startproc
 692 02fa 55       		pushq	%rbp
 693              		.cfi_def_cfa_offset 16
 694              		.cfi_offset 6, -16
 695 02fb 4889E5   		movq	%rsp, %rbp
 696              		.cfi_def_cfa_register 6
 697 02fe 4883EC10 		subq	$16, %rsp
 698 0302 48897DF8 		movq	%rdi, -8(%rbp)
 699              	.LBB10:
 700              		.loc 4 24 0
 701 0306 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 701      00
 702 030b 4889C2   		movq	%rax, %rdx
 703 030e 488B45F8 		movq	-8(%rbp), %rax
 704 0312 41B81800 		movl	$24, %r8d
 704      0000
 705 0318 B9000000 		movl	$.LC1, %ecx
 705      00
 706 031d BE000000 		movl	$.LC10, %esi
 706      00
 707 0322 4889C7   		movq	%rax, %rdi
 708 0325 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 708      00
 709 032a 488B45F8 		movq	-8(%rbp), %rax
 710 032e 48C70000 		movq	$_ZTVN12_GLOBAL__N_127TestValidCheckEqualSucceedsE+16, (%rax)
 710      000000
 711              	.LBE10:
 712 0335 C9       		leave
 713              		.cfi_def_cfa 7, 8
 714 0336 C3       		ret
 715              		.cfi_endproc
 716              	.LFE1351:
 718              		.local	_ZN12_GLOBAL__N_135testValidCheckEqualSucceedsInstanceE
 719              		.comm	_ZN12_GLOBAL__N_135testValidCheckEqualSucceedsInstanceE,56,32
 720              		.local	_ZN12_GLOBAL__N_128adderValidCheckEqualSucceedsE
 721              		.comm	_ZN12_GLOBAL__N_128adderValidCheckEqualSucceedsE,1,1
 722              		.section	.rodata
 723 00d5 000000   		.align 8
 724              	.LC11:
 725 00d8 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(x, y)"
 725      6E646C65 
 725      64206578 
 725      63657074 
 725      696F6E20 
 726              		.text
 727 0337 90       		.align 2
 729              	_ZNK12_GLOBAL__N_127TestValidCheckEqualSucceeds7RunImplEv:
 730              	.LFB1353:
  25:TestUnitTest++.cpp **** {
 731              		.loc 4 25 0
 732              		.cfi_startproc
 733              		.cfi_personality 0x3,__gxx_personality_v0
 734              		.cfi_lsda 0x3,.LLSDA1353
 735 0338 55       		pushq	%rbp
 736              		.cfi_def_cfa_offset 16
 737              		.cfi_offset 6, -16
 738 0339 4889E5   		movq	%rsp, %rbp
 739              		.cfi_def_cfa_register 6
 740 033c 53       		pushq	%rbx
 741 033d 4883EC58 		subq	$88, %rsp
 742              		.cfi_offset 3, -24
 743 0341 48897DA8 		movq	%rdi, -88(%rbp)
 744              		.loc 4 25 0
 745 0345 64488B04 		movq	%fs:40, %rax
 745      25280000 
 745      00
 746 034e 488945E8 		movq	%rax, -24(%rbp)
 747 0352 31C0     		xorl	%eax, %eax
 748              	.LBB11:
  26:TestUnitTest++.cpp ****     int const x = 3;
 749              		.loc 4 26 0
 750 0354 C745B803 		movl	$3, -72(%rbp)
 750      000000
  27:TestUnitTest++.cpp ****     int const y = 3;
 751              		.loc 4 27 0
 752 035b C745BC03 		movl	$3, -68(%rbp)
 752      000000
 753              	.LEHB16:
  28:TestUnitTest++.cpp ****     CHECK_EQUAL(x, y);
 754              		.loc 4 28 0
 755 0362 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 755      00
 756 0367 488B08   		movq	(%rax), %rcx
 757 036a 488D45C0 		leaq	-64(%rbp), %rax
 758 036e BA1C0000 		movl	$28, %edx
 758      00
 759 0373 4889CE   		movq	%rcx, %rsi
 760 0376 4889C7   		movq	%rax, %rdi
 761 0379 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 761      00
 762              		.loc 4 28 0 is_stmt 0 discriminator 2
 763 037e E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 763      00
 764 0383 488B00   		movq	(%rax), %rax
 765 0386 488D4DC0 		leaq	-64(%rbp), %rcx
 766 038a 488D55BC 		leaq	-68(%rbp), %rdx
 767 038e 488D75B8 		leaq	-72(%rbp), %rsi
 768 0392 4889C7   		movq	%rax, %rdi
 769 0395 E8000000 		call	_ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 769      00
 770              	.LEHE16:
 771              	.LBE11:
  29:TestUnitTest++.cpp **** }
 772              		.loc 4 29 0 is_stmt 1
 773 039a EB58     		jmp	.L42
 774              	.L41:
 775 039c 4889C3   		movq	%rax, %rbx
 776              	.LBB12:
  28:TestUnitTest++.cpp ****     CHECK_EQUAL(x, y);
 777              		.loc 4 28 0
 778 039f E8000000 		call	__cxa_end_catch
 778      00
 779 03a4 4889D8   		movq	%rbx, %rax
 780 03a7 4889C7   		movq	%rax, %rdi
 781              	.LEHB17:
 782 03aa E8000000 		call	_Unwind_Resume
 782      00
 783              	.LEHE17:
 784              	.L40:
 785 03af 4889C7   		movq	%rax, %rdi
 786 03b2 E8000000 		call	__cxa_begin_catch
 786      00
 787              	.LEHB18:
 788 03b7 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 788      00
 789 03bc 488B08   		movq	(%rax), %rcx
 790 03bf 488D45C0 		leaq	-64(%rbp), %rax
 791 03c3 BA1C0000 		movl	$28, %edx
 791      00
 792 03c8 4889CE   		movq	%rcx, %rsi
 793 03cb 4889C7   		movq	%rax, %rdi
 794 03ce E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 794      00
  28:TestUnitTest++.cpp ****     CHECK_EQUAL(x, y);
 795              		.loc 4 28 0 is_stmt 0 discriminator 10
 796 03d3 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 796      00
 797 03d8 488B00   		movq	(%rax), %rax
 798 03db 488D4DC0 		leaq	-64(%rbp), %rcx
 799 03df BA000000 		movl	$.LC11, %edx
 799      00
 800 03e4 4889CE   		movq	%rcx, %rsi
 801 03e7 4889C7   		movq	%rax, %rdi
 802 03ea E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 802      00
 803              	.LEHE18:
 804              	.LEHB19:
  28:TestUnitTest++.cpp ****     CHECK_EQUAL(x, y);
 805              		.loc 4 28 0 discriminator 14
 806 03ef E8000000 		call	__cxa_end_catch
 806      00
 807              	.LEHE19:
 808              	.L42:
 809              	.LBE12:
 810              		.loc 4 29 0 is_stmt 1
 811 03f4 90       		nop
 812 03f5 488B45E8 		movq	-24(%rbp), %rax
 813 03f9 64483304 		xorq	%fs:40, %rax
 813      25280000 
 813      00
 814 0402 7405     		je	.L39
 815 0404 E8000000 		call	__stack_chk_fail
 815      00
 816              	.L39:
 817 0409 4883C458 		addq	$88, %rsp
 818 040d 5B       		popq	%rbx
 819 040e 5D       		popq	%rbp
 820              		.cfi_def_cfa 7, 8
 821 040f C3       		ret
 822              		.cfi_endproc
 823              	.LFE1353:
 824              		.section	.gcc_except_table
 825              		.align 4
 826              	.LLSDA1353:
 827 0058 FF       		.byte	0xff
 828 0059 03       		.byte	0x3
 829 005a 19       		.uleb128 .LLSDATT1353-.LLSDATTD1353
 830              	.LLSDATTD1353:
 831 005b 01       		.byte	0x1
 832 005c 11       		.uleb128 .LLSDACSE1353-.LLSDACSB1353
 833              	.LLSDACSB1353:
 834 005d 2A       		.uleb128 .LEHB16-.LFB1353
 835 005e 38       		.uleb128 .LEHE16-.LEHB16
 836 005f 77       		.uleb128 .L40-.LFB1353
 837 0060 01       		.uleb128 0x1
 838 0061 72       		.uleb128 .LEHB17-.LFB1353
 839 0062 05       		.uleb128 .LEHE17-.LEHB17
 840 0063 00       		.uleb128 0
 841 0064 00       		.uleb128 0
 842 0065 7F       		.uleb128 .LEHB18-.LFB1353
 843 0066 38       		.uleb128 .LEHE18-.LEHB18
 844 0067 64       		.uleb128 .L41-.LFB1353
 845 0068 00       		.uleb128 0
 846 0069 B701     		.uleb128 .LEHB19-.LFB1353
 847 006b 05       		.uleb128 .LEHE19-.LEHB19
 848 006c 00       		.uleb128 0
 849 006d 00       		.uleb128 0
 850              	.LLSDACSE1353:
 851 006e 01       		.byte	0x1
 852 006f 00       		.byte	0
 853              		.align 4
 854 0070 00000000 		.long	0
 855              	
 856              	.LLSDATT1353:
 857              		.text
 859              		.section	.rodata
 860              	.LC12:
 861 0101 43686563 		.string	"CheckEqualWorksWithPointers"
 861      6B457175 
 861      616C576F 
 861      726B7357 
 861      69746850 
 862              		.text
 863              		.align 2
 865              	_ZN12_GLOBAL__N_131TestCheckEqualWorksWithPointersC2Ev:
 866              	.LFB1355:
  30:TestUnitTest++.cpp **** 
  31:TestUnitTest++.cpp **** TEST(CheckEqualWorksWithPointers)
 867              		.loc 4 31 0
 868              		.cfi_startproc
 869 0410 55       		pushq	%rbp
 870              		.cfi_def_cfa_offset 16
 871              		.cfi_offset 6, -16
 872 0411 4889E5   		movq	%rsp, %rbp
 873              		.cfi_def_cfa_register 6
 874 0414 4883EC10 		subq	$16, %rsp
 875 0418 48897DF8 		movq	%rdi, -8(%rbp)
 876              	.LBB13:
 877              		.loc 4 31 0
 878 041c E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 878      00
 879 0421 4889C2   		movq	%rax, %rdx
 880 0424 488B45F8 		movq	-8(%rbp), %rax
 881 0428 41B81F00 		movl	$31, %r8d
 881      0000
 882 042e B9000000 		movl	$.LC1, %ecx
 882      00
 883 0433 BE000000 		movl	$.LC12, %esi
 883      00
 884 0438 4889C7   		movq	%rax, %rdi
 885 043b E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 885      00
 886 0440 488B45F8 		movq	-8(%rbp), %rax
 887 0444 48C70000 		movq	$_ZTVN12_GLOBAL__N_131TestCheckEqualWorksWithPointersE+16, (%rax)
 887      000000
 888              	.LBE13:
 889 044b C9       		leave
 890              		.cfi_def_cfa 7, 8
 891 044c C3       		ret
 892              		.cfi_endproc
 893              	.LFE1355:
 895              		.local	_ZN12_GLOBAL__N_139testCheckEqualWorksWithPointersInstanceE
 896              		.comm	_ZN12_GLOBAL__N_139testCheckEqualWorksWithPointersInstanceE,56,32
 897              		.local	_ZN12_GLOBAL__N_132adderCheckEqualWorksWithPointersE
 898              		.comm	_ZN12_GLOBAL__N_132adderCheckEqualWorksWithPointersE,1,1
 899              		.section	.rodata
 900 011d 000000   		.align 8
 901              	.LC13:
 902 0120 556E6861 		.string	"Unhandled exception in CHECK_EQUAL((void*)0, p)"
 902      6E646C65 
 902      64206578 
 902      63657074 
 902      696F6E20 
 903              		.text
 904 044d 90       		.align 2
 906              	_ZNK12_GLOBAL__N_131TestCheckEqualWorksWithPointers7RunImplEv:
 907              	.LFB1357:
  32:TestUnitTest++.cpp **** {
 908              		.loc 4 32 0
 909              		.cfi_startproc
 910              		.cfi_personality 0x3,__gxx_personality_v0
 911              		.cfi_lsda 0x3,.LLSDA1357
 912 044e 55       		pushq	%rbp
 913              		.cfi_def_cfa_offset 16
 914              		.cfi_offset 6, -16
 915 044f 4889E5   		movq	%rsp, %rbp
 916              		.cfi_def_cfa_register 6
 917 0452 53       		pushq	%rbx
 918 0453 4883EC58 		subq	$88, %rsp
 919              		.cfi_offset 3, -24
 920 0457 48897DA8 		movq	%rdi, -88(%rbp)
 921              		.loc 4 32 0
 922 045b 64488B04 		movq	%fs:40, %rax
 922      25280000 
 922      00
 923 0464 488945E8 		movq	%rax, -24(%rbp)
 924 0468 31C0     		xorl	%eax, %eax
 925              	.LBB14:
  33:TestUnitTest++.cpp ****     void* p = (void *)0;
 926              		.loc 4 33 0
 927 046a 48C745B0 		movq	$0, -80(%rbp)
 927      00000000 
 928              	.LEHB20:
  34:TestUnitTest++.cpp ****     CHECK_EQUAL((void*)0, p);
 929              		.loc 4 34 0
 930 0472 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 930      00
 931 0477 488B08   		movq	(%rax), %rcx
 932 047a 488D45C0 		leaq	-64(%rbp), %rax
 933 047e BA220000 		movl	$34, %edx
 933      00
 934 0483 4889CE   		movq	%rcx, %rsi
 935 0486 4889C7   		movq	%rax, %rdi
 936 0489 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 936      00
 937              		.loc 4 34 0 is_stmt 0 discriminator 2
 938 048e 48C745B8 		movq	$0, -72(%rbp)
 938      00000000 
 939 0496 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 939      00
 940 049b 488B00   		movq	(%rax), %rax
 941 049e 488D4DC0 		leaq	-64(%rbp), %rcx
 942 04a2 488D55B0 		leaq	-80(%rbp), %rdx
 943 04a6 488D75B8 		leaq	-72(%rbp), %rsi
 944 04aa 4889C7   		movq	%rax, %rdi
 945 04ad E8000000 		call	_ZN8UnitTest10CheckEqualIPvS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 945      00
 946              	.LEHE20:
 947              	.LBE14:
  35:TestUnitTest++.cpp **** }
 948              		.loc 4 35 0 is_stmt 1
 949 04b2 EB58     		jmp	.L51
 950              	.L50:
 951 04b4 4889C3   		movq	%rax, %rbx
 952              	.LBB15:
  34:TestUnitTest++.cpp ****     CHECK_EQUAL((void*)0, p);
 953              		.loc 4 34 0
 954 04b7 E8000000 		call	__cxa_end_catch
 954      00
 955 04bc 4889D8   		movq	%rbx, %rax
 956 04bf 4889C7   		movq	%rax, %rdi
 957              	.LEHB21:
 958 04c2 E8000000 		call	_Unwind_Resume
 958      00
 959              	.LEHE21:
 960              	.L49:
 961 04c7 4889C7   		movq	%rax, %rdi
 962 04ca E8000000 		call	__cxa_begin_catch
 962      00
 963              	.LEHB22:
 964 04cf E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 964      00
 965 04d4 488B08   		movq	(%rax), %rcx
 966 04d7 488D45C0 		leaq	-64(%rbp), %rax
 967 04db BA220000 		movl	$34, %edx
 967      00
 968 04e0 4889CE   		movq	%rcx, %rsi
 969 04e3 4889C7   		movq	%rax, %rdi
 970 04e6 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 970      00
  34:TestUnitTest++.cpp ****     CHECK_EQUAL((void*)0, p);
 971              		.loc 4 34 0 is_stmt 0 discriminator 10
 972 04eb E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 972      00
 973 04f0 488B00   		movq	(%rax), %rax
 974 04f3 488D4DC0 		leaq	-64(%rbp), %rcx
 975 04f7 BA000000 		movl	$.LC13, %edx
 975      00
 976 04fc 4889CE   		movq	%rcx, %rsi
 977 04ff 4889C7   		movq	%rax, %rdi
 978 0502 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 978      00
 979              	.LEHE22:
 980              	.LEHB23:
  34:TestUnitTest++.cpp ****     CHECK_EQUAL((void*)0, p);
 981              		.loc 4 34 0 discriminator 14
 982 0507 E8000000 		call	__cxa_end_catch
 982      00
 983              	.LEHE23:
 984              	.L51:
 985              	.LBE15:
 986              		.loc 4 35 0 is_stmt 1
 987 050c 90       		nop
 988 050d 488B45E8 		movq	-24(%rbp), %rax
 989 0511 64483304 		xorq	%fs:40, %rax
 989      25280000 
 989      00
 990 051a 7405     		je	.L48
 991 051c E8000000 		call	__stack_chk_fail
 991      00
 992              	.L48:
 993 0521 4883C458 		addq	$88, %rsp
 994 0525 5B       		popq	%rbx
 995 0526 5D       		popq	%rbp
 996              		.cfi_def_cfa 7, 8
 997 0527 C3       		ret
 998              		.cfi_endproc
 999              	.LFE1357:
 1000              		.section	.gcc_except_table
 1001              		.align 4
 1002              	.LLSDA1357:
 1003 0074 FF       		.byte	0xff
 1004 0075 03       		.byte	0x3
 1005 0076 1D       		.uleb128 .LLSDATT1357-.LLSDATTD1357
 1006              	.LLSDATTD1357:
 1007 0077 01       		.byte	0x1
 1008 0078 12       		.uleb128 .LLSDACSE1357-.LLSDACSB1357
 1009              	.LLSDACSB1357:
 1010 0079 24       		.uleb128 .LEHB20-.LFB1357
 1011 007a 40       		.uleb128 .LEHE20-.LEHB20
 1012 007b 79       		.uleb128 .L49-.LFB1357
 1013 007c 01       		.uleb128 0x1
 1014 007d 74       		.uleb128 .LEHB21-.LFB1357
 1015 007e 05       		.uleb128 .LEHE21-.LEHB21
 1016 007f 00       		.uleb128 0
 1017 0080 00       		.uleb128 0
 1018 0081 8101     		.uleb128 .LEHB22-.LFB1357
 1019 0083 38       		.uleb128 .LEHE22-.LEHB22
 1020 0084 66       		.uleb128 .L50-.LFB1357
 1021 0085 00       		.uleb128 0
 1022 0086 B901     		.uleb128 .LEHB23-.LFB1357
 1023 0088 05       		.uleb128 .LEHE23-.LEHB23
 1024 0089 00       		.uleb128 0
 1025 008a 00       		.uleb128 0
 1026              	.LLSDACSE1357:
 1027 008b 01       		.byte	0x1
 1028 008c 00       		.byte	0
 1029 008d 000000   		.align 4
 1030 0090 00000000 		.long	0
 1031              	
 1032              	.LLSDATT1357:
 1033              		.text
 1035              		.section	.rodata
 1036              	.LC14:
 1037 0150 56616C69 		.string	"ValidCheckCloseSucceeds"
 1037      64436865 
 1037      636B436C 
 1037      6F736553 
 1037      75636365 
 1038              		.text
 1039              		.align 2
 1041              	_ZN12_GLOBAL__N_127TestValidCheckCloseSucceedsC2Ev:
 1042              	.LFB1359:
  36:TestUnitTest++.cpp **** 
  37:TestUnitTest++.cpp **** TEST(ValidCheckCloseSucceeds)
 1043              		.loc 4 37 0
 1044              		.cfi_startproc
 1045 0528 55       		pushq	%rbp
 1046              		.cfi_def_cfa_offset 16
 1047              		.cfi_offset 6, -16
 1048 0529 4889E5   		movq	%rsp, %rbp
 1049              		.cfi_def_cfa_register 6
 1050 052c 4883EC10 		subq	$16, %rsp
 1051 0530 48897DF8 		movq	%rdi, -8(%rbp)
 1052              	.LBB16:
 1053              		.loc 4 37 0
 1054 0534 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 1054      00
 1055 0539 4889C2   		movq	%rax, %rdx
 1056 053c 488B45F8 		movq	-8(%rbp), %rax
 1057 0540 41B82500 		movl	$37, %r8d
 1057      0000
 1058 0546 B9000000 		movl	$.LC1, %ecx
 1058      00
 1059 054b BE000000 		movl	$.LC14, %esi
 1059      00
 1060 0550 4889C7   		movq	%rax, %rdi
 1061 0553 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 1061      00
 1062 0558 488B45F8 		movq	-8(%rbp), %rax
 1063 055c 48C70000 		movq	$_ZTVN12_GLOBAL__N_127TestValidCheckCloseSucceedsE+16, (%rax)
 1063      000000
 1064              	.LBE16:
 1065 0563 C9       		leave
 1066              		.cfi_def_cfa 7, 8
 1067 0564 C3       		ret
 1068              		.cfi_endproc
 1069              	.LFE1359:
 1071              		.local	_ZN12_GLOBAL__N_135testValidCheckCloseSucceedsInstanceE
 1072              		.comm	_ZN12_GLOBAL__N_135testValidCheckCloseSucceedsInstanceE,56,32
 1073              		.local	_ZN12_GLOBAL__N_128adderValidCheckCloseSucceedsE
 1074              		.comm	_ZN12_GLOBAL__N_128adderValidCheckCloseSucceedsE,1,1
 1075              		.section	.rodata
 1076              		.align 8
 1077              	.LC18:
 1078 0168 556E6861 		.string	"Unhandled exception in CHECK_CLOSE(2.0f, 2.001f)"
 1078      6E646C65 
 1078      64206578 
 1078      63657074 
 1078      696F6E20 
 1079 0199 00000000 		.align 8
 1079      000000
 1080              	.LC19:
 1081 01a0 556E6861 		.string	"Unhandled exception in CHECK_CLOSE(2.001f, 2.0f)"
 1081      6E646C65 
 1081      64206578 
 1081      63657074 
 1081      696F6E20 
 1082              		.text
 1083 0565 90       		.align 2
 1085              	_ZNK12_GLOBAL__N_127TestValidCheckCloseSucceeds7RunImplEv:
 1086              	.LFB1361:
  38:TestUnitTest++.cpp **** {
 1087              		.loc 4 38 0
 1088              		.cfi_startproc
 1089              		.cfi_personality 0x3,__gxx_personality_v0
 1090              		.cfi_lsda 0x3,.LLSDA1361
 1091 0566 55       		pushq	%rbp
 1092              		.cfi_def_cfa_offset 16
 1093              		.cfi_offset 6, -16
 1094 0567 4889E5   		movq	%rsp, %rbp
 1095              		.cfi_def_cfa_register 6
 1096 056a 53       		pushq	%rbx
 1097 056b 4883EC58 		subq	$88, %rsp
 1098              		.cfi_offset 3, -24
 1099 056f 48897DA8 		movq	%rdi, -88(%rbp)
 1100              		.loc 4 38 0
 1101 0573 64488B04 		movq	%fs:40, %rax
 1101      25280000 
 1101      00
 1102 057c 488945E8 		movq	%rax, -24(%rbp)
 1103 0580 31C0     		xorl	%eax, %eax
 1104              	.LEHB24:
  39:TestUnitTest++.cpp ****     CHECK_CLOSE(2.0f, 2.001f, 0.01f);
 1105              		.loc 4 39 0
 1106 0582 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1106      00
 1107 0587 488B08   		movq	(%rax), %rcx
 1108 058a 488D45C0 		leaq	-64(%rbp), %rax
 1109 058e BA270000 		movl	$39, %edx
 1109      00
 1110 0593 4889CE   		movq	%rcx, %rsi
 1111 0596 4889C7   		movq	%rax, %rdi
 1112 0599 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1112      00
 1113              		.loc 4 39 0 is_stmt 0 discriminator 2
 1114 059e 8B050000 		movl	.LC15(%rip), %eax
 1114      0000
 1115 05a4 8945BC   		movl	%eax, -68(%rbp)
 1116 05a7 8B050000 		movl	.LC16(%rip), %eax
 1116      0000
 1117 05ad 8945B8   		movl	%eax, -72(%rbp)
 1118 05b0 8B050000 		movl	.LC17(%rip), %eax
 1118      0000
 1119 05b6 8945B4   		movl	%eax, -76(%rbp)
 1120 05b9 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1120      00
 1121 05be 488B00   		movq	(%rax), %rax
 1122 05c1 488D7DC0 		leaq	-64(%rbp), %rdi
 1123 05c5 488D4DBC 		leaq	-68(%rbp), %rcx
 1124 05c9 488D55B8 		leaq	-72(%rbp), %rdx
 1125 05cd 488D75B4 		leaq	-76(%rbp), %rsi
 1126 05d1 4989F8   		movq	%rdi, %r8
 1127 05d4 4889C7   		movq	%rax, %rdi
 1128 05d7 E8000000 		call	_ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE
 1128      00
 1129              	.LEHE24:
 1130              	.L56:
 1131              	.LEHB25:
  40:TestUnitTest++.cpp ****     CHECK_CLOSE(2.001f, 2.0f, 0.01f);
 1132              		.loc 4 40 0 is_stmt 1
 1133 05dc E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1133      00
 1134 05e1 488B08   		movq	(%rax), %rcx
 1135 05e4 488D45C0 		leaq	-64(%rbp), %rax
 1136 05e8 BA280000 		movl	$40, %edx
 1136      00
 1137 05ed 4889CE   		movq	%rcx, %rsi
 1138 05f0 4889C7   		movq	%rax, %rdi
 1139 05f3 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1139      00
 1140              		.loc 4 40 0 is_stmt 0 discriminator 2
 1141 05f8 8B050000 		movl	.LC15(%rip), %eax
 1141      0000
 1142 05fe 8945BC   		movl	%eax, -68(%rbp)
 1143 0601 8B050000 		movl	.LC17(%rip), %eax
 1143      0000
 1144 0607 8945B8   		movl	%eax, -72(%rbp)
 1145 060a 8B050000 		movl	.LC16(%rip), %eax
 1145      0000
 1146 0610 8945B4   		movl	%eax, -76(%rbp)
 1147 0613 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1147      00
 1148 0618 488B00   		movq	(%rax), %rax
 1149 061b 488D7DC0 		leaq	-64(%rbp), %rdi
 1150 061f 488D4DBC 		leaq	-68(%rbp), %rcx
 1151 0623 488D55B8 		leaq	-72(%rbp), %rdx
 1152 0627 488D75B4 		leaq	-76(%rbp), %rsi
 1153 062b 4989F8   		movq	%rdi, %r8
 1154 062e 4889C7   		movq	%rax, %rdi
 1155 0631 E8000000 		call	_ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE
 1155      00
 1156              	.LEHE25:
  41:TestUnitTest++.cpp **** }
 1157              		.loc 4 41 0 is_stmt 1
 1158 0636 E9B50000 		jmp	.L65
 1158      00
 1159              	.L62:
 1160 063b 4889C3   		movq	%rax, %rbx
  39:TestUnitTest++.cpp ****     CHECK_CLOSE(2.0f, 2.001f, 0.01f);
 1161              		.loc 4 39 0
 1162 063e E8000000 		call	__cxa_end_catch
 1162      00
 1163 0643 4889D8   		movq	%rbx, %rax
 1164 0646 4889C7   		movq	%rax, %rdi
 1165              	.LEHB26:
 1166 0649 E8000000 		call	_Unwind_Resume
 1166      00
 1167              	.LEHE26:
 1168              	.L61:
 1169 064e 4889C7   		movq	%rax, %rdi
 1170 0651 E8000000 		call	__cxa_begin_catch
 1170      00
 1171              	.LEHB27:
 1172 0656 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1172      00
 1173 065b 488B08   		movq	(%rax), %rcx
 1174 065e 488D45C0 		leaq	-64(%rbp), %rax
 1175 0662 BA270000 		movl	$39, %edx
 1175      00
 1176 0667 4889CE   		movq	%rcx, %rsi
 1177 066a 4889C7   		movq	%rax, %rdi
 1178 066d E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1178      00
  39:TestUnitTest++.cpp ****     CHECK_CLOSE(2.0f, 2.001f, 0.01f);
 1179              		.loc 4 39 0 is_stmt 0 discriminator 10
 1180 0672 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1180      00
 1181 0677 488B00   		movq	(%rax), %rax
 1182 067a 488D4DC0 		leaq	-64(%rbp), %rcx
 1183 067e BA000000 		movl	$.LC18, %edx
 1183      00
 1184 0683 4889CE   		movq	%rcx, %rsi
 1185 0686 4889C7   		movq	%rax, %rdi
 1186 0689 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1186      00
 1187              	.LEHE27:
 1188              	.LEHB28:
  39:TestUnitTest++.cpp ****     CHECK_CLOSE(2.0f, 2.001f, 0.01f);
 1189              		.loc 4 39 0 discriminator 14
 1190 068e E8000000 		call	__cxa_end_catch
 1190      00
 1191              	.LEHE28:
 1192 0693 E944FFFF 		jmp	.L56
 1192      FF
 1193              	.L64:
 1194 0698 4889C3   		movq	%rax, %rbx
  40:TestUnitTest++.cpp ****     CHECK_CLOSE(2.001f, 2.0f, 0.01f);
 1195              		.loc 4 40 0 is_stmt 1
 1196 069b E8000000 		call	__cxa_end_catch
 1196      00
 1197 06a0 4889D8   		movq	%rbx, %rax
 1198 06a3 4889C7   		movq	%rax, %rdi
 1199              	.LEHB29:
 1200 06a6 E8000000 		call	_Unwind_Resume
 1200      00
 1201              	.LEHE29:
 1202              	.L63:
 1203 06ab 4889C7   		movq	%rax, %rdi
 1204 06ae E8000000 		call	__cxa_begin_catch
 1204      00
 1205              	.LEHB30:
 1206 06b3 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1206      00
 1207 06b8 488B08   		movq	(%rax), %rcx
 1208 06bb 488D45C0 		leaq	-64(%rbp), %rax
 1209 06bf BA280000 		movl	$40, %edx
 1209      00
 1210 06c4 4889CE   		movq	%rcx, %rsi
 1211 06c7 4889C7   		movq	%rax, %rdi
 1212 06ca E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1212      00
  40:TestUnitTest++.cpp ****     CHECK_CLOSE(2.001f, 2.0f, 0.01f);
 1213              		.loc 4 40 0 is_stmt 0 discriminator 10
 1214 06cf E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1214      00
 1215 06d4 488B00   		movq	(%rax), %rax
 1216 06d7 488D4DC0 		leaq	-64(%rbp), %rcx
 1217 06db BA000000 		movl	$.LC19, %edx
 1217      00
 1218 06e0 4889CE   		movq	%rcx, %rsi
 1219 06e3 4889C7   		movq	%rax, %rdi
 1220 06e6 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1220      00
 1221              	.LEHE30:
 1222              	.LEHB31:
  40:TestUnitTest++.cpp ****     CHECK_CLOSE(2.001f, 2.0f, 0.01f);
 1223              		.loc 4 40 0 discriminator 14
 1224 06eb E8000000 		call	__cxa_end_catch
 1224      00
 1225              	.LEHE31:
 1226              	.L65:
 1227              		.loc 4 41 0 is_stmt 1
 1228 06f0 90       		nop
 1229 06f1 488B45E8 		movq	-24(%rbp), %rax
 1230 06f5 64483304 		xorq	%fs:40, %rax
 1230      25280000 
 1230      00
 1231 06fe 7405     		je	.L60
 1232 0700 E8000000 		call	__stack_chk_fail
 1232      00
 1233              	.L60:
 1234 0705 4883C458 		addq	$88, %rsp
 1235 0709 5B       		popq	%rbx
 1236 070a 5D       		popq	%rbp
 1237              		.cfi_def_cfa 7, 8
 1238 070b C3       		ret
 1239              		.cfi_endproc
 1240              	.LFE1361:
 1241              		.section	.gcc_except_table
 1242              		.align 4
 1243              	.LLSDA1361:
 1244 0094 FF       		.byte	0xff
 1245 0095 03       		.byte	0x3
 1246 0096 35       		.uleb128 .LLSDATT1361-.LLSDATTD1361
 1247              	.LLSDATTD1361:
 1248 0097 01       		.byte	0x1
 1249 0098 2A       		.uleb128 .LLSDACSE1361-.LLSDACSB1361
 1250              	.LLSDACSB1361:
 1251 0099 1C       		.uleb128 .LEHB24-.LFB1361
 1252 009a 5A       		.uleb128 .LEHE24-.LEHB24
 1253 009b E801     		.uleb128 .L61-.LFB1361
 1254 009d 01       		.uleb128 0x1
 1255 009e 76       		.uleb128 .LEHB25-.LFB1361
 1256 009f 5A       		.uleb128 .LEHE25-.LEHB25
 1257 00a0 C502     		.uleb128 .L63-.LFB1361
 1258 00a2 01       		.uleb128 0x1
 1259 00a3 E301     		.uleb128 .LEHB26-.LFB1361
 1260 00a5 05       		.uleb128 .LEHE26-.LEHB26
 1261 00a6 00       		.uleb128 0
 1262 00a7 00       		.uleb128 0
 1263 00a8 F001     		.uleb128 .LEHB27-.LFB1361
 1264 00aa 38       		.uleb128 .LEHE27-.LEHB27
 1265 00ab D501     		.uleb128 .L62-.LFB1361
 1266 00ad 00       		.uleb128 0
 1267 00ae A802     		.uleb128 .LEHB28-.LFB1361
 1268 00b0 05       		.uleb128 .LEHE28-.LEHB28
 1269 00b1 00       		.uleb128 0
 1270 00b2 00       		.uleb128 0
 1271 00b3 C002     		.uleb128 .LEHB29-.LFB1361
 1272 00b5 05       		.uleb128 .LEHE29-.LEHB29
 1273 00b6 00       		.uleb128 0
 1274 00b7 00       		.uleb128 0
 1275 00b8 CD02     		.uleb128 .LEHB30-.LFB1361
 1276 00ba 38       		.uleb128 .LEHE30-.LEHB30
 1277 00bb B202     		.uleb128 .L64-.LFB1361
 1278 00bd 00       		.uleb128 0
 1279 00be 8503     		.uleb128 .LEHB31-.LFB1361
 1280 00c0 05       		.uleb128 .LEHE31-.LEHB31
 1281 00c1 00       		.uleb128 0
 1282 00c2 00       		.uleb128 0
 1283              	.LLSDACSE1361:
 1284 00c3 01       		.byte	0x1
 1285 00c4 00       		.byte	0
 1286 00c5 000000   		.align 4
 1287 00c8 00000000 		.long	0
 1288              	
 1289              	.LLSDATT1361:
 1290              		.text
 1292              		.section	.rodata
 1293              	.LC20:
 1294 01d1 41727261 		.string	"ArrayCloseSucceeds"
 1294      79436C6F 
 1294      73655375 
 1294      63636565 
 1294      647300
 1295              		.text
 1296              		.align 2
 1298              	_ZN12_GLOBAL__N_122TestArrayCloseSucceedsC2Ev:
 1299              	.LFB1363:
  42:TestUnitTest++.cpp **** 
  43:TestUnitTest++.cpp **** TEST(ArrayCloseSucceeds)
 1300              		.loc 4 43 0
 1301              		.cfi_startproc
 1302 070c 55       		pushq	%rbp
 1303              		.cfi_def_cfa_offset 16
 1304              		.cfi_offset 6, -16
 1305 070d 4889E5   		movq	%rsp, %rbp
 1306              		.cfi_def_cfa_register 6
 1307 0710 4883EC10 		subq	$16, %rsp
 1308 0714 48897DF8 		movq	%rdi, -8(%rbp)
 1309              	.LBB17:
 1310              		.loc 4 43 0
 1311 0718 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 1311      00
 1312 071d 4889C2   		movq	%rax, %rdx
 1313 0720 488B45F8 		movq	-8(%rbp), %rax
 1314 0724 41B82B00 		movl	$43, %r8d
 1314      0000
 1315 072a B9000000 		movl	$.LC1, %ecx
 1315      00
 1316 072f BE000000 		movl	$.LC20, %esi
 1316      00
 1317 0734 4889C7   		movq	%rax, %rdi
 1318 0737 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 1318      00
 1319 073c 488B45F8 		movq	-8(%rbp), %rax
 1320 0740 48C70000 		movq	$_ZTVN12_GLOBAL__N_122TestArrayCloseSucceedsE+16, (%rax)
 1320      000000
 1321              	.LBE17:
 1322 0747 C9       		leave
 1323              		.cfi_def_cfa 7, 8
 1324 0748 C3       		ret
 1325              		.cfi_endproc
 1326              	.LFE1363:
 1328              		.local	_ZN12_GLOBAL__N_130testArrayCloseSucceedsInstanceE
 1329              		.comm	_ZN12_GLOBAL__N_130testArrayCloseSucceedsInstanceE,56,32
 1330              		.local	_ZN12_GLOBAL__N_123adderArrayCloseSucceedsE
 1331              		.comm	_ZN12_GLOBAL__N_123adderArrayCloseSucceedsE,1,1
 1332              		.section	.rodata
 1333 01e4 00000000 		.align 8
 1334              	.LC25:
 1335 01e8 556E6861 		.string	"Unhandled exception in CHECK_ARRAY_CLOSE(a1, a2)"
 1335      6E646C65 
 1335      64206578 
 1335      63657074 
 1335      696F6E20 
 1336              		.text
 1337 0749 90       		.align 2
 1339              	_ZNK12_GLOBAL__N_122TestArrayCloseSucceeds7RunImplEv:
 1340              	.LFB1365:
  44:TestUnitTest++.cpp **** {
 1341              		.loc 4 44 0
 1342              		.cfi_startproc
 1343              		.cfi_personality 0x3,__gxx_personality_v0
 1344              		.cfi_lsda 0x3,.LLSDA1365
 1345 074a 55       		pushq	%rbp
 1346              		.cfi_def_cfa_offset 16
 1347              		.cfi_offset 6, -16
 1348 074b 4889E5   		movq	%rsp, %rbp
 1349              		.cfi_def_cfa_register 6
 1350 074e 53       		pushq	%rbx
 1351 074f 4883EC78 		subq	$120, %rsp
 1352              		.cfi_offset 3, -24
 1353 0753 48897D88 		movq	%rdi, -120(%rbp)
 1354              		.loc 4 44 0
 1355 0757 64488B04 		movq	%fs:40, %rax
 1355      25280000 
 1355      00
 1356 0760 488945E8 		movq	%rax, -24(%rbp)
 1357 0764 31C0     		xorl	%eax, %eax
 1358              	.LBB18:
  45:TestUnitTest++.cpp ****     float const a1[] = {1, 2, 3};
 1359              		.loc 4 45 0
 1360 0766 8B050000 		movl	.LC21(%rip), %eax
 1360      0000
 1361 076c 8945A0   		movl	%eax, -96(%rbp)
 1362 076f 8B050000 		movl	.LC17(%rip), %eax
 1362      0000
 1363 0775 8945A4   		movl	%eax, -92(%rbp)
 1364 0778 8B050000 		movl	.LC22(%rip), %eax
 1364      0000
 1365 077e 8945A8   		movl	%eax, -88(%rbp)
  46:TestUnitTest++.cpp ****     float const a2[] = {1, 2.01f, 3};
 1366              		.loc 4 46 0
 1367 0781 8B050000 		movl	.LC21(%rip), %eax
 1367      0000
 1368 0787 8945B0   		movl	%eax, -80(%rbp)
 1369 078a 8B050000 		movl	.LC23(%rip), %eax
 1369      0000
 1370 0790 8945B4   		movl	%eax, -76(%rbp)
 1371 0793 8B050000 		movl	.LC22(%rip), %eax
 1371      0000
 1372 0799 8945B8   		movl	%eax, -72(%rbp)
 1373              	.LEHB32:
  47:TestUnitTest++.cpp ****     CHECK_ARRAY_CLOSE(a1, a2, 3, 0.1f);
 1374              		.loc 4 47 0
 1375 079c E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1375      00
 1376 07a1 488B08   		movq	(%rax), %rcx
 1377 07a4 488D45C0 		leaq	-64(%rbp), %rax
 1378 07a8 BA2F0000 		movl	$47, %edx
 1378      00
 1379 07ad 4889CE   		movq	%rcx, %rsi
 1380 07b0 4889C7   		movq	%rax, %rdi
 1381 07b3 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1381      00
 1382              		.loc 4 47 0 is_stmt 0 discriminator 2
 1383 07b8 8B050000 		movl	.LC24(%rip), %eax
 1383      0000
 1384 07be 89459C   		movl	%eax, -100(%rbp)
 1385 07c1 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1385      00
 1386 07c6 488B00   		movq	(%rax), %rax
 1387 07c9 488D7DC0 		leaq	-64(%rbp), %rdi
 1388 07cd 488D4D9C 		leaq	-100(%rbp), %rcx
 1389 07d1 488D55B0 		leaq	-80(%rbp), %rdx
 1390 07d5 488D75A0 		leaq	-96(%rbp), %rsi
 1391 07d9 4989F9   		movq	%rdi, %r9
 1392 07dc 4989C8   		movq	%rcx, %r8
 1393 07df B9030000 		movl	$3, %ecx
 1393      00
 1394 07e4 4889C7   		movq	%rax, %rdi
 1395 07e7 E8000000 		call	_ZN8UnitTest15CheckArrayCloseIA3_fS1_fEEvRNS_11TestResultsERKT_RKT0_iRKT1_RKNS_11TestDetailsE
 1395      00
 1396              	.LEHE32:
 1397              	.LBE18:
  48:TestUnitTest++.cpp **** }
 1398              		.loc 4 48 0 is_stmt 1
 1399 07ec EB58     		jmp	.L74
 1400              	.L73:
 1401 07ee 4889C3   		movq	%rax, %rbx
 1402              	.LBB19:
  47:TestUnitTest++.cpp ****     CHECK_ARRAY_CLOSE(a1, a2, 3, 0.1f);
 1403              		.loc 4 47 0
 1404 07f1 E8000000 		call	__cxa_end_catch
 1404      00
 1405 07f6 4889D8   		movq	%rbx, %rax
 1406 07f9 4889C7   		movq	%rax, %rdi
 1407              	.LEHB33:
 1408 07fc E8000000 		call	_Unwind_Resume
 1408      00
 1409              	.LEHE33:
 1410              	.L72:
 1411 0801 4889C7   		movq	%rax, %rdi
 1412 0804 E8000000 		call	__cxa_begin_catch
 1412      00
 1413              	.LEHB34:
 1414 0809 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1414      00
 1415 080e 488B08   		movq	(%rax), %rcx
 1416 0811 488D45C0 		leaq	-64(%rbp), %rax
 1417 0815 BA2F0000 		movl	$47, %edx
 1417      00
 1418 081a 4889CE   		movq	%rcx, %rsi
 1419 081d 4889C7   		movq	%rax, %rdi
 1420 0820 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1420      00
  47:TestUnitTest++.cpp ****     CHECK_ARRAY_CLOSE(a1, a2, 3, 0.1f);
 1421              		.loc 4 47 0 is_stmt 0 discriminator 10
 1422 0825 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1422      00
 1423 082a 488B00   		movq	(%rax), %rax
 1424 082d 488D4DC0 		leaq	-64(%rbp), %rcx
 1425 0831 BA000000 		movl	$.LC25, %edx
 1425      00
 1426 0836 4889CE   		movq	%rcx, %rsi
 1427 0839 4889C7   		movq	%rax, %rdi
 1428 083c E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1428      00
 1429              	.LEHE34:
 1430              	.LEHB35:
  47:TestUnitTest++.cpp ****     CHECK_ARRAY_CLOSE(a1, a2, 3, 0.1f);
 1431              		.loc 4 47 0 discriminator 14
 1432 0841 E8000000 		call	__cxa_end_catch
 1432      00
 1433              	.LEHE35:
 1434              	.L74:
 1435              	.LBE19:
 1436              		.loc 4 48 0 is_stmt 1
 1437 0846 90       		nop
 1438 0847 488B45E8 		movq	-24(%rbp), %rax
 1439 084b 64483304 		xorq	%fs:40, %rax
 1439      25280000 
 1439      00
 1440 0854 7405     		je	.L71
 1441 0856 E8000000 		call	__stack_chk_fail
 1441      00
 1442              	.L71:
 1443 085b 4883C478 		addq	$120, %rsp
 1444 085f 5B       		popq	%rbx
 1445 0860 5D       		popq	%rbp
 1446              		.cfi_def_cfa 7, 8
 1447 0861 C3       		ret
 1448              		.cfi_endproc
 1449              	.LFE1365:
 1450              		.section	.gcc_except_table
 1451              		.align 4
 1452              	.LLSDA1365:
 1453 00cc FF       		.byte	0xff
 1454 00cd 03       		.byte	0x3
 1455 00ce 1D       		.uleb128 .LLSDATT1365-.LLSDATTD1365
 1456              	.LLSDATTD1365:
 1457 00cf 01       		.byte	0x1
 1458 00d0 15       		.uleb128 .LLSDACSE1365-.LLSDACSB1365
 1459              	.LLSDACSB1365:
 1460 00d1 52       		.uleb128 .LEHB32-.LFB1365
 1461 00d2 50       		.uleb128 .LEHE32-.LEHB32
 1462 00d3 B701     		.uleb128 .L72-.LFB1365
 1463 00d5 01       		.uleb128 0x1
 1464 00d6 B201     		.uleb128 .LEHB33-.LFB1365
 1465 00d8 05       		.uleb128 .LEHE33-.LEHB33
 1466 00d9 00       		.uleb128 0
 1467 00da 00       		.uleb128 0
 1468 00db BF01     		.uleb128 .LEHB34-.LFB1365
 1469 00dd 38       		.uleb128 .LEHE34-.LEHB34
 1470 00de A401     		.uleb128 .L73-.LFB1365
 1471 00e0 00       		.uleb128 0
 1472 00e1 F701     		.uleb128 .LEHB35-.LFB1365
 1473 00e3 05       		.uleb128 .LEHE35-.LEHB35
 1474 00e4 00       		.uleb128 0
 1475 00e5 00       		.uleb128 0
 1476              	.LLSDACSE1365:
 1477 00e6 01       		.byte	0x1
 1478 00e7 00       		.byte	0
 1479              		.align 4
 1480 00e8 00000000 		.long	0
 1481              	
 1482              	.LLSDATT1365:
 1483              		.text
 1485              		.section	.rodata
 1486 0219 00000000 		.align 8
 1486      000000
 1487              	.LC26:
 1488 0220 43686563 		.string	"CheckArrayCloseWorksWithVectors"
 1488      6B417272 
 1488      6179436C 
 1488      6F736557 
 1488      6F726B73 
 1489              		.text
 1490              		.align 2
 1492              	_ZN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsC2Ev:
 1493              	.LFB1367:
  49:TestUnitTest++.cpp **** 
  50:TestUnitTest++.cpp **** TEST (CheckArrayCloseWorksWithVectors)
 1494              		.loc 4 50 0
 1495              		.cfi_startproc
 1496 0862 55       		pushq	%rbp
 1497              		.cfi_def_cfa_offset 16
 1498              		.cfi_offset 6, -16
 1499 0863 4889E5   		movq	%rsp, %rbp
 1500              		.cfi_def_cfa_register 6
 1501 0866 4883EC10 		subq	$16, %rsp
 1502 086a 48897DF8 		movq	%rdi, -8(%rbp)
 1503              	.LBB20:
 1504              		.loc 4 50 0
 1505 086e E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 1505      00
 1506 0873 4889C2   		movq	%rax, %rdx
 1507 0876 488B45F8 		movq	-8(%rbp), %rax
 1508 087a 41B83200 		movl	$50, %r8d
 1508      0000
 1509 0880 B9000000 		movl	$.LC1, %ecx
 1509      00
 1510 0885 BE000000 		movl	$.LC26, %esi
 1510      00
 1511 088a 4889C7   		movq	%rax, %rdi
 1512 088d E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 1512      00
 1513 0892 488B45F8 		movq	-8(%rbp), %rax
 1514 0896 48C70000 		movq	$_ZTVN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsE+16, (%rax)
 1514      000000
 1515              	.LBE20:
 1516 089d C9       		leave
 1517              		.cfi_def_cfa 7, 8
 1518 089e C3       		ret
 1519              		.cfi_endproc
 1520              	.LFE1367:
 1522              		.local	_ZN12_GLOBAL__N_143testCheckArrayCloseWorksWithVectorsInstanceE
 1523              		.comm	_ZN12_GLOBAL__N_143testCheckArrayCloseWorksWithVectorsInstanceE,56,32
 1524              		.local	_ZN12_GLOBAL__N_136adderCheckArrayCloseWorksWithVectorsE
 1525              		.comm	_ZN12_GLOBAL__N_136adderCheckArrayCloseWorksWithVectorsE,1,1
 1526              		.section	.rodata
 1527              		.align 8
 1528              	.LC29:
 1529 0240 556E6861 		.string	"Unhandled exception in CHECK_ARRAY_CLOSE(a, a)"
 1529      6E646C65 
 1529      64206578 
 1529      63657074 
 1529      696F6E20 
 1530              		.text
 1531 089f 90       		.align 2
 1533              	_ZNK12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectors7RunImplEv:
 1534              	.LFB1369:
  51:TestUnitTest++.cpp **** {
 1535              		.loc 4 51 0
 1536              		.cfi_startproc
 1537              		.cfi_personality 0x3,__gxx_personality_v0
 1538              		.cfi_lsda 0x3,.LLSDA1369
 1539 08a0 55       		pushq	%rbp
 1540              		.cfi_def_cfa_offset 16
 1541              		.cfi_offset 6, -16
 1542 08a1 4889E5   		movq	%rsp, %rbp
 1543              		.cfi_def_cfa_register 6
 1544 08a4 53       		pushq	%rbx
 1545 08a5 4883EC78 		subq	$120, %rsp
 1546              		.cfi_offset 3, -24
 1547 08a9 48897D88 		movq	%rdi, -120(%rbp)
 1548              		.loc 4 51 0
 1549 08ad 64488B04 		movq	%fs:40, %rax
 1549      25280000 
 1549      00
 1550 08b6 488945E8 		movq	%rax, -24(%rbp)
 1551 08ba 31C0     		xorl	%eax, %eax
 1552              	.LBB21:
  52:TestUnitTest++.cpp ****     std::vector< float > a(4);
 1553              		.loc 4 52 0
 1554 08bc 488D4598 		leaq	-104(%rbp), %rax
 1555 08c0 4889C7   		movq	%rax, %rdi
 1556 08c3 E8000000 		call	_ZNSaIfEC1Ev
 1556      00
 1557 08c8 8B050000 		movl	.LC27(%rip), %eax
 1557      0000
 1558 08ce 8945C0   		movl	%eax, -64(%rbp)
 1559 08d1 488D4D98 		leaq	-104(%rbp), %rcx
 1560 08d5 488D55C0 		leaq	-64(%rbp), %rdx
 1561 08d9 488D45A0 		leaq	-96(%rbp), %rax
 1562 08dd BE040000 		movl	$4, %esi
 1562      00
 1563 08e2 4889C7   		movq	%rax, %rdi
 1564              	.LEHB36:
 1565 08e5 E8000000 		call	_ZNSt6vectorIfSaIfEEC1EmRKfRKS0_
 1565      00
 1566              	.LEHE36:
 1567              		.loc 4 52 0 is_stmt 0 discriminator 2
 1568 08ea 488D4598 		leaq	-104(%rbp), %rax
 1569 08ee 4889C7   		movq	%rax, %rdi
 1570 08f1 E8000000 		call	_ZNSaIfED1Ev
 1570      00
 1571              	.LBB22:
  53:TestUnitTest++.cpp ****     for (int i = 0; i < 4; ++i)
 1572              		.loc 4 53 0 is_stmt 1 discriminator 2
 1573 08f6 C7459C00 		movl	$0, -100(%rbp)
 1573      000000
 1574 08fd EB2B     		jmp	.L77
 1575              	.L78:
  54:TestUnitTest++.cpp ****         a[i] = (float)i;
 1576              		.loc 4 54 0 discriminator 3
 1577 08ff 8B459C   		movl	-100(%rbp), %eax
 1578 0902 4863D0   		movslq	%eax, %rdx
 1579 0905 488D45A0 		leaq	-96(%rbp), %rax
 1580 0909 4889D6   		movq	%rdx, %rsi
 1581 090c 4889C7   		movq	%rax, %rdi
 1582 090f E8000000 		call	_ZNSt6vectorIfSaIfEEixEm
 1582      00
 1583 0914 4889C2   		movq	%rax, %rdx
 1584 0917 660FEFC0 		pxor	%xmm0, %xmm0
 1585 091b F30F2A45 		cvtsi2ss	-100(%rbp), %xmm0
 1585      9C
 1586 0920 660F7EC0 		movd	%xmm0, %eax
 1587 0924 8902     		movl	%eax, (%rdx)
  53:TestUnitTest++.cpp ****     for (int i = 0; i < 4; ++i)
 1588              		.loc 4 53 0 discriminator 3
 1589 0926 83459C01 		addl	$1, -100(%rbp)
 1590              	.L77:
  53:TestUnitTest++.cpp ****     for (int i = 0; i < 4; ++i)
 1591              		.loc 4 53 0 is_stmt 0 discriminator 1
 1592 092a 837D9C03 		cmpl	$3, -100(%rbp)
 1593 092e 7ECF     		jle	.L78
 1594              	.LEHB37:
 1595              	.LBE22:
  55:TestUnitTest++.cpp **** 
  56:TestUnitTest++.cpp ****     CHECK_ARRAY_CLOSE(a, a, (int)a.size(), 0.0001f);
 1596              		.loc 4 56 0 is_stmt 1
 1597 0930 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1597      00
 1598 0935 488B08   		movq	(%rax), %rcx
 1599 0938 488D45C0 		leaq	-64(%rbp), %rax
 1600 093c BA380000 		movl	$56, %edx
 1600      00
 1601 0941 4889CE   		movq	%rcx, %rsi
 1602 0944 4889C7   		movq	%rax, %rdi
 1603 0947 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1603      00
 1604              		.loc 4 56 0 is_stmt 0 discriminator 2
 1605 094c 8B050000 		movl	.LC28(%rip), %eax
 1605      0000
 1606 0952 894598   		movl	%eax, -104(%rbp)
 1607 0955 488D45A0 		leaq	-96(%rbp), %rax
 1608 0959 4889C7   		movq	%rax, %rdi
 1609 095c E8000000 		call	_ZNKSt6vectorIfSaIfEE4sizeEv
 1609      00
 1610 0961 89C3     		movl	%eax, %ebx
 1611 0963 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1611      00
 1612 0968 488B00   		movq	(%rax), %rax
 1613 096b 488D7DC0 		leaq	-64(%rbp), %rdi
 1614 096f 488D4D98 		leaq	-104(%rbp), %rcx
 1615 0973 488D55A0 		leaq	-96(%rbp), %rdx
 1616 0977 488D75A0 		leaq	-96(%rbp), %rsi
 1617 097b 4989F9   		movq	%rdi, %r9
 1618 097e 4989C8   		movq	%rcx, %r8
 1619 0981 89D9     		movl	%ebx, %ecx
 1620 0983 4889C7   		movq	%rax, %rdi
 1621 0986 E8000000 		call	_ZN8UnitTest15CheckArrayCloseISt6vectorIfSaIfEES3_fEEvRNS_11TestResultsERKT_RKT0_iRKT1_RKNS_1
 1621      00
 1622              	.LEHE37:
 1623              	.L83:
 1624              		.loc 4 56 0 discriminator 7
 1625 098b 488D45A0 		leaq	-96(%rbp), %rax
 1626 098f 4889C7   		movq	%rax, %rdi
 1627              	.LEHB38:
 1628 0992 E8000000 		call	_ZNSt6vectorIfSaIfEED1Ev
 1628      00
 1629              	.LBE21:
  57:TestUnitTest++.cpp **** }
 1630              		.loc 4 57 0 is_stmt 1 discriminator 7
 1631 0997 488B45E8 		movq	-24(%rbp), %rax
 1632 099b 64483304 		xorq	%fs:40, %rax
 1632      25280000 
 1632      00
 1633 09a4 0F849200 		je	.L84
 1633      0000
 1634 09aa E9880000 		jmp	.L89
 1634      00
 1635              	.L85:
 1636 09af 4889C3   		movq	%rax, %rbx
 1637              	.LBB23:
 1638 09b2 488D4598 		leaq	-104(%rbp), %rax
 1639 09b6 4889C7   		movq	%rax, %rdi
 1640 09b9 E8000000 		call	_ZNSaIfED1Ev
 1640      00
 1641 09be 4889D8   		movq	%rbx, %rax
 1642 09c1 4889C7   		movq	%rax, %rdi
 1643 09c4 E8000000 		call	_Unwind_Resume
 1643      00
 1644              	.LEHE38:
 1645              	.L88:
 1646 09c9 4889C3   		movq	%rax, %rbx
  56:TestUnitTest++.cpp **** }
 1647              		.loc 4 56 0
 1648 09cc E8000000 		call	__cxa_end_catch
 1648      00
 1649 09d1 EB4D     		jmp	.L81
 1650              	.L86:
 1651 09d3 4889C7   		movq	%rax, %rdi
 1652 09d6 E8000000 		call	__cxa_begin_catch
 1652      00
 1653              	.LEHB39:
 1654 09db E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1654      00
 1655 09e0 488B08   		movq	(%rax), %rcx
 1656 09e3 488D45C0 		leaq	-64(%rbp), %rax
 1657 09e7 BA380000 		movl	$56, %edx
 1657      00
 1658 09ec 4889CE   		movq	%rcx, %rsi
 1659 09ef 4889C7   		movq	%rax, %rdi
 1660 09f2 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1660      00
  56:TestUnitTest++.cpp **** }
 1661              		.loc 4 56 0 is_stmt 0 discriminator 11
 1662 09f7 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1662      00
 1663 09fc 488B00   		movq	(%rax), %rax
 1664 09ff 488D4DC0 		leaq	-64(%rbp), %rcx
 1665 0a03 BA000000 		movl	$.LC29, %edx
 1665      00
 1666 0a08 4889CE   		movq	%rcx, %rsi
 1667 0a0b 4889C7   		movq	%rax, %rdi
 1668 0a0e E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1668      00
 1669              	.LEHE39:
 1670              	.LEHB40:
  56:TestUnitTest++.cpp **** }
 1671              		.loc 4 56 0 discriminator 15
 1672 0a13 E8000000 		call	__cxa_end_catch
 1672      00
 1673              	.LEHE40:
  56:TestUnitTest++.cpp **** }
 1674              		.loc 4 56 0
 1675 0a18 E96EFFFF 		jmp	.L83
 1675      FF
 1676              	.L87:
 1677 0a1d 4889C3   		movq	%rax, %rbx
 1678              	.L81:
  56:TestUnitTest++.cpp **** }
 1679              		.loc 4 56 0 discriminator 16
 1680 0a20 488D45A0 		leaq	-96(%rbp), %rax
 1681 0a24 4889C7   		movq	%rax, %rdi
 1682 0a27 E8000000 		call	_ZNSt6vectorIfSaIfEED1Ev
 1682      00
 1683 0a2c 4889D8   		movq	%rbx, %rax
 1684 0a2f 4889C7   		movq	%rax, %rdi
 1685              	.LEHB41:
 1686 0a32 E8000000 		call	_Unwind_Resume
 1686      00
 1687              	.LEHE41:
 1688              	.L89:
 1689              	.LBE23:
 1690              		.loc 4 57 0 is_stmt 1
 1691 0a37 E8000000 		call	__stack_chk_fail
 1691      00
 1692              	.L84:
 1693 0a3c 4883C478 		addq	$120, %rsp
 1694 0a40 5B       		popq	%rbx
 1695 0a41 5D       		popq	%rbp
 1696              		.cfi_def_cfa 7, 8
 1697 0a42 C3       		ret
 1698              		.cfi_endproc
 1699              	.LFE1369:
 1700              		.section	.gcc_except_table
 1701              		.align 4
 1702              	.LLSDA1369:
 1703 00ec FF       		.byte	0xff
 1704 00ed 03       		.byte	0x3
 1705 00ee 29       		.uleb128 .LLSDATT1369-.LLSDATTD1369
 1706              	.LLSDATTD1369:
 1707 00ef 01       		.byte	0x1
 1708 00f0 21       		.uleb128 .LLSDACSE1369-.LLSDACSB1369
 1709              	.LLSDACSB1369:
 1710 00f1 45       		.uleb128 .LEHB36-.LFB1369
 1711 00f2 05       		.uleb128 .LEHE36-.LEHB36
 1712 00f3 8F02     		.uleb128 .L85-.LFB1369
 1713 00f5 00       		.uleb128 0
 1714 00f6 9001     		.uleb128 .LEHB37-.LFB1369
 1715 00f8 5B       		.uleb128 .LEHE37-.LEHB37
 1716 00f9 B302     		.uleb128 .L86-.LFB1369
 1717 00fb 01       		.uleb128 0x1
 1718 00fc F201     		.uleb128 .LEHB38-.LFB1369
 1719 00fe 37       		.uleb128 .LEHE38-.LEHB38
 1720 00ff 00       		.uleb128 0
 1721 0100 00       		.uleb128 0
 1722 0101 BB02     		.uleb128 .LEHB39-.LFB1369
 1723 0103 38       		.uleb128 .LEHE39-.LEHB39
 1724 0104 A902     		.uleb128 .L88-.LFB1369
 1725 0106 00       		.uleb128 0
 1726 0107 F302     		.uleb128 .LEHB40-.LFB1369
 1727 0109 05       		.uleb128 .LEHE40-.LEHB40
 1728 010a FD02     		.uleb128 .L87-.LFB1369
 1729 010c 00       		.uleb128 0
 1730 010d 9203     		.uleb128 .LEHB41-.LFB1369
 1731 010f 05       		.uleb128 .LEHE41-.LEHB41
 1732 0110 00       		.uleb128 0
 1733 0111 00       		.uleb128 0
 1734              	.LLSDACSE1369:
 1735 0112 01       		.byte	0x1
 1736 0113 00       		.byte	0
 1737              		.align 4
 1738 0114 00000000 		.long	0
 1739              	
 1740              	.LLSDATT1369:
 1741              		.text
 1743              		.section	.rodata
 1744 026f 00       		.align 8
 1745              	.LC30:
 1746 0270 43686563 		.string	"CheckThrowMacroSucceedsOnCorrectException"
 1746      6B546872 
 1746      6F774D61 
 1746      63726F53 
 1746      75636365 
 1747              		.text
 1748 0a43 90       		.align 2
 1750              	_ZN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionC2Ev:
 1751              	.LFB1371:
  58:TestUnitTest++.cpp **** 
  59:TestUnitTest++.cpp **** TEST(CheckThrowMacroSucceedsOnCorrectException)
 1752              		.loc 4 59 0
 1753              		.cfi_startproc
 1754 0a44 55       		pushq	%rbp
 1755              		.cfi_def_cfa_offset 16
 1756              		.cfi_offset 6, -16
 1757 0a45 4889E5   		movq	%rsp, %rbp
 1758              		.cfi_def_cfa_register 6
 1759 0a48 4883EC10 		subq	$16, %rsp
 1760 0a4c 48897DF8 		movq	%rdi, -8(%rbp)
 1761              	.LBB24:
 1762              		.loc 4 59 0
 1763 0a50 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 1763      00
 1764 0a55 4889C2   		movq	%rax, %rdx
 1765 0a58 488B45F8 		movq	-8(%rbp), %rax
 1766 0a5c 41B83B00 		movl	$59, %r8d
 1766      0000
 1767 0a62 B9000000 		movl	$.LC1, %ecx
 1767      00
 1768 0a67 BE000000 		movl	$.LC30, %esi
 1768      00
 1769 0a6c 4889C7   		movq	%rax, %rdi
 1770 0a6f E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 1770      00
 1771 0a74 488B45F8 		movq	-8(%rbp), %rax
 1772 0a78 48C70000 		movq	$_ZTVN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionE+16, (%rax)
 1772      000000
 1773              	.LBE24:
 1774 0a7f C9       		leave
 1775              		.cfi_def_cfa 7, 8
 1776 0a80 C3       		ret
 1777              		.cfi_endproc
 1778              	.LFE1371:
 1780              		.local	_ZN12_GLOBAL__N_153testCheckThrowMacroSucceedsOnCorrectExceptionInstanceE
 1781              		.comm	_ZN12_GLOBAL__N_153testCheckThrowMacroSucceedsOnCorrectExceptionInstanceE,56,32
 1782              		.local	_ZN12_GLOBAL__N_146adderCheckThrowMacroSucceedsOnCorrectExceptionE
 1783              		.comm	_ZN12_GLOBAL__N_146adderCheckThrowMacroSucceedsOnCorrectExceptionE,1,1
 1784              		.section	.rodata
 1785 029a 00000000 		.align 8
 1785      0000
 1786              	.LC31:
 1787 02a0 45787065 		.string	"Expected exception: \"TestException\" not thrown"
 1787      63746564 
 1787      20657863 
 1787      65707469 
 1787      6F6E3A20 
 1788              		.text
 1789 0a81 90       		.align 2
 1791              	_ZNK12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectException7RunImplEv:
 1792              	.LFB1373:
  60:TestUnitTest++.cpp **** {
 1793              		.loc 4 60 0
 1794              		.cfi_startproc
 1795              		.cfi_personality 0x3,__gxx_personality_v0
 1796              		.cfi_lsda 0x3,.LLSDA1373
 1797 0a82 55       		pushq	%rbp
 1798              		.cfi_def_cfa_offset 16
 1799              		.cfi_offset 6, -16
 1800 0a83 4889E5   		movq	%rsp, %rbp
 1801              		.cfi_def_cfa_register 6
 1802 0a86 4883EC50 		subq	$80, %rsp
 1803 0a8a 48897DB8 		movq	%rdi, -72(%rbp)
 1804              		.loc 4 60 0
 1805 0a8e 64488B04 		movq	%fs:40, %rax
 1805      25280000 
 1805      00
 1806 0a97 488945F8 		movq	%rax, -8(%rbp)
 1807 0a9b 31C0     		xorl	%eax, %eax
 1808              	.LBB25:
 1809              	.LBB26:
  61:TestUnitTest++.cpp ****     struct TestException {};
  62:TestUnitTest++.cpp ****     CHECK_THROW(throw TestException(), TestException);
 1810              		.loc 4 62 0
 1811 0a9d C645C700 		movb	$0, -57(%rbp)
 1812 0aa1 BF010000 		movl	$1, %edi
 1812      00
 1813 0aa6 E8000000 		call	__cxa_allocate_exception
 1813      00
 1814 0aab BA000000 		movl	$0, %edx
 1814      00
 1815 0ab0 BE000000 		movl	$_ZTIZNK12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectException7RunImplEvE13TestExcepti
 1815      00
 1816 0ab5 4889C7   		movq	%rax, %rdi
 1817              	.LEHB42:
 1818 0ab8 E8000000 		call	__cxa_throw
 1818      00
 1819              	.LEHE42:
 1820              	.L96:
 1821              		.loc 4 62 0 is_stmt 0 discriminator 6
 1822 0abd 0FB645C7 		movzbl	-57(%rbp), %eax
 1823 0ac1 83F001   		xorl	$1, %eax
 1824 0ac4 84C0     		testb	%al, %al
 1825 0ac6 7438     		je	.L92
 1826              	.LEHB43:
 1827              		.loc 4 62 0 discriminator 1
 1828 0ac8 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1828      00
 1829 0acd 488B08   		movq	(%rax), %rcx
 1830 0ad0 488D45D0 		leaq	-48(%rbp), %rax
 1831 0ad4 BA3E0000 		movl	$62, %edx
 1831      00
 1832 0ad9 4889CE   		movq	%rcx, %rsi
 1833 0adc 4889C7   		movq	%rax, %rdi
 1834 0adf E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1834      00
 1835 0ae4 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1835      00
 1836 0ae9 488B00   		movq	(%rax), %rax
 1837 0aec 488D4DD0 		leaq	-48(%rbp), %rcx
 1838 0af0 BA000000 		movl	$.LC31, %edx
 1838      00
 1839 0af5 4889CE   		movq	%rcx, %rsi
 1840 0af8 4889C7   		movq	%rax, %rdi
 1841 0afb E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1841      00
 1842              	.L92:
 1843              	.LBE26:
 1844              	.LBE25:
  63:TestUnitTest++.cpp **** }
 1845              		.loc 4 63 0 is_stmt 1
 1846 0b00 488B45F8 		movq	-8(%rbp), %rax
 1847 0b04 64483304 		xorq	%fs:40, %rax
 1847      25280000 
 1847      00
 1848 0b0d 7433     		je	.L97
 1849 0b0f EB2C     		jmp	.L99
 1850              	.L98:
 1851 0b11 4883FA01 		cmpq	$1, %rdx
 1852 0b15 7517     		jne	.L100
 1853              	.LBB29:
 1854              	.LBB28:
 1855              	.LBB27:
  62:TestUnitTest++.cpp **** }
 1856              		.loc 4 62 0
 1857 0b17 4889C7   		movq	%rax, %rdi
 1858 0b1a E8000000 		call	__cxa_begin_catch
 1858      00
 1859 0b1f 488945C8 		movq	%rax, -56(%rbp)
 1860 0b23 C645C701 		movb	$1, -57(%rbp)
 1861 0b27 E8000000 		call	__cxa_end_catch
 1861      00
 1862 0b2c EB8F     		jmp	.L96
 1863              	.L100:
 1864              	.LBE27:
  62:TestUnitTest++.cpp **** }
 1865              		.loc 4 62 0 is_stmt 0 discriminator 7
 1866 0b2e 4889C7   		movq	%rax, %rdi
 1867 0b31 E8000000 		call	__cxa_begin_catch
 1867      00
 1868 0b36 E8000000 		call	__cxa_end_catch
 1868      00
 1869              	.LEHE43:
 1870 0b3b EB80     		jmp	.L96
 1871              	.L99:
 1872              	.LBE28:
 1873              	.LBE29:
 1874              		.loc 4 63 0 is_stmt 1
 1875 0b3d E8000000 		call	__stack_chk_fail
 1875      00
 1876              	.L97:
 1877 0b42 C9       		leave
 1878              		.cfi_def_cfa 7, 8
 1879 0b43 C3       		ret
 1880              		.cfi_endproc
 1881              	.LFE1373:
 1882              		.section	.gcc_except_table
 1883              		.align 4
 1884              	.LLSDA1373:
 1885 0118 FF       		.byte	0xff
 1886 0119 03       		.byte	0x3
 1887 011a 19       		.uleb128 .LLSDATT1373-.LLSDATTD1373
 1888              	.LLSDATTD1373:
 1889 011b 01       		.byte	0x1
 1890 011c 09       		.uleb128 .LLSDACSE1373-.LLSDACSB1373
 1891              	.LLSDACSB1373:
 1892 011d 36       		.uleb128 .LEHB42-.LFB1373
 1893 011e 05       		.uleb128 .LEHE42-.LEHB42
 1894 011f 8F01     		.uleb128 .L98-.LFB1373
 1895 0121 03       		.uleb128 0x3
 1896 0122 46       		.uleb128 .LEHB43-.LFB1373
 1897 0123 73       		.uleb128 .LEHE43-.LEHB43
 1898 0124 00       		.uleb128 0
 1899 0125 00       		.uleb128 0
 1900              	.LLSDACSE1373:
 1901 0126 02       		.byte	0x2
 1902 0127 00       		.byte	0
 1903 0128 01       		.byte	0x1
 1904 0129 7D       		.byte	0x7d
 1905 012a 0000     		.align 4
 1906 012c 00000000 		.long	0
 1907              	
 1908 0130 00000000 		.long	_ZTIZNK12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectException7RunImplEvE13TestExcepti
 1909              	.LLSDATT1373:
 1910              		.text
 1912              		.section	.rodata
 1913              	.LC32:
 1914 02cf 43686563 		.string	"CheckAssertSucceeds"
 1914      6B417373 
 1914      65727453 
 1914      75636365 
 1914      65647300 
 1915              		.text
 1916              		.align 2
 1918              	_ZN12_GLOBAL__N_123TestCheckAssertSucceedsC2Ev:
 1919              	.LFB1375:
  64:TestUnitTest++.cpp **** 
  65:TestUnitTest++.cpp **** TEST(CheckAssertSucceeds)
 1920              		.loc 4 65 0
 1921              		.cfi_startproc
 1922 0b44 55       		pushq	%rbp
 1923              		.cfi_def_cfa_offset 16
 1924              		.cfi_offset 6, -16
 1925 0b45 4889E5   		movq	%rsp, %rbp
 1926              		.cfi_def_cfa_register 6
 1927 0b48 4883EC10 		subq	$16, %rsp
 1928 0b4c 48897DF8 		movq	%rdi, -8(%rbp)
 1929              	.LBB30:
 1930              		.loc 4 65 0
 1931 0b50 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 1931      00
 1932 0b55 4889C2   		movq	%rax, %rdx
 1933 0b58 488B45F8 		movq	-8(%rbp), %rax
 1934 0b5c 41B84100 		movl	$65, %r8d
 1934      0000
 1935 0b62 B9000000 		movl	$.LC1, %ecx
 1935      00
 1936 0b67 BE000000 		movl	$.LC32, %esi
 1936      00
 1937 0b6c 4889C7   		movq	%rax, %rdi
 1938 0b6f E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 1938      00
 1939 0b74 488B45F8 		movq	-8(%rbp), %rax
 1940 0b78 48C70000 		movq	$_ZTVN12_GLOBAL__N_123TestCheckAssertSucceedsE+16, (%rax)
 1940      000000
 1941              	.LBE30:
 1942 0b7f C9       		leave
 1943              		.cfi_def_cfa 7, 8
 1944 0b80 C3       		ret
 1945              		.cfi_endproc
 1946              	.LFE1375:
 1948              		.local	_ZN12_GLOBAL__N_131testCheckAssertSucceedsInstanceE
 1949              		.comm	_ZN12_GLOBAL__N_131testCheckAssertSucceedsInstanceE,56,32
 1950              		.local	_ZN12_GLOBAL__N_124adderCheckAssertSucceedsE
 1951              		.comm	_ZN12_GLOBAL__N_124adderCheckAssertSucceedsE,1,1
 1952              		.section	.rodata
 1953              	.LC33:
 1954 02e3 66696C65 		.string	"file"
 1954      00
 1955              	.LC34:
 1956 02e8 64657363 		.string	"desc"
 1956      00
 1957 02ed 000000   		.align 8
 1958              	.LC35:
 1959 02f0 45787065 		.string	"Expected exception: \"UnitTest::AssertException\" not thrown"
 1959      63746564 
 1959      20657863 
 1959      65707469 
 1959      6F6E3A20 
 1960              		.text
 1961 0b81 90       		.align 2
 1963              	_ZNK12_GLOBAL__N_123TestCheckAssertSucceeds7RunImplEv:
 1964              	.LFB1377:
  66:TestUnitTest++.cpp **** {
 1965              		.loc 4 66 0
 1966              		.cfi_startproc
 1967              		.cfi_personality 0x3,__gxx_personality_v0
 1968              		.cfi_lsda 0x3,.LLSDA1377
 1969 0b82 55       		pushq	%rbp
 1970              		.cfi_def_cfa_offset 16
 1971              		.cfi_offset 6, -16
 1972 0b83 4889E5   		movq	%rsp, %rbp
 1973              		.cfi_def_cfa_register 6
 1974 0b86 4883EC50 		subq	$80, %rsp
 1975 0b8a 48897DB8 		movq	%rdi, -72(%rbp)
 1976              		.loc 4 66 0
 1977 0b8e 64488B04 		movq	%fs:40, %rax
 1977      25280000 
 1977      00
 1978 0b97 488945F8 		movq	%rax, -8(%rbp)
 1979 0b9b 31C0     		xorl	%eax, %eax
 1980              	.LBB31:
 1981              	.LBB32:
  67:TestUnitTest++.cpp ****     CHECK_ASSERT(UnitTest::ReportAssert("desc", "file", 0));
 1982              		.loc 4 67 0
 1983 0b9d C645C700 		movb	$0, -57(%rbp)
 1984 0ba1 BA000000 		movl	$0, %edx
 1984      00
 1985 0ba6 BE000000 		movl	$.LC33, %esi
 1985      00
 1986 0bab BF000000 		movl	$.LC34, %edi
 1986      00
 1987              	.LEHB44:
 1988 0bb0 E8000000 		call	_ZN8UnitTest12ReportAssertEPKcS1_i
 1988      00
 1989              	.LEHE44:
 1990              	.L107:
 1991              		.loc 4 67 0 is_stmt 0 discriminator 1
 1992 0bb5 0FB645C7 		movzbl	-57(%rbp), %eax
 1993 0bb9 83F001   		xorl	$1, %eax
 1994 0bbc 84C0     		testb	%al, %al
 1995 0bbe 7438     		je	.L103
 1996              	.LEHB45:
 1997              		.loc 4 67 0 discriminator 2
 1998 0bc0 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1998      00
 1999 0bc5 488B08   		movq	(%rax), %rcx
 2000 0bc8 488D45D0 		leaq	-48(%rbp), %rax
 2001 0bcc BA430000 		movl	$67, %edx
 2001      00
 2002 0bd1 4889CE   		movq	%rcx, %rsi
 2003 0bd4 4889C7   		movq	%rax, %rdi
 2004 0bd7 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2004      00
 2005 0bdc E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2005      00
 2006 0be1 488B00   		movq	(%rax), %rax
 2007 0be4 488D4DD0 		leaq	-48(%rbp), %rcx
 2008 0be8 BA000000 		movl	$.LC35, %edx
 2008      00
 2009 0bed 4889CE   		movq	%rcx, %rsi
 2010 0bf0 4889C7   		movq	%rax, %rdi
 2011 0bf3 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2011      00
 2012              	.L103:
 2013              	.LBE32:
 2014              	.LBE31:
  68:TestUnitTest++.cpp **** }
 2015              		.loc 4 68 0 is_stmt 1
 2016 0bf8 488B45F8 		movq	-8(%rbp), %rax
 2017 0bfc 64483304 		xorq	%fs:40, %rax
 2017      25280000 
 2017      00
 2018 0c05 7433     		je	.L108
 2019 0c07 EB2C     		jmp	.L110
 2020              	.L109:
 2021 0c09 4883FA01 		cmpq	$1, %rdx
 2022 0c0d 7517     		jne	.L111
 2023              	.LBB35:
 2024              	.LBB34:
 2025              	.LBB33:
  67:TestUnitTest++.cpp ****     CHECK_ASSERT(UnitTest::ReportAssert("desc", "file", 0));
 2026              		.loc 4 67 0 discriminator 7
 2027 0c0f 4889C7   		movq	%rax, %rdi
 2028 0c12 E8000000 		call	__cxa_begin_catch
 2028      00
 2029 0c17 488945C8 		movq	%rax, -56(%rbp)
 2030 0c1b C645C701 		movb	$1, -57(%rbp)
 2031 0c1f E8000000 		call	__cxa_end_catch
 2031      00
 2032 0c24 EB8F     		jmp	.L107
 2033              	.L111:
 2034              	.LBE33:
  67:TestUnitTest++.cpp ****     CHECK_ASSERT(UnitTest::ReportAssert("desc", "file", 0));
 2035              		.loc 4 67 0 is_stmt 0 discriminator 8
 2036 0c26 4889C7   		movq	%rax, %rdi
 2037 0c29 E8000000 		call	__cxa_begin_catch
 2037      00
 2038 0c2e E8000000 		call	__cxa_end_catch
 2038      00
 2039              	.LEHE45:
 2040 0c33 EB80     		jmp	.L107
 2041              	.L110:
 2042              	.LBE34:
 2043              	.LBE35:
 2044              		.loc 4 68 0 is_stmt 1
 2045 0c35 E8000000 		call	__stack_chk_fail
 2045      00
 2046              	.L108:
 2047 0c3a C9       		leave
 2048              		.cfi_def_cfa 7, 8
 2049 0c3b C3       		ret
 2050              		.cfi_endproc
 2051              	.LFE1377:
 2052              		.section	.gcc_except_table
 2053              		.align 4
 2054              	.LLSDA1377:
 2055 0134 FF       		.byte	0xff
 2056 0135 03       		.byte	0x3
 2057 0136 19       		.uleb128 .LLSDATT1377-.LLSDATTD1377
 2058              	.LLSDATTD1377:
 2059 0137 01       		.byte	0x1
 2060 0138 09       		.uleb128 .LLSDACSE1377-.LLSDACSB1377
 2061              	.LLSDACSB1377:
 2062 0139 2E       		.uleb128 .LEHB44-.LFB1377
 2063 013a 05       		.uleb128 .LEHE44-.LEHB44
 2064 013b 8701     		.uleb128 .L109-.LFB1377
 2065 013d 03       		.uleb128 0x3
 2066 013e 3E       		.uleb128 .LEHB45-.LFB1377
 2067 013f 73       		.uleb128 .LEHE45-.LEHB45
 2068 0140 00       		.uleb128 0
 2069 0141 00       		.uleb128 0
 2070              	.LLSDACSE1377:
 2071 0142 02       		.byte	0x2
 2072 0143 00       		.byte	0
 2073 0144 01       		.byte	0x1
 2074 0145 7D       		.byte	0x7d
 2075 0146 0000     		.align 4
 2076 0148 00000000 		.long	0
 2077              	
 2078 014c 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 2079              	.LLSDATT1377:
 2080              		.text
 2082              		.section	.rodata
 2083 032b 00000000 		.align 8
 2083      00
 2084              	.LC36:
 2085 0330 43686563 		.string	"CheckThrowMacroFailsOnMissingException"
 2085      6B546872 
 2085      6F774D61 
 2085      63726F46 
 2085      61696C73 
 2086              		.text
 2087              		.align 2
 2089              	_ZN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionC2Ev:
 2090              	.LFB1379:
  69:TestUnitTest++.cpp **** 
  70:TestUnitTest++.cpp **** TEST(CheckThrowMacroFailsOnMissingException)
 2091              		.loc 4 70 0
 2092              		.cfi_startproc
 2093 0c3c 55       		pushq	%rbp
 2094              		.cfi_def_cfa_offset 16
 2095              		.cfi_offset 6, -16
 2096 0c3d 4889E5   		movq	%rsp, %rbp
 2097              		.cfi_def_cfa_register 6
 2098 0c40 4883EC10 		subq	$16, %rsp
 2099 0c44 48897DF8 		movq	%rdi, -8(%rbp)
 2100              	.LBB36:
 2101              		.loc 4 70 0
 2102 0c48 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 2102      00
 2103 0c4d 4889C2   		movq	%rax, %rdx
 2104 0c50 488B45F8 		movq	-8(%rbp), %rax
 2105 0c54 41B84600 		movl	$70, %r8d
 2105      0000
 2106 0c5a B9000000 		movl	$.LC1, %ecx
 2106      00
 2107 0c5f BE000000 		movl	$.LC36, %esi
 2107      00
 2108 0c64 4889C7   		movq	%rax, %rdi
 2109 0c67 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 2109      00
 2110 0c6c 488B45F8 		movq	-8(%rbp), %rax
 2111 0c70 48C70000 		movq	$_ZTVN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionE+16, (%rax)
 2111      000000
 2112              	.LBE36:
 2113 0c77 C9       		leave
 2114              		.cfi_def_cfa 7, 8
 2115 0c78 C3       		ret
 2116              		.cfi_endproc
 2117              	.LFE1379:
 2119              		.local	_ZN12_GLOBAL__N_150testCheckThrowMacroFailsOnMissingExceptionInstanceE
 2120              		.comm	_ZN12_GLOBAL__N_150testCheckThrowMacroFailsOnMissingExceptionInstanceE,56,32
 2121              		.local	_ZN12_GLOBAL__N_143adderCheckThrowMacroFailsOnMissingExceptionE
 2122              		.comm	_ZN12_GLOBAL__N_143adderCheckThrowMacroFailsOnMissingExceptionE,1,1
 2123              		.section	.rodata
 2124              	.LC37:
 2125 0357 00       		.string	""
 2126              	.LC38:
 2127 0358 6E6F7468 		.string	"nothrow"
 2127      726F7700 
 2128              		.text
 2129 0c79 90       		.align 2
 2131              	_ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestC2Ev:
 2132              	.LFB1383:
  71:TestUnitTest++.cpp **** {
  72:TestUnitTest++.cpp ****     class NoThrowTest : public UnitTest::Test
  73:TestUnitTest++.cpp ****     {
  74:TestUnitTest++.cpp ****     public:
  75:TestUnitTest++.cpp ****         NoThrowTest() : Test("nothrow") {}
 2133              		.loc 4 75 0
 2134              		.cfi_startproc
 2135 0c7a 55       		pushq	%rbp
 2136              		.cfi_def_cfa_offset 16
 2137              		.cfi_offset 6, -16
 2138 0c7b 4889E5   		movq	%rsp, %rbp
 2139              		.cfi_def_cfa_register 6
 2140 0c7e 4883EC10 		subq	$16, %rsp
 2141 0c82 48897DF8 		movq	%rdi, -8(%rbp)
 2142              	.LBB37:
 2143              		.loc 4 75 0
 2144 0c86 488B45F8 		movq	-8(%rbp), %rax
 2145 0c8a 41B80000 		movl	$0, %r8d
 2145      0000
 2146 0c90 B9000000 		movl	$.LC37, %ecx
 2146      00
 2147 0c95 BA000000 		movl	$.LC0, %edx
 2147      00
 2148 0c9a BE000000 		movl	$.LC38, %esi
 2148      00
 2149 0c9f 4889C7   		movq	%rax, %rdi
 2150 0ca2 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 2150      00
 2151 0ca7 488B45F8 		movq	-8(%rbp), %rax
 2152 0cab 48C70000 		movq	$_ZTVZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvE11NoThrowTest+16
 2152      000000
 2153              	.LBE37:
 2154 0cb2 C9       		leave
 2155              		.cfi_def_cfa 7, 8
 2156 0cb3 C3       		ret
 2157              		.cfi_endproc
 2158              	.LFE1383:
 2160              		.align 2
 2162              	_ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvENK11NoThrowTest9DontThrow
 2163              	.LFB1385:
  76:TestUnitTest++.cpp ****         void DontThrow() const
 2164              		.loc 4 76 0
 2165              		.cfi_startproc
 2166 0cb4 55       		pushq	%rbp
 2167              		.cfi_def_cfa_offset 16
 2168              		.cfi_offset 6, -16
 2169 0cb5 4889E5   		movq	%rsp, %rbp
 2170              		.cfi_def_cfa_register 6
 2171 0cb8 48897DF8 		movq	%rdi, -8(%rbp)
  77:TestUnitTest++.cpp ****         {
  78:TestUnitTest++.cpp ****         }
 2172              		.loc 4 78 0
 2173 0cbc 5D       		popq	%rbp
 2174              		.cfi_def_cfa 7, 8
 2175 0cbd C3       		ret
 2176              		.cfi_endproc
 2177              	.LFE1385:
 2179              		.section	.rodata
 2180              		.align 8
 2181              	.LC39:
 2182 0360 45787065 		.string	"Expected exception: \"int\" not thrown"
 2182      63746564 
 2182      20657863 
 2182      65707469 
 2182      6F6E3A20 
 2183              		.text
 2184              		.align 2
 2186              	_ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvENK11NoThrowTest7RunImplEv
 2187              	.LFB1386:
  79:TestUnitTest++.cpp **** 
  80:TestUnitTest++.cpp ****         virtual void RunImpl() const
 2188              		.loc 4 80 0
 2189              		.cfi_startproc
 2190 0cbe 55       		pushq	%rbp
 2191              		.cfi_def_cfa_offset 16
 2192              		.cfi_offset 6, -16
 2193 0cbf 4889E5   		movq	%rsp, %rbp
 2194              		.cfi_def_cfa_register 6
 2195 0cc2 4883EC50 		subq	$80, %rsp
 2196 0cc6 48897DB8 		movq	%rdi, -72(%rbp)
 2197              		.loc 4 80 0
 2198 0cca 64488B04 		movq	%fs:40, %rax
 2198      25280000 
 2198      00
 2199 0cd3 488945F8 		movq	%rax, -8(%rbp)
 2200 0cd7 31C0     		xorl	%eax, %eax
 2201              	.LBB38:
 2202              	.LBB39:
  81:TestUnitTest++.cpp ****         {
  82:TestUnitTest++.cpp ****             CHECK_THROW(DontThrow(), int);
 2203              		.loc 4 82 0
 2204 0cd9 C645CF00 		movb	$0, -49(%rbp)
 2205 0cdd 488B45B8 		movq	-72(%rbp), %rax
 2206 0ce1 4889C7   		movq	%rax, %rdi
 2207 0ce4 E8CBFFFF 		call	_ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvENK11NoThrowTest9Don
 2207      FF
 2208 0ce9 0FB645CF 		movzbl	-49(%rbp), %eax
 2209 0ced 83F001   		xorl	$1, %eax
 2210 0cf0 84C0     		testb	%al, %al
 2211 0cf2 7438     		je	.L115
 2212              		.loc 4 82 0 is_stmt 0 discriminator 1
 2213 0cf4 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 2213      00
 2214 0cf9 488B08   		movq	(%rax), %rcx
 2215 0cfc 488D45D0 		leaq	-48(%rbp), %rax
 2216 0d00 BA520000 		movl	$82, %edx
 2216      00
 2217 0d05 4889CE   		movq	%rcx, %rsi
 2218 0d08 4889C7   		movq	%rax, %rdi
 2219 0d0b E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2219      00
 2220 0d10 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2220      00
 2221 0d15 488B00   		movq	(%rax), %rax
 2222 0d18 488D4DD0 		leaq	-48(%rbp), %rcx
 2223 0d1c BA000000 		movl	$.LC39, %edx
 2223      00
 2224 0d21 4889CE   		movq	%rcx, %rsi
 2225 0d24 4889C7   		movq	%rax, %rdi
 2226 0d27 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2226      00
 2227              	.L115:
 2228              	.LBE39:
 2229              	.LBE38:
  83:TestUnitTest++.cpp ****         }
 2230              		.loc 4 83 0 is_stmt 1
 2231 0d2c 488B45F8 		movq	-8(%rbp), %rax
 2232 0d30 64483304 		xorq	%fs:40, %rax
 2232      25280000 
 2232      00
 2233 0d39 7405     		je	.L117
 2234 0d3b E8000000 		call	__stack_chk_fail
 2234      00
 2235              	.L117:
 2236 0d40 C9       		leave
 2237              		.cfi_def_cfa 7, 8
 2238 0d41 C3       		ret
 2239              		.cfi_endproc
 2240              	.LFE1386:
 2242              		.section	.rodata
 2243 0385 000000   		.align 8
 2244              	.LC40:
 2245 0388 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(1, results.GetFailureCount())"
 2245      6E646C65 
 2245      64206578 
 2245      63657074 
 2245      696F6E20 
 2246              		.text
 2247              		.align 2
 2249              	_ZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEv:
 2250              	.LFB1381:
  71:TestUnitTest++.cpp ****     class NoThrowTest : public UnitTest::Test
 2251              		.loc 4 71 0
 2252              		.cfi_startproc
 2253              		.cfi_personality 0x3,__gxx_personality_v0
 2254              		.cfi_lsda 0x3,.LLSDA1381
 2255 0d42 55       		pushq	%rbp
 2256              		.cfi_def_cfa_offset 16
 2257              		.cfi_offset 6, -16
 2258 0d43 4889E5   		movq	%rsp, %rbp
 2259              		.cfi_def_cfa_register 6
 2260 0d46 53       		pushq	%rbx
 2261 0d47 4881EC98 		subq	$152, %rsp
 2261      000000
 2262              		.cfi_offset 3, -24
 2263 0d4e 4889BD68 		movq	%rdi, -152(%rbp)
 2263      FFFFFF
  71:TestUnitTest++.cpp ****     class NoThrowTest : public UnitTest::Test
 2264              		.loc 4 71 0
 2265 0d55 64488B04 		movq	%fs:40, %rax
 2265      25280000 
 2265      00
 2266 0d5e 488945E8 		movq	%rax, -24(%rbp)
 2267 0d62 31C0     		xorl	%eax, %eax
 2268              	.LBB40:
  84:TestUnitTest++.cpp ****     };
  85:TestUnitTest++.cpp **** 
  86:TestUnitTest++.cpp ****     UnitTest::TestResults results;
 2269              		.loc 4 86 0
 2270 0d64 488D4590 		leaq	-112(%rbp), %rax
 2271 0d68 BE000000 		movl	$0, %esi
 2271      00
 2272 0d6d 4889C7   		movq	%rax, %rdi
 2273              	.LEHB46:
 2274 0d70 E8000000 		call	_ZN8UnitTest11TestResultsC1EPNS_12TestReporterE
 2274      00
 2275              	.LBB41:
  87:TestUnitTest++.cpp **** 	{
  88:TestUnitTest++.cpp **** 		ScopedCurrentTest scopedResults(results);
 2276              		.loc 4 88 0
 2277 0d75 488D4D90 		leaq	-112(%rbp), %rcx
 2278 0d79 488D4580 		leaq	-128(%rbp), %rax
 2279 0d7d BA000000 		movl	$0, %edx
 2279      00
 2280 0d82 4889CE   		movq	%rcx, %rsi
 2281 0d85 4889C7   		movq	%rax, %rdi
 2282 0d88 E8000000 		call	_ZN17ScopedCurrentTestC1ERN8UnitTest11TestResultsEPKNS0_11TestDetailsE
 2282      00
 2283              	.LEHE46:
  89:TestUnitTest++.cpp **** 
  90:TestUnitTest++.cpp **** 		NoThrowTest test;
 2284              		.loc 4 90 0
 2285 0d8d 488D45B0 		leaq	-80(%rbp), %rax
 2286 0d91 4889C7   		movq	%rax, %rdi
 2287              	.LEHB47:
 2288 0d94 E8E1FEFF 		call	_ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestC2Ev
 2288      FF
 2289              	.LEHE47:
  91:TestUnitTest++.cpp **** 		test.Run();
 2290              		.loc 4 91 0
 2291 0d99 488D45B0 		leaq	-80(%rbp), %rax
 2292 0d9d 4889C7   		movq	%rax, %rdi
 2293              	.LEHB48:
 2294 0da0 E8000000 		call	_ZN8UnitTest4Test3RunEv
 2294      00
 2295              	.LEHE48:
  90:TestUnitTest++.cpp **** 		test.Run();
 2296              		.loc 4 90 0
 2297 0da5 488D45B0 		leaq	-80(%rbp), %rax
 2298 0da9 4889C7   		movq	%rax, %rdi
 2299              	.LEHB49:
 2300 0dac E8B11500 		call	_ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestD2Ev
 2300      00
 2301              	.LEHE49:
 2302              		.loc 4 91 0
 2303 0db1 488D4580 		leaq	-128(%rbp), %rax
 2304 0db5 4889C7   		movq	%rax, %rdi
 2305              	.LEHB50:
 2306 0db8 E8000000 		call	_ZN17ScopedCurrentTestD1Ev
 2306      00
 2307              	.LEHE50:
 2308              	.LEHB51:
 2309              	.LBE41:
  92:TestUnitTest++.cpp **** 	}
  93:TestUnitTest++.cpp **** 
  94:TestUnitTest++.cpp **** 	CHECK_EQUAL(1, results.GetFailureCount());
 2310              		.loc 4 94 0
 2311 0dbd E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 2311      00
 2312 0dc2 488B08   		movq	(%rax), %rcx
 2313 0dc5 488D45B0 		leaq	-80(%rbp), %rax
 2314 0dc9 BA5E0000 		movl	$94, %edx
 2314      00
 2315 0dce 4889CE   		movq	%rcx, %rsi
 2316 0dd1 4889C7   		movq	%rax, %rdi
 2317 0dd4 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2317      00
 2318              		.loc 4 94 0 is_stmt 0 discriminator 2
 2319 0dd9 488D4590 		leaq	-112(%rbp), %rax
 2320 0ddd 4889C7   		movq	%rax, %rdi
 2321 0de0 E8000000 		call	_ZNK8UnitTest11TestResults15GetFailureCountEv
 2321      00
 2322 0de5 894580   		movl	%eax, -128(%rbp)
 2323 0de8 C7857CFF 		movl	$1, -132(%rbp)
 2323      FFFF0100 
 2323      0000
 2324 0df2 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2324      00
 2325              		.loc 4 94 0 discriminator 4
 2326 0df7 488B00   		movq	(%rax), %rax
 2327 0dfa 488D4DB0 		leaq	-80(%rbp), %rcx
 2328 0dfe 488D5580 		leaq	-128(%rbp), %rdx
 2329 0e02 488DB57C 		leaq	-132(%rbp), %rsi
 2329      FFFFFF
 2330 0e09 4889C7   		movq	%rax, %rdi
 2331 0e0c E8000000 		call	_ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 2331      00
 2332              	.LEHE51:
 2333              	.LBE40:
  95:TestUnitTest++.cpp **** }
 2334              		.loc 4 95 0 is_stmt 1
 2335 0e11 E9830000 		jmp	.L129
 2335      00
 2336              	.L126:
 2337 0e16 4889C3   		movq	%rax, %rbx
 2338              	.LBB43:
 2339              	.LBB42:
  90:TestUnitTest++.cpp **** 		test.Run();
 2340              		.loc 4 90 0
 2341 0e19 488D45B0 		leaq	-80(%rbp), %rax
 2342 0e1d 4889C7   		movq	%rax, %rdi
 2343 0e20 E83D1500 		call	_ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestD2Ev
 2343      00
 2344 0e25 EB03     		jmp	.L120
 2345              	.L125:
 2346 0e27 4889C3   		movq	%rax, %rbx
 2347              	.L120:
  91:TestUnitTest++.cpp **** 	}
 2348              		.loc 4 91 0
 2349 0e2a 488D4580 		leaq	-128(%rbp), %rax
 2350 0e2e 4889C7   		movq	%rax, %rdi
 2351 0e31 E8000000 		call	_ZN17ScopedCurrentTestD1Ev
 2351      00
 2352 0e36 4889D8   		movq	%rbx, %rax
 2353 0e39 4889C7   		movq	%rax, %rdi
 2354              	.LEHB52:
 2355 0e3c E8000000 		call	_Unwind_Resume
 2355      00
 2356              	.LEHE52:
 2357              	.L128:
 2358 0e41 4889C3   		movq	%rax, %rbx
 2359              	.LBE42:
  94:TestUnitTest++.cpp **** }
 2360              		.loc 4 94 0
 2361 0e44 E8000000 		call	__cxa_end_catch
 2361      00
 2362 0e49 4889D8   		movq	%rbx, %rax
 2363 0e4c 4889C7   		movq	%rax, %rdi
 2364              	.LEHB53:
 2365 0e4f E8000000 		call	_Unwind_Resume
 2365      00
 2366              	.LEHE53:
 2367              	.L127:
 2368 0e54 4889C7   		movq	%rax, %rdi
 2369 0e57 E8000000 		call	__cxa_begin_catch
 2369      00
 2370              	.LEHB54:
 2371 0e5c E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 2371      00
 2372 0e61 488B08   		movq	(%rax), %rcx
 2373 0e64 488D45B0 		leaq	-80(%rbp), %rax
 2374 0e68 BA5E0000 		movl	$94, %edx
 2374      00
 2375 0e6d 4889CE   		movq	%rcx, %rsi
 2376 0e70 4889C7   		movq	%rax, %rdi
 2377 0e73 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2377      00
  94:TestUnitTest++.cpp **** }
 2378              		.loc 4 94 0 is_stmt 0 discriminator 12
 2379 0e78 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2379      00
 2380 0e7d 488B00   		movq	(%rax), %rax
 2381 0e80 488D4DB0 		leaq	-80(%rbp), %rcx
 2382 0e84 BA000000 		movl	$.LC40, %edx
 2382      00
 2383 0e89 4889CE   		movq	%rcx, %rsi
 2384 0e8c 4889C7   		movq	%rax, %rdi
 2385 0e8f E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2385      00
 2386              	.LEHE54:
 2387              	.LEHB55:
  94:TestUnitTest++.cpp **** }
 2388              		.loc 4 94 0 discriminator 16
 2389 0e94 E8000000 		call	__cxa_end_catch
 2389      00
 2390              	.LEHE55:
 2391              	.L129:
 2392              	.LBE43:
 2393              		.loc 4 95 0 is_stmt 1
 2394 0e99 90       		nop
 2395 0e9a 488B45E8 		movq	-24(%rbp), %rax
 2396 0e9e 64483304 		xorq	%fs:40, %rax
 2396      25280000 
 2396      00
 2397 0ea7 7405     		je	.L124
 2398 0ea9 E8000000 		call	__stack_chk_fail
 2398      00
 2399              	.L124:
 2400 0eae 4881C498 		addq	$152, %rsp
 2400      000000
 2401 0eb5 5B       		popq	%rbx
 2402 0eb6 5D       		popq	%rbp
 2403              		.cfi_def_cfa 7, 8
 2404 0eb7 C3       		ret
 2405              		.cfi_endproc
 2406              	.LFE1381:
 2407              		.section	.gcc_except_table
 2408              		.align 4
 2409              	.LLSDA1381:
 2410 0150 FF       		.byte	0xff
 2411 0151 03       		.byte	0x3
 2412 0152 39       		.uleb128 .LLSDATT1381-.LLSDATTD1381
 2413              	.LLSDATTD1381:
 2414 0153 01       		.byte	0x1
 2415 0154 31       		.uleb128 .LLSDACSE1381-.LLSDACSB1381
 2416              	.LLSDACSB1381:
 2417 0155 2E       		.uleb128 .LEHB46-.LFB1381
 2418 0156 1D       		.uleb128 .LEHE46-.LEHB46
 2419 0157 00       		.uleb128 0
 2420 0158 00       		.uleb128 0
 2421 0159 52       		.uleb128 .LEHB47-.LFB1381
 2422 015a 05       		.uleb128 .LEHE47-.LEHB47
 2423 015b E501     		.uleb128 .L125-.LFB1381
 2424 015d 00       		.uleb128 0
 2425 015e 5E       		.uleb128 .LEHB48-.LFB1381
 2426 015f 05       		.uleb128 .LEHE48-.LEHB48
 2427 0160 D401     		.uleb128 .L126-.LFB1381
 2428 0162 00       		.uleb128 0
 2429 0163 6A       		.uleb128 .LEHB49-.LFB1381
 2430 0164 05       		.uleb128 .LEHE49-.LEHB49
 2431 0165 E501     		.uleb128 .L125-.LFB1381
 2432 0167 00       		.uleb128 0
 2433 0168 76       		.uleb128 .LEHB50-.LFB1381
 2434 0169 05       		.uleb128 .LEHE50-.LEHB50
 2435 016a 00       		.uleb128 0
 2436 016b 00       		.uleb128 0
 2437 016c 7B       		.uleb128 .LEHB51-.LFB1381
 2438 016d 54       		.uleb128 .LEHE51-.LEHB51
 2439 016e 9202     		.uleb128 .L127-.LFB1381
 2440 0170 01       		.uleb128 0x1
 2441 0171 FA01     		.uleb128 .LEHB52-.LFB1381
 2442 0173 05       		.uleb128 .LEHE52-.LEHB52
 2443 0174 00       		.uleb128 0
 2444 0175 00       		.uleb128 0
 2445 0176 8D02     		.uleb128 .LEHB53-.LFB1381
 2446 0178 05       		.uleb128 .LEHE53-.LEHB53
 2447 0179 00       		.uleb128 0
 2448 017a 00       		.uleb128 0
 2449 017b 9A02     		.uleb128 .LEHB54-.LFB1381
 2450 017d 38       		.uleb128 .LEHE54-.LEHB54
 2451 017e FF01     		.uleb128 .L128-.LFB1381
 2452 0180 00       		.uleb128 0
 2453 0181 D202     		.uleb128 .LEHB55-.LFB1381
 2454 0183 05       		.uleb128 .LEHE55-.LEHB55
 2455 0184 00       		.uleb128 0
 2456 0185 00       		.uleb128 0
 2457              	.LLSDACSE1381:
 2458 0186 01       		.byte	0x1
 2459 0187 00       		.byte	0
 2460              		.align 4
 2461 0188 00000000 		.long	0
 2462              	
 2463              	.LLSDATT1381:
 2464              		.text
 2466              		.section	.rodata
 2467 03c9 00000000 		.align 8
 2467      000000
 2468              	.LC41:
 2469 03d0 43686563 		.string	"CheckThrowMacroFailsOnWrongException"
 2469      6B546872 
 2469      6F774D61 
 2469      63726F46 
 2469      61696C73 
 2470              		.text
 2471              		.align 2
 2473              	_ZN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionC2Ev:
 2474              	.LFB1388:
  96:TestUnitTest++.cpp **** 
  97:TestUnitTest++.cpp **** TEST(CheckThrowMacroFailsOnWrongException)
 2475              		.loc 4 97 0
 2476              		.cfi_startproc
 2477 0eb8 55       		pushq	%rbp
 2478              		.cfi_def_cfa_offset 16
 2479              		.cfi_offset 6, -16
 2480 0eb9 4889E5   		movq	%rsp, %rbp
 2481              		.cfi_def_cfa_register 6
 2482 0ebc 4883EC10 		subq	$16, %rsp
 2483 0ec0 48897DF8 		movq	%rdi, -8(%rbp)
 2484              	.LBB44:
 2485              		.loc 4 97 0
 2486 0ec4 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 2486      00
 2487 0ec9 4889C2   		movq	%rax, %rdx
 2488 0ecc 488B45F8 		movq	-8(%rbp), %rax
 2489 0ed0 41B86100 		movl	$97, %r8d
 2489      0000
 2490 0ed6 B9000000 		movl	$.LC1, %ecx
 2490      00
 2491 0edb BE000000 		movl	$.LC41, %esi
 2491      00
 2492 0ee0 4889C7   		movq	%rax, %rdi
 2493 0ee3 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 2493      00
 2494 0ee8 488B45F8 		movq	-8(%rbp), %rax
 2495 0eec 48C70000 		movq	$_ZTVN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionE+16, (%rax)
 2495      000000
 2496              	.LBE44:
 2497 0ef3 C9       		leave
 2498              		.cfi_def_cfa 7, 8
 2499 0ef4 C3       		ret
 2500              		.cfi_endproc
 2501              	.LFE1388:
 2503              		.local	_ZN12_GLOBAL__N_148testCheckThrowMacroFailsOnWrongExceptionInstanceE
 2504              		.comm	_ZN12_GLOBAL__N_148testCheckThrowMacroFailsOnWrongExceptionInstanceE,56,32
 2505              		.local	_ZN12_GLOBAL__N_141adderCheckThrowMacroFailsOnWrongExceptionE
 2506              		.comm	_ZN12_GLOBAL__N_141adderCheckThrowMacroFailsOnWrongExceptionE,1,1
 2507              		.section	.rodata
 2508              	.LC42:
 2509 03f5 77726F6E 		.string	"wrongthrow"
 2509      67746872 
 2509      6F7700
 2510              		.text
 2511 0ef5 90       		.align 2
 2513              	_ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestC2Ev:
 2514              	.LFB1392:
  98:TestUnitTest++.cpp **** {
  99:TestUnitTest++.cpp ****     class WrongThrowTest : public UnitTest::Test
 100:TestUnitTest++.cpp ****     {
 101:TestUnitTest++.cpp ****     public:
 102:TestUnitTest++.cpp ****         WrongThrowTest() : Test("wrongthrow") {}
 2515              		.loc 4 102 0
 2516              		.cfi_startproc
 2517 0ef6 55       		pushq	%rbp
 2518              		.cfi_def_cfa_offset 16
 2519              		.cfi_offset 6, -16
 2520 0ef7 4889E5   		movq	%rsp, %rbp
 2521              		.cfi_def_cfa_register 6
 2522 0efa 4883EC10 		subq	$16, %rsp
 2523 0efe 48897DF8 		movq	%rdi, -8(%rbp)
 2524              	.LBB45:
 2525              		.loc 4 102 0
 2526 0f02 488B45F8 		movq	-8(%rbp), %rax
 2527 0f06 41B80000 		movl	$0, %r8d
 2527      0000
 2528 0f0c B9000000 		movl	$.LC37, %ecx
 2528      00
 2529 0f11 BA000000 		movl	$.LC0, %edx
 2529      00
 2530 0f16 BE000000 		movl	$.LC42, %esi
 2530      00
 2531 0f1b 4889C7   		movq	%rax, %rdi
 2532 0f1e E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 2532      00
 2533 0f23 488B45F8 		movq	-8(%rbp), %rax
 2534 0f27 48C70000 		movq	$_ZTVZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvE14WrongThrowTest+1
 2534      000000
 2535              	.LBE45:
 2536 0f2e C9       		leave
 2537              		.cfi_def_cfa 7, 8
 2538 0f2f C3       		ret
 2539              		.cfi_endproc
 2540              	.LFE1392:
 2542              		.section	.rodata
 2543              	.LC43:
 2544 0400 6F6F7073 		.string	"oops"
 2544      00
 2545              		.text
 2546              		.align 2
 2548              	_ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvENK14WrongThrowTest7RunImplE
 2549              	.LFB1394:
 103:TestUnitTest++.cpp ****         virtual void RunImpl() const
 2550              		.loc 4 103 0
 2551              		.cfi_startproc
 2552              		.cfi_personality 0x3,__gxx_personality_v0
 2553              		.cfi_lsda 0x3,.LLSDA1394
 2554 0f30 55       		pushq	%rbp
 2555              		.cfi_def_cfa_offset 16
 2556              		.cfi_offset 6, -16
 2557 0f31 4889E5   		movq	%rsp, %rbp
 2558              		.cfi_def_cfa_register 6
 2559 0f34 4883EC50 		subq	$80, %rsp
 2560 0f38 48897DB8 		movq	%rdi, -72(%rbp)
 2561              		.loc 4 103 0
 2562 0f3c 64488B04 		movq	%fs:40, %rax
 2562      25280000 
 2562      00
 2563 0f45 488945F8 		movq	%rax, -8(%rbp)
 2564 0f49 31C0     		xorl	%eax, %eax
 2565              	.LBB46:
 2566              	.LBB47:
 104:TestUnitTest++.cpp ****         {
 105:TestUnitTest++.cpp ****             CHECK_THROW(throw "oops", int);
 2567              		.loc 4 105 0
 2568 0f4b C645C700 		movb	$0, -57(%rbp)
 2569 0f4f BF080000 		movl	$8, %edi
 2569      00
 2570 0f54 E8000000 		call	__cxa_allocate_exception
 2570      00
 2571 0f59 48C70000 		movq	$.LC43, (%rax)
 2571      000000
 2572 0f60 BA000000 		movl	$0, %edx
 2572      00
 2573 0f65 BE000000 		movl	$_ZTIPKc, %esi
 2573      00
 2574 0f6a 4889C7   		movq	%rax, %rdi
 2575              	.LEHB56:
 2576 0f6d E8000000 		call	__cxa_throw
 2576      00
 2577              	.LEHE56:
 2578              	.L137:
 2579              		.loc 4 105 0 is_stmt 0 discriminator 6
 2580 0f72 0FB645C7 		movzbl	-57(%rbp), %eax
 2581 0f76 83F001   		xorl	$1, %eax
 2582 0f79 84C0     		testb	%al, %al
 2583 0f7b 7438     		je	.L133
 2584              	.LEHB57:
 2585              		.loc 4 105 0 discriminator 1
 2586 0f7d E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 2586      00
 2587 0f82 488B08   		movq	(%rax), %rcx
 2588 0f85 488D45D0 		leaq	-48(%rbp), %rax
 2589 0f89 BA690000 		movl	$105, %edx
 2589      00
 2590 0f8e 4889CE   		movq	%rcx, %rsi
 2591 0f91 4889C7   		movq	%rax, %rdi
 2592 0f94 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2592      00
 2593 0f99 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2593      00
 2594 0f9e 488B00   		movq	(%rax), %rax
 2595 0fa1 488D4DD0 		leaq	-48(%rbp), %rcx
 2596 0fa5 BA000000 		movl	$.LC39, %edx
 2596      00
 2597 0faa 4889CE   		movq	%rcx, %rsi
 2598 0fad 4889C7   		movq	%rax, %rdi
 2599 0fb0 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2599      00
 2600              	.L133:
 2601              	.LBE47:
 2602              	.LBE46:
 106:TestUnitTest++.cpp ****         }
 2603              		.loc 4 106 0 is_stmt 1
 2604 0fb5 488B45F8 		movq	-8(%rbp), %rax
 2605 0fb9 64483304 		xorq	%fs:40, %rax
 2605      25280000 
 2605      00
 2606 0fc2 7433     		je	.L138
 2607 0fc4 EB2C     		jmp	.L140
 2608              	.L139:
 2609 0fc6 4883FA01 		cmpq	$1, %rdx
 2610 0fca 7517     		jne	.L141
 2611              	.LBB50:
 2612              	.LBB49:
 2613              	.LBB48:
 105:TestUnitTest++.cpp ****         }
 2614              		.loc 4 105 0
 2615 0fcc 4889C7   		movq	%rax, %rdi
 2616 0fcf E8000000 		call	__cxa_begin_catch
 2616      00
 2617 0fd4 488945C8 		movq	%rax, -56(%rbp)
 2618 0fd8 C645C701 		movb	$1, -57(%rbp)
 2619 0fdc E8000000 		call	__cxa_end_catch
 2619      00
 2620 0fe1 EB8F     		jmp	.L137
 2621              	.L141:
 2622              	.LBE48:
 105:TestUnitTest++.cpp ****         }
 2623              		.loc 4 105 0 is_stmt 0 discriminator 7
 2624 0fe3 4889C7   		movq	%rax, %rdi
 2625 0fe6 E8000000 		call	__cxa_begin_catch
 2625      00
 2626 0feb E8000000 		call	__cxa_end_catch
 2626      00
 2627              	.LEHE57:
 2628 0ff0 EB80     		jmp	.L137
 2629              	.L140:
 2630              	.LBE49:
 2631              	.LBE50:
 2632              		.loc 4 106 0 is_stmt 1
 2633 0ff2 E8000000 		call	__stack_chk_fail
 2633      00
 2634              	.L138:
 2635 0ff7 C9       		leave
 2636              		.cfi_def_cfa 7, 8
 2637 0ff8 C3       		ret
 2638              		.cfi_endproc
 2639              	.LFE1394:
 2640              		.section	.gcc_except_table
 2641              		.align 4
 2642              	.LLSDA1394:
 2643 018c FF       		.byte	0xff
 2644 018d 03       		.byte	0x3
 2645 018e 19       		.uleb128 .LLSDATT1394-.LLSDATTD1394
 2646              	.LLSDATTD1394:
 2647 018f 01       		.byte	0x1
 2648 0190 09       		.uleb128 .LLSDACSE1394-.LLSDACSB1394
 2649              	.LLSDACSB1394:
 2650 0191 3D       		.uleb128 .LEHB56-.LFB1394
 2651 0192 05       		.uleb128 .LEHE56-.LEHB56
 2652 0193 9601     		.uleb128 .L139-.LFB1394
 2653 0195 03       		.uleb128 0x3
 2654 0196 4D       		.uleb128 .LEHB57-.LFB1394
 2655 0197 73       		.uleb128 .LEHE57-.LEHB57
 2656 0198 00       		.uleb128 0
 2657 0199 00       		.uleb128 0
 2658              	.LLSDACSE1394:
 2659 019a 02       		.byte	0x2
 2660 019b 00       		.byte	0
 2661 019c 01       		.byte	0x1
 2662 019d 7D       		.byte	0x7d
 2663 019e 0000     		.align 4
 2664 01a0 00000000 		.long	0
 2665              	
 2666 01a4 00000000 		.long	_ZTIi
 2667              	.LLSDATT1394:
 2668              		.text
 2670 0ff9 90       		.align 2
 2672              	_ZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEv:
 2673              	.LFB1390:
  98:TestUnitTest++.cpp ****     class WrongThrowTest : public UnitTest::Test
 2674              		.loc 4 98 0
 2675              		.cfi_startproc
 2676              		.cfi_personality 0x3,__gxx_personality_v0
 2677              		.cfi_lsda 0x3,.LLSDA1390
 2678 0ffa 55       		pushq	%rbp
 2679              		.cfi_def_cfa_offset 16
 2680              		.cfi_offset 6, -16
 2681 0ffb 4889E5   		movq	%rsp, %rbp
 2682              		.cfi_def_cfa_register 6
 2683 0ffe 53       		pushq	%rbx
 2684 0fff 4881EC98 		subq	$152, %rsp
 2684      000000
 2685              		.cfi_offset 3, -24
 2686 1006 4889BD68 		movq	%rdi, -152(%rbp)
 2686      FFFFFF
  98:TestUnitTest++.cpp ****     class WrongThrowTest : public UnitTest::Test
 2687              		.loc 4 98 0
 2688 100d 64488B04 		movq	%fs:40, %rax
 2688      25280000 
 2688      00
 2689 1016 488945E8 		movq	%rax, -24(%rbp)
 2690 101a 31C0     		xorl	%eax, %eax
 2691              	.LBB51:
 107:TestUnitTest++.cpp ****     };
 108:TestUnitTest++.cpp **** 
 109:TestUnitTest++.cpp ****     UnitTest::TestResults results;
 2692              		.loc 4 109 0
 2693 101c 488D4590 		leaq	-112(%rbp), %rax
 2694 1020 BE000000 		movl	$0, %esi
 2694      00
 2695 1025 4889C7   		movq	%rax, %rdi
 2696              	.LEHB58:
 2697 1028 E8000000 		call	_ZN8UnitTest11TestResultsC1EPNS_12TestReporterE
 2697      00
 2698              	.LBB52:
 110:TestUnitTest++.cpp **** 	{
 111:TestUnitTest++.cpp **** 		ScopedCurrentTest scopedResults(results);
 2699              		.loc 4 111 0
 2700 102d 488D4D90 		leaq	-112(%rbp), %rcx
 2701 1031 488D4580 		leaq	-128(%rbp), %rax
 2702 1035 BA000000 		movl	$0, %edx
 2702      00
 2703 103a 4889CE   		movq	%rcx, %rsi
 2704 103d 4889C7   		movq	%rax, %rdi
 2705 1040 E8000000 		call	_ZN17ScopedCurrentTestC1ERN8UnitTest11TestResultsEPKNS0_11TestDetailsE
 2705      00
 2706              	.LEHE58:
 112:TestUnitTest++.cpp **** 
 113:TestUnitTest++.cpp **** 		WrongThrowTest test;
 2707              		.loc 4 113 0
 2708 1045 488D45B0 		leaq	-80(%rbp), %rax
 2709 1049 4889C7   		movq	%rax, %rdi
 2710              	.LEHB59:
 2711 104c E8A5FEFF 		call	_ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestC2Ev
 2711      FF
 2712              	.LEHE59:
 114:TestUnitTest++.cpp **** 		test.Run();
 2713              		.loc 4 114 0
 2714 1051 488D45B0 		leaq	-80(%rbp), %rax
 2715 1055 4889C7   		movq	%rax, %rdi
 2716              	.LEHB60:
 2717 1058 E8000000 		call	_ZN8UnitTest4Test3RunEv
 2717      00
 2718              	.LEHE60:
 113:TestUnitTest++.cpp **** 		test.Run();
 2719              		.loc 4 113 0
 2720 105d 488D45B0 		leaq	-80(%rbp), %rax
 2721 1061 4889C7   		movq	%rax, %rdi
 2722              	.LEHB61:
 2723 1064 E8391200 		call	_ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestD2Ev
 2723      00
 2724              	.LEHE61:
 2725              		.loc 4 114 0
 2726 1069 488D4580 		leaq	-128(%rbp), %rax
 2727 106d 4889C7   		movq	%rax, %rdi
 2728              	.LEHB62:
 2729 1070 E8000000 		call	_ZN17ScopedCurrentTestD1Ev
 2729      00
 2730              	.LEHE62:
 2731              	.LEHB63:
 2732              	.LBE52:
 115:TestUnitTest++.cpp **** 	}
 116:TestUnitTest++.cpp **** 
 117:TestUnitTest++.cpp **** 	CHECK_EQUAL(1, results.GetFailureCount());
 2733              		.loc 4 117 0
 2734 1075 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 2734      00
 2735 107a 488B08   		movq	(%rax), %rcx
 2736 107d 488D45B0 		leaq	-80(%rbp), %rax
 2737 1081 BA750000 		movl	$117, %edx
 2737      00
 2738 1086 4889CE   		movq	%rcx, %rsi
 2739 1089 4889C7   		movq	%rax, %rdi
 2740 108c E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2740      00
 2741              		.loc 4 117 0 is_stmt 0 discriminator 2
 2742 1091 488D4590 		leaq	-112(%rbp), %rax
 2743 1095 4889C7   		movq	%rax, %rdi
 2744 1098 E8000000 		call	_ZNK8UnitTest11TestResults15GetFailureCountEv
 2744      00
 2745 109d 894580   		movl	%eax, -128(%rbp)
 2746 10a0 C7857CFF 		movl	$1, -132(%rbp)
 2746      FFFF0100 
 2746      0000
 2747 10aa E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2747      00
 2748              		.loc 4 117 0 discriminator 4
 2749 10af 488B00   		movq	(%rax), %rax
 2750 10b2 488D4DB0 		leaq	-80(%rbp), %rcx
 2751 10b6 488D5580 		leaq	-128(%rbp), %rdx
 2752 10ba 488DB57C 		leaq	-132(%rbp), %rsi
 2752      FFFFFF
 2753 10c1 4889C7   		movq	%rax, %rdi
 2754 10c4 E8000000 		call	_ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 2754      00
 2755              	.LEHE63:
 2756              	.LBE51:
 118:TestUnitTest++.cpp **** }
 2757              		.loc 4 118 0 is_stmt 1
 2758 10c9 E9830000 		jmp	.L153
 2758      00
 2759              	.L150:
 2760 10ce 4889C3   		movq	%rax, %rbx
 2761              	.LBB54:
 2762              	.LBB53:
 113:TestUnitTest++.cpp **** 		test.Run();
 2763              		.loc 4 113 0
 2764 10d1 488D45B0 		leaq	-80(%rbp), %rax
 2765 10d5 4889C7   		movq	%rax, %rdi
 2766 10d8 E8C51100 		call	_ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestD2Ev
 2766      00
 2767 10dd EB03     		jmp	.L144
 2768              	.L149:
 2769 10df 4889C3   		movq	%rax, %rbx
 2770              	.L144:
 114:TestUnitTest++.cpp **** 	}
 2771              		.loc 4 114 0
 2772 10e2 488D4580 		leaq	-128(%rbp), %rax
 2773 10e6 4889C7   		movq	%rax, %rdi
 2774 10e9 E8000000 		call	_ZN17ScopedCurrentTestD1Ev
 2774      00
 2775 10ee 4889D8   		movq	%rbx, %rax
 2776 10f1 4889C7   		movq	%rax, %rdi
 2777              	.LEHB64:
 2778 10f4 E8000000 		call	_Unwind_Resume
 2778      00
 2779              	.LEHE64:
 2780              	.L152:
 2781 10f9 4889C3   		movq	%rax, %rbx
 2782              	.LBE53:
 117:TestUnitTest++.cpp **** }
 2783              		.loc 4 117 0
 2784 10fc E8000000 		call	__cxa_end_catch
 2784      00
 2785 1101 4889D8   		movq	%rbx, %rax
 2786 1104 4889C7   		movq	%rax, %rdi
 2787              	.LEHB65:
 2788 1107 E8000000 		call	_Unwind_Resume
 2788      00
 2789              	.LEHE65:
 2790              	.L151:
 2791 110c 4889C7   		movq	%rax, %rdi
 2792 110f E8000000 		call	__cxa_begin_catch
 2792      00
 2793              	.LEHB66:
 2794 1114 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 2794      00
 2795 1119 488B08   		movq	(%rax), %rcx
 2796 111c 488D45B0 		leaq	-80(%rbp), %rax
 2797 1120 BA750000 		movl	$117, %edx
 2797      00
 2798 1125 4889CE   		movq	%rcx, %rsi
 2799 1128 4889C7   		movq	%rax, %rdi
 2800 112b E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2800      00
 117:TestUnitTest++.cpp **** }
 2801              		.loc 4 117 0 is_stmt 0 discriminator 12
 2802 1130 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2802      00
 2803 1135 488B00   		movq	(%rax), %rax
 2804 1138 488D4DB0 		leaq	-80(%rbp), %rcx
 2805 113c BA000000 		movl	$.LC40, %edx
 2805      00
 2806 1141 4889CE   		movq	%rcx, %rsi
 2807 1144 4889C7   		movq	%rax, %rdi
 2808 1147 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2808      00
 2809              	.LEHE66:
 2810              	.LEHB67:
 117:TestUnitTest++.cpp **** }
 2811              		.loc 4 117 0 discriminator 16
 2812 114c E8000000 		call	__cxa_end_catch
 2812      00
 2813              	.LEHE67:
 2814              	.L153:
 2815              	.LBE54:
 2816              		.loc 4 118 0 is_stmt 1
 2817 1151 90       		nop
 2818 1152 488B45E8 		movq	-24(%rbp), %rax
 2819 1156 64483304 		xorq	%fs:40, %rax
 2819      25280000 
 2819      00
 2820 115f 7405     		je	.L148
 2821 1161 E8000000 		call	__stack_chk_fail
 2821      00
 2822              	.L148:
 2823 1166 4881C498 		addq	$152, %rsp
 2823      000000
 2824 116d 5B       		popq	%rbx
 2825 116e 5D       		popq	%rbp
 2826              		.cfi_def_cfa 7, 8
 2827 116f C3       		ret
 2828              		.cfi_endproc
 2829              	.LFE1390:
 2830              		.section	.gcc_except_table
 2831              		.align 4
 2832              	.LLSDA1390:
 2833 01a8 FF       		.byte	0xff
 2834 01a9 03       		.byte	0x3
 2835 01aa 39       		.uleb128 .LLSDATT1390-.LLSDATTD1390
 2836              	.LLSDATTD1390:
 2837 01ab 01       		.byte	0x1
 2838 01ac 31       		.uleb128 .LLSDACSE1390-.LLSDACSB1390
 2839              	.LLSDACSB1390:
 2840 01ad 2E       		.uleb128 .LEHB58-.LFB1390
 2841 01ae 1D       		.uleb128 .LEHE58-.LEHB58
 2842 01af 00       		.uleb128 0
 2843 01b0 00       		.uleb128 0
 2844 01b1 52       		.uleb128 .LEHB59-.LFB1390
 2845 01b2 05       		.uleb128 .LEHE59-.LEHB59
 2846 01b3 E501     		.uleb128 .L149-.LFB1390
 2847 01b5 00       		.uleb128 0
 2848 01b6 5E       		.uleb128 .LEHB60-.LFB1390
 2849 01b7 05       		.uleb128 .LEHE60-.LEHB60
 2850 01b8 D401     		.uleb128 .L150-.LFB1390
 2851 01ba 00       		.uleb128 0
 2852 01bb 6A       		.uleb128 .LEHB61-.LFB1390
 2853 01bc 05       		.uleb128 .LEHE61-.LEHB61
 2854 01bd E501     		.uleb128 .L149-.LFB1390
 2855 01bf 00       		.uleb128 0
 2856 01c0 76       		.uleb128 .LEHB62-.LFB1390
 2857 01c1 05       		.uleb128 .LEHE62-.LEHB62
 2858 01c2 00       		.uleb128 0
 2859 01c3 00       		.uleb128 0
 2860 01c4 7B       		.uleb128 .LEHB63-.LFB1390
 2861 01c5 54       		.uleb128 .LEHE63-.LEHB63
 2862 01c6 9202     		.uleb128 .L151-.LFB1390
 2863 01c8 01       		.uleb128 0x1
 2864 01c9 FA01     		.uleb128 .LEHB64-.LFB1390
 2865 01cb 05       		.uleb128 .LEHE64-.LEHB64
 2866 01cc 00       		.uleb128 0
 2867 01cd 00       		.uleb128 0
 2868 01ce 8D02     		.uleb128 .LEHB65-.LFB1390
 2869 01d0 05       		.uleb128 .LEHE65-.LEHB65
 2870 01d1 00       		.uleb128 0
 2871 01d2 00       		.uleb128 0
 2872 01d3 9A02     		.uleb128 .LEHB66-.LFB1390
 2873 01d5 38       		.uleb128 .LEHE66-.LEHB66
 2874 01d6 FF01     		.uleb128 .L152-.LFB1390
 2875 01d8 00       		.uleb128 0
 2876 01d9 D202     		.uleb128 .LEHB67-.LFB1390
 2877 01db 05       		.uleb128 .LEHE67-.LEHB67
 2878 01dc 00       		.uleb128 0
 2879 01dd 00       		.uleb128 0
 2880              	.LLSDACSE1390:
 2881 01de 01       		.byte	0x1
 2882 01df 00       		.byte	0
 2883              		.align 4
 2884 01e0 00000000 		.long	0
 2885              	
 2886              	.LLSDATT1390:
 2887              		.text
 2889              		.align 2
 2891              	_ZN12_GLOBAL__N_113SimpleFixtureC2Ev:
 2892              	.LFB1396:
 119:TestUnitTest++.cpp **** 
 120:TestUnitTest++.cpp **** struct SimpleFixture
 121:TestUnitTest++.cpp **** {
 122:TestUnitTest++.cpp ****     SimpleFixture()
 2893              		.loc 4 122 0
 2894              		.cfi_startproc
 2895 1170 55       		pushq	%rbp
 2896              		.cfi_def_cfa_offset 16
 2897              		.cfi_offset 6, -16
 2898 1171 4889E5   		movq	%rsp, %rbp
 2899              		.cfi_def_cfa_register 6
 2900 1174 48897DF8 		movq	%rdi, -8(%rbp)
 2901              	.LBB55:
 123:TestUnitTest++.cpp ****     {
 124:TestUnitTest++.cpp ****         ++instanceCount;
 2902              		.loc 4 124 0
 2903 1178 8B050000 		movl	_ZN12_GLOBAL__N_113SimpleFixture13instanceCountE(%rip), %eax
 2903      0000
 2904 117e 83C001   		addl	$1, %eax
 2905 1181 89050000 		movl	%eax, _ZN12_GLOBAL__N_113SimpleFixture13instanceCountE(%rip)
 2905      0000
 2906              	.LBE55:
 125:TestUnitTest++.cpp ****     }
 2907              		.loc 4 125 0
 2908 1187 5D       		popq	%rbp
 2909              		.cfi_def_cfa 7, 8
 2910 1188 C3       		ret
 2911              		.cfi_endproc
 2912              	.LFE1396:
 2914 1189 90       		.align 2
 2916              	_ZN12_GLOBAL__N_113SimpleFixtureD2Ev:
 2917              	.LFB1399:
 126:TestUnitTest++.cpp ****     ~SimpleFixture()
 2918              		.loc 4 126 0
 2919              		.cfi_startproc
 2920 118a 55       		pushq	%rbp
 2921              		.cfi_def_cfa_offset 16
 2922              		.cfi_offset 6, -16
 2923 118b 4889E5   		movq	%rsp, %rbp
 2924              		.cfi_def_cfa_register 6
 2925 118e 48897DF8 		movq	%rdi, -8(%rbp)
 2926              	.LBB56:
 127:TestUnitTest++.cpp ****     {
 128:TestUnitTest++.cpp ****         --instanceCount;
 2927              		.loc 4 128 0
 2928 1192 8B050000 		movl	_ZN12_GLOBAL__N_113SimpleFixture13instanceCountE(%rip), %eax
 2928      0000
 2929 1198 83E801   		subl	$1, %eax
 2930 119b 89050000 		movl	%eax, _ZN12_GLOBAL__N_113SimpleFixture13instanceCountE(%rip)
 2930      0000
 2931              	.LBE56:
 129:TestUnitTest++.cpp ****     }
 2932              		.loc 4 129 0
 2933 11a1 5D       		popq	%rbp
 2934              		.cfi_def_cfa 7, 8
 2935 11a2 C3       		ret
 2936              		.cfi_endproc
 2937              	.LFE1399:
 2939              		.local	_ZN12_GLOBAL__N_113SimpleFixture13instanceCountE
 2940              		.comm	_ZN12_GLOBAL__N_113SimpleFixture13instanceCountE,4,4
 2941 11a3 90       		.align 2
 2943              	_ZN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelperC2ERKN8UnitTest11TestDetailsE:
 2944              	.LFB1402:
 130:TestUnitTest++.cpp **** 
 131:TestUnitTest++.cpp ****     static int instanceCount;
 132:TestUnitTest++.cpp **** };
 133:TestUnitTest++.cpp **** 
 134:TestUnitTest++.cpp **** int SimpleFixture::instanceCount = 0;
 135:TestUnitTest++.cpp **** 
 136:TestUnitTest++.cpp **** TEST_FIXTURE(SimpleFixture, DefaultFixtureCtorIsCalled)
 2945              		.loc 4 136 0
 2946              		.cfi_startproc
 2947 11a4 55       		pushq	%rbp
 2948              		.cfi_def_cfa_offset 16
 2949              		.cfi_offset 6, -16
 2950 11a5 4889E5   		movq	%rsp, %rbp
 2951              		.cfi_def_cfa_register 6
 2952 11a8 4883EC10 		subq	$16, %rsp
 2953 11ac 48897DF8 		movq	%rdi, -8(%rbp)
 2954 11b0 488975F0 		movq	%rsi, -16(%rbp)
 2955              	.LBB57:
 2956              		.loc 4 136 0
 2957 11b4 488B45F8 		movq	-8(%rbp), %rax
 2958 11b8 4889C7   		movq	%rax, %rdi
 2959 11bb E8B0FFFF 		call	_ZN12_GLOBAL__N_113SimpleFixtureC2Ev
 2959      FF
 2960 11c0 488B45F8 		movq	-8(%rbp), %rax
 2961 11c4 488B55F0 		movq	-16(%rbp), %rdx
 2962 11c8 488910   		movq	%rdx, (%rax)
 2963              	.LBE57:
 2964 11cb C9       		leave
 2965              		.cfi_def_cfa 7, 8
 2966 11cc C3       		ret
 2967              		.cfi_endproc
 2968              	.LFE1402:
 2970              		.section	.rodata
 2971              	.LC44:
 2972 0405 44656661 		.string	"DefaultFixtureCtorIsCalled"
 2972      756C7446 
 2972      69787475 
 2972      72654374 
 2972      6F724973 
 2973              		.text
 2974 11cd 90       		.align 2
 2976              	_ZN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledC2Ev:
 2977              	.LFB1405:
 2978              		.loc 4 136 0
 2979              		.cfi_startproc
 2980 11ce 55       		pushq	%rbp
 2981              		.cfi_def_cfa_offset 16
 2982              		.cfi_offset 6, -16
 2983 11cf 4889E5   		movq	%rsp, %rbp
 2984              		.cfi_def_cfa_register 6
 2985 11d2 4883EC10 		subq	$16, %rsp
 2986 11d6 48897DF8 		movq	%rdi, -8(%rbp)
 2987              	.LBB58:
 2988              		.loc 4 136 0
 2989 11da E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 2989      00
 2990 11df 4889C2   		movq	%rax, %rdx
 2991 11e2 488B45F8 		movq	-8(%rbp), %rax
 2992 11e6 41B88800 		movl	$136, %r8d
 2992      0000
 2993 11ec B9000000 		movl	$.LC1, %ecx
 2993      00
 2994 11f1 BE000000 		movl	$.LC44, %esi
 2994      00
 2995 11f6 4889C7   		movq	%rax, %rdi
 2996 11f9 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 2996      00
 2997 11fe 488B45F8 		movq	-8(%rbp), %rax
 2998 1202 48C70000 		movq	$_ZTVN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledE+16, (%rax)
 2998      000000
 2999              	.LBE58:
 3000 1209 C9       		leave
 3001              		.cfi_def_cfa 7, 8
 3002 120a C3       		ret
 3003              		.cfi_endproc
 3004              	.LFE1405:
 3006              		.local	_ZN12_GLOBAL__N_151testSimpleFixtureDefaultFixtureCtorIsCalledInstanceE
 3007              		.comm	_ZN12_GLOBAL__N_151testSimpleFixtureDefaultFixtureCtorIsCalledInstanceE,56,32
 3008              		.local	_ZN12_GLOBAL__N_144adderSimpleFixtureDefaultFixtureCtorIsCalledE
 3009              		.comm	_ZN12_GLOBAL__N_144adderSimpleFixtureDefaultFixtureCtorIsCalledE,1,1
 3010 120b 90       		.align 2
 3012              	_ZN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelperD2Ev:
 3013              	.LFB1409:
 3014              		.loc 4 136 0
 3015              		.cfi_startproc
 3016 120c 55       		pushq	%rbp
 3017              		.cfi_def_cfa_offset 16
 3018              		.cfi_offset 6, -16
 3019 120d 4889E5   		movq	%rsp, %rbp
 3020              		.cfi_def_cfa_register 6
 3021 1210 4883EC08 		subq	$8, %rsp
 3022 1214 48897DF8 		movq	%rdi, -8(%rbp)
 3023              	.LBB59:
 3024              		.loc 4 136 0
 3025 1218 488B45F8 		movq	-8(%rbp), %rax
 3026 121c 4889C7   		movq	%rax, %rdi
 3027 121f E866FFFF 		call	_ZN12_GLOBAL__N_113SimpleFixtureD2Ev
 3027      FF
 3028              	.LBE59:
 3029 1224 C9       		leave
 3030              		.cfi_def_cfa 7, 8
 3031 1225 C3       		ret
 3032              		.cfi_endproc
 3033              	.LFE1409:
 3035              		.section	.rodata
 3036              	.LC45:
 3037 0420 556E6861 		.string	"Unhandled exception: "
 3037      6E646C65 
 3037      64206578 
 3037      63657074 
 3037      696F6E3A 
 3038 0436 0000     		.align 8
 3039              	.LC46:
 3040 0438 556E6861 		.string	"Unhandled exception while destroying fixture SimpleFixture"
 3040      6E646C65 
 3040      64206578 
 3040      63657074 
 3040      696F6E20 
 3041 0473 00000000 		.align 8
 3041      00
 3042              	.LC47:
 3043 0478 556E6861 		.string	"Unhandled exception while constructing fixture SimpleFixture"
 3043      6E646C65 
 3043      64206578 
 3043      63657074 
 3043      696F6E20 
 3044              		.text
 3045              		.align 2
 3047              	_ZNK12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalled7RunImplEv:
 3048              	.LFB1407:
 3049              		.loc 4 136 0
 3050              		.cfi_startproc
 3051              		.cfi_personality 0x3,__gxx_personality_v0
 3052              		.cfi_lsda 0x3,.LLSDA1407
 3053 1226 55       		pushq	%rbp
 3054              		.cfi_def_cfa_offset 16
 3055              		.cfi_offset 6, -16
 3056 1227 4889E5   		movq	%rsp, %rbp
 3057              		.cfi_def_cfa_register 6
 3058 122a 4154     		pushq	%r12
 3059 122c 53       		pushq	%rbx
 3060 122d 4881ECC0 		subq	$448, %rsp
 3060      010000
 3061              		.cfi_offset 12, -24
 3062              		.cfi_offset 3, -32
 3063 1234 4889BD38 		movq	%rdi, -456(%rbp)
 3063      FEFFFF
 3064              		.loc 4 136 0
 3065 123b 64488B04 		movq	%fs:40, %rax
 3065      25280000 
 3065      00
 3066 1244 488945E8 		movq	%rax, -24(%rbp)
 3067 1248 31C0     		xorl	%eax, %eax
 3068              	.LBB60:
 3069 124a C6854FFE 		movb	$0, -433(%rbp)
 3069      FFFF00
 3070              	.LBB61:
 3071 1251 488B8538 		movq	-456(%rbp), %rax
 3071      FEFFFF
 3072 1258 488D5008 		leaq	8(%rax), %rdx
 3073 125c 488D8560 		leaq	-416(%rbp), %rax
 3073      FEFFFF
 3074 1263 4889D6   		movq	%rdx, %rsi
 3075 1266 4889C7   		movq	%rax, %rdi
 3076 1269 E836FFFF 		call	_ZN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelperC2ERKN8UnitTest11TestDetailsE
 3076      FF
 3077 126e C6854FFE 		movb	$1, -433(%rbp)
 3077      FFFF01
 3078 1275 488B8538 		movq	-456(%rbp), %rax
 3078      FEFFFF
 3079 127c 488D5008 		leaq	8(%rax), %rdx
 3080 1280 488D8560 		leaq	-416(%rbp), %rax
 3080      FEFFFF
 3081 1287 4889D6   		movq	%rdx, %rsi
 3082 128a 4889C7   		movq	%rax, %rdi
 3083              	.LEHB68:
 3084 128d E8140900 		call	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelperEEEvR
 3084      00
 3085              	.LEHE68:
 3086              		.loc 4 136 0 is_stmt 0 discriminator 2
 3087 1292 488D8560 		leaq	-416(%rbp), %rax
 3087      FEFFFF
 3088 1299 4889C7   		movq	%rax, %rdi
 3089 129c E86BFFFF 		call	_ZN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelperD2Ev
 3089      FF
 3090              	.LBE61:
 3091              	.LBE60:
 3092 12a1 E9620200 		jmp	.L180
 3092      00
 3093              	.L174:
 3094 12a6 4989C4   		movq	%rax, %r12
 3095 12a9 4889D3   		movq	%rdx, %rbx
 3096              	.LBB69:
 3097              	.LBB62:
 3098              		.loc 4 136 0
 3099 12ac 488D8560 		leaq	-416(%rbp), %rax
 3099      FEFFFF
 3100 12b3 4889C7   		movq	%rax, %rdi
 3101 12b6 E851FFFF 		call	_ZN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelperD2Ev
 3101      FF
 3102 12bb 4C89E0   		movq	%r12, %rax
 3103 12be 4889DA   		movq	%rbx, %rdx
 3104 12c1 4883FA01 		cmpq	$1, %rdx
 3105 12c5 745C     		je	.L164
 3106 12c7 4883FA02 		cmpq	$2, %rdx
 3107 12cb 0F84F400 		je	.L165
 3107      0000
 3108 12d1 E9980100 		jmp	.L179
 3108      00
 3109              	.L175:
 3110 12d6 4889C3   		movq	%rax, %rbx
 3111              	.LBE62:
 3112              	.LBB63:
 3113 12d9 E8000000 		call	__cxa_end_catch
 3113      00
 3114 12de 4889D8   		movq	%rbx, %rax
 3115 12e1 4889C7   		movq	%rax, %rdi
 3116              	.LEHB69:
 3117 12e4 E8000000 		call	_Unwind_Resume
 3117      00
 3118              	.LEHE69:
 3119              	.L176:
 3120 12e9 4889C3   		movq	%rax, %rbx
 3121              	.LBE63:
 3122              	.LBB64:
 3123              	.LBB65:
 3124 12ec 488D8580 		leaq	-384(%rbp), %rax
 3124      FEFFFF
 3125 12f3 4889C7   		movq	%rax, %rdi
 3126 12f6 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 3126      00
 3127 12fb EB03     		jmp	.L168
 3128              	.L177:
 3129 12fd 4889C3   		movq	%rax, %rbx
 3130              	.L168:
 3131              	.LBE65:
 3132 1300 E8000000 		call	__cxa_end_catch
 3132      00
 3133 1305 4889D8   		movq	%rbx, %rax
 3134 1308 4889C7   		movq	%rax, %rdi
 3135              	.LEHB70:
 3136 130b E8000000 		call	_Unwind_Resume
 3136      00
 3137              	.LEHE70:
 3138              	.L178:
 3139 1310 4889C3   		movq	%rax, %rbx
 3140              	.LBE64:
 3141 1313 E8000000 		call	__cxa_end_catch
 3141      00
 3142 1318 4889D8   		movq	%rbx, %rax
 3143 131b 4889C7   		movq	%rax, %rdi
 3144              	.LEHB71:
 3145 131e E8000000 		call	_Unwind_Resume
 3145      00
 3146              	.LEHE71:
 3147              	.L164:
 3148              	.LBB67:
 3149 1323 4889C7   		movq	%rax, %rdi
 3150 1326 E8000000 		call	__cxa_begin_catch
 3150      00
 3151 132b 48898550 		movq	%rax, -432(%rbp)
 3151      FEFFFF
 3152 1332 488B8550 		movq	-432(%rbp), %rax
 3152      FEFFFF
 3153 1339 488B00   		movq	(%rax), %rax
 3154 133c 4883C010 		addq	$16, %rax
 3155 1340 488B00   		movq	(%rax), %rax
 3156 1343 488B9550 		movq	-432(%rbp), %rdx
 3156      FEFFFF
 3157 134a 4889D7   		movq	%rdx, %rdi
 3158 134d FFD0     		call	*%rax
 3159 134f 4889C3   		movq	%rax, %rbx
 3160 1352 488B8550 		movq	-432(%rbp), %rax
 3160      FEFFFF
 3161 1359 4889C7   		movq	%rax, %rdi
 3162              	.LEHB72:
 3163 135c E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 3163      00
 3164 1361 4189C4   		movl	%eax, %r12d
 3165 1364 488B8550 		movq	-432(%rbp), %rax
 3165      FEFFFF
 3166 136b 4889C7   		movq	%rax, %rdi
 3167 136e E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 3167      00
 3168              		.loc 4 136 0 discriminator 4
 3169 1373 4889C1   		movq	%rax, %rcx
 3170 1376 488B8538 		movq	-456(%rbp), %rax
 3170      FEFFFF
 3171 137d 488B5008 		movq	8(%rax), %rdx
 3172 1381 488B8538 		movq	-456(%rbp), %rax
 3172      FEFFFF
 3173 1388 488B7010 		movq	16(%rax), %rsi
 3174 138c 488D8560 		leaq	-416(%rbp), %rax
 3174      FEFFFF
 3175 1393 4589E0   		movl	%r12d, %r8d
 3176 1396 4889C7   		movq	%rax, %rdi
 3177 1399 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 3177      00
 3178              		.loc 4 136 0 discriminator 8
 3179 139e E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3179      00
 3180 13a3 488B00   		movq	(%rax), %rax
 3181 13a6 488D8D60 		leaq	-416(%rbp), %rcx
 3181      FEFFFF
 3182 13ad 4889DA   		movq	%rbx, %rdx
 3183 13b0 4889CE   		movq	%rcx, %rsi
 3184 13b3 4889C7   		movq	%rax, %rdi
 3185 13b6 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3185      00
 3186              	.LEHE72:
 3187              		.loc 4 136 0 discriminator 12
 3188 13bb E8000000 		call	__cxa_end_catch
 3188      00
 3189              	.LBE67:
 3190              	.LBE69:
 3191 13c0 E9430100 		jmp	.L180
 3191      00
 3192              	.L165:
 3193              	.LBB70:
 3194              	.LBB68:
 3195              		.loc 4 136 0
 3196 13c5 4889C7   		movq	%rax, %rdi
 3197 13c8 E8000000 		call	__cxa_begin_catch
 3197      00
 3198 13cd 48898558 		movq	%rax, -424(%rbp)
 3198      FEFFFF
 3199              	.LBB66:
 3200 13d4 488D8580 		leaq	-384(%rbp), %rax
 3200      FEFFFF
 3201 13db 4889C7   		movq	%rax, %rdi
 3202              	.LEHB73:
 3203 13de E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 3203      00
 3204              	.LEHE73:
 3205              		.loc 4 136 0 discriminator 14
 3206 13e3 488B8558 		movq	-424(%rbp), %rax
 3206      FEFFFF
 3207 13ea 488B00   		movq	(%rax), %rax
 3208 13ed 4883C010 		addq	$16, %rax
 3209 13f1 488B00   		movq	(%rax), %rax
 3210 13f4 488B9558 		movq	-424(%rbp), %rdx
 3210      FEFFFF
 3211 13fb 4889D7   		movq	%rdx, %rdi
 3212 13fe FFD0     		call	*%rax
 3213 1400 4889C3   		movq	%rax, %rbx
 3214 1403 488D8580 		leaq	-384(%rbp), %rax
 3214      FEFFFF
 3215 140a BE000000 		movl	$.LC45, %esi
 3215      00
 3216 140f 4889C7   		movq	%rax, %rdi
 3217              	.LEHB74:
 3218 1412 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 3218      00
 3219 1417 4889DE   		movq	%rbx, %rsi
 3220 141a 4889C7   		movq	%rax, %rdi
 3221 141d E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 3221      00
 3222              		.loc 4 136 0 discriminator 18
 3223 1422 488D8580 		leaq	-384(%rbp), %rax
 3223      FEFFFF
 3224 1429 4889C7   		movq	%rax, %rdi
 3225 142c E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 3225      00
 3226 1431 4989C4   		movq	%rax, %r12
 3227 1434 488B8538 		movq	-456(%rbp), %rax
 3227      FEFFFF
 3228 143b 488D5808 		leaq	8(%rax), %rbx
 3229 143f E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3229      00
 3230              		.loc 4 136 0 discriminator 20
 3231 1444 488B00   		movq	(%rax), %rax
 3232 1447 4C89E2   		movq	%r12, %rdx
 3233 144a 4889DE   		movq	%rbx, %rsi
 3234 144d 4889C7   		movq	%rax, %rdi
 3235 1450 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3235      00
 3236              	.LEHE74:
 3237              		.loc 4 136 0 discriminator 24
 3238 1455 488D8580 		leaq	-384(%rbp), %rax
 3238      FEFFFF
 3239 145c 4889C7   		movq	%rax, %rdi
 3240              	.LEHB75:
 3241 145f E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 3241      00
 3242              	.LEHE75:
 3243              	.LBE66:
 3244              		.loc 4 136 0 discriminator 25
 3245 1464 E8000000 		call	__cxa_end_catch
 3245      00
 3246              	.LBE68:
 3247              	.LBE70:
 3248 1469 E99A0000 		jmp	.L180
 3248      00
 3249              	.L179:
 3250              	.LBB71:
 3251              		.loc 4 136 0
 3252 146e 4889C7   		movq	%rax, %rdi
 3253 1471 E8000000 		call	__cxa_begin_catch
 3253      00
 3254 1476 80BD4FFE 		cmpb	$0, -433(%rbp)
 3254      FFFF00
 3255 147d 7443     		je	.L171
 3256              		.loc 4 136 0 discriminator 27
 3257 147f 488B8538 		movq	-456(%rbp), %rax
 3257      FEFFFF
 3258 1486 488D4808 		leaq	8(%rax), %rcx
 3259 148a 488D8560 		leaq	-416(%rbp), %rax
 3259      FEFFFF
 3260 1491 BA880000 		movl	$136, %edx
 3260      00
 3261 1496 4889CE   		movq	%rcx, %rsi
 3262 1499 4889C7   		movq	%rax, %rdi
 3263              	.LEHB76:
 3264 149c E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3264      00
 3265              		.loc 4 136 0 discriminator 30
 3266 14a1 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3266      00
 3267 14a6 488B00   		movq	(%rax), %rax
 3268 14a9 488D8D60 		leaq	-416(%rbp), %rcx
 3268      FEFFFF
 3269 14b0 BA000000 		movl	$.LC46, %edx
 3269      00
 3270 14b5 4889CE   		movq	%rcx, %rsi
 3271 14b8 4889C7   		movq	%rax, %rdi
 3272 14bb E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3272      00
 3273 14c0 EB41     		jmp	.L172
 3274              	.L171:
 3275              		.loc 4 136 0 discriminator 28
 3276 14c2 488B8538 		movq	-456(%rbp), %rax
 3276      FEFFFF
 3277 14c9 488D4808 		leaq	8(%rax), %rcx
 3278 14cd 488D8560 		leaq	-416(%rbp), %rax
 3278      FEFFFF
 3279 14d4 BA880000 		movl	$136, %edx
 3279      00
 3280 14d9 4889CE   		movq	%rcx, %rsi
 3281 14dc 4889C7   		movq	%rax, %rdi
 3282 14df E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3282      00
 3283              		.loc 4 136 0 discriminator 37
 3284 14e4 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3284      00
 3285 14e9 488B00   		movq	(%rax), %rax
 3286 14ec 488D8D60 		leaq	-416(%rbp), %rcx
 3286      FEFFFF
 3287 14f3 BA000000 		movl	$.LC47, %edx
 3287      00
 3288 14f8 4889CE   		movq	%rcx, %rsi
 3289 14fb 4889C7   		movq	%rax, %rdi
 3290 14fe E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3290      00
 3291              	.LEHE76:
 3292              	.L172:
 3293              	.LEHB77:
 3294              		.loc 4 136 0 discriminator 42
 3295 1503 E8000000 		call	__cxa_end_catch
 3295      00
 3296              	.LEHE77:
 3297              	.L180:
 3298              	.LBE71:
 3299              		.loc 4 136 0
 3300 1508 90       		nop
 3301 1509 488B45E8 		movq	-24(%rbp), %rax
 3302 150d 64483304 		xorq	%fs:40, %rax
 3302      25280000 
 3302      00
 3303 1516 7405     		je	.L173
 3304 1518 E8000000 		call	__stack_chk_fail
 3304      00
 3305              	.L173:
 3306 151d 4881C4C0 		addq	$448, %rsp
 3306      010000
 3307 1524 5B       		popq	%rbx
 3308 1525 415C     		popq	%r12
 3309 1527 5D       		popq	%rbp
 3310              		.cfi_def_cfa 7, 8
 3311 1528 C3       		ret
 3312              		.cfi_endproc
 3313              	.LFE1407:
 3314              		.section	.gcc_except_table
 3315              		.align 4
 3316              	.LLSDA1407:
 3317 01e4 FF       		.byte	0xff
 3318 01e5 03       		.byte	0x3
 3319 01e6 4D       		.uleb128 .LLSDATT1407-.LLSDATTD1407
 3320              	.LLSDATTD1407:
 3321 01e7 01       		.byte	0x1
 3322 01e8 37       		.uleb128 .LLSDACSE1407-.LLSDACSB1407
 3323              	.LLSDACSB1407:
 3324 01e9 67       		.uleb128 .LEHB68-.LFB1407
 3325 01ea 05       		.uleb128 .LEHE68-.LEHB68
 3326 01eb 8001     		.uleb128 .L174-.LFB1407
 3327 01ed 07       		.uleb128 0x7
 3328 01ee BE01     		.uleb128 .LEHB69-.LFB1407
 3329 01f0 05       		.uleb128 .LEHE69-.LEHB69
 3330 01f1 00       		.uleb128 0
 3331 01f2 00       		.uleb128 0
 3332 01f3 E501     		.uleb128 .LEHB70-.LFB1407
 3333 01f5 05       		.uleb128 .LEHE70-.LEHB70
 3334 01f6 00       		.uleb128 0
 3335 01f7 00       		.uleb128 0
 3336 01f8 F801     		.uleb128 .LEHB71-.LFB1407
 3337 01fa 05       		.uleb128 .LEHE71-.LEHB71
 3338 01fb 00       		.uleb128 0
 3339 01fc 00       		.uleb128 0
 3340 01fd B602     		.uleb128 .LEHB72-.LFB1407
 3341 01ff 5F       		.uleb128 .LEHE72-.LEHB72
 3342 0200 B001     		.uleb128 .L175-.LFB1407
 3343 0202 00       		.uleb128 0
 3344 0203 B803     		.uleb128 .LEHB73-.LFB1407
 3345 0205 05       		.uleb128 .LEHE73-.LEHB73
 3346 0206 D701     		.uleb128 .L177-.LFB1407
 3347 0208 00       		.uleb128 0
 3348 0209 EC03     		.uleb128 .LEHB74-.LFB1407
 3349 020b 43       		.uleb128 .LEHE74-.LEHB74
 3350 020c C301     		.uleb128 .L176-.LFB1407
 3351 020e 00       		.uleb128 0
 3352 020f B904     		.uleb128 .LEHB75-.LFB1407
 3353 0211 05       		.uleb128 .LEHE75-.LEHB75
 3354 0212 D701     		.uleb128 .L177-.LFB1407
 3355 0214 00       		.uleb128 0
 3356 0215 F604     		.uleb128 .LEHB76-.LFB1407
 3357 0217 67       		.uleb128 .LEHE76-.LEHB76
 3358 0218 EA01     		.uleb128 .L178-.LFB1407
 3359 021a 00       		.uleb128 0
 3360 021b DD05     		.uleb128 .LEHB77-.LFB1407
 3361 021d 05       		.uleb128 .LEHE77-.LEHB77
 3362 021e 00       		.uleb128 0
 3363 021f 00       		.uleb128 0
 3364              	.LLSDACSE1407:
 3365 0220 03       		.byte	0x3
 3366 0221 00       		.byte	0
 3367 0222 02       		.byte	0x2
 3368 0223 7D       		.byte	0x7d
 3369 0224 01       		.byte	0x1
 3370 0225 7D       		.byte	0x7d
 3371 0226 00       		.byte	0
 3372 0227 7D       		.byte	0x7d
 3373              		.align 4
 3374 0228 00000000 		.long	0
 3375              	
 3376 022c 00000000 		.long	_ZTISt9exception
 3377 0230 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 3378              	.LLSDATT1407:
 3379              		.text
 3381              		.section	.rodata
 3382 04b5 000000   		.align 8
 3383              	.LC48:
 3384 04b8 53696D70 		.string	"SimpleFixture::instanceCount > 0"
 3384      6C654669 
 3384      78747572 
 3384      653A3A69 
 3384      6E737461 
 3385 04d9 00000000 		.align 8
 3385      000000
 3386              	.LC49:
 3387 04e0 556E6861 		.string	"Unhandled exception in CHECK(SimpleFixture::instanceCount > 0)"
 3387      6E646C65 
 3387      64206578 
 3387      63657074 
 3387      696F6E20 
 3388              		.text
 3389 1529 90       		.align 2
 3391              	_ZN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelper7RunImplEv:
 3392              	.LFB1411:
 137:TestUnitTest++.cpp **** {
 3393              		.loc 4 137 0 is_stmt 1
 3394              		.cfi_startproc
 3395              		.cfi_personality 0x3,__gxx_personality_v0
 3396              		.cfi_lsda 0x3,.LLSDA1411
 3397 152a 55       		pushq	%rbp
 3398              		.cfi_def_cfa_offset 16
 3399              		.cfi_offset 6, -16
 3400 152b 4889E5   		movq	%rsp, %rbp
 3401              		.cfi_def_cfa_register 6
 3402 152e 53       		pushq	%rbx
 3403 152f 4883EC48 		subq	$72, %rsp
 3404              		.cfi_offset 3, -24
 3405 1533 48897DB8 		movq	%rdi, -72(%rbp)
 3406              		.loc 4 137 0
 3407 1537 64488B04 		movq	%fs:40, %rax
 3407      25280000 
 3407      00
 3408 1540 488945E8 		movq	%rax, -24(%rbp)
 3409 1544 31C0     		xorl	%eax, %eax
 138:TestUnitTest++.cpp ****     CHECK(SimpleFixture::instanceCount > 0);
 3410              		.loc 4 138 0
 3411 1546 8B050000 		movl	_ZN12_GLOBAL__N_113SimpleFixture13instanceCountE(%rip), %eax
 3411      0000
 3412 154c 85C0     		testl	%eax, %eax
 3413 154e 0F9FC0   		setg	%al
 3414 1551 0FB6C0   		movzbl	%al, %eax
 3415 1554 89C7     		movl	%eax, %edi
 3416 1556 E8000000 		call	_ZN8UnitTest5CheckIbEEbT_
 3416      00
 3417 155b 83F001   		xorl	$1, %eax
 3418 155e 84C0     		testb	%al, %al
 3419 1560 0F849300 		je	.L181
 3419      0000
 3420              	.LEHB78:
 3421              		.loc 4 138 0 is_stmt 0 discriminator 1
 3422 1566 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3422      00
 3423 156b 488B08   		movq	(%rax), %rcx
 3424 156e 488D45C0 		leaq	-64(%rbp), %rax
 3425 1572 BA8A0000 		movl	$138, %edx
 3425      00
 3426 1577 4889CE   		movq	%rcx, %rsi
 3427 157a 4889C7   		movq	%rax, %rdi
 3428 157d E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3428      00
 3429              		.loc 4 138 0 discriminator 3
 3430 1582 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3430      00
 3431 1587 488B00   		movq	(%rax), %rax
 3432 158a 488D4DC0 		leaq	-64(%rbp), %rcx
 3433 158e BA000000 		movl	$.LC48, %edx
 3433      00
 3434 1593 4889CE   		movq	%rcx, %rsi
 3435 1596 4889C7   		movq	%rax, %rdi
 3436 1599 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3436      00
 3437              	.LEHE78:
 3438 159e EB59     		jmp	.L181
 3439              	.L187:
 3440 15a0 4889C3   		movq	%rax, %rbx
 3441              		.loc 4 138 0
 3442 15a3 E8000000 		call	__cxa_end_catch
 3442      00
 3443 15a8 4889D8   		movq	%rbx, %rax
 3444 15ab 4889C7   		movq	%rax, %rdi
 3445              	.LEHB79:
 3446 15ae E8000000 		call	_Unwind_Resume
 3446      00
 3447              	.LEHE79:
 3448              	.L186:
 3449 15b3 4889C7   		movq	%rax, %rdi
 3450 15b6 E8000000 		call	__cxa_begin_catch
 3450      00
 3451              	.LEHB80:
 3452 15bb E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3452      00
 3453 15c0 488B08   		movq	(%rax), %rcx
 3454 15c3 488D45C0 		leaq	-64(%rbp), %rax
 3455 15c7 BA8A0000 		movl	$138, %edx
 3455      00
 3456 15cc 4889CE   		movq	%rcx, %rsi
 3457 15cf 4889C7   		movq	%rax, %rdi
 3458 15d2 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3458      00
 3459              		.loc 4 138 0 discriminator 11
 3460 15d7 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3460      00
 3461 15dc 488B00   		movq	(%rax), %rax
 3462 15df 488D4DC0 		leaq	-64(%rbp), %rcx
 3463 15e3 BA000000 		movl	$.LC49, %edx
 3463      00
 3464 15e8 4889CE   		movq	%rcx, %rsi
 3465 15eb 4889C7   		movq	%rax, %rdi
 3466 15ee E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3466      00
 3467              	.LEHE80:
 3468              	.LEHB81:
 3469              		.loc 4 138 0 discriminator 15
 3470 15f3 E8000000 		call	__cxa_end_catch
 3470      00
 3471              	.LEHE81:
 139:TestUnitTest++.cpp **** }
 3472              		.loc 4 139 0 is_stmt 1 discriminator 15
 3473 15f8 90       		nop
 3474              	.L181:
 3475              		.loc 4 139 0 is_stmt 0
 3476 15f9 488B45E8 		movq	-24(%rbp), %rax
 3477 15fd 64483304 		xorq	%fs:40, %rax
 3477      25280000 
 3477      00
 3478 1606 7405     		je	.L185
 3479 1608 E8000000 		call	__stack_chk_fail
 3479      00
 3480              	.L185:
 3481 160d 4883C448 		addq	$72, %rsp
 3482 1611 5B       		popq	%rbx
 3483 1612 5D       		popq	%rbp
 3484              		.cfi_def_cfa 7, 8
 3485 1613 C3       		ret
 3486              		.cfi_endproc
 3487              	.LFE1411:
 3488              		.section	.gcc_except_table
 3489              		.align 4
 3490              	.LLSDA1411:
 3491 0234 FF       		.byte	0xff
 3492 0235 03       		.byte	0x3
 3493 0236 1D       		.uleb128 .LLSDATT1411-.LLSDATTD1411
 3494              	.LLSDATTD1411:
 3495 0237 01       		.byte	0x1
 3496 0238 14       		.uleb128 .LLSDACSE1411-.LLSDACSB1411
 3497              	.LLSDACSB1411:
 3498 0239 3C       		.uleb128 .LEHB78-.LFB1411
 3499 023a 38       		.uleb128 .LEHE78-.LEHB78
 3500 023b 8901     		.uleb128 .L186-.LFB1411
 3501 023d 01       		.uleb128 0x1
 3502 023e 8401     		.uleb128 .LEHB79-.LFB1411
 3503 0240 05       		.uleb128 .LEHE79-.LEHB79
 3504 0241 00       		.uleb128 0
 3505 0242 00       		.uleb128 0
 3506 0243 9101     		.uleb128 .LEHB80-.LFB1411
 3507 0245 38       		.uleb128 .LEHE80-.LEHB80
 3508 0246 76       		.uleb128 .L187-.LFB1411
 3509 0247 00       		.uleb128 0
 3510 0248 C901     		.uleb128 .LEHB81-.LFB1411
 3511 024a 05       		.uleb128 .LEHE81-.LEHB81
 3512 024b 00       		.uleb128 0
 3513 024c 00       		.uleb128 0
 3514              	.LLSDACSE1411:
 3515 024d 01       		.byte	0x1
 3516 024e 00       		.byte	0
 3517 024f 00       		.align 4
 3518 0250 00000000 		.long	0
 3519              	
 3520              	.LLSDATT1411:
 3521              		.text
 3523              		.align 2
 3525              	_ZN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelperC2ERKN8UnitTest11TestDetailsE:
 3526              	.LFB1413:
 140:TestUnitTest++.cpp **** 
 141:TestUnitTest++.cpp **** TEST_FIXTURE(SimpleFixture, OnlyOneFixtureAliveAtATime)
 3527              		.loc 4 141 0 is_stmt 1
 3528              		.cfi_startproc
 3529 1614 55       		pushq	%rbp
 3530              		.cfi_def_cfa_offset 16
 3531              		.cfi_offset 6, -16
 3532 1615 4889E5   		movq	%rsp, %rbp
 3533              		.cfi_def_cfa_register 6
 3534 1618 4883EC10 		subq	$16, %rsp
 3535 161c 48897DF8 		movq	%rdi, -8(%rbp)
 3536 1620 488975F0 		movq	%rsi, -16(%rbp)
 3537              	.LBB72:
 3538              		.loc 4 141 0
 3539 1624 488B45F8 		movq	-8(%rbp), %rax
 3540 1628 4889C7   		movq	%rax, %rdi
 3541 162b E840FBFF 		call	_ZN12_GLOBAL__N_113SimpleFixtureC2Ev
 3541      FF
 3542 1630 488B45F8 		movq	-8(%rbp), %rax
 3543 1634 488B55F0 		movq	-16(%rbp), %rdx
 3544 1638 488910   		movq	%rdx, (%rax)
 3545              	.LBE72:
 3546 163b C9       		leave
 3547              		.cfi_def_cfa 7, 8
 3548 163c C3       		ret
 3549              		.cfi_endproc
 3550              	.LFE1413:
 3552              		.section	.rodata
 3553              	.LC50:
 3554 051f 4F6E6C79 		.string	"OnlyOneFixtureAliveAtATime"
 3554      4F6E6546 
 3554      69787475 
 3554      7265416C 
 3554      69766541 
 3555              		.text
 3556 163d 90       		.align 2
 3558              	_ZN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeC2Ev:
 3559              	.LFB1416:
 3560              		.loc 4 141 0
 3561              		.cfi_startproc
 3562 163e 55       		pushq	%rbp
 3563              		.cfi_def_cfa_offset 16
 3564              		.cfi_offset 6, -16
 3565 163f 4889E5   		movq	%rsp, %rbp
 3566              		.cfi_def_cfa_register 6
 3567 1642 4883EC10 		subq	$16, %rsp
 3568 1646 48897DF8 		movq	%rdi, -8(%rbp)
 3569              	.LBB73:
 3570              		.loc 4 141 0
 3571 164a E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 3571      00
 3572 164f 4889C2   		movq	%rax, %rdx
 3573 1652 488B45F8 		movq	-8(%rbp), %rax
 3574 1656 41B88D00 		movl	$141, %r8d
 3574      0000
 3575 165c B9000000 		movl	$.LC1, %ecx
 3575      00
 3576 1661 BE000000 		movl	$.LC50, %esi
 3576      00
 3577 1666 4889C7   		movq	%rax, %rdi
 3578 1669 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 3578      00
 3579 166e 488B45F8 		movq	-8(%rbp), %rax
 3580 1672 48C70000 		movq	$_ZTVN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeE+16, (%rax)
 3580      000000
 3581              	.LBE73:
 3582 1679 C9       		leave
 3583              		.cfi_def_cfa 7, 8
 3584 167a C3       		ret
 3585              		.cfi_endproc
 3586              	.LFE1416:
 3588              		.local	_ZN12_GLOBAL__N_151testSimpleFixtureOnlyOneFixtureAliveAtATimeInstanceE
 3589              		.comm	_ZN12_GLOBAL__N_151testSimpleFixtureOnlyOneFixtureAliveAtATimeInstanceE,56,32
 3590              		.local	_ZN12_GLOBAL__N_144adderSimpleFixtureOnlyOneFixtureAliveAtATimeE
 3591              		.comm	_ZN12_GLOBAL__N_144adderSimpleFixtureOnlyOneFixtureAliveAtATimeE,1,1
 3592 167b 90       		.align 2
 3594              	_ZN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelperD2Ev:
 3595              	.LFB1420:
 3596              		.loc 4 141 0
 3597              		.cfi_startproc
 3598 167c 55       		pushq	%rbp
 3599              		.cfi_def_cfa_offset 16
 3600              		.cfi_offset 6, -16
 3601 167d 4889E5   		movq	%rsp, %rbp
 3602              		.cfi_def_cfa_register 6
 3603 1680 4883EC08 		subq	$8, %rsp
 3604 1684 48897DF8 		movq	%rdi, -8(%rbp)
 3605              	.LBB74:
 3606              		.loc 4 141 0
 3607 1688 488B45F8 		movq	-8(%rbp), %rax
 3608 168c 4889C7   		movq	%rax, %rdi
 3609 168f E8F6FAFF 		call	_ZN12_GLOBAL__N_113SimpleFixtureD2Ev
 3609      FF
 3610              	.LBE74:
 3611 1694 C9       		leave
 3612              		.cfi_def_cfa 7, 8
 3613 1695 C3       		ret
 3614              		.cfi_endproc
 3615              	.LFE1420:
 3617              		.align 2
 3619              	_ZNK12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATime7RunImplEv:
 3620              	.LFB1418:
 3621              		.loc 4 141 0
 3622              		.cfi_startproc
 3623              		.cfi_personality 0x3,__gxx_personality_v0
 3624              		.cfi_lsda 0x3,.LLSDA1418
 3625 1696 55       		pushq	%rbp
 3626              		.cfi_def_cfa_offset 16
 3627              		.cfi_offset 6, -16
 3628 1697 4889E5   		movq	%rsp, %rbp
 3629              		.cfi_def_cfa_register 6
 3630 169a 4154     		pushq	%r12
 3631 169c 53       		pushq	%rbx
 3632 169d 4881ECC0 		subq	$448, %rsp
 3632      010000
 3633              		.cfi_offset 12, -24
 3634              		.cfi_offset 3, -32
 3635 16a4 4889BD38 		movq	%rdi, -456(%rbp)
 3635      FEFFFF
 3636              		.loc 4 141 0
 3637 16ab 64488B04 		movq	%fs:40, %rax
 3637      25280000 
 3637      00
 3638 16b4 488945E8 		movq	%rax, -24(%rbp)
 3639 16b8 31C0     		xorl	%eax, %eax
 3640              	.LBB75:
 3641 16ba C6854FFE 		movb	$0, -433(%rbp)
 3641      FFFF00
 3642              	.LBB76:
 3643 16c1 488B8538 		movq	-456(%rbp), %rax
 3643      FEFFFF
 3644 16c8 488D5008 		leaq	8(%rax), %rdx
 3645 16cc 488D8560 		leaq	-416(%rbp), %rax
 3645      FEFFFF
 3646 16d3 4889D6   		movq	%rdx, %rsi
 3647 16d6 4889C7   		movq	%rax, %rdi
 3648 16d9 E836FFFF 		call	_ZN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelperC2ERKN8UnitTest11TestDetailsE
 3648      FF
 3649 16de C6854FFE 		movb	$1, -433(%rbp)
 3649      FFFF01
 3650 16e5 488B8538 		movq	-456(%rbp), %rax
 3650      FEFFFF
 3651 16ec 488D5008 		leaq	8(%rax), %rdx
 3652 16f0 488D8560 		leaq	-416(%rbp), %rax
 3652      FEFFFF
 3653 16f7 4889D6   		movq	%rdx, %rsi
 3654 16fa 4889C7   		movq	%rax, %rdi
 3655              	.LEHB82:
 3656 16fd E8620700 		call	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelperEEEvR
 3656      00
 3657              	.LEHE82:
 3658              		.loc 4 141 0 is_stmt 0 discriminator 2
 3659 1702 488D8560 		leaq	-416(%rbp), %rax
 3659      FEFFFF
 3660 1709 4889C7   		movq	%rax, %rdi
 3661 170c E86BFFFF 		call	_ZN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelperD2Ev
 3661      FF
 3662              	.LBE76:
 3663              	.LBE75:
 3664 1711 E9620200 		jmp	.L211
 3664      00
 3665              	.L205:
 3666 1716 4989C4   		movq	%rax, %r12
 3667 1719 4889D3   		movq	%rdx, %rbx
 3668              	.LBB84:
 3669              	.LBB77:
 3670              		.loc 4 141 0
 3671 171c 488D8560 		leaq	-416(%rbp), %rax
 3671      FEFFFF
 3672 1723 4889C7   		movq	%rax, %rdi
 3673 1726 E851FFFF 		call	_ZN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelperD2Ev
 3673      FF
 3674 172b 4C89E0   		movq	%r12, %rax
 3675 172e 4889DA   		movq	%rbx, %rdx
 3676 1731 4883FA01 		cmpq	$1, %rdx
 3677 1735 745C     		je	.L195
 3678 1737 4883FA02 		cmpq	$2, %rdx
 3679 173b 0F84F400 		je	.L196
 3679      0000
 3680 1741 E9980100 		jmp	.L210
 3680      00
 3681              	.L206:
 3682 1746 4889C3   		movq	%rax, %rbx
 3683              	.LBE77:
 3684              	.LBB78:
 3685 1749 E8000000 		call	__cxa_end_catch
 3685      00
 3686 174e 4889D8   		movq	%rbx, %rax
 3687 1751 4889C7   		movq	%rax, %rdi
 3688              	.LEHB83:
 3689 1754 E8000000 		call	_Unwind_Resume
 3689      00
 3690              	.LEHE83:
 3691              	.L207:
 3692 1759 4889C3   		movq	%rax, %rbx
 3693              	.LBE78:
 3694              	.LBB79:
 3695              	.LBB80:
 3696 175c 488D8580 		leaq	-384(%rbp), %rax
 3696      FEFFFF
 3697 1763 4889C7   		movq	%rax, %rdi
 3698 1766 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 3698      00
 3699 176b EB03     		jmp	.L199
 3700              	.L208:
 3701 176d 4889C3   		movq	%rax, %rbx
 3702              	.L199:
 3703              	.LBE80:
 3704 1770 E8000000 		call	__cxa_end_catch
 3704      00
 3705 1775 4889D8   		movq	%rbx, %rax
 3706 1778 4889C7   		movq	%rax, %rdi
 3707              	.LEHB84:
 3708 177b E8000000 		call	_Unwind_Resume
 3708      00
 3709              	.LEHE84:
 3710              	.L209:
 3711 1780 4889C3   		movq	%rax, %rbx
 3712              	.LBE79:
 3713 1783 E8000000 		call	__cxa_end_catch
 3713      00
 3714 1788 4889D8   		movq	%rbx, %rax
 3715 178b 4889C7   		movq	%rax, %rdi
 3716              	.LEHB85:
 3717 178e E8000000 		call	_Unwind_Resume
 3717      00
 3718              	.LEHE85:
 3719              	.L195:
 3720              	.LBB82:
 3721 1793 4889C7   		movq	%rax, %rdi
 3722 1796 E8000000 		call	__cxa_begin_catch
 3722      00
 3723 179b 48898550 		movq	%rax, -432(%rbp)
 3723      FEFFFF
 3724 17a2 488B8550 		movq	-432(%rbp), %rax
 3724      FEFFFF
 3725 17a9 488B00   		movq	(%rax), %rax
 3726 17ac 4883C010 		addq	$16, %rax
 3727 17b0 488B00   		movq	(%rax), %rax
 3728 17b3 488B9550 		movq	-432(%rbp), %rdx
 3728      FEFFFF
 3729 17ba 4889D7   		movq	%rdx, %rdi
 3730 17bd FFD0     		call	*%rax
 3731 17bf 4889C3   		movq	%rax, %rbx
 3732 17c2 488B8550 		movq	-432(%rbp), %rax
 3732      FEFFFF
 3733 17c9 4889C7   		movq	%rax, %rdi
 3734              	.LEHB86:
 3735 17cc E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 3735      00
 3736 17d1 4189C4   		movl	%eax, %r12d
 3737 17d4 488B8550 		movq	-432(%rbp), %rax
 3737      FEFFFF
 3738 17db 4889C7   		movq	%rax, %rdi
 3739 17de E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 3739      00
 3740              		.loc 4 141 0 discriminator 4
 3741 17e3 4889C1   		movq	%rax, %rcx
 3742 17e6 488B8538 		movq	-456(%rbp), %rax
 3742      FEFFFF
 3743 17ed 488B5008 		movq	8(%rax), %rdx
 3744 17f1 488B8538 		movq	-456(%rbp), %rax
 3744      FEFFFF
 3745 17f8 488B7010 		movq	16(%rax), %rsi
 3746 17fc 488D8560 		leaq	-416(%rbp), %rax
 3746      FEFFFF
 3747 1803 4589E0   		movl	%r12d, %r8d
 3748 1806 4889C7   		movq	%rax, %rdi
 3749 1809 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 3749      00
 3750              		.loc 4 141 0 discriminator 8
 3751 180e E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3751      00
 3752 1813 488B00   		movq	(%rax), %rax
 3753 1816 488D8D60 		leaq	-416(%rbp), %rcx
 3753      FEFFFF
 3754 181d 4889DA   		movq	%rbx, %rdx
 3755 1820 4889CE   		movq	%rcx, %rsi
 3756 1823 4889C7   		movq	%rax, %rdi
 3757 1826 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3757      00
 3758              	.LEHE86:
 3759              		.loc 4 141 0 discriminator 12
 3760 182b E8000000 		call	__cxa_end_catch
 3760      00
 3761              	.LBE82:
 3762              	.LBE84:
 3763 1830 E9430100 		jmp	.L211
 3763      00
 3764              	.L196:
 3765              	.LBB85:
 3766              	.LBB83:
 3767              		.loc 4 141 0
 3768 1835 4889C7   		movq	%rax, %rdi
 3769 1838 E8000000 		call	__cxa_begin_catch
 3769      00
 3770 183d 48898558 		movq	%rax, -424(%rbp)
 3770      FEFFFF
 3771              	.LBB81:
 3772 1844 488D8580 		leaq	-384(%rbp), %rax
 3772      FEFFFF
 3773 184b 4889C7   		movq	%rax, %rdi
 3774              	.LEHB87:
 3775 184e E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 3775      00
 3776              	.LEHE87:
 3777              		.loc 4 141 0 discriminator 14
 3778 1853 488B8558 		movq	-424(%rbp), %rax
 3778      FEFFFF
 3779 185a 488B00   		movq	(%rax), %rax
 3780 185d 4883C010 		addq	$16, %rax
 3781 1861 488B00   		movq	(%rax), %rax
 3782 1864 488B9558 		movq	-424(%rbp), %rdx
 3782      FEFFFF
 3783 186b 4889D7   		movq	%rdx, %rdi
 3784 186e FFD0     		call	*%rax
 3785 1870 4889C3   		movq	%rax, %rbx
 3786 1873 488D8580 		leaq	-384(%rbp), %rax
 3786      FEFFFF
 3787 187a BE000000 		movl	$.LC45, %esi
 3787      00
 3788 187f 4889C7   		movq	%rax, %rdi
 3789              	.LEHB88:
 3790 1882 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 3790      00
 3791 1887 4889DE   		movq	%rbx, %rsi
 3792 188a 4889C7   		movq	%rax, %rdi
 3793 188d E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 3793      00
 3794              		.loc 4 141 0 discriminator 18
 3795 1892 488D8580 		leaq	-384(%rbp), %rax
 3795      FEFFFF
 3796 1899 4889C7   		movq	%rax, %rdi
 3797 189c E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 3797      00
 3798 18a1 4989C4   		movq	%rax, %r12
 3799 18a4 488B8538 		movq	-456(%rbp), %rax
 3799      FEFFFF
 3800 18ab 488D5808 		leaq	8(%rax), %rbx
 3801 18af E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3801      00
 3802              		.loc 4 141 0 discriminator 20
 3803 18b4 488B00   		movq	(%rax), %rax
 3804 18b7 4C89E2   		movq	%r12, %rdx
 3805 18ba 4889DE   		movq	%rbx, %rsi
 3806 18bd 4889C7   		movq	%rax, %rdi
 3807 18c0 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3807      00
 3808              	.LEHE88:
 3809              		.loc 4 141 0 discriminator 24
 3810 18c5 488D8580 		leaq	-384(%rbp), %rax
 3810      FEFFFF
 3811 18cc 4889C7   		movq	%rax, %rdi
 3812              	.LEHB89:
 3813 18cf E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 3813      00
 3814              	.LEHE89:
 3815              	.LBE81:
 3816              		.loc 4 141 0 discriminator 25
 3817 18d4 E8000000 		call	__cxa_end_catch
 3817      00
 3818              	.LBE83:
 3819              	.LBE85:
 3820 18d9 E99A0000 		jmp	.L211
 3820      00
 3821              	.L210:
 3822              	.LBB86:
 3823              		.loc 4 141 0
 3824 18de 4889C7   		movq	%rax, %rdi
 3825 18e1 E8000000 		call	__cxa_begin_catch
 3825      00
 3826 18e6 80BD4FFE 		cmpb	$0, -433(%rbp)
 3826      FFFF00
 3827 18ed 7443     		je	.L202
 3828              		.loc 4 141 0 discriminator 27
 3829 18ef 488B8538 		movq	-456(%rbp), %rax
 3829      FEFFFF
 3830 18f6 488D4808 		leaq	8(%rax), %rcx
 3831 18fa 488D8560 		leaq	-416(%rbp), %rax
 3831      FEFFFF
 3832 1901 BA8D0000 		movl	$141, %edx
 3832      00
 3833 1906 4889CE   		movq	%rcx, %rsi
 3834 1909 4889C7   		movq	%rax, %rdi
 3835              	.LEHB90:
 3836 190c E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3836      00
 3837              		.loc 4 141 0 discriminator 30
 3838 1911 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3838      00
 3839 1916 488B00   		movq	(%rax), %rax
 3840 1919 488D8D60 		leaq	-416(%rbp), %rcx
 3840      FEFFFF
 3841 1920 BA000000 		movl	$.LC46, %edx
 3841      00
 3842 1925 4889CE   		movq	%rcx, %rsi
 3843 1928 4889C7   		movq	%rax, %rdi
 3844 192b E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3844      00
 3845 1930 EB41     		jmp	.L203
 3846              	.L202:
 3847              		.loc 4 141 0 discriminator 28
 3848 1932 488B8538 		movq	-456(%rbp), %rax
 3848      FEFFFF
 3849 1939 488D4808 		leaq	8(%rax), %rcx
 3850 193d 488D8560 		leaq	-416(%rbp), %rax
 3850      FEFFFF
 3851 1944 BA8D0000 		movl	$141, %edx
 3851      00
 3852 1949 4889CE   		movq	%rcx, %rsi
 3853 194c 4889C7   		movq	%rax, %rdi
 3854 194f E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3854      00
 3855              		.loc 4 141 0 discriminator 37
 3856 1954 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3856      00
 3857 1959 488B00   		movq	(%rax), %rax
 3858 195c 488D8D60 		leaq	-416(%rbp), %rcx
 3858      FEFFFF
 3859 1963 BA000000 		movl	$.LC47, %edx
 3859      00
 3860 1968 4889CE   		movq	%rcx, %rsi
 3861 196b 4889C7   		movq	%rax, %rdi
 3862 196e E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3862      00
 3863              	.LEHE90:
 3864              	.L203:
 3865              	.LEHB91:
 3866              		.loc 4 141 0 discriminator 42
 3867 1973 E8000000 		call	__cxa_end_catch
 3867      00
 3868              	.LEHE91:
 3869              	.L211:
 3870              	.LBE86:
 3871              		.loc 4 141 0
 3872 1978 90       		nop
 3873 1979 488B45E8 		movq	-24(%rbp), %rax
 3874 197d 64483304 		xorq	%fs:40, %rax
 3874      25280000 
 3874      00
 3875 1986 7405     		je	.L204
 3876 1988 E8000000 		call	__stack_chk_fail
 3876      00
 3877              	.L204:
 3878 198d 4881C4C0 		addq	$448, %rsp
 3878      010000
 3879 1994 5B       		popq	%rbx
 3880 1995 415C     		popq	%r12
 3881 1997 5D       		popq	%rbp
 3882              		.cfi_def_cfa 7, 8
 3883 1998 C3       		ret
 3884              		.cfi_endproc
 3885              	.LFE1418:
 3886              		.section	.gcc_except_table
 3887              		.align 4
 3888              	.LLSDA1418:
 3889 0254 FF       		.byte	0xff
 3890 0255 03       		.byte	0x3
 3891 0256 4D       		.uleb128 .LLSDATT1418-.LLSDATTD1418
 3892              	.LLSDATTD1418:
 3893 0257 01       		.byte	0x1
 3894 0258 37       		.uleb128 .LLSDACSE1418-.LLSDACSB1418
 3895              	.LLSDACSB1418:
 3896 0259 67       		.uleb128 .LEHB82-.LFB1418
 3897 025a 05       		.uleb128 .LEHE82-.LEHB82
 3898 025b 8001     		.uleb128 .L205-.LFB1418
 3899 025d 07       		.uleb128 0x7
 3900 025e BE01     		.uleb128 .LEHB83-.LFB1418
 3901 0260 05       		.uleb128 .LEHE83-.LEHB83
 3902 0261 00       		.uleb128 0
 3903 0262 00       		.uleb128 0
 3904 0263 E501     		.uleb128 .LEHB84-.LFB1418
 3905 0265 05       		.uleb128 .LEHE84-.LEHB84
 3906 0266 00       		.uleb128 0
 3907 0267 00       		.uleb128 0
 3908 0268 F801     		.uleb128 .LEHB85-.LFB1418
 3909 026a 05       		.uleb128 .LEHE85-.LEHB85
 3910 026b 00       		.uleb128 0
 3911 026c 00       		.uleb128 0
 3912 026d B602     		.uleb128 .LEHB86-.LFB1418
 3913 026f 5F       		.uleb128 .LEHE86-.LEHB86
 3914 0270 B001     		.uleb128 .L206-.LFB1418
 3915 0272 00       		.uleb128 0
 3916 0273 B803     		.uleb128 .LEHB87-.LFB1418
 3917 0275 05       		.uleb128 .LEHE87-.LEHB87
 3918 0276 D701     		.uleb128 .L208-.LFB1418
 3919 0278 00       		.uleb128 0
 3920 0279 EC03     		.uleb128 .LEHB88-.LFB1418
 3921 027b 43       		.uleb128 .LEHE88-.LEHB88
 3922 027c C301     		.uleb128 .L207-.LFB1418
 3923 027e 00       		.uleb128 0
 3924 027f B904     		.uleb128 .LEHB89-.LFB1418
 3925 0281 05       		.uleb128 .LEHE89-.LEHB89
 3926 0282 D701     		.uleb128 .L208-.LFB1418
 3927 0284 00       		.uleb128 0
 3928 0285 F604     		.uleb128 .LEHB90-.LFB1418
 3929 0287 67       		.uleb128 .LEHE90-.LEHB90
 3930 0288 EA01     		.uleb128 .L209-.LFB1418
 3931 028a 00       		.uleb128 0
 3932 028b DD05     		.uleb128 .LEHB91-.LFB1418
 3933 028d 05       		.uleb128 .LEHE91-.LEHB91
 3934 028e 00       		.uleb128 0
 3935 028f 00       		.uleb128 0
 3936              	.LLSDACSE1418:
 3937 0290 03       		.byte	0x3
 3938 0291 00       		.byte	0
 3939 0292 02       		.byte	0x2
 3940 0293 7D       		.byte	0x7d
 3941 0294 01       		.byte	0x1
 3942 0295 7D       		.byte	0x7d
 3943 0296 00       		.byte	0
 3944 0297 7D       		.byte	0x7d
 3945              		.align 4
 3946 0298 00000000 		.long	0
 3947              	
 3948 029c 00000000 		.long	_ZTISt9exception
 3949 02a0 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 3950              	.LLSDATT1418:
 3951              		.text
 3953              		.section	.rodata
 3954 053a 00000000 		.align 8
 3954      0000
 3955              	.LC51:
 3956 0540 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(1, SimpleFixture::instanceCount)"
 3956      6E646C65 
 3956      64206578 
 3956      63657074 
 3956      696F6E20 
 3957              		.text
 3958 1999 90       		.align 2
 3960              	_ZN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelper7RunImplEv:
 3961              	.LFB1422:
 142:TestUnitTest++.cpp **** {
 3962              		.loc 4 142 0 is_stmt 1
 3963              		.cfi_startproc
 3964              		.cfi_personality 0x3,__gxx_personality_v0
 3965              		.cfi_lsda 0x3,.LLSDA1422
 3966 199a 55       		pushq	%rbp
 3967              		.cfi_def_cfa_offset 16
 3968              		.cfi_offset 6, -16
 3969 199b 4889E5   		movq	%rsp, %rbp
 3970              		.cfi_def_cfa_register 6
 3971 199e 53       		pushq	%rbx
 3972 199f 4883EC58 		subq	$88, %rsp
 3973              		.cfi_offset 3, -24
 3974 19a3 48897DA8 		movq	%rdi, -88(%rbp)
 3975              		.loc 4 142 0
 3976 19a7 64488B04 		movq	%fs:40, %rax
 3976      25280000 
 3976      00
 3977 19b0 488945E8 		movq	%rax, -24(%rbp)
 3978 19b4 31C0     		xorl	%eax, %eax
 3979              	.LEHB92:
 143:TestUnitTest++.cpp ****     CHECK_EQUAL(1, SimpleFixture::instanceCount);
 3980              		.loc 4 143 0
 3981 19b6 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3981      00
 3982 19bb 488B08   		movq	(%rax), %rcx
 3983 19be 488D45C0 		leaq	-64(%rbp), %rax
 3984 19c2 BA8F0000 		movl	$143, %edx
 3984      00
 3985 19c7 4889CE   		movq	%rcx, %rsi
 3986 19ca 4889C7   		movq	%rax, %rdi
 3987 19cd E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3987      00
 3988              		.loc 4 143 0 is_stmt 0 discriminator 2
 3989 19d2 C745BC01 		movl	$1, -68(%rbp)
 3989      000000
 3990 19d9 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3990      00
 3991 19de 488B00   		movq	(%rax), %rax
 3992 19e1 488D55C0 		leaq	-64(%rbp), %rdx
 3993 19e5 488D75BC 		leaq	-68(%rbp), %rsi
 3994 19e9 4889D1   		movq	%rdx, %rcx
 3995 19ec BA000000 		movl	$_ZN12_GLOBAL__N_113SimpleFixture13instanceCountE, %edx
 3995      00
 3996 19f1 4889C7   		movq	%rax, %rdi
 3997 19f4 E8000000 		call	_ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 3997      00
 3998              	.LEHE92:
 144:TestUnitTest++.cpp **** }
 3999              		.loc 4 144 0 is_stmt 1
 4000 19f9 EB58     		jmp	.L219
 4001              	.L218:
 4002 19fb 4889C3   		movq	%rax, %rbx
 143:TestUnitTest++.cpp ****     CHECK_EQUAL(1, SimpleFixture::instanceCount);
 4003              		.loc 4 143 0
 4004 19fe E8000000 		call	__cxa_end_catch
 4004      00
 4005 1a03 4889D8   		movq	%rbx, %rax
 4006 1a06 4889C7   		movq	%rax, %rdi
 4007              	.LEHB93:
 4008 1a09 E8000000 		call	_Unwind_Resume
 4008      00
 4009              	.LEHE93:
 4010              	.L217:
 4011 1a0e 4889C7   		movq	%rax, %rdi
 4012 1a11 E8000000 		call	__cxa_begin_catch
 4012      00
 4013              	.LEHB94:
 4014 1a16 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4014      00
 4015 1a1b 488B08   		movq	(%rax), %rcx
 4016 1a1e 488D45C0 		leaq	-64(%rbp), %rax
 4017 1a22 BA8F0000 		movl	$143, %edx
 4017      00
 4018 1a27 4889CE   		movq	%rcx, %rsi
 4019 1a2a 4889C7   		movq	%rax, %rdi
 4020 1a2d E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4020      00
 143:TestUnitTest++.cpp ****     CHECK_EQUAL(1, SimpleFixture::instanceCount);
 4021              		.loc 4 143 0 is_stmt 0 discriminator 10
 4022 1a32 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4022      00
 4023 1a37 488B00   		movq	(%rax), %rax
 4024 1a3a 488D4DC0 		leaq	-64(%rbp), %rcx
 4025 1a3e BA000000 		movl	$.LC51, %edx
 4025      00
 4026 1a43 4889CE   		movq	%rcx, %rsi
 4027 1a46 4889C7   		movq	%rax, %rdi
 4028 1a49 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4028      00
 4029              	.LEHE94:
 4030              	.LEHB95:
 143:TestUnitTest++.cpp ****     CHECK_EQUAL(1, SimpleFixture::instanceCount);
 4031              		.loc 4 143 0 discriminator 14
 4032 1a4e E8000000 		call	__cxa_end_catch
 4032      00
 4033              	.LEHE95:
 4034              	.L219:
 4035              		.loc 4 144 0 is_stmt 1
 4036 1a53 90       		nop
 4037 1a54 488B45E8 		movq	-24(%rbp), %rax
 4038 1a58 64483304 		xorq	%fs:40, %rax
 4038      25280000 
 4038      00
 4039 1a61 7405     		je	.L216
 4040 1a63 E8000000 		call	__stack_chk_fail
 4040      00
 4041              	.L216:
 4042 1a68 4883C458 		addq	$88, %rsp
 4043 1a6c 5B       		popq	%rbx
 4044 1a6d 5D       		popq	%rbp
 4045              		.cfi_def_cfa 7, 8
 4046 1a6e C3       		ret
 4047              		.cfi_endproc
 4048              	.LFE1422:
 4049              		.section	.gcc_except_table
 4050              		.align 4
 4051              	.LLSDA1422:
 4052 02a4 FF       		.byte	0xff
 4053 02a5 03       		.byte	0x3
 4054 02a6 19       		.uleb128 .LLSDATT1422-.LLSDATTD1422
 4055              	.LLSDATTD1422:
 4056 02a7 01       		.byte	0x1
 4057 02a8 11       		.uleb128 .LLSDACSE1422-.LLSDACSB1422
 4058              	.LLSDACSB1422:
 4059 02a9 1C       		.uleb128 .LEHB92-.LFB1422
 4060 02aa 43       		.uleb128 .LEHE92-.LEHB92
 4061 02ab 74       		.uleb128 .L217-.LFB1422
 4062 02ac 01       		.uleb128 0x1
 4063 02ad 6F       		.uleb128 .LEHB93-.LFB1422
 4064 02ae 05       		.uleb128 .LEHE93-.LEHB93
 4065 02af 00       		.uleb128 0
 4066 02b0 00       		.uleb128 0
 4067 02b1 7C       		.uleb128 .LEHB94-.LFB1422
 4068 02b2 38       		.uleb128 .LEHE94-.LEHB94
 4069 02b3 61       		.uleb128 .L218-.LFB1422
 4070 02b4 00       		.uleb128 0
 4071 02b5 B401     		.uleb128 .LEHB95-.LFB1422
 4072 02b7 05       		.uleb128 .LEHE95-.LEHB95
 4073 02b8 00       		.uleb128 0
 4074 02b9 00       		.uleb128 0
 4075              	.LLSDACSE1422:
 4076 02ba 01       		.byte	0x1
 4077 02bb 00       		.byte	0
 4078              		.align 4
 4079 02bc 00000000 		.long	0
 4080              	
 4081              	.LLSDATT1422:
 4082              		.text
 4085              	_ZN12_GLOBAL__N_19CheckBoolEb:
 4086              	.LFB1423:
 145:TestUnitTest++.cpp **** 
 146:TestUnitTest++.cpp **** void CheckBool(const bool b)
 147:TestUnitTest++.cpp **** {
 4087              		.loc 4 147 0
 4088              		.cfi_startproc
 4089              		.cfi_personality 0x3,__gxx_personality_v0
 4090              		.cfi_lsda 0x3,.LLSDA1423
 4091 1a6f 55       		pushq	%rbp
 4092              		.cfi_def_cfa_offset 16
 4093              		.cfi_offset 6, -16
 4094 1a70 4889E5   		movq	%rsp, %rbp
 4095              		.cfi_def_cfa_register 6
 4096 1a73 53       		pushq	%rbx
 4097 1a74 4883EC48 		subq	$72, %rsp
 4098              		.cfi_offset 3, -24
 4099 1a78 89F8     		movl	%edi, %eax
 4100 1a7a 8845BC   		movb	%al, -68(%rbp)
 4101              		.loc 4 147 0
 4102 1a7d 64488B04 		movq	%fs:40, %rax
 4102      25280000 
 4102      00
 4103 1a86 488945E8 		movq	%rax, -24(%rbp)
 4104 1a8a 31C0     		xorl	%eax, %eax
 148:TestUnitTest++.cpp **** 	CHECK(b);
 4105              		.loc 4 148 0
 4106 1a8c 0FB645BC 		movzbl	-68(%rbp), %eax
 4107 1a90 89C7     		movl	%eax, %edi
 4108 1a92 E8000000 		call	_ZN8UnitTest5CheckIbEEbT_
 4108      00
 4109 1a97 83F001   		xorl	$1, %eax
 4110 1a9a 84C0     		testb	%al, %al
 4111 1a9c 0F849300 		je	.L220
 4111      0000
 4112              	.LEHB96:
 4113              		.loc 4 148 0 is_stmt 0 discriminator 1
 4114 1aa2 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4114      00
 4115 1aa7 488B08   		movq	(%rax), %rcx
 4116 1aaa 488D45C0 		leaq	-64(%rbp), %rax
 4117 1aae BA940000 		movl	$148, %edx
 4117      00
 4118 1ab3 4889CE   		movq	%rcx, %rsi
 4119 1ab6 4889C7   		movq	%rax, %rdi
 4120 1ab9 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4120      00
 4121              		.loc 4 148 0 discriminator 3
 4122 1abe E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4122      00
 4123 1ac3 488B00   		movq	(%rax), %rax
 4124 1ac6 488D4DC0 		leaq	-64(%rbp), %rcx
 4125 1aca BA000000 		movl	$.LC3, %edx
 4125      00
 4126 1acf 4889CE   		movq	%rcx, %rsi
 4127 1ad2 4889C7   		movq	%rax, %rdi
 4128 1ad5 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4128      00
 4129              	.LEHE96:
 4130 1ada EB59     		jmp	.L220
 4131              	.L226:
 4132 1adc 4889C3   		movq	%rax, %rbx
 4133              		.loc 4 148 0
 4134 1adf E8000000 		call	__cxa_end_catch
 4134      00
 4135 1ae4 4889D8   		movq	%rbx, %rax
 4136 1ae7 4889C7   		movq	%rax, %rdi
 4137              	.LEHB97:
 4138 1aea E8000000 		call	_Unwind_Resume
 4138      00
 4139              	.LEHE97:
 4140              	.L225:
 4141 1aef 4889C7   		movq	%rax, %rdi
 4142 1af2 E8000000 		call	__cxa_begin_catch
 4142      00
 4143              	.LEHB98:
 4144 1af7 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4144      00
 4145 1afc 488B08   		movq	(%rax), %rcx
 4146 1aff 488D45C0 		leaq	-64(%rbp), %rax
 4147 1b03 BA940000 		movl	$148, %edx
 4147      00
 4148 1b08 4889CE   		movq	%rcx, %rsi
 4149 1b0b 4889C7   		movq	%rax, %rdi
 4150 1b0e E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4150      00
 4151              		.loc 4 148 0 discriminator 11
 4152 1b13 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4152      00
 4153 1b18 488B00   		movq	(%rax), %rax
 4154 1b1b 488D4DC0 		leaq	-64(%rbp), %rcx
 4155 1b1f BA000000 		movl	$.LC4, %edx
 4155      00
 4156 1b24 4889CE   		movq	%rcx, %rsi
 4157 1b27 4889C7   		movq	%rax, %rdi
 4158 1b2a E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4158      00
 4159              	.LEHE98:
 4160              	.LEHB99:
 4161              		.loc 4 148 0 discriminator 15
 4162 1b2f E8000000 		call	__cxa_end_catch
 4162      00
 4163              	.LEHE99:
 149:TestUnitTest++.cpp **** }
 4164              		.loc 4 149 0 is_stmt 1 discriminator 15
 4165 1b34 90       		nop
 4166              	.L220:
 4167              		.loc 4 149 0 is_stmt 0
 4168 1b35 488B45E8 		movq	-24(%rbp), %rax
 4169 1b39 64483304 		xorq	%fs:40, %rax
 4169      25280000 
 4169      00
 4170 1b42 7405     		je	.L224
 4171 1b44 E8000000 		call	__stack_chk_fail
 4171      00
 4172              	.L224:
 4173 1b49 4883C448 		addq	$72, %rsp
 4174 1b4d 5B       		popq	%rbx
 4175 1b4e 5D       		popq	%rbp
 4176              		.cfi_def_cfa 7, 8
 4177 1b4f C3       		ret
 4178              		.cfi_endproc
 4179              	.LFE1423:
 4180              		.section	.gcc_except_table
 4181              		.align 4
 4182              	.LLSDA1423:
 4183 02c0 FF       		.byte	0xff
 4184 02c1 03       		.byte	0x3
 4185 02c2 1D       		.uleb128 .LLSDATT1423-.LLSDATTD1423
 4186              	.LLSDATTD1423:
 4187 02c3 01       		.byte	0x1
 4188 02c4 13       		.uleb128 .LLSDACSE1423-.LLSDACSB1423
 4189              	.LLSDACSB1423:
 4190 02c5 33       		.uleb128 .LEHB96-.LFB1423
 4191 02c6 38       		.uleb128 .LEHE96-.LEHB96
 4192 02c7 8001     		.uleb128 .L225-.LFB1423
 4193 02c9 01       		.uleb128 0x1
 4194 02ca 7B       		.uleb128 .LEHB97-.LFB1423
 4195 02cb 05       		.uleb128 .LEHE97-.LEHB97
 4196 02cc 00       		.uleb128 0
 4197 02cd 00       		.uleb128 0
 4198 02ce 8801     		.uleb128 .LEHB98-.LFB1423
 4199 02d0 38       		.uleb128 .LEHE98-.LEHB98
 4200 02d1 6D       		.uleb128 .L226-.LFB1423
 4201 02d2 00       		.uleb128 0
 4202 02d3 C001     		.uleb128 .LEHB99-.LFB1423
 4203 02d5 05       		.uleb128 .LEHE99-.LEHB99
 4204 02d6 00       		.uleb128 0
 4205 02d7 00       		.uleb128 0
 4206              	.LLSDACSE1423:
 4207 02d8 01       		.byte	0x1
 4208 02d9 00       		.byte	0
 4209 02da 0000     		.align 4
 4210 02dc 00000000 		.long	0
 4211              	
 4212              	.LLSDATT1423:
 4213              		.text
 4215              		.section	.rodata
 4216 0584 00000000 		.align 8
 4217              	.LC52:
 4218 0588 43616E43 		.string	"CanCallCHECKOutsideOfTestFunction"
 4218      616C6C43 
 4218      4845434B 
 4218      4F757473 
 4218      6964654F 
 4219              		.text
 4220              		.align 2
 4222              	_ZN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionC2Ev:
 4223              	.LFB1425:
 150:TestUnitTest++.cpp **** 
 151:TestUnitTest++.cpp **** TEST(CanCallCHECKOutsideOfTestFunction)
 4224              		.loc 4 151 0 is_stmt 1
 4225              		.cfi_startproc
 4226 1b50 55       		pushq	%rbp
 4227              		.cfi_def_cfa_offset 16
 4228              		.cfi_offset 6, -16
 4229 1b51 4889E5   		movq	%rsp, %rbp
 4230              		.cfi_def_cfa_register 6
 4231 1b54 4883EC10 		subq	$16, %rsp
 4232 1b58 48897DF8 		movq	%rdi, -8(%rbp)
 4233              	.LBB87:
 4234              		.loc 4 151 0
 4235 1b5c E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 4235      00
 4236 1b61 4889C2   		movq	%rax, %rdx
 4237 1b64 488B45F8 		movq	-8(%rbp), %rax
 4238 1b68 41B89700 		movl	$151, %r8d
 4238      0000
 4239 1b6e B9000000 		movl	$.LC1, %ecx
 4239      00
 4240 1b73 BE000000 		movl	$.LC52, %esi
 4240      00
 4241 1b78 4889C7   		movq	%rax, %rdi
 4242 1b7b E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 4242      00
 4243 1b80 488B45F8 		movq	-8(%rbp), %rax
 4244 1b84 48C70000 		movq	$_ZTVN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionE+16, (%rax)
 4244      000000
 4245              	.LBE87:
 4246 1b8b C9       		leave
 4247              		.cfi_def_cfa 7, 8
 4248 1b8c C3       		ret
 4249              		.cfi_endproc
 4250              	.LFE1425:
 4252              		.local	_ZN12_GLOBAL__N_145testCanCallCHECKOutsideOfTestFunctionInstanceE
 4253              		.comm	_ZN12_GLOBAL__N_145testCanCallCHECKOutsideOfTestFunctionInstanceE,56,32
 4254              		.local	_ZN12_GLOBAL__N_138adderCanCallCHECKOutsideOfTestFunctionE
 4255              		.comm	_ZN12_GLOBAL__N_138adderCanCallCHECKOutsideOfTestFunctionE,1,1
 4256 1b8d 90       		.align 2
 4258              	_ZNK12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunction7RunImplEv:
 4259              	.LFB1427:
 152:TestUnitTest++.cpp **** {
 4260              		.loc 4 152 0
 4261              		.cfi_startproc
 4262 1b8e 55       		pushq	%rbp
 4263              		.cfi_def_cfa_offset 16
 4264              		.cfi_offset 6, -16
 4265 1b8f 4889E5   		movq	%rsp, %rbp
 4266              		.cfi_def_cfa_register 6
 4267 1b92 4883EC10 		subq	$16, %rsp
 4268 1b96 48897DF8 		movq	%rdi, -8(%rbp)
 153:TestUnitTest++.cpp **** 	CheckBool(true);
 4269              		.loc 4 153 0
 4270 1b9a BF010000 		movl	$1, %edi
 4270      00
 4271 1b9f E8CBFEFF 		call	_ZN12_GLOBAL__N_19CheckBoolEb
 4271      FF
 154:TestUnitTest++.cpp **** }
 4272              		.loc 4 154 0
 4273 1ba4 C9       		leave
 4274              		.cfi_def_cfa 7, 8
 4275 1ba5 C3       		ret
 4276              		.cfi_endproc
 4277              	.LFE1427:
 4279              		.section	.text._ZN8UnitTest5CheckIbEEbT_,"axG",@progbits,_ZN8UnitTest5CheckIbEEbT_,comdat
 4280              		.weak	_ZN8UnitTest5CheckIbEEbT_
 4282              	_ZN8UnitTest5CheckIbEEbT_:
 4283              	.LFB1456:
 4284              		.file 5 "../Checks.h"
   1:../Checks.h   **** #ifndef UNITTEST_CHECKS_H
   2:../Checks.h   **** #define UNITTEST_CHECKS_H
   3:../Checks.h   **** 
   4:../Checks.h   **** #include "Config.h"
   5:../Checks.h   **** #include "TestResults.h"
   6:../Checks.h   **** #include "MemoryOutStream.h"
   7:../Checks.h   **** 
   8:../Checks.h   **** namespace UnitTest {
   9:../Checks.h   **** 
  10:../Checks.h   **** 
  11:../Checks.h   **** template< typename Value >
  12:../Checks.h   **** bool Check(Value const value)
 4285              		.loc 5 12 0
 4286              		.cfi_startproc
 4287 0000 55       		pushq	%rbp
 4288              		.cfi_def_cfa_offset 16
 4289              		.cfi_offset 6, -16
 4290 0001 4889E5   		movq	%rsp, %rbp
 4291              		.cfi_def_cfa_register 6
 4292 0004 89F8     		movl	%edi, %eax
 4293 0006 8845FC   		movb	%al, -4(%rbp)
  13:../Checks.h   **** {
  14:../Checks.h   ****     return !!value; // doing double negative to avoid silly VS warnings
 4294              		.loc 5 14 0
 4295 0009 0FB645FC 		movzbl	-4(%rbp), %eax
  15:../Checks.h   **** }
 4296              		.loc 5 15 0
 4297 000d 5D       		popq	%rbp
 4298              		.cfi_def_cfa 7, 8
 4299 000e C3       		ret
 4300              		.cfi_endproc
 4301              	.LFE1456:
 4303              		.section	.text._ZN8UnitTest5CheckIPvEEbT_,"axG",@progbits,_ZN8UnitTest5CheckIPvEEbT_,comdat
 4304              		.weak	_ZN8UnitTest5CheckIPvEEbT_
 4306              	_ZN8UnitTest5CheckIPvEEbT_:
 4307              	.LFB1457:
  12:../Checks.h   **** {
 4308              		.loc 5 12 0
 4309              		.cfi_startproc
 4310 0000 55       		pushq	%rbp
 4311              		.cfi_def_cfa_offset 16
 4312              		.cfi_offset 6, -16
 4313 0001 4889E5   		movq	%rsp, %rbp
 4314              		.cfi_def_cfa_register 6
 4315 0004 48897DF8 		movq	%rdi, -8(%rbp)
  14:../Checks.h   **** }
 4316              		.loc 5 14 0
 4317 0008 48837DF8 		cmpq	$0, -8(%rbp)
 4317      00
 4318 000d 0F95C0   		setne	%al
 4319              		.loc 5 15 0
 4320 0010 5D       		popq	%rbp
 4321              		.cfi_def_cfa 7, 8
 4322 0011 C3       		ret
 4323              		.cfi_endproc
 4324              	.LFE1457:
 4326              		.section	.rodata
 4327              	.LC53:
 4328 05aa 45787065 		.string	"Expected "
 4328      63746564 
 4328      2000
 4329              	.LC54:
 4330 05b4 20627574 		.string	" but was "
 4330      20776173 
 4330      2000
 4331              		.section	.text._ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE,"axG",
 4332              		.weak	_ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 4334              	_ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE:
 4335              	.LFB1458:
  16:../Checks.h   **** 
  17:../Checks.h   **** 
  18:../Checks.h   **** template< typename Expected, typename Actual >
  19:../Checks.h   **** void CheckEqual(TestResults& results, Expected const& expected, Actual const& actual, TestDetails c
 4336              		.loc 5 19 0
 4337              		.cfi_startproc
 4338              		.cfi_personality 0x3,__gxx_personality_v0
 4339              		.cfi_lsda 0x3,.LLSDA1458
 4340 0000 55       		pushq	%rbp
 4341              		.cfi_def_cfa_offset 16
 4342              		.cfi_offset 6, -16
 4343 0001 4889E5   		movq	%rsp, %rbp
 4344              		.cfi_def_cfa_register 6
 4345 0004 4154     		pushq	%r12
 4346 0006 53       		pushq	%rbx
 4347 0007 4881EC90 		subq	$400, %rsp
 4347      010000
 4348              		.cfi_offset 12, -24
 4349              		.cfi_offset 3, -32
 4350 000e 4889BD78 		movq	%rdi, -392(%rbp)
 4350      FEFFFF
 4351 0015 4889B570 		movq	%rsi, -400(%rbp)
 4351      FEFFFF
 4352 001c 48899568 		movq	%rdx, -408(%rbp)
 4352      FEFFFF
 4353 0023 48898D60 		movq	%rcx, -416(%rbp)
 4353      FEFFFF
 4354              		.loc 5 19 0
 4355 002a 64488B04 		movq	%fs:40, %rax
 4355      25280000 
 4355      00
 4356 0033 488945E8 		movq	%rax, -24(%rbp)
 4357 0037 31C0     		xorl	%eax, %eax
 4358              	.LBB88:
 4359              	.LBB89:
  20:../Checks.h   **** {
  21:../Checks.h   ****     if (!(expected == actual))
 4360              		.loc 5 21 0
 4361 0039 488B8570 		movq	-400(%rbp), %rax
 4361      FEFFFF
 4362 0040 8B10     		movl	(%rax), %edx
 4363 0042 488B8568 		movq	-408(%rbp), %rax
 4363      FEFFFF
 4364 0049 8B00     		movl	(%rax), %eax
 4365 004b 39C2     		cmpl	%eax, %edx
 4366 004d 0F849200 		je	.L234
 4366      0000
 4367              	.LBB90:
  22:../Checks.h   ****     {
  23:../Checks.h   ****         UnitTest::MemoryOutStream stream;
 4368              		.loc 5 23 0
 4369 0053 488D8580 		leaq	-384(%rbp), %rax
 4369      FEFFFF
 4370 005a 4889C7   		movq	%rax, %rdi
 4371              	.LEHB100:
 4372 005d E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 4372      00
 4373              	.LEHE100:
  24:../Checks.h   ****         stream << "Expected " << expected << " but was " << actual;
 4374              		.loc 5 24 0
 4375 0062 488B8568 		movq	-408(%rbp), %rax
 4375      FEFFFF
 4376 0069 8B18     		movl	(%rax), %ebx
 4377 006b 488B8570 		movq	-400(%rbp), %rax
 4377      FEFFFF
 4378 0072 448B20   		movl	(%rax), %r12d
 4379 0075 488D8580 		leaq	-384(%rbp), %rax
 4379      FEFFFF
 4380 007c BE000000 		movl	$.LC53, %esi
 4380      00
 4381 0081 4889C7   		movq	%rax, %rdi
 4382              	.LEHB101:
 4383 0084 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 4383      00
 4384 0089 4489E6   		movl	%r12d, %esi
 4385 008c 4889C7   		movq	%rax, %rdi
 4386 008f E8000000 		call	_ZNSolsEi
 4386      00
 4387              		.loc 5 24 0 is_stmt 0 discriminator 1
 4388 0094 BE000000 		movl	$.LC54, %esi
 4388      00
 4389 0099 4889C7   		movq	%rax, %rdi
 4390 009c E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 4390      00
 4391              		.loc 5 24 0 discriminator 2
 4392 00a1 89DE     		movl	%ebx, %esi
 4393 00a3 4889C7   		movq	%rax, %rdi
 4394 00a6 E8000000 		call	_ZNSolsEi
 4394      00
  25:../Checks.h   **** 
  26:../Checks.h   ****         results.OnTestFailure(details, stream.GetText());
 4395              		.loc 5 26 0 is_stmt 1
 4396 00ab 488D8580 		leaq	-384(%rbp), %rax
 4396      FEFFFF
 4397 00b2 4889C7   		movq	%rax, %rdi
 4398 00b5 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 4398      00
 4399 00ba 4889C2   		movq	%rax, %rdx
 4400 00bd 488B8D60 		movq	-416(%rbp), %rcx
 4400      FEFFFF
 4401 00c4 488B8578 		movq	-392(%rbp), %rax
 4401      FEFFFF
 4402 00cb 4889CE   		movq	%rcx, %rsi
 4403 00ce 4889C7   		movq	%rax, %rdi
 4404 00d1 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4404      00
 4405              	.LEHE101:
 4406              		.loc 5 26 0 is_stmt 0 discriminator 4
 4407 00d6 488D8580 		leaq	-384(%rbp), %rax
 4407      FEFFFF
 4408 00dd 4889C7   		movq	%rax, %rdi
 4409              	.LEHB102:
 4410 00e0 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 4410      00
 4411              	.LEHE102:
 4412              	.L234:
 4413              	.LBE90:
 4414              	.LBE89:
 4415              	.LBE88:
  27:../Checks.h   ****     }
  28:../Checks.h   **** }
 4416              		.loc 5 28 0 is_stmt 1
 4417 00e5 488B45E8 		movq	-24(%rbp), %rax
 4418 00e9 64483304 		xorq	%fs:40, %rax
 4418      25280000 
 4418      00
 4419 00f2 7424     		je	.L236
 4420 00f4 EB1D     		jmp	.L238
 4421              	.L237:
 4422 00f6 4889C3   		movq	%rax, %rbx
 4423              	.LBB93:
 4424              	.LBB92:
 4425              	.LBB91:
  26:../Checks.h   ****     }
 4426              		.loc 5 26 0
 4427 00f9 488D8580 		leaq	-384(%rbp), %rax
 4427      FEFFFF
 4428 0100 4889C7   		movq	%rax, %rdi
 4429 0103 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 4429      00
 4430 0108 4889D8   		movq	%rbx, %rax
 4431 010b 4889C7   		movq	%rax, %rdi
 4432              	.LEHB103:
 4433 010e E8000000 		call	_Unwind_Resume
 4433      00
 4434              	.LEHE103:
 4435              	.L238:
 4436              	.LBE91:
 4437              	.LBE92:
 4438              	.LBE93:
 4439              		.loc 5 28 0
 4440 0113 E8000000 		call	__stack_chk_fail
 4440      00
 4441              	.L236:
 4442 0118 4881C490 		addq	$400, %rsp
 4442      010000
 4443 011f 5B       		popq	%rbx
 4444 0120 415C     		popq	%r12
 4445 0122 5D       		popq	%rbp
 4446              		.cfi_def_cfa 7, 8
 4447 0123 C3       		ret
 4448              		.cfi_endproc
 4449              	.LFE1458:
 4450              		.section	.gcc_except_table
 4451              	.LLSDA1458:
 4452 02e0 FF       		.byte	0xff
 4453 02e1 FF       		.byte	0xff
 4454 02e2 01       		.byte	0x1
 4455 02e3 14       		.uleb128 .LLSDACSE1458-.LLSDACSB1458
 4456              	.LLSDACSB1458:
 4457 02e4 5D       		.uleb128 .LEHB100-.LFB1458
 4458 02e5 05       		.uleb128 .LEHE100-.LEHB100
 4459 02e6 00       		.uleb128 0
 4460 02e7 00       		.uleb128 0
 4461 02e8 8401     		.uleb128 .LEHB101-.LFB1458
 4462 02ea 52       		.uleb128 .LEHE101-.LEHB101
 4463 02eb F601     		.uleb128 .L237-.LFB1458
 4464 02ed 00       		.uleb128 0
 4465 02ee E001     		.uleb128 .LEHB102-.LFB1458
 4466 02f0 05       		.uleb128 .LEHE102-.LEHB102
 4467 02f1 00       		.uleb128 0
 4468 02f2 00       		.uleb128 0
 4469 02f3 8E02     		.uleb128 .LEHB103-.LFB1458
 4470 02f5 05       		.uleb128 .LEHE103-.LEHB103
 4471 02f6 00       		.uleb128 0
 4472 02f7 00       		.uleb128 0
 4473              	.LLSDACSE1458:
 4474              		.section	.text._ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE,"axG",
 4476              		.section	.text._ZN8UnitTest10CheckEqualIPvS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE,"ax
 4477              		.weak	_ZN8UnitTest10CheckEqualIPvS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 4479              	_ZN8UnitTest10CheckEqualIPvS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE:
 4480              	.LFB1459:
  19:../Checks.h   **** {
 4481              		.loc 5 19 0
 4482              		.cfi_startproc
 4483              		.cfi_personality 0x3,__gxx_personality_v0
 4484              		.cfi_lsda 0x3,.LLSDA1459
 4485 0000 55       		pushq	%rbp
 4486              		.cfi_def_cfa_offset 16
 4487              		.cfi_offset 6, -16
 4488 0001 4889E5   		movq	%rsp, %rbp
 4489              		.cfi_def_cfa_register 6
 4490 0004 4154     		pushq	%r12
 4491 0006 53       		pushq	%rbx
 4492 0007 4881EC90 		subq	$400, %rsp
 4492      010000
 4493              		.cfi_offset 12, -24
 4494              		.cfi_offset 3, -32
 4495 000e 4889BD78 		movq	%rdi, -392(%rbp)
 4495      FEFFFF
 4496 0015 4889B570 		movq	%rsi, -400(%rbp)
 4496      FEFFFF
 4497 001c 48899568 		movq	%rdx, -408(%rbp)
 4497      FEFFFF
 4498 0023 48898D60 		movq	%rcx, -416(%rbp)
 4498      FEFFFF
  19:../Checks.h   **** {
 4499              		.loc 5 19 0
 4500 002a 64488B04 		movq	%fs:40, %rax
 4500      25280000 
 4500      00
 4501 0033 488945E8 		movq	%rax, -24(%rbp)
 4502 0037 31C0     		xorl	%eax, %eax
 4503              	.LBB94:
 4504              	.LBB95:
  21:../Checks.h   ****     {
 4505              		.loc 5 21 0
 4506 0039 488B8570 		movq	-400(%rbp), %rax
 4506      FEFFFF
 4507 0040 488B10   		movq	(%rax), %rdx
 4508 0043 488B8568 		movq	-408(%rbp), %rax
 4508      FEFFFF
 4509 004a 488B00   		movq	(%rax), %rax
 4510 004d 4839C2   		cmpq	%rax, %rdx
 4511 0050 0F849400 		je	.L240
 4511      0000
 4512              	.LBB96:
  23:../Checks.h   ****         stream << "Expected " << expected << " but was " << actual;
 4513              		.loc 5 23 0
 4514 0056 488D8580 		leaq	-384(%rbp), %rax
 4514      FEFFFF
 4515 005d 4889C7   		movq	%rax, %rdi
 4516              	.LEHB104:
 4517 0060 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 4517      00
 4518              	.LEHE104:
  24:../Checks.h   **** 
 4519              		.loc 5 24 0
 4520 0065 488B8568 		movq	-408(%rbp), %rax
 4520      FEFFFF
 4521 006c 488B18   		movq	(%rax), %rbx
 4522 006f 488B8570 		movq	-400(%rbp), %rax
 4522      FEFFFF
 4523 0076 4C8B20   		movq	(%rax), %r12
 4524 0079 488D8580 		leaq	-384(%rbp), %rax
 4524      FEFFFF
 4525 0080 BE000000 		movl	$.LC53, %esi
 4525      00
 4526 0085 4889C7   		movq	%rax, %rdi
 4527              	.LEHB105:
 4528 0088 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 4528      00
 4529 008d 4C89E6   		movq	%r12, %rsi
 4530 0090 4889C7   		movq	%rax, %rdi
 4531 0093 E8000000 		call	_ZNSolsEPKv
 4531      00
  24:../Checks.h   **** 
 4532              		.loc 5 24 0 is_stmt 0 discriminator 1
 4533 0098 BE000000 		movl	$.LC54, %esi
 4533      00
 4534 009d 4889C7   		movq	%rax, %rdi
 4535 00a0 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 4535      00
  24:../Checks.h   **** 
 4536              		.loc 5 24 0 discriminator 2
 4537 00a5 4889DE   		movq	%rbx, %rsi
 4538 00a8 4889C7   		movq	%rax, %rdi
 4539 00ab E8000000 		call	_ZNSolsEPKv
 4539      00
  26:../Checks.h   ****     }
 4540              		.loc 5 26 0 is_stmt 1
 4541 00b0 488D8580 		leaq	-384(%rbp), %rax
 4541      FEFFFF
 4542 00b7 4889C7   		movq	%rax, %rdi
 4543 00ba E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 4543      00
 4544 00bf 4889C2   		movq	%rax, %rdx
 4545 00c2 488B8D60 		movq	-416(%rbp), %rcx
 4545      FEFFFF
 4546 00c9 488B8578 		movq	-392(%rbp), %rax
 4546      FEFFFF
 4547 00d0 4889CE   		movq	%rcx, %rsi
 4548 00d3 4889C7   		movq	%rax, %rdi
 4549 00d6 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4549      00
 4550              	.LEHE105:
  26:../Checks.h   ****     }
 4551              		.loc 5 26 0 is_stmt 0 discriminator 4
 4552 00db 488D8580 		leaq	-384(%rbp), %rax
 4552      FEFFFF
 4553 00e2 4889C7   		movq	%rax, %rdi
 4554              	.LEHB106:
 4555 00e5 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 4555      00
 4556              	.LEHE106:
 4557              	.L240:
 4558              	.LBE96:
 4559              	.LBE95:
 4560              	.LBE94:
 4561              		.loc 5 28 0 is_stmt 1
 4562 00ea 488B45E8 		movq	-24(%rbp), %rax
 4563 00ee 64483304 		xorq	%fs:40, %rax
 4563      25280000 
 4563      00
 4564 00f7 7424     		je	.L242
 4565 00f9 EB1D     		jmp	.L244
 4566              	.L243:
 4567 00fb 4889C3   		movq	%rax, %rbx
 4568              	.LBB99:
 4569              	.LBB98:
 4570              	.LBB97:
  26:../Checks.h   ****     }
 4571              		.loc 5 26 0
 4572 00fe 488D8580 		leaq	-384(%rbp), %rax
 4572      FEFFFF
 4573 0105 4889C7   		movq	%rax, %rdi
 4574 0108 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 4574      00
 4575 010d 4889D8   		movq	%rbx, %rax
 4576 0110 4889C7   		movq	%rax, %rdi
 4577              	.LEHB107:
 4578 0113 E8000000 		call	_Unwind_Resume
 4578      00
 4579              	.LEHE107:
 4580              	.L244:
 4581              	.LBE97:
 4582              	.LBE98:
 4583              	.LBE99:
 4584              		.loc 5 28 0
 4585 0118 E8000000 		call	__stack_chk_fail
 4585      00
 4586              	.L242:
 4587 011d 4881C490 		addq	$400, %rsp
 4587      010000
 4588 0124 5B       		popq	%rbx
 4589 0125 415C     		popq	%r12
 4590 0127 5D       		popq	%rbp
 4591              		.cfi_def_cfa 7, 8
 4592 0128 C3       		ret
 4593              		.cfi_endproc
 4594              	.LFE1459:
 4595              		.section	.gcc_except_table
 4596              	.LLSDA1459:
 4597 02f8 FF       		.byte	0xff
 4598 02f9 FF       		.byte	0xff
 4599 02fa 01       		.byte	0x1
 4600 02fb 14       		.uleb128 .LLSDACSE1459-.LLSDACSB1459
 4601              	.LLSDACSB1459:
 4602 02fc 60       		.uleb128 .LEHB104-.LFB1459
 4603 02fd 05       		.uleb128 .LEHE104-.LEHB104
 4604 02fe 00       		.uleb128 0
 4605 02ff 00       		.uleb128 0
 4606 0300 8801     		.uleb128 .LEHB105-.LFB1459
 4607 0302 53       		.uleb128 .LEHE105-.LEHB105
 4608 0303 FB01     		.uleb128 .L243-.LFB1459
 4609 0305 00       		.uleb128 0
 4610 0306 E501     		.uleb128 .LEHB106-.LFB1459
 4611 0308 05       		.uleb128 .LEHE106-.LEHB106
 4612 0309 00       		.uleb128 0
 4613 030a 00       		.uleb128 0
 4614 030b 9302     		.uleb128 .LEHB107-.LFB1459
 4615 030d 05       		.uleb128 .LEHE107-.LEHB107
 4616 030e 00       		.uleb128 0
 4617 030f 00       		.uleb128 0
 4618              	.LLSDACSE1459:
 4619              		.section	.text._ZN8UnitTest10CheckEqualIPvS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE,"ax
 4621              		.section	.rodata
 4622              	.LC55:
 4623 05be 202B2F2D 		.string	" +/- "
 4623      2000
 4624              		.section	.text._ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE,
 4625              		.weak	_ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE
 4627              	_ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE:
 4628              	.LFB1460:
  29:../Checks.h   **** 
  30:../Checks.h   **** void CheckEqual(TestResults& results, char const* expected, char const* actual, TestDetails const& 
  31:../Checks.h   **** 
  32:../Checks.h   **** void CheckEqual(TestResults& results, char* expected, char* actual, TestDetails const& details);
  33:../Checks.h   **** 
  34:../Checks.h   **** void CheckEqual(TestResults& results, char* expected, char const* actual, TestDetails const& detail
  35:../Checks.h   **** 
  36:../Checks.h   **** void CheckEqual(TestResults& results, char const* expected, char* actual, TestDetails const& detail
  37:../Checks.h   **** 
  38:../Checks.h   **** template< typename Expected, typename Actual, typename Tolerance >
  39:../Checks.h   **** bool AreClose(Expected const& expected, Actual const& actual, Tolerance const& tolerance)
  40:../Checks.h   **** {
  41:../Checks.h   ****     return (actual >= (expected - tolerance)) && (actual <= (expected + tolerance));
  42:../Checks.h   **** }
  43:../Checks.h   **** 
  44:../Checks.h   **** template< typename Expected, typename Actual, typename Tolerance >
  45:../Checks.h   **** void CheckClose(TestResults& results, Expected const& expected, Actual const& actual, Tolerance con
 4629              		.loc 5 45 0
 4630              		.cfi_startproc
 4631              		.cfi_personality 0x3,__gxx_personality_v0
 4632              		.cfi_lsda 0x3,.LLSDA1460
 4633 0000 55       		pushq	%rbp
 4634              		.cfi_def_cfa_offset 16
 4635              		.cfi_offset 6, -16
 4636 0001 4889E5   		movq	%rsp, %rbp
 4637              		.cfi_def_cfa_register 6
 4638 0004 4155     		pushq	%r13
 4639 0006 4154     		pushq	%r12
 4640 0008 53       		pushq	%rbx
 4641 0009 4881ECA8 		subq	$424, %rsp
 4641      010000
 4642              		.cfi_offset 13, -24
 4643              		.cfi_offset 12, -32
 4644              		.cfi_offset 3, -40
 4645 0010 4889BD68 		movq	%rdi, -408(%rbp)
 4645      FEFFFF
 4646 0017 4889B560 		movq	%rsi, -416(%rbp)
 4646      FEFFFF
 4647 001e 48899558 		movq	%rdx, -424(%rbp)
 4647      FEFFFF
 4648 0025 48898D50 		movq	%rcx, -432(%rbp)
 4648      FEFFFF
 4649 002c 4C898548 		movq	%r8, -440(%rbp)
 4649      FEFFFF
 4650              		.loc 5 45 0
 4651 0033 64488B04 		movq	%fs:40, %rax
 4651      25280000 
 4651      00
 4652 003c 488945D8 		movq	%rax, -40(%rbp)
 4653 0040 31C0     		xorl	%eax, %eax
 4654              	.LBB100:
 4655              	.LBB101:
  46:../Checks.h   ****                 TestDetails const& details)
  47:../Checks.h   **** {
  48:../Checks.h   ****     if (!AreClose(expected, actual, tolerance))
 4656              		.loc 5 48 0
 4657 0042 488B9550 		movq	-432(%rbp), %rdx
 4657      FEFFFF
 4658 0049 488B8D58 		movq	-424(%rbp), %rcx
 4658      FEFFFF
 4659 0050 488B8560 		movq	-416(%rbp), %rax
 4659      FEFFFF
 4660 0057 4889CE   		movq	%rcx, %rsi
 4661 005a 4889C7   		movq	%rax, %rdi
 4662 005d E8000000 		call	_ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_
 4662      00
 4663 0062 83F001   		xorl	$1, %eax
 4664 0065 84C0     		testb	%al, %al
 4665 0067 0F84D800 		je	.L246
 4665      0000
 4666              	.LBB102:
  49:../Checks.h   ****     { 
  50:../Checks.h   ****         UnitTest::MemoryOutStream stream;
 4667              		.loc 5 50 0
 4668 006d 488D8570 		leaq	-400(%rbp), %rax
 4668      FEFFFF
 4669 0074 4889C7   		movq	%rax, %rdi
 4670              	.LEHB108:
 4671 0077 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 4671      00
 4672              	.LEHE108:
  51:../Checks.h   ****         stream << "Expected " << expected << " +/- " << tolerance << " but was " << actual;
 4673              		.loc 5 51 0
 4674 007c 488B8558 		movq	-424(%rbp), %rax
 4674      FEFFFF
 4675 0083 8B18     		movl	(%rax), %ebx
 4676 0085 488B8550 		movq	-432(%rbp), %rax
 4676      FEFFFF
 4677 008c 448B20   		movl	(%rax), %r12d
 4678 008f 488B8560 		movq	-416(%rbp), %rax
 4678      FEFFFF
 4679 0096 448B28   		movl	(%rax), %r13d
 4680 0099 488D8570 		leaq	-400(%rbp), %rax
 4680      FEFFFF
 4681 00a0 BE000000 		movl	$.LC53, %esi
 4681      00
 4682 00a5 4889C7   		movq	%rax, %rdi
 4683              	.LEHB109:
 4684 00a8 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 4684      00
 4685 00ad 4489AD44 		movl	%r13d, -444(%rbp)
 4685      FEFFFF
 4686 00b4 F30F1085 		movss	-444(%rbp), %xmm0
 4686      44FEFFFF 
 4687 00bc 4889C7   		movq	%rax, %rdi
 4688 00bf E8000000 		call	_ZNSolsEf
 4688      00
 4689              		.loc 5 51 0 is_stmt 0 discriminator 1
 4690 00c4 BE000000 		movl	$.LC55, %esi
 4690      00
 4691 00c9 4889C7   		movq	%rax, %rdi
 4692 00cc E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 4692      00
 4693              		.loc 5 51 0 discriminator 2
 4694 00d1 4489A544 		movl	%r12d, -444(%rbp)
 4694      FEFFFF
 4695 00d8 F30F1085 		movss	-444(%rbp), %xmm0
 4695      44FEFFFF 
 4696 00e0 4889C7   		movq	%rax, %rdi
 4697 00e3 E8000000 		call	_ZNSolsEf
 4697      00
 4698              		.loc 5 51 0 discriminator 3
 4699 00e8 BE000000 		movl	$.LC54, %esi
 4699      00
 4700 00ed 4889C7   		movq	%rax, %rdi
 4701 00f0 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 4701      00
 4702              		.loc 5 51 0 discriminator 4
 4703 00f5 899D44FE 		movl	%ebx, -444(%rbp)
 4703      FFFF
 4704 00fb F30F1085 		movss	-444(%rbp), %xmm0
 4704      44FEFFFF 
 4705 0103 4889C7   		movq	%rax, %rdi
 4706 0106 E8000000 		call	_ZNSolsEf
 4706      00
  52:../Checks.h   **** 
  53:../Checks.h   ****         results.OnTestFailure(details, stream.GetText());
 4707              		.loc 5 53 0 is_stmt 1
 4708 010b 488D8570 		leaq	-400(%rbp), %rax
 4708      FEFFFF
 4709 0112 4889C7   		movq	%rax, %rdi
 4710 0115 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 4710      00
 4711 011a 4889C2   		movq	%rax, %rdx
 4712 011d 488B8D48 		movq	-440(%rbp), %rcx
 4712      FEFFFF
 4713 0124 488B8568 		movq	-408(%rbp), %rax
 4713      FEFFFF
 4714 012b 4889CE   		movq	%rcx, %rsi
 4715 012e 4889C7   		movq	%rax, %rdi
 4716 0131 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4716      00
 4717              	.LEHE109:
 4718              		.loc 5 53 0 is_stmt 0 discriminator 4
 4719 0136 488D8570 		leaq	-400(%rbp), %rax
 4719      FEFFFF
 4720 013d 4889C7   		movq	%rax, %rdi
 4721              	.LEHB110:
 4722 0140 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 4722      00
 4723              	.LEHE110:
 4724              	.L246:
 4725              	.LBE102:
 4726              	.LBE101:
 4727              	.LBE100:
  54:../Checks.h   ****     }
  55:../Checks.h   **** }
 4728              		.loc 5 55 0 is_stmt 1
 4729 0145 488B45D8 		movq	-40(%rbp), %rax
 4730 0149 64483304 		xorq	%fs:40, %rax
 4730      25280000 
 4730      00
 4731 0152 7424     		je	.L248
 4732 0154 EB1D     		jmp	.L250
 4733              	.L249:
 4734 0156 4889C3   		movq	%rax, %rbx
 4735              	.LBB105:
 4736              	.LBB104:
 4737              	.LBB103:
  53:../Checks.h   ****     }
 4738              		.loc 5 53 0
 4739 0159 488D8570 		leaq	-400(%rbp), %rax
 4739      FEFFFF
 4740 0160 4889C7   		movq	%rax, %rdi
 4741 0163 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 4741      00
 4742 0168 4889D8   		movq	%rbx, %rax
 4743 016b 4889C7   		movq	%rax, %rdi
 4744              	.LEHB111:
 4745 016e E8000000 		call	_Unwind_Resume
 4745      00
 4746              	.LEHE111:
 4747              	.L250:
 4748              	.LBE103:
 4749              	.LBE104:
 4750              	.LBE105:
 4751              		.loc 5 55 0
 4752 0173 E8000000 		call	__stack_chk_fail
 4752      00
 4753              	.L248:
 4754 0178 4881C4A8 		addq	$424, %rsp
 4754      010000
 4755 017f 5B       		popq	%rbx
 4756 0180 415C     		popq	%r12
 4757 0182 415D     		popq	%r13
 4758 0184 5D       		popq	%rbp
 4759              		.cfi_def_cfa 7, 8
 4760 0185 C3       		ret
 4761              		.cfi_endproc
 4762              	.LFE1460:
 4763              		.section	.gcc_except_table
 4764              	.LLSDA1460:
 4765 0310 FF       		.byte	0xff
 4766 0311 FF       		.byte	0xff
 4767 0312 01       		.byte	0x1
 4768 0313 15       		.uleb128 .LLSDACSE1460-.LLSDACSB1460
 4769              	.LLSDACSB1460:
 4770 0314 77       		.uleb128 .LEHB108-.LFB1460
 4771 0315 05       		.uleb128 .LEHE108-.LEHB108
 4772 0316 00       		.uleb128 0
 4773 0317 00       		.uleb128 0
 4774 0318 A801     		.uleb128 .LEHB109-.LFB1460
 4775 031a 8E01     		.uleb128 .LEHE109-.LEHB109
 4776 031c D602     		.uleb128 .L249-.LFB1460
 4777 031e 00       		.uleb128 0
 4778 031f C002     		.uleb128 .LEHB110-.LFB1460
 4779 0321 05       		.uleb128 .LEHE110-.LEHB110
 4780 0322 00       		.uleb128 0
 4781 0323 00       		.uleb128 0
 4782 0324 EE02     		.uleb128 .LEHB111-.LFB1460
 4783 0326 05       		.uleb128 .LEHE111-.LEHB111
 4784 0327 00       		.uleb128 0
 4785 0328 00       		.uleb128 0
 4786              	.LLSDACSE1460:
 4787              		.section	.text._ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE,
 4789              		.section	.rodata
 4790              	.LC56:
 4791 05c4 45787065 		.string	"Expected [ "
 4791      63746564 
 4791      205B2000 
 4792              	.LC57:
 4793 05d0 2000     		.string	" "
 4794              	.LC58:
 4795 05d2 5D202B2F 		.string	"] +/- "
 4795      2D2000
 4796              	.LC59:
 4797 05d9 20627574 		.string	" but was [ "
 4797      20776173 
 4797      205B2000 
 4798              	.LC60:
 4799 05e5 5D00     		.string	"]"
 4800              		.section	.text._ZN8UnitTest15CheckArrayCloseIA3_fS1_fEEvRNS_11TestResultsERKT_RKT0_iRKT1_RKNS_11Te
 4801              		.weak	_ZN8UnitTest15CheckArrayCloseIA3_fS1_fEEvRNS_11TestResultsERKT_RKT0_iRKT1_RKNS_11TestDetails
 4803              	_ZN8UnitTest15CheckArrayCloseIA3_fS1_fEEvRNS_11TestResultsERKT_RKT0_iRKT1_RKNS_11TestDetailsE:
 4804              	.LFB1461:
  56:../Checks.h   **** 
  57:../Checks.h   **** 
  58:../Checks.h   **** template< typename Expected, typename Actual >
  59:../Checks.h   **** void CheckArrayEqual(TestResults& results, Expected const& expected, Actual const& actual,
  60:../Checks.h   ****                 int const count, TestDetails const& details)
  61:../Checks.h   **** {
  62:../Checks.h   ****     bool equal = true;
  63:../Checks.h   ****     for (int i = 0; i < count; ++i)
  64:../Checks.h   ****         equal &= (expected[i] == actual[i]);
  65:../Checks.h   **** 
  66:../Checks.h   ****     if (!equal)
  67:../Checks.h   ****     {
  68:../Checks.h   ****         UnitTest::MemoryOutStream stream;
  69:../Checks.h   **** 
  70:../Checks.h   **** 		stream << "Expected [ ";
  71:../Checks.h   **** 
  72:../Checks.h   **** 		for (int expectedIndex = 0; expectedIndex < count; ++expectedIndex)
  73:../Checks.h   ****             stream << expected[expectedIndex] << " ";
  74:../Checks.h   **** 
  75:../Checks.h   **** 		stream << "] but was [ ";
  76:../Checks.h   **** 
  77:../Checks.h   **** 		for (int actualIndex = 0; actualIndex < count; ++actualIndex)
  78:../Checks.h   ****             stream << actual[actualIndex] << " ";
  79:../Checks.h   **** 
  80:../Checks.h   **** 		stream << "]";
  81:../Checks.h   **** 
  82:../Checks.h   ****         results.OnTestFailure(details, stream.GetText());
  83:../Checks.h   ****     }
  84:../Checks.h   **** }
  85:../Checks.h   **** 
  86:../Checks.h   **** template< typename Expected, typename Actual, typename Tolerance >
  87:../Checks.h   **** bool ArrayAreClose(Expected const& expected, Actual const& actual, int const count, Tolerance const
  88:../Checks.h   **** {
  89:../Checks.h   ****     bool equal = true;
  90:../Checks.h   ****     for (int i = 0; i < count; ++i)
  91:../Checks.h   ****         equal &= AreClose(expected[i], actual[i], tolerance);
  92:../Checks.h   ****     return equal;
  93:../Checks.h   **** }
  94:../Checks.h   **** 
  95:../Checks.h   **** template< typename Expected, typename Actual, typename Tolerance >
  96:../Checks.h   **** void CheckArrayClose(TestResults& results, Expected const& expected, Actual const& actual,
 4805              		.loc 5 96 0
 4806              		.cfi_startproc
 4807              		.cfi_personality 0x3,__gxx_personality_v0
 4808              		.cfi_lsda 0x3,.LLSDA1461
 4809 0000 55       		pushq	%rbp
 4810              		.cfi_def_cfa_offset 16
 4811              		.cfi_offset 6, -16
 4812 0001 4889E5   		movq	%rsp, %rbp
 4813              		.cfi_def_cfa_register 6
 4814 0004 53       		pushq	%rbx
 4815 0005 4881ECB8 		subq	$440, %rsp
 4815      010000
 4816              		.cfi_offset 3, -24
 4817 000c 4889BD68 		movq	%rdi, -408(%rbp)
 4817      FEFFFF
 4818 0013 4889B560 		movq	%rsi, -416(%rbp)
 4818      FEFFFF
 4819 001a 48899558 		movq	%rdx, -424(%rbp)
 4819      FEFFFF
 4820 0021 898D54FE 		movl	%ecx, -428(%rbp)
 4820      FFFF
 4821 0027 4C898548 		movq	%r8, -440(%rbp)
 4821      FEFFFF
 4822 002e 4C898D40 		movq	%r9, -448(%rbp)
 4822      FEFFFF
 4823              		.loc 5 96 0
 4824 0035 64488B04 		movq	%fs:40, %rax
 4824      25280000 
 4824      00
 4825 003e 488945E8 		movq	%rax, -24(%rbp)
 4826 0042 31C0     		xorl	%eax, %eax
 4827              	.LBB106:
  97:../Checks.h   ****                    int const count, Tolerance const& tolerance, TestDetails const& details)
  98:../Checks.h   **** {
  99:../Checks.h   ****     bool equal = ArrayAreClose(expected, actual, count, tolerance);
 4828              		.loc 5 99 0
 4829 0044 488B8D48 		movq	-440(%rbp), %rcx
 4829      FEFFFF
 4830 004b 8B9554FE 		movl	-428(%rbp), %edx
 4830      FFFF
 4831 0051 488BB558 		movq	-424(%rbp), %rsi
 4831      FEFFFF
 4832 0058 488B8560 		movq	-416(%rbp), %rax
 4832      FEFFFF
 4833 005f 4889C7   		movq	%rax, %rdi
 4834 0062 E8000000 		call	_ZN8UnitTest13ArrayAreCloseIA3_fS1_fEEbRKT_RKT0_iRKT1_
 4834      00
 4835 0067 888577FE 		movb	%al, -393(%rbp)
 4835      FFFF
 4836              	.LBB107:
 100:../Checks.h   **** 
 101:../Checks.h   ****     if (!equal)
 4837              		.loc 5 101 0
 4838 006d 0FB68577 		movzbl	-393(%rbp), %eax
 4838      FEFFFF
 4839 0074 83F001   		xorl	$1, %eax
 4840 0077 84C0     		testb	%al, %al
 4841 0079 0F846D01 		je	.L252
 4841      0000
 4842              	.LBB108:
 102:../Checks.h   ****     {
 103:../Checks.h   ****         UnitTest::MemoryOutStream stream;
 4843              		.loc 5 103 0
 4844 007f 488D8580 		leaq	-384(%rbp), %rax
 4844      FEFFFF
 4845 0086 4889C7   		movq	%rax, %rdi
 4846              	.LEHB112:
 4847 0089 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 4847      00
 4848              	.LEHE112:
 104:../Checks.h   **** 
 105:../Checks.h   ****         stream << "Expected [ ";
 4849              		.loc 5 105 0
 4850 008e 488D8580 		leaq	-384(%rbp), %rax
 4850      FEFFFF
 4851 0095 BE000000 		movl	$.LC56, %esi
 4851      00
 4852 009a 4889C7   		movq	%rax, %rdi
 4853              	.LEHB113:
 4854 009d E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 4854      00
 4855              	.LBB109:
 106:../Checks.h   ****         for (int expectedIndex = 0; expectedIndex < count; ++expectedIndex)
 4856              		.loc 5 106 0
 4857 00a2 C78578FE 		movl	$0, -392(%rbp)
 4857      FFFF0000 
 4857      0000
 4858 00ac EB44     		jmp	.L253
 4859              	.L254:
 107:../Checks.h   ****             stream << expected[expectedIndex] << " ";
 4860              		.loc 5 107 0
 4861 00ae 488B8560 		movq	-416(%rbp), %rax
 4861      FEFFFF
 4862 00b5 8B9578FE 		movl	-392(%rbp), %edx
 4862      FFFF
 4863 00bb 4863D2   		movslq	%edx, %rdx
 4864 00be 8B1490   		movl	(%rax,%rdx,4), %edx
 4865 00c1 488D8580 		leaq	-384(%rbp), %rax
 4865      FEFFFF
 4866 00c8 899550FE 		movl	%edx, -432(%rbp)
 4866      FFFF
 4867 00ce F30F1085 		movss	-432(%rbp), %xmm0
 4867      50FEFFFF 
 4868 00d6 4889C7   		movq	%rax, %rdi
 4869 00d9 E8000000 		call	_ZNSolsEf
 4869      00
 4870 00de BE000000 		movl	$.LC57, %esi
 4870      00
 4871 00e3 4889C7   		movq	%rax, %rdi
 4872 00e6 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 4872      00
 106:../Checks.h   ****         for (int expectedIndex = 0; expectedIndex < count; ++expectedIndex)
 4873              		.loc 5 106 0 discriminator 2
 4874 00eb 838578FE 		addl	$1, -392(%rbp)
 4874      FFFF01
 4875              	.L253:
 106:../Checks.h   ****         for (int expectedIndex = 0; expectedIndex < count; ++expectedIndex)
 4876              		.loc 5 106 0 is_stmt 0 discriminator 1
 4877 00f2 8B8578FE 		movl	-392(%rbp), %eax
 4877      FFFF
 4878 00f8 3B8554FE 		cmpl	-428(%rbp), %eax
 4878      FFFF
 4879 00fe 7CAE     		jl	.L254
 4880              	.LBE109:
 108:../Checks.h   ****         stream << "] +/- " << tolerance << " but was [ ";
 4881              		.loc 5 108 0 is_stmt 1
 4882 0100 488B8548 		movq	-440(%rbp), %rax
 4882      FEFFFF
 4883 0107 8B18     		movl	(%rax), %ebx
 4884 0109 488D8580 		leaq	-384(%rbp), %rax
 4884      FEFFFF
 4885 0110 BE000000 		movl	$.LC58, %esi
 4885      00
 4886 0115 4889C7   		movq	%rax, %rdi
 4887 0118 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 4887      00
 4888 011d 899D50FE 		movl	%ebx, -432(%rbp)
 4888      FFFF
 4889 0123 F30F1085 		movss	-432(%rbp), %xmm0
 4889      50FEFFFF 
 4890 012b 4889C7   		movq	%rax, %rdi
 4891 012e E8000000 		call	_ZNSolsEf
 4891      00
 4892              		.loc 5 108 0 is_stmt 0 discriminator 1
 4893 0133 BE000000 		movl	$.LC59, %esi
 4893      00
 4894 0138 4889C7   		movq	%rax, %rdi
 4895 013b E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 4895      00
 4896              	.LBB110:
 109:../Checks.h   **** 
 110:../Checks.h   **** 		for (int actualIndex = 0; actualIndex < count; ++actualIndex)
 4897              		.loc 5 110 0 is_stmt 1
 4898 0140 C7857CFE 		movl	$0, -388(%rbp)
 4898      FFFF0000 
 4898      0000
 4899 014a EB44     		jmp	.L255
 4900              	.L256:
 111:../Checks.h   ****             stream << actual[actualIndex] << " ";
 4901              		.loc 5 111 0
 4902 014c 488B8558 		movq	-424(%rbp), %rax
 4902      FEFFFF
 4903 0153 8B957CFE 		movl	-388(%rbp), %edx
 4903      FFFF
 4904 0159 4863D2   		movslq	%edx, %rdx
 4905 015c 8B1490   		movl	(%rax,%rdx,4), %edx
 4906 015f 488D8580 		leaq	-384(%rbp), %rax
 4906      FEFFFF
 4907 0166 899550FE 		movl	%edx, -432(%rbp)
 4907      FFFF
 4908 016c F30F1085 		movss	-432(%rbp), %xmm0
 4908      50FEFFFF 
 4909 0174 4889C7   		movq	%rax, %rdi
 4910 0177 E8000000 		call	_ZNSolsEf
 4910      00
 4911 017c BE000000 		movl	$.LC57, %esi
 4911      00
 4912 0181 4889C7   		movq	%rax, %rdi
 4913 0184 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 4913      00
 110:../Checks.h   ****             stream << actual[actualIndex] << " ";
 4914              		.loc 5 110 0 discriminator 2
 4915 0189 83857CFE 		addl	$1, -388(%rbp)
 4915      FFFF01
 4916              	.L255:
 110:../Checks.h   ****             stream << actual[actualIndex] << " ";
 4917              		.loc 5 110 0 is_stmt 0 discriminator 1
 4918 0190 8B857CFE 		movl	-388(%rbp), %eax
 4918      FFFF
 4919 0196 3B8554FE 		cmpl	-428(%rbp), %eax
 4919      FFFF
 4920 019c 7CAE     		jl	.L256
 4921              	.LBE110:
 112:../Checks.h   ****         stream << "]";
 4922              		.loc 5 112 0 is_stmt 1
 4923 019e 488D8580 		leaq	-384(%rbp), %rax
 4923      FEFFFF
 4924 01a5 BE000000 		movl	$.LC60, %esi
 4924      00
 4925 01aa 4889C7   		movq	%rax, %rdi
 4926 01ad E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 4926      00
 113:../Checks.h   **** 
 114:../Checks.h   ****         results.OnTestFailure(details, stream.GetText());
 4927              		.loc 5 114 0
 4928 01b2 488D8580 		leaq	-384(%rbp), %rax
 4928      FEFFFF
 4929 01b9 4889C7   		movq	%rax, %rdi
 4930 01bc E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 4930      00
 4931 01c1 4889C2   		movq	%rax, %rdx
 4932 01c4 488B8D40 		movq	-448(%rbp), %rcx
 4932      FEFFFF
 4933 01cb 488B8568 		movq	-408(%rbp), %rax
 4933      FEFFFF
 4934 01d2 4889CE   		movq	%rcx, %rsi
 4935 01d5 4889C7   		movq	%rax, %rdi
 4936 01d8 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4936      00
 4937              	.LEHE113:
 4938              		.loc 5 114 0 is_stmt 0 discriminator 4
 4939 01dd 488D8580 		leaq	-384(%rbp), %rax
 4939      FEFFFF
 4940 01e4 4889C7   		movq	%rax, %rdi
 4941              	.LEHB114:
 4942 01e7 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 4942      00
 4943              	.LEHE114:
 4944              	.L252:
 4945              	.LBE108:
 4946              	.LBE107:
 4947              	.LBE106:
 115:../Checks.h   ****     }
 116:../Checks.h   **** }
 4948              		.loc 5 116 0 is_stmt 1
 4949 01ec 488B45E8 		movq	-24(%rbp), %rax
 4950 01f0 64483304 		xorq	%fs:40, %rax
 4950      25280000 
 4950      00
 4951 01f9 7424     		je	.L258
 4952 01fb EB1D     		jmp	.L260
 4953              	.L259:
 4954 01fd 4889C3   		movq	%rax, %rbx
 4955              	.LBB113:
 4956              	.LBB112:
 4957              	.LBB111:
 114:../Checks.h   ****     }
 4958              		.loc 5 114 0
 4959 0200 488D8580 		leaq	-384(%rbp), %rax
 4959      FEFFFF
 4960 0207 4889C7   		movq	%rax, %rdi
 4961 020a E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 4961      00
 4962 020f 4889D8   		movq	%rbx, %rax
 4963 0212 4889C7   		movq	%rax, %rdi
 4964              	.LEHB115:
 4965 0215 E8000000 		call	_Unwind_Resume
 4965      00
 4966              	.LEHE115:
 4967              	.L260:
 4968              	.LBE111:
 4969              	.LBE112:
 4970              	.LBE113:
 4971              		.loc 5 116 0
 4972 021a E8000000 		call	__stack_chk_fail
 4972      00
 4973              	.L258:
 4974 021f 4881C4B8 		addq	$440, %rsp
 4974      010000
 4975 0226 5B       		popq	%rbx
 4976 0227 5D       		popq	%rbp
 4977              		.cfi_def_cfa 7, 8
 4978 0228 C3       		ret
 4979              		.cfi_endproc
 4980              	.LFE1461:
 4981              		.section	.gcc_except_table
 4982              	.LLSDA1461:
 4983 0329 FF       		.byte	0xff
 4984 032a FF       		.byte	0xff
 4985 032b 01       		.byte	0x1
 4986 032c 16       		.uleb128 .LLSDACSE1461-.LLSDACSB1461
 4987              	.LLSDACSB1461:
 4988 032d 8901     		.uleb128 .LEHB112-.LFB1461
 4989 032f 05       		.uleb128 .LEHE112-.LEHB112
 4990 0330 00       		.uleb128 0
 4991 0331 00       		.uleb128 0
 4992 0332 9D01     		.uleb128 .LEHB113-.LFB1461
 4993 0334 C002     		.uleb128 .LEHE113-.LEHB113
 4994 0336 FD03     		.uleb128 .L259-.LFB1461
 4995 0338 00       		.uleb128 0
 4996 0339 E703     		.uleb128 .LEHB114-.LFB1461
 4997 033b 05       		.uleb128 .LEHE114-.LEHB114
 4998 033c 00       		.uleb128 0
 4999 033d 00       		.uleb128 0
 5000 033e 9504     		.uleb128 .LEHB115-.LFB1461
 5001 0340 05       		.uleb128 .LEHE115-.LEHB115
 5002 0341 00       		.uleb128 0
 5003 0342 00       		.uleb128 0
 5004              	.LLSDACSE1461:
 5005              		.section	.text._ZN8UnitTest15CheckArrayCloseIA3_fS1_fEEvRNS_11TestResultsERKT_RKT0_iRKT1_RKNS_11Te
 5007              		.section	.text._ZNSaIfEC2Ev,"axG",@progbits,_ZNSaIfEC5Ev,comdat
 5008              		.align 2
 5009              		.weak	_ZNSaIfEC2Ev
 5011              	_ZNSaIfEC2Ev:
 5012              	.LFB1463:
 5013              		.file 6 "/usr/include/c++/4.9/bits/allocator.h"
   1:/usr/include/c++/4.9/bits/allocator.h **** // Allocators -*- C++ -*-
   2:/usr/include/c++/4.9/bits/allocator.h **** 
   3:/usr/include/c++/4.9/bits/allocator.h **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   4:/usr/include/c++/4.9/bits/allocator.h **** //
   5:/usr/include/c++/4.9/bits/allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/4.9/bits/allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/4.9/bits/allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/4.9/bits/allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/4.9/bits/allocator.h **** // any later version.
  10:/usr/include/c++/4.9/bits/allocator.h **** 
  11:/usr/include/c++/4.9/bits/allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/4.9/bits/allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/4.9/bits/allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/4.9/bits/allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/4.9/bits/allocator.h **** 
  16:/usr/include/c++/4.9/bits/allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/4.9/bits/allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/4.9/bits/allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/4.9/bits/allocator.h **** 
  20:/usr/include/c++/4.9/bits/allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/4.9/bits/allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/4.9/bits/allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/4.9/bits/allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/4.9/bits/allocator.h **** 
  25:/usr/include/c++/4.9/bits/allocator.h **** /*
  26:/usr/include/c++/4.9/bits/allocator.h ****  * Copyright (c) 1996-1997
  27:/usr/include/c++/4.9/bits/allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:/usr/include/c++/4.9/bits/allocator.h ****  *
  29:/usr/include/c++/4.9/bits/allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/usr/include/c++/4.9/bits/allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/usr/include/c++/4.9/bits/allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:/usr/include/c++/4.9/bits/allocator.h ****  * that both that copyright notice and this permission notice appear
  33:/usr/include/c++/4.9/bits/allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:/usr/include/c++/4.9/bits/allocator.h ****  * representations about the suitability of this software for any
  35:/usr/include/c++/4.9/bits/allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/usr/include/c++/4.9/bits/allocator.h ****  */
  37:/usr/include/c++/4.9/bits/allocator.h **** 
  38:/usr/include/c++/4.9/bits/allocator.h **** /** @file bits/allocator.h
  39:/usr/include/c++/4.9/bits/allocator.h ****  *  This is an internal header file, included by other library headers.
  40:/usr/include/c++/4.9/bits/allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:/usr/include/c++/4.9/bits/allocator.h ****  */
  42:/usr/include/c++/4.9/bits/allocator.h **** 
  43:/usr/include/c++/4.9/bits/allocator.h **** #ifndef _ALLOCATOR_H
  44:/usr/include/c++/4.9/bits/allocator.h **** #define _ALLOCATOR_H 1
  45:/usr/include/c++/4.9/bits/allocator.h **** 
  46:/usr/include/c++/4.9/bits/allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:/usr/include/c++/4.9/bits/allocator.h **** #include <bits/memoryfwd.h>
  48:/usr/include/c++/4.9/bits/allocator.h **** #if __cplusplus >= 201103L
  49:/usr/include/c++/4.9/bits/allocator.h **** #include <type_traits>
  50:/usr/include/c++/4.9/bits/allocator.h **** #endif
  51:/usr/include/c++/4.9/bits/allocator.h **** 
  52:/usr/include/c++/4.9/bits/allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  53:/usr/include/c++/4.9/bits/allocator.h **** {
  54:/usr/include/c++/4.9/bits/allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  55:/usr/include/c++/4.9/bits/allocator.h **** 
  56:/usr/include/c++/4.9/bits/allocator.h ****   /**
  57:/usr/include/c++/4.9/bits/allocator.h ****    *  @addtogroup allocators
  58:/usr/include/c++/4.9/bits/allocator.h ****    *  @{
  59:/usr/include/c++/4.9/bits/allocator.h ****    */
  60:/usr/include/c++/4.9/bits/allocator.h **** 
  61:/usr/include/c++/4.9/bits/allocator.h ****   /// allocator<void> specialization.
  62:/usr/include/c++/4.9/bits/allocator.h ****   template<>
  63:/usr/include/c++/4.9/bits/allocator.h ****     class allocator<void>
  64:/usr/include/c++/4.9/bits/allocator.h ****     {
  65:/usr/include/c++/4.9/bits/allocator.h ****     public:
  66:/usr/include/c++/4.9/bits/allocator.h ****       typedef size_t      size_type;
  67:/usr/include/c++/4.9/bits/allocator.h ****       typedef ptrdiff_t   difference_type;
  68:/usr/include/c++/4.9/bits/allocator.h ****       typedef void*       pointer;
  69:/usr/include/c++/4.9/bits/allocator.h ****       typedef const void* const_pointer;
  70:/usr/include/c++/4.9/bits/allocator.h ****       typedef void        value_type;
  71:/usr/include/c++/4.9/bits/allocator.h **** 
  72:/usr/include/c++/4.9/bits/allocator.h ****       template<typename _Tp1>
  73:/usr/include/c++/4.9/bits/allocator.h ****         struct rebind
  74:/usr/include/c++/4.9/bits/allocator.h ****         { typedef allocator<_Tp1> other; };
  75:/usr/include/c++/4.9/bits/allocator.h **** 
  76:/usr/include/c++/4.9/bits/allocator.h **** #if __cplusplus >= 201103L
  77:/usr/include/c++/4.9/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  78:/usr/include/c++/4.9/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  79:/usr/include/c++/4.9/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
  80:/usr/include/c++/4.9/bits/allocator.h **** #endif
  81:/usr/include/c++/4.9/bits/allocator.h ****     };
  82:/usr/include/c++/4.9/bits/allocator.h **** 
  83:/usr/include/c++/4.9/bits/allocator.h ****   /**
  84:/usr/include/c++/4.9/bits/allocator.h ****    * @brief  The @a standard allocator, as per [20.4].
  85:/usr/include/c++/4.9/bits/allocator.h ****    *
  86:/usr/include/c++/4.9/bits/allocator.h ****    *  See http://gcc.gnu.org/onlinedocs/libstdc++/manual/bk01pt04ch11.html
  87:/usr/include/c++/4.9/bits/allocator.h ****    *  for further details.
  88:/usr/include/c++/4.9/bits/allocator.h ****    *
  89:/usr/include/c++/4.9/bits/allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  90:/usr/include/c++/4.9/bits/allocator.h ****    */
  91:/usr/include/c++/4.9/bits/allocator.h ****   template<typename _Tp>
  92:/usr/include/c++/4.9/bits/allocator.h ****     class allocator: public __allocator_base<_Tp>
  93:/usr/include/c++/4.9/bits/allocator.h ****     {
  94:/usr/include/c++/4.9/bits/allocator.h ****    public:
  95:/usr/include/c++/4.9/bits/allocator.h ****       typedef size_t     size_type;
  96:/usr/include/c++/4.9/bits/allocator.h ****       typedef ptrdiff_t  difference_type;
  97:/usr/include/c++/4.9/bits/allocator.h ****       typedef _Tp*       pointer;
  98:/usr/include/c++/4.9/bits/allocator.h ****       typedef const _Tp* const_pointer;
  99:/usr/include/c++/4.9/bits/allocator.h ****       typedef _Tp&       reference;
 100:/usr/include/c++/4.9/bits/allocator.h ****       typedef const _Tp& const_reference;
 101:/usr/include/c++/4.9/bits/allocator.h ****       typedef _Tp        value_type;
 102:/usr/include/c++/4.9/bits/allocator.h **** 
 103:/usr/include/c++/4.9/bits/allocator.h ****       template<typename _Tp1>
 104:/usr/include/c++/4.9/bits/allocator.h ****         struct rebind
 105:/usr/include/c++/4.9/bits/allocator.h ****         { typedef allocator<_Tp1> other; };
 106:/usr/include/c++/4.9/bits/allocator.h **** 
 107:/usr/include/c++/4.9/bits/allocator.h **** #if __cplusplus >= 201103L
 108:/usr/include/c++/4.9/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 109:/usr/include/c++/4.9/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 110:/usr/include/c++/4.9/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
 111:/usr/include/c++/4.9/bits/allocator.h **** #endif
 112:/usr/include/c++/4.9/bits/allocator.h **** 
 113:/usr/include/c++/4.9/bits/allocator.h ****       allocator() throw() { }
 5014              		.loc 6 113 0
 5015              		.cfi_startproc
 5016 0000 55       		pushq	%rbp
 5017              		.cfi_def_cfa_offset 16
 5018              		.cfi_offset 6, -16
 5019 0001 4889E5   		movq	%rsp, %rbp
 5020              		.cfi_def_cfa_register 6
 5021 0004 4883EC10 		subq	$16, %rsp
 5022 0008 48897DF8 		movq	%rdi, -8(%rbp)
 5023              	.LBB114:
 5024              		.loc 6 113 0
 5025 000c 488B45F8 		movq	-8(%rbp), %rax
 5026 0010 4889C7   		movq	%rax, %rdi
 5027 0013 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIfEC2Ev
 5027      00
 5028              	.LBE114:
 5029 0018 C9       		leave
 5030              		.cfi_def_cfa 7, 8
 5031 0019 C3       		ret
 5032              		.cfi_endproc
 5033              	.LFE1463:
 5035              		.weak	_ZNSaIfEC1Ev
 5036              		.set	_ZNSaIfEC1Ev,_ZNSaIfEC2Ev
 5037              		.section	.text._ZNSaIfED2Ev,"axG",@progbits,_ZNSaIfED5Ev,comdat
 5038              		.align 2
 5039              		.weak	_ZNSaIfED2Ev
 5041              	_ZNSaIfED2Ev:
 5042              	.LFB1466:
 114:/usr/include/c++/4.9/bits/allocator.h **** 
 115:/usr/include/c++/4.9/bits/allocator.h ****       allocator(const allocator& __a) throw()
 116:/usr/include/c++/4.9/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 117:/usr/include/c++/4.9/bits/allocator.h **** 
 118:/usr/include/c++/4.9/bits/allocator.h ****       template<typename _Tp1>
 119:/usr/include/c++/4.9/bits/allocator.h ****         allocator(const allocator<_Tp1>&) throw() { }
 120:/usr/include/c++/4.9/bits/allocator.h **** 
 121:/usr/include/c++/4.9/bits/allocator.h ****       ~allocator() throw() { }
 5043              		.loc 6 121 0
 5044              		.cfi_startproc
 5045 0000 55       		pushq	%rbp
 5046              		.cfi_def_cfa_offset 16
 5047              		.cfi_offset 6, -16
 5048 0001 4889E5   		movq	%rsp, %rbp
 5049              		.cfi_def_cfa_register 6
 5050 0004 4883EC10 		subq	$16, %rsp
 5051 0008 48897DF8 		movq	%rdi, -8(%rbp)
 5052              	.LBB115:
 5053              		.loc 6 121 0
 5054 000c 488B45F8 		movq	-8(%rbp), %rax
 5055 0010 4889C7   		movq	%rax, %rdi
 5056 0013 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIfED2Ev
 5056      00
 5057              	.LBE115:
 5058 0018 C9       		leave
 5059              		.cfi_def_cfa 7, 8
 5060 0019 C3       		ret
 5061              		.cfi_endproc
 5062              	.LFE1466:
 5064              		.weak	_ZNSaIfED1Ev
 5065              		.set	_ZNSaIfED1Ev,_ZNSaIfED2Ev
 5066              		.section	.text._ZNSt6vectorIfSaIfEEC2EmRKfRKS0_,"axG",@progbits,_ZNSt6vectorIfSaIfEEC5EmRKfRKS0_,c
 5067              		.align 2
 5068              		.weak	_ZNSt6vectorIfSaIfEEC2EmRKfRKS0_
 5070              	_ZNSt6vectorIfSaIfEEC2EmRKfRKS0_:
 5071              	.LFB1469:
 5072              		.file 7 "/usr/include/c++/4.9/bits/stl_vector.h"
   1:/usr/include/c++/4.9/bits/stl_vector.h **** // Vector implementation -*- C++ -*-
   2:/usr/include/c++/4.9/bits/stl_vector.h **** 
   3:/usr/include/c++/4.9/bits/stl_vector.h **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   4:/usr/include/c++/4.9/bits/stl_vector.h **** //
   5:/usr/include/c++/4.9/bits/stl_vector.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/4.9/bits/stl_vector.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/4.9/bits/stl_vector.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/4.9/bits/stl_vector.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/4.9/bits/stl_vector.h **** // any later version.
  10:/usr/include/c++/4.9/bits/stl_vector.h **** 
  11:/usr/include/c++/4.9/bits/stl_vector.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/4.9/bits/stl_vector.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/4.9/bits/stl_vector.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/4.9/bits/stl_vector.h **** // GNU General Public License for more details.
  15:/usr/include/c++/4.9/bits/stl_vector.h **** 
  16:/usr/include/c++/4.9/bits/stl_vector.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/4.9/bits/stl_vector.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/4.9/bits/stl_vector.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/4.9/bits/stl_vector.h **** 
  20:/usr/include/c++/4.9/bits/stl_vector.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/4.9/bits/stl_vector.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/4.9/bits/stl_vector.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/4.9/bits/stl_vector.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/4.9/bits/stl_vector.h **** 
  25:/usr/include/c++/4.9/bits/stl_vector.h **** /*
  26:/usr/include/c++/4.9/bits/stl_vector.h ****  *
  27:/usr/include/c++/4.9/bits/stl_vector.h ****  * Copyright (c) 1994
  28:/usr/include/c++/4.9/bits/stl_vector.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/4.9/bits/stl_vector.h ****  *
  30:/usr/include/c++/4.9/bits/stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/4.9/bits/stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/4.9/bits/stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/4.9/bits/stl_vector.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/4.9/bits/stl_vector.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/4.9/bits/stl_vector.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/4.9/bits/stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/4.9/bits/stl_vector.h ****  *
  38:/usr/include/c++/4.9/bits/stl_vector.h ****  *
  39:/usr/include/c++/4.9/bits/stl_vector.h ****  * Copyright (c) 1996
  40:/usr/include/c++/4.9/bits/stl_vector.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/4.9/bits/stl_vector.h ****  *
  42:/usr/include/c++/4.9/bits/stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/4.9/bits/stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/4.9/bits/stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/4.9/bits/stl_vector.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/4.9/bits/stl_vector.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/4.9/bits/stl_vector.h ****  * representations about the suitability of this  software for any
  48:/usr/include/c++/4.9/bits/stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/4.9/bits/stl_vector.h ****  */
  50:/usr/include/c++/4.9/bits/stl_vector.h **** 
  51:/usr/include/c++/4.9/bits/stl_vector.h **** /** @file bits/stl_vector.h
  52:/usr/include/c++/4.9/bits/stl_vector.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/4.9/bits/stl_vector.h ****  *  Do not attempt to use it directly. @headername{vector}
  54:/usr/include/c++/4.9/bits/stl_vector.h ****  */
  55:/usr/include/c++/4.9/bits/stl_vector.h **** 
  56:/usr/include/c++/4.9/bits/stl_vector.h **** #ifndef _STL_VECTOR_H
  57:/usr/include/c++/4.9/bits/stl_vector.h **** #define _STL_VECTOR_H 1
  58:/usr/include/c++/4.9/bits/stl_vector.h **** 
  59:/usr/include/c++/4.9/bits/stl_vector.h **** #include <bits/stl_iterator_base_funcs.h>
  60:/usr/include/c++/4.9/bits/stl_vector.h **** #include <bits/functexcept.h>
  61:/usr/include/c++/4.9/bits/stl_vector.h **** #include <bits/concept_check.h>
  62:/usr/include/c++/4.9/bits/stl_vector.h **** #if __cplusplus >= 201103L
  63:/usr/include/c++/4.9/bits/stl_vector.h **** #include <initializer_list>
  64:/usr/include/c++/4.9/bits/stl_vector.h **** #endif
  65:/usr/include/c++/4.9/bits/stl_vector.h **** 
  66:/usr/include/c++/4.9/bits/stl_vector.h **** namespace std _GLIBCXX_VISIBILITY(default)
  67:/usr/include/c++/4.9/bits/stl_vector.h **** {
  68:/usr/include/c++/4.9/bits/stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  69:/usr/include/c++/4.9/bits/stl_vector.h **** 
  70:/usr/include/c++/4.9/bits/stl_vector.h ****   /// See bits/stl_deque.h's _Deque_base for an explanation.
  71:/usr/include/c++/4.9/bits/stl_vector.h ****   template<typename _Tp, typename _Alloc>
  72:/usr/include/c++/4.9/bits/stl_vector.h ****     struct _Vector_base
  73:/usr/include/c++/4.9/bits/stl_vector.h ****     {
  74:/usr/include/c++/4.9/bits/stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  75:/usr/include/c++/4.9/bits/stl_vector.h ****         rebind<_Tp>::other _Tp_alloc_type;
  76:/usr/include/c++/4.9/bits/stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
  77:/usr/include/c++/4.9/bits/stl_vector.h ****        	pointer;
  78:/usr/include/c++/4.9/bits/stl_vector.h **** 
  79:/usr/include/c++/4.9/bits/stl_vector.h ****       struct _Vector_impl 
  80:/usr/include/c++/4.9/bits/stl_vector.h ****       : public _Tp_alloc_type
  81:/usr/include/c++/4.9/bits/stl_vector.h ****       {
  82:/usr/include/c++/4.9/bits/stl_vector.h **** 	pointer _M_start;
  83:/usr/include/c++/4.9/bits/stl_vector.h **** 	pointer _M_finish;
  84:/usr/include/c++/4.9/bits/stl_vector.h **** 	pointer _M_end_of_storage;
  85:/usr/include/c++/4.9/bits/stl_vector.h **** 
  86:/usr/include/c++/4.9/bits/stl_vector.h **** 	_Vector_impl()
  87:/usr/include/c++/4.9/bits/stl_vector.h **** 	: _Tp_alloc_type(), _M_start(0), _M_finish(0), _M_end_of_storage(0)
  88:/usr/include/c++/4.9/bits/stl_vector.h **** 	{ }
  89:/usr/include/c++/4.9/bits/stl_vector.h **** 
  90:/usr/include/c++/4.9/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
  91:/usr/include/c++/4.9/bits/stl_vector.h **** 	: _Tp_alloc_type(__a), _M_start(0), _M_finish(0), _M_end_of_storage(0)
  92:/usr/include/c++/4.9/bits/stl_vector.h **** 	{ }
  93:/usr/include/c++/4.9/bits/stl_vector.h **** 
  94:/usr/include/c++/4.9/bits/stl_vector.h **** #if __cplusplus >= 201103L
  95:/usr/include/c++/4.9/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a) noexcept
  96:/usr/include/c++/4.9/bits/stl_vector.h **** 	: _Tp_alloc_type(std::move(__a)),
  97:/usr/include/c++/4.9/bits/stl_vector.h **** 	  _M_start(0), _M_finish(0), _M_end_of_storage(0)
  98:/usr/include/c++/4.9/bits/stl_vector.h **** 	{ }
  99:/usr/include/c++/4.9/bits/stl_vector.h **** #endif
 100:/usr/include/c++/4.9/bits/stl_vector.h **** 
 101:/usr/include/c++/4.9/bits/stl_vector.h **** 	void _M_swap_data(_Vector_impl& __x) _GLIBCXX_NOEXCEPT
 102:/usr/include/c++/4.9/bits/stl_vector.h **** 	{
 103:/usr/include/c++/4.9/bits/stl_vector.h **** 	  std::swap(_M_start, __x._M_start);
 104:/usr/include/c++/4.9/bits/stl_vector.h **** 	  std::swap(_M_finish, __x._M_finish);
 105:/usr/include/c++/4.9/bits/stl_vector.h **** 	  std::swap(_M_end_of_storage, __x._M_end_of_storage);
 106:/usr/include/c++/4.9/bits/stl_vector.h **** 	}
 107:/usr/include/c++/4.9/bits/stl_vector.h ****       };
 108:/usr/include/c++/4.9/bits/stl_vector.h ****       
 109:/usr/include/c++/4.9/bits/stl_vector.h ****     public:
 110:/usr/include/c++/4.9/bits/stl_vector.h ****       typedef _Alloc allocator_type;
 111:/usr/include/c++/4.9/bits/stl_vector.h **** 
 112:/usr/include/c++/4.9/bits/stl_vector.h ****       _Tp_alloc_type&
 113:/usr/include/c++/4.9/bits/stl_vector.h ****       _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 114:/usr/include/c++/4.9/bits/stl_vector.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 115:/usr/include/c++/4.9/bits/stl_vector.h **** 
 116:/usr/include/c++/4.9/bits/stl_vector.h ****       const _Tp_alloc_type&
 117:/usr/include/c++/4.9/bits/stl_vector.h ****       _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 118:/usr/include/c++/4.9/bits/stl_vector.h ****       { return *static_cast<const _Tp_alloc_type*>(&this->_M_impl); }
 119:/usr/include/c++/4.9/bits/stl_vector.h **** 
 120:/usr/include/c++/4.9/bits/stl_vector.h ****       allocator_type
 121:/usr/include/c++/4.9/bits/stl_vector.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 122:/usr/include/c++/4.9/bits/stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 123:/usr/include/c++/4.9/bits/stl_vector.h **** 
 124:/usr/include/c++/4.9/bits/stl_vector.h ****       _Vector_base()
 125:/usr/include/c++/4.9/bits/stl_vector.h ****       : _M_impl() { }
 126:/usr/include/c++/4.9/bits/stl_vector.h **** 
 127:/usr/include/c++/4.9/bits/stl_vector.h ****       _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 128:/usr/include/c++/4.9/bits/stl_vector.h ****       : _M_impl(__a) { }
 129:/usr/include/c++/4.9/bits/stl_vector.h **** 
 130:/usr/include/c++/4.9/bits/stl_vector.h ****       _Vector_base(size_t __n)
 131:/usr/include/c++/4.9/bits/stl_vector.h ****       : _M_impl()
 132:/usr/include/c++/4.9/bits/stl_vector.h ****       { _M_create_storage(__n); }
 133:/usr/include/c++/4.9/bits/stl_vector.h **** 
 134:/usr/include/c++/4.9/bits/stl_vector.h ****       _Vector_base(size_t __n, const allocator_type& __a)
 135:/usr/include/c++/4.9/bits/stl_vector.h ****       : _M_impl(__a)
 136:/usr/include/c++/4.9/bits/stl_vector.h ****       { _M_create_storage(__n); }
 137:/usr/include/c++/4.9/bits/stl_vector.h **** 
 138:/usr/include/c++/4.9/bits/stl_vector.h **** #if __cplusplus >= 201103L
 139:/usr/include/c++/4.9/bits/stl_vector.h ****       _Vector_base(_Tp_alloc_type&& __a) noexcept
 140:/usr/include/c++/4.9/bits/stl_vector.h ****       : _M_impl(std::move(__a)) { }
 141:/usr/include/c++/4.9/bits/stl_vector.h **** 
 142:/usr/include/c++/4.9/bits/stl_vector.h ****       _Vector_base(_Vector_base&& __x) noexcept
 143:/usr/include/c++/4.9/bits/stl_vector.h ****       : _M_impl(std::move(__x._M_get_Tp_allocator()))
 144:/usr/include/c++/4.9/bits/stl_vector.h ****       { this->_M_impl._M_swap_data(__x._M_impl); }
 145:/usr/include/c++/4.9/bits/stl_vector.h **** 
 146:/usr/include/c++/4.9/bits/stl_vector.h ****       _Vector_base(_Vector_base&& __x, const allocator_type& __a)
 147:/usr/include/c++/4.9/bits/stl_vector.h ****       : _M_impl(__a)
 148:/usr/include/c++/4.9/bits/stl_vector.h ****       {
 149:/usr/include/c++/4.9/bits/stl_vector.h **** 	if (__x.get_allocator() == __a)
 150:/usr/include/c++/4.9/bits/stl_vector.h **** 	  this->_M_impl._M_swap_data(__x._M_impl);
 151:/usr/include/c++/4.9/bits/stl_vector.h **** 	else
 152:/usr/include/c++/4.9/bits/stl_vector.h **** 	  {
 153:/usr/include/c++/4.9/bits/stl_vector.h **** 	    size_t __n = __x._M_impl._M_finish - __x._M_impl._M_start;
 154:/usr/include/c++/4.9/bits/stl_vector.h **** 	    _M_create_storage(__n);
 155:/usr/include/c++/4.9/bits/stl_vector.h **** 	  }
 156:/usr/include/c++/4.9/bits/stl_vector.h ****       }
 157:/usr/include/c++/4.9/bits/stl_vector.h **** #endif
 158:/usr/include/c++/4.9/bits/stl_vector.h **** 
 159:/usr/include/c++/4.9/bits/stl_vector.h ****       ~_Vector_base() _GLIBCXX_NOEXCEPT
 160:/usr/include/c++/4.9/bits/stl_vector.h ****       { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 161:/usr/include/c++/4.9/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 162:/usr/include/c++/4.9/bits/stl_vector.h **** 
 163:/usr/include/c++/4.9/bits/stl_vector.h ****     public:
 164:/usr/include/c++/4.9/bits/stl_vector.h ****       _Vector_impl _M_impl;
 165:/usr/include/c++/4.9/bits/stl_vector.h **** 
 166:/usr/include/c++/4.9/bits/stl_vector.h ****       pointer
 167:/usr/include/c++/4.9/bits/stl_vector.h ****       _M_allocate(size_t __n)
 168:/usr/include/c++/4.9/bits/stl_vector.h ****       {
 169:/usr/include/c++/4.9/bits/stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 170:/usr/include/c++/4.9/bits/stl_vector.h **** 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : 0;
 171:/usr/include/c++/4.9/bits/stl_vector.h ****       }
 172:/usr/include/c++/4.9/bits/stl_vector.h **** 
 173:/usr/include/c++/4.9/bits/stl_vector.h ****       void
 174:/usr/include/c++/4.9/bits/stl_vector.h ****       _M_deallocate(pointer __p, size_t __n)
 175:/usr/include/c++/4.9/bits/stl_vector.h ****       {
 176:/usr/include/c++/4.9/bits/stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 177:/usr/include/c++/4.9/bits/stl_vector.h **** 	if (__p)
 178:/usr/include/c++/4.9/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 179:/usr/include/c++/4.9/bits/stl_vector.h ****       }
 180:/usr/include/c++/4.9/bits/stl_vector.h **** 
 181:/usr/include/c++/4.9/bits/stl_vector.h ****     private:
 182:/usr/include/c++/4.9/bits/stl_vector.h ****       void
 183:/usr/include/c++/4.9/bits/stl_vector.h ****       _M_create_storage(size_t __n)
 184:/usr/include/c++/4.9/bits/stl_vector.h ****       {
 185:/usr/include/c++/4.9/bits/stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 186:/usr/include/c++/4.9/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 187:/usr/include/c++/4.9/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 188:/usr/include/c++/4.9/bits/stl_vector.h ****       }
 189:/usr/include/c++/4.9/bits/stl_vector.h ****     };
 190:/usr/include/c++/4.9/bits/stl_vector.h **** 
 191:/usr/include/c++/4.9/bits/stl_vector.h **** 
 192:/usr/include/c++/4.9/bits/stl_vector.h ****   /**
 193:/usr/include/c++/4.9/bits/stl_vector.h ****    *  @brief A standard container which offers fixed time access to
 194:/usr/include/c++/4.9/bits/stl_vector.h ****    *  individual elements in any order.
 195:/usr/include/c++/4.9/bits/stl_vector.h ****    *
 196:/usr/include/c++/4.9/bits/stl_vector.h ****    *  @ingroup sequences
 197:/usr/include/c++/4.9/bits/stl_vector.h ****    *
 198:/usr/include/c++/4.9/bits/stl_vector.h ****    *  @tparam _Tp  Type of element.
 199:/usr/include/c++/4.9/bits/stl_vector.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
 200:/usr/include/c++/4.9/bits/stl_vector.h ****    *
 201:/usr/include/c++/4.9/bits/stl_vector.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
 202:/usr/include/c++/4.9/bits/stl_vector.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 203:/usr/include/c++/4.9/bits/stl_vector.h ****    *  <a href="tables.html#67">sequence</a>, including the
 204:/usr/include/c++/4.9/bits/stl_vector.h ****    *  <a href="tables.html#68">optional sequence requirements</a> with the
 205:/usr/include/c++/4.9/bits/stl_vector.h ****    *  %exception of @c push_front and @c pop_front.
 206:/usr/include/c++/4.9/bits/stl_vector.h ****    *
 207:/usr/include/c++/4.9/bits/stl_vector.h ****    *  In some terminology a %vector can be described as a dynamic
 208:/usr/include/c++/4.9/bits/stl_vector.h ****    *  C-style array, it offers fast and efficient access to individual
 209:/usr/include/c++/4.9/bits/stl_vector.h ****    *  elements in any order and saves the user from worrying about
 210:/usr/include/c++/4.9/bits/stl_vector.h ****    *  memory and size allocation.  Subscripting ( @c [] ) access is
 211:/usr/include/c++/4.9/bits/stl_vector.h ****    *  also provided as with C-style arrays.
 212:/usr/include/c++/4.9/bits/stl_vector.h ****   */
 213:/usr/include/c++/4.9/bits/stl_vector.h ****   template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
 214:/usr/include/c++/4.9/bits/stl_vector.h ****     class vector : protected _Vector_base<_Tp, _Alloc>
 215:/usr/include/c++/4.9/bits/stl_vector.h ****     {
 216:/usr/include/c++/4.9/bits/stl_vector.h ****       // Concept requirements.
 217:/usr/include/c++/4.9/bits/stl_vector.h ****       typedef typename _Alloc::value_type                _Alloc_value_type;
 218:/usr/include/c++/4.9/bits/stl_vector.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 219:/usr/include/c++/4.9/bits/stl_vector.h ****       __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
 220:/usr/include/c++/4.9/bits/stl_vector.h ****       
 221:/usr/include/c++/4.9/bits/stl_vector.h ****       typedef _Vector_base<_Tp, _Alloc>			 _Base;
 222:/usr/include/c++/4.9/bits/stl_vector.h ****       typedef typename _Base::_Tp_alloc_type		 _Tp_alloc_type;
 223:/usr/include/c++/4.9/bits/stl_vector.h ****       typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>  _Alloc_traits;
 224:/usr/include/c++/4.9/bits/stl_vector.h **** 
 225:/usr/include/c++/4.9/bits/stl_vector.h ****     public:
 226:/usr/include/c++/4.9/bits/stl_vector.h ****       typedef _Tp					 value_type;
 227:/usr/include/c++/4.9/bits/stl_vector.h ****       typedef typename _Base::pointer                    pointer;
 228:/usr/include/c++/4.9/bits/stl_vector.h ****       typedef typename _Alloc_traits::const_pointer      const_pointer;
 229:/usr/include/c++/4.9/bits/stl_vector.h ****       typedef typename _Alloc_traits::reference          reference;
 230:/usr/include/c++/4.9/bits/stl_vector.h ****       typedef typename _Alloc_traits::const_reference    const_reference;
 231:/usr/include/c++/4.9/bits/stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<pointer, vector> iterator;
 232:/usr/include/c++/4.9/bits/stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, vector>
 233:/usr/include/c++/4.9/bits/stl_vector.h ****       const_iterator;
 234:/usr/include/c++/4.9/bits/stl_vector.h ****       typedef std::reverse_iterator<const_iterator>  const_reverse_iterator;
 235:/usr/include/c++/4.9/bits/stl_vector.h ****       typedef std::reverse_iterator<iterator>		 reverse_iterator;
 236:/usr/include/c++/4.9/bits/stl_vector.h ****       typedef size_t					 size_type;
 237:/usr/include/c++/4.9/bits/stl_vector.h ****       typedef ptrdiff_t					 difference_type;
 238:/usr/include/c++/4.9/bits/stl_vector.h ****       typedef _Alloc                        		 allocator_type;
 239:/usr/include/c++/4.9/bits/stl_vector.h **** 
 240:/usr/include/c++/4.9/bits/stl_vector.h ****     protected:
 241:/usr/include/c++/4.9/bits/stl_vector.h ****       using _Base::_M_allocate;
 242:/usr/include/c++/4.9/bits/stl_vector.h ****       using _Base::_M_deallocate;
 243:/usr/include/c++/4.9/bits/stl_vector.h ****       using _Base::_M_impl;
 244:/usr/include/c++/4.9/bits/stl_vector.h ****       using _Base::_M_get_Tp_allocator;
 245:/usr/include/c++/4.9/bits/stl_vector.h **** 
 246:/usr/include/c++/4.9/bits/stl_vector.h ****     public:
 247:/usr/include/c++/4.9/bits/stl_vector.h ****       // [23.2.4.1] construct/copy/destroy
 248:/usr/include/c++/4.9/bits/stl_vector.h ****       // (assign() and get_allocator() are also listed in this section)
 249:/usr/include/c++/4.9/bits/stl_vector.h **** 
 250:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 251:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 252:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 253:/usr/include/c++/4.9/bits/stl_vector.h ****       vector()
 254:/usr/include/c++/4.9/bits/stl_vector.h **** #if __cplusplus >= 201103L
 255:/usr/include/c++/4.9/bits/stl_vector.h ****       noexcept(is_nothrow_default_constructible<_Alloc>::value)
 256:/usr/include/c++/4.9/bits/stl_vector.h **** #endif
 257:/usr/include/c++/4.9/bits/stl_vector.h ****       : _Base() { }
 258:/usr/include/c++/4.9/bits/stl_vector.h **** 
 259:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 260:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 261:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __a  An allocator object.
 262:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 263:/usr/include/c++/4.9/bits/stl_vector.h ****       explicit
 264:/usr/include/c++/4.9/bits/stl_vector.h ****       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 265:/usr/include/c++/4.9/bits/stl_vector.h ****       : _Base(__a) { }
 266:/usr/include/c++/4.9/bits/stl_vector.h **** 
 267:/usr/include/c++/4.9/bits/stl_vector.h **** #if __cplusplus >= 201103L
 268:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 269:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Creates a %vector with default constructed elements.
 270:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 271:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __a  An allocator.
 272:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 273:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n default
 274:/usr/include/c++/4.9/bits/stl_vector.h ****        *  constructed elements.
 275:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 276:/usr/include/c++/4.9/bits/stl_vector.h ****       explicit
 277:/usr/include/c++/4.9/bits/stl_vector.h ****       vector(size_type __n, const allocator_type& __a = allocator_type())
 278:/usr/include/c++/4.9/bits/stl_vector.h ****       : _Base(__n, __a)
 279:/usr/include/c++/4.9/bits/stl_vector.h ****       { _M_default_initialize(__n); }
 280:/usr/include/c++/4.9/bits/stl_vector.h **** 
 281:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 282:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 283:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 284:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __value  An element to copy.
 285:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __a  An allocator.
 286:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 287:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 288:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 289:/usr/include/c++/4.9/bits/stl_vector.h ****       vector(size_type __n, const value_type& __value,
 290:/usr/include/c++/4.9/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 291:/usr/include/c++/4.9/bits/stl_vector.h ****       : _Base(__n, __a)
 292:/usr/include/c++/4.9/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 293:/usr/include/c++/4.9/bits/stl_vector.h **** #else
 294:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 295:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 296:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 297:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __value  An element to copy.
 298:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __a  An allocator.
 299:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 300:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 301:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 302:/usr/include/c++/4.9/bits/stl_vector.h ****       explicit
 303:/usr/include/c++/4.9/bits/stl_vector.h ****       vector(size_type __n, const value_type& __value = value_type(),
 5073              		.loc 7 303 0
 5074              		.cfi_startproc
 5075              		.cfi_personality 0x3,__gxx_personality_v0
 5076              		.cfi_lsda 0x3,.LLSDA1469
 5077 0000 55       		pushq	%rbp
 5078              		.cfi_def_cfa_offset 16
 5079              		.cfi_offset 6, -16
 5080 0001 4889E5   		movq	%rsp, %rbp
 5081              		.cfi_def_cfa_register 6
 5082 0004 53       		pushq	%rbx
 5083 0005 4883EC28 		subq	$40, %rsp
 5084              		.cfi_offset 3, -24
 5085 0009 48897DE8 		movq	%rdi, -24(%rbp)
 5086 000d 488975E0 		movq	%rsi, -32(%rbp)
 5087 0011 488955D8 		movq	%rdx, -40(%rbp)
 5088 0015 48894DD0 		movq	%rcx, -48(%rbp)
 5089              	.LBB116:
 304:/usr/include/c++/4.9/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 305:/usr/include/c++/4.9/bits/stl_vector.h ****       : _Base(__n, __a)
 5090              		.loc 7 305 0
 5091 0019 488B45E8 		movq	-24(%rbp), %rax
 5092 001d 488B55D0 		movq	-48(%rbp), %rdx
 5093 0021 488B4DE0 		movq	-32(%rbp), %rcx
 5094 0025 4889CE   		movq	%rcx, %rsi
 5095 0028 4889C7   		movq	%rax, %rdi
 5096              	.LEHB116:
 5097 002b E8000000 		call	_ZNSt12_Vector_baseIfSaIfEEC2EmRKS0_
 5097      00
 5098              	.LEHE116:
 306:/usr/include/c++/4.9/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 5099              		.loc 7 306 0
 5100 0030 488B55D8 		movq	-40(%rbp), %rdx
 5101 0034 488B4DE0 		movq	-32(%rbp), %rcx
 5102 0038 488B45E8 		movq	-24(%rbp), %rax
 5103 003c 4889CE   		movq	%rcx, %rsi
 5104 003f 4889C7   		movq	%rax, %rdi
 5105              	.LEHB117:
 5106 0042 E8000000 		call	_ZNSt6vectorIfSaIfEE18_M_fill_initializeEmRKf
 5106      00
 5107              	.LEHE117:
 5108              	.LBE116:
 5109 0047 EB1A     		jmp	.L267
 5110              	.L266:
 5111 0049 4889C3   		movq	%rax, %rbx
 5112              	.LBB117:
 305:/usr/include/c++/4.9/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 5113              		.loc 7 305 0
 5114 004c 488B45E8 		movq	-24(%rbp), %rax
 5115 0050 4889C7   		movq	%rax, %rdi
 5116 0053 E8000000 		call	_ZNSt12_Vector_baseIfSaIfEED2Ev
 5116      00
 5117 0058 4889D8   		movq	%rbx, %rax
 5118 005b 4889C7   		movq	%rax, %rdi
 5119              	.LEHB118:
 5120 005e E8000000 		call	_Unwind_Resume
 5120      00
 5121              	.LEHE118:
 5122              	.L267:
 5123              	.LBE117:
 5124              		.loc 7 306 0
 5125 0063 4883C428 		addq	$40, %rsp
 5126 0067 5B       		popq	%rbx
 5127 0068 5D       		popq	%rbp
 5128              		.cfi_def_cfa 7, 8
 5129 0069 C3       		ret
 5130              		.cfi_endproc
 5131              	.LFE1469:
 5132              		.section	.gcc_except_table
 5133              	.LLSDA1469:
 5134 0343 FF       		.byte	0xff
 5135 0344 FF       		.byte	0xff
 5136 0345 01       		.byte	0x1
 5137 0346 0C       		.uleb128 .LLSDACSE1469-.LLSDACSB1469
 5138              	.LLSDACSB1469:
 5139 0347 2B       		.uleb128 .LEHB116-.LFB1469
 5140 0348 05       		.uleb128 .LEHE116-.LEHB116
 5141 0349 00       		.uleb128 0
 5142 034a 00       		.uleb128 0
 5143 034b 42       		.uleb128 .LEHB117-.LFB1469
 5144 034c 05       		.uleb128 .LEHE117-.LEHB117
 5145 034d 49       		.uleb128 .L266-.LFB1469
 5146 034e 00       		.uleb128 0
 5147 034f 5E       		.uleb128 .LEHB118-.LFB1469
 5148 0350 05       		.uleb128 .LEHE118-.LEHB118
 5149 0351 00       		.uleb128 0
 5150 0352 00       		.uleb128 0
 5151              	.LLSDACSE1469:
 5152              		.section	.text._ZNSt6vectorIfSaIfEEC2EmRKfRKS0_,"axG",@progbits,_ZNSt6vectorIfSaIfEEC5EmRKfRKS0_,c
 5154              		.weak	_ZNSt6vectorIfSaIfEEC1EmRKfRKS0_
 5155              		.set	_ZNSt6vectorIfSaIfEEC1EmRKfRKS0_,_ZNSt6vectorIfSaIfEEC2EmRKfRKS0_
 5156              		.section	.text._ZNSt6vectorIfSaIfEED2Ev,"axG",@progbits,_ZNSt6vectorIfSaIfEED5Ev,comdat
 5157              		.align 2
 5158              		.weak	_ZNSt6vectorIfSaIfEED2Ev
 5160              	_ZNSt6vectorIfSaIfEED2Ev:
 5161              	.LFB1472:
 307:/usr/include/c++/4.9/bits/stl_vector.h **** #endif
 308:/usr/include/c++/4.9/bits/stl_vector.h **** 
 309:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 310:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  %Vector copy constructor.
 311:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 312:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 313:/usr/include/c++/4.9/bits/stl_vector.h ****        *  The newly-created %vector uses a copy of the allocation
 314:/usr/include/c++/4.9/bits/stl_vector.h ****        *  object used by @a __x.  All the elements of @a __x are copied,
 315:/usr/include/c++/4.9/bits/stl_vector.h ****        *  but any extra memory in
 316:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @a __x (for fast expansion) will not be copied.
 317:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 318:/usr/include/c++/4.9/bits/stl_vector.h ****       vector(const vector& __x)
 319:/usr/include/c++/4.9/bits/stl_vector.h ****       : _Base(__x.size(),
 320:/usr/include/c++/4.9/bits/stl_vector.h ****         _Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 321:/usr/include/c++/4.9/bits/stl_vector.h ****       { this->_M_impl._M_finish =
 322:/usr/include/c++/4.9/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 323:/usr/include/c++/4.9/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 324:/usr/include/c++/4.9/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 325:/usr/include/c++/4.9/bits/stl_vector.h ****       }
 326:/usr/include/c++/4.9/bits/stl_vector.h **** 
 327:/usr/include/c++/4.9/bits/stl_vector.h **** #if __cplusplus >= 201103L
 328:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 329:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  %Vector move constructor.
 330:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 331:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 332:/usr/include/c++/4.9/bits/stl_vector.h ****        *  The newly-created %vector contains the exact contents of @a __x.
 333:/usr/include/c++/4.9/bits/stl_vector.h ****        *  The contents of @a __x are a valid, but unspecified %vector.
 334:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 335:/usr/include/c++/4.9/bits/stl_vector.h ****       vector(vector&& __x) noexcept
 336:/usr/include/c++/4.9/bits/stl_vector.h ****       : _Base(std::move(__x)) { }
 337:/usr/include/c++/4.9/bits/stl_vector.h **** 
 338:/usr/include/c++/4.9/bits/stl_vector.h ****       /// Copy constructor with alternative allocator
 339:/usr/include/c++/4.9/bits/stl_vector.h ****       vector(const vector& __x, const allocator_type& __a)
 340:/usr/include/c++/4.9/bits/stl_vector.h ****       : _Base(__x.size(), __a)
 341:/usr/include/c++/4.9/bits/stl_vector.h ****       { this->_M_impl._M_finish =
 342:/usr/include/c++/4.9/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 343:/usr/include/c++/4.9/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 344:/usr/include/c++/4.9/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 345:/usr/include/c++/4.9/bits/stl_vector.h ****       }
 346:/usr/include/c++/4.9/bits/stl_vector.h **** 
 347:/usr/include/c++/4.9/bits/stl_vector.h ****       /// Move constructor with alternative allocator
 348:/usr/include/c++/4.9/bits/stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m)
 349:/usr/include/c++/4.9/bits/stl_vector.h ****       noexcept(_Alloc_traits::_S_always_equal())
 350:/usr/include/c++/4.9/bits/stl_vector.h ****       : _Base(std::move(__rv), __m)
 351:/usr/include/c++/4.9/bits/stl_vector.h ****       {
 352:/usr/include/c++/4.9/bits/stl_vector.h **** 	if (__rv.get_allocator() != __m)
 353:/usr/include/c++/4.9/bits/stl_vector.h **** 	  {
 354:/usr/include/c++/4.9/bits/stl_vector.h **** 	    this->_M_impl._M_finish =
 355:/usr/include/c++/4.9/bits/stl_vector.h **** 	      std::__uninitialized_move_a(__rv.begin(), __rv.end(),
 356:/usr/include/c++/4.9/bits/stl_vector.h **** 					  this->_M_impl._M_start,
 357:/usr/include/c++/4.9/bits/stl_vector.h **** 					  _M_get_Tp_allocator());
 358:/usr/include/c++/4.9/bits/stl_vector.h **** 	    __rv.clear();
 359:/usr/include/c++/4.9/bits/stl_vector.h **** 	  }
 360:/usr/include/c++/4.9/bits/stl_vector.h ****       }
 361:/usr/include/c++/4.9/bits/stl_vector.h **** 
 362:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 363:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Builds a %vector from an initializer list.
 364:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 365:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __a  An allocator.
 366:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 367:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Create a %vector consisting of copies of the elements in the
 368:/usr/include/c++/4.9/bits/stl_vector.h ****        *  initializer_list @a __l.
 369:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 370:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This will call the element type's copy constructor N times
 371:/usr/include/c++/4.9/bits/stl_vector.h ****        *  (where N is @a __l.size()) and do no memory reallocation.
 372:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 373:/usr/include/c++/4.9/bits/stl_vector.h ****       vector(initializer_list<value_type> __l,
 374:/usr/include/c++/4.9/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 375:/usr/include/c++/4.9/bits/stl_vector.h ****       : _Base(__a)
 376:/usr/include/c++/4.9/bits/stl_vector.h ****       {
 377:/usr/include/c++/4.9/bits/stl_vector.h **** 	_M_range_initialize(__l.begin(), __l.end(),
 378:/usr/include/c++/4.9/bits/stl_vector.h **** 			    random_access_iterator_tag());
 379:/usr/include/c++/4.9/bits/stl_vector.h ****       }
 380:/usr/include/c++/4.9/bits/stl_vector.h **** #endif
 381:/usr/include/c++/4.9/bits/stl_vector.h **** 
 382:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 383:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Builds a %vector from a range.
 384:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __first  An input iterator.
 385:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __last  An input iterator.
 386:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __a  An allocator.
 387:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 388:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Create a %vector consisting of copies of the elements from
 389:/usr/include/c++/4.9/bits/stl_vector.h ****        *  [first,last).
 390:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 391:/usr/include/c++/4.9/bits/stl_vector.h ****        *  If the iterators are forward, bidirectional, or
 392:/usr/include/c++/4.9/bits/stl_vector.h ****        *  random-access, then this will call the elements' copy
 393:/usr/include/c++/4.9/bits/stl_vector.h ****        *  constructor N times (where N is distance(first,last)) and do
 394:/usr/include/c++/4.9/bits/stl_vector.h ****        *  no memory reallocation.  But if only input iterators are
 395:/usr/include/c++/4.9/bits/stl_vector.h ****        *  used, then this will do at most 2N calls to the copy
 396:/usr/include/c++/4.9/bits/stl_vector.h ****        *  constructor, and logN memory reallocations.
 397:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 398:/usr/include/c++/4.9/bits/stl_vector.h **** #if __cplusplus >= 201103L
 399:/usr/include/c++/4.9/bits/stl_vector.h ****       template<typename _InputIterator,
 400:/usr/include/c++/4.9/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 401:/usr/include/c++/4.9/bits/stl_vector.h ****         vector(_InputIterator __first, _InputIterator __last,
 402:/usr/include/c++/4.9/bits/stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 403:/usr/include/c++/4.9/bits/stl_vector.h **** 	: _Base(__a)
 404:/usr/include/c++/4.9/bits/stl_vector.h ****         { _M_initialize_dispatch(__first, __last, __false_type()); }
 405:/usr/include/c++/4.9/bits/stl_vector.h **** #else
 406:/usr/include/c++/4.9/bits/stl_vector.h ****       template<typename _InputIterator>
 407:/usr/include/c++/4.9/bits/stl_vector.h ****         vector(_InputIterator __first, _InputIterator __last,
 408:/usr/include/c++/4.9/bits/stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 409:/usr/include/c++/4.9/bits/stl_vector.h **** 	: _Base(__a)
 410:/usr/include/c++/4.9/bits/stl_vector.h ****         {
 411:/usr/include/c++/4.9/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 412:/usr/include/c++/4.9/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 413:/usr/include/c++/4.9/bits/stl_vector.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 414:/usr/include/c++/4.9/bits/stl_vector.h **** 	}
 415:/usr/include/c++/4.9/bits/stl_vector.h **** #endif
 416:/usr/include/c++/4.9/bits/stl_vector.h **** 
 417:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 418:/usr/include/c++/4.9/bits/stl_vector.h ****        *  The dtor only erases the elements, and note that if the
 419:/usr/include/c++/4.9/bits/stl_vector.h ****        *  elements themselves are pointers, the pointed-to memory is
 420:/usr/include/c++/4.9/bits/stl_vector.h ****        *  not touched in any way.  Managing the pointer is the user's
 421:/usr/include/c++/4.9/bits/stl_vector.h ****        *  responsibility.
 422:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 423:/usr/include/c++/4.9/bits/stl_vector.h ****       ~vector() _GLIBCXX_NOEXCEPT
 5162              		.loc 7 423 0
 5163              		.cfi_startproc
 5164              		.cfi_personality 0x3,__gxx_personality_v0
 5165              		.cfi_lsda 0x3,.LLSDA1472
 5166 0000 55       		pushq	%rbp
 5167              		.cfi_def_cfa_offset 16
 5168              		.cfi_offset 6, -16
 5169 0001 4889E5   		movq	%rsp, %rbp
 5170              		.cfi_def_cfa_register 6
 5171 0004 53       		pushq	%rbx
 5172 0005 4883EC18 		subq	$24, %rsp
 5173              		.cfi_offset 3, -24
 5174 0009 48897DE8 		movq	%rdi, -24(%rbp)
 5175              	.LBB118:
 424:/usr/include/c++/4.9/bits/stl_vector.h ****       { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 425:/usr/include/c++/4.9/bits/stl_vector.h **** 		      _M_get_Tp_allocator()); }
 5176              		.loc 7 425 0
 5177 000d 488B45E8 		movq	-24(%rbp), %rax
 5178 0011 4889C7   		movq	%rax, %rdi
 5179 0014 E8000000 		call	_ZNSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv
 5179      00
 5180 0019 4889C2   		movq	%rax, %rdx
 5181 001c 488B45E8 		movq	-24(%rbp), %rax
 5182 0020 488B4808 		movq	8(%rax), %rcx
 5183 0024 488B45E8 		movq	-24(%rbp), %rax
 5184 0028 488B00   		movq	(%rax), %rax
 424:/usr/include/c++/4.9/bits/stl_vector.h ****       { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 5185              		.loc 7 424 0
 5186 002b 4889CE   		movq	%rcx, %rsi
 5187 002e 4889C7   		movq	%rax, %rdi
 5188              	.LEHB119:
 5189 0031 E8000000 		call	_ZSt8_DestroyIPffEvT_S1_RSaIT0_E
 5189      00
 5190              	.LEHE119:
 5191              		.loc 7 425 0
 5192 0036 488B45E8 		movq	-24(%rbp), %rax
 5193 003a 4889C7   		movq	%rax, %rdi
 5194              	.LEHB120:
 5195 003d E8000000 		call	_ZNSt12_Vector_baseIfSaIfEED2Ev
 5195      00
 5196              	.LEHE120:
 5197 0042 EB1A     		jmp	.L272
 5198              	.L271:
 5199 0044 4889C3   		movq	%rax, %rbx
 5200 0047 488B45E8 		movq	-24(%rbp), %rax
 5201 004b 4889C7   		movq	%rax, %rdi
 5202 004e E8000000 		call	_ZNSt12_Vector_baseIfSaIfEED2Ev
 5202      00
 5203 0053 4889D8   		movq	%rbx, %rax
 5204 0056 4889C7   		movq	%rax, %rdi
 5205              	.LEHB121:
 5206 0059 E8000000 		call	_Unwind_Resume
 5206      00
 5207              	.LEHE121:
 5208              	.L272:
 5209              	.LBE118:
 5210 005e 4883C418 		addq	$24, %rsp
 5211 0062 5B       		popq	%rbx
 5212 0063 5D       		popq	%rbp
 5213              		.cfi_def_cfa 7, 8
 5214 0064 C3       		ret
 5215              		.cfi_endproc
 5216              	.LFE1472:
 5217              		.section	.gcc_except_table
 5218              	.LLSDA1472:
 5219 0353 FF       		.byte	0xff
 5220 0354 FF       		.byte	0xff
 5221 0355 01       		.byte	0x1
 5222 0356 0C       		.uleb128 .LLSDACSE1472-.LLSDACSB1472
 5223              	.LLSDACSB1472:
 5224 0357 31       		.uleb128 .LEHB119-.LFB1472
 5225 0358 05       		.uleb128 .LEHE119-.LEHB119
 5226 0359 44       		.uleb128 .L271-.LFB1472
 5227 035a 00       		.uleb128 0
 5228 035b 3D       		.uleb128 .LEHB120-.LFB1472
 5229 035c 05       		.uleb128 .LEHE120-.LEHB120
 5230 035d 00       		.uleb128 0
 5231 035e 00       		.uleb128 0
 5232 035f 59       		.uleb128 .LEHB121-.LFB1472
 5233 0360 05       		.uleb128 .LEHE121-.LEHB121
 5234 0361 00       		.uleb128 0
 5235 0362 00       		.uleb128 0
 5236              	.LLSDACSE1472:
 5237              		.section	.text._ZNSt6vectorIfSaIfEED2Ev,"axG",@progbits,_ZNSt6vectorIfSaIfEED5Ev,comdat
 5239              		.weak	_ZNSt6vectorIfSaIfEED1Ev
 5240              		.set	_ZNSt6vectorIfSaIfEED1Ev,_ZNSt6vectorIfSaIfEED2Ev
 5241              		.section	.text._ZNSt6vectorIfSaIfEEixEm,"axG",@progbits,_ZNSt6vectorIfSaIfEEixEm,comdat
 5242              		.align 2
 5243              		.weak	_ZNSt6vectorIfSaIfEEixEm
 5245              	_ZNSt6vectorIfSaIfEEixEm:
 5246              	.LFB1474:
 426:/usr/include/c++/4.9/bits/stl_vector.h **** 
 427:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 428:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  %Vector assignment operator.
 429:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 430:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 431:/usr/include/c++/4.9/bits/stl_vector.h ****        *  All the elements of @a __x are copied, but any extra memory in
 432:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @a __x (for fast expansion) will not be copied.  Unlike the
 433:/usr/include/c++/4.9/bits/stl_vector.h ****        *  copy constructor, the allocator object is not copied.
 434:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 435:/usr/include/c++/4.9/bits/stl_vector.h ****       vector&
 436:/usr/include/c++/4.9/bits/stl_vector.h ****       operator=(const vector& __x);
 437:/usr/include/c++/4.9/bits/stl_vector.h **** 
 438:/usr/include/c++/4.9/bits/stl_vector.h **** #if __cplusplus >= 201103L
 439:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 440:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  %Vector move assignment operator.
 441:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 442:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 443:/usr/include/c++/4.9/bits/stl_vector.h ****        *  The contents of @a __x are moved into this %vector (without copying,
 444:/usr/include/c++/4.9/bits/stl_vector.h ****        *  if the allocators permit it).
 445:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @a __x is a valid, but unspecified %vector.
 446:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 447:/usr/include/c++/4.9/bits/stl_vector.h ****       vector&
 448:/usr/include/c++/4.9/bits/stl_vector.h ****       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
 449:/usr/include/c++/4.9/bits/stl_vector.h ****       {
 450:/usr/include/c++/4.9/bits/stl_vector.h ****         constexpr bool __move_storage =
 451:/usr/include/c++/4.9/bits/stl_vector.h ****           _Alloc_traits::_S_propagate_on_move_assign()
 452:/usr/include/c++/4.9/bits/stl_vector.h ****           || _Alloc_traits::_S_always_equal();
 453:/usr/include/c++/4.9/bits/stl_vector.h ****         _M_move_assign(std::move(__x),
 454:/usr/include/c++/4.9/bits/stl_vector.h ****                        integral_constant<bool, __move_storage>());
 455:/usr/include/c++/4.9/bits/stl_vector.h **** 	return *this;
 456:/usr/include/c++/4.9/bits/stl_vector.h ****       }
 457:/usr/include/c++/4.9/bits/stl_vector.h **** 
 458:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 459:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  %Vector list assignment operator.
 460:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 461:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 462:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 463:/usr/include/c++/4.9/bits/stl_vector.h ****        *  initializer list @a __l.
 464:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 465:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 466:/usr/include/c++/4.9/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 467:/usr/include/c++/4.9/bits/stl_vector.h ****        *  of elements assigned.  Old data may be lost.
 468:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 469:/usr/include/c++/4.9/bits/stl_vector.h ****       vector&
 470:/usr/include/c++/4.9/bits/stl_vector.h ****       operator=(initializer_list<value_type> __l)
 471:/usr/include/c++/4.9/bits/stl_vector.h ****       {
 472:/usr/include/c++/4.9/bits/stl_vector.h **** 	this->assign(__l.begin(), __l.end());
 473:/usr/include/c++/4.9/bits/stl_vector.h **** 	return *this;
 474:/usr/include/c++/4.9/bits/stl_vector.h ****       }
 475:/usr/include/c++/4.9/bits/stl_vector.h **** #endif
 476:/usr/include/c++/4.9/bits/stl_vector.h **** 
 477:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 478:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Assigns a given value to a %vector.
 479:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __n  Number of elements to be assigned.
 480:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __val  Value to be assigned.
 481:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 482:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This function fills a %vector with @a __n copies of the given
 483:/usr/include/c++/4.9/bits/stl_vector.h ****        *  value.  Note that the assignment completely changes the
 484:/usr/include/c++/4.9/bits/stl_vector.h ****        *  %vector and that the resulting %vector's size is the same as
 485:/usr/include/c++/4.9/bits/stl_vector.h ****        *  the number of elements assigned.  Old data may be lost.
 486:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 487:/usr/include/c++/4.9/bits/stl_vector.h ****       void
 488:/usr/include/c++/4.9/bits/stl_vector.h ****       assign(size_type __n, const value_type& __val)
 489:/usr/include/c++/4.9/bits/stl_vector.h ****       { _M_fill_assign(__n, __val); }
 490:/usr/include/c++/4.9/bits/stl_vector.h **** 
 491:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 492:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Assigns a range to a %vector.
 493:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __first  An input iterator.
 494:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __last   An input iterator.
 495:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 496:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 497:/usr/include/c++/4.9/bits/stl_vector.h ****        *  range [__first,__last).
 498:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 499:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 500:/usr/include/c++/4.9/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 501:/usr/include/c++/4.9/bits/stl_vector.h ****        *  of elements assigned.  Old data may be lost.
 502:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 503:/usr/include/c++/4.9/bits/stl_vector.h **** #if __cplusplus >= 201103L
 504:/usr/include/c++/4.9/bits/stl_vector.h ****       template<typename _InputIterator,
 505:/usr/include/c++/4.9/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 506:/usr/include/c++/4.9/bits/stl_vector.h ****         void
 507:/usr/include/c++/4.9/bits/stl_vector.h ****         assign(_InputIterator __first, _InputIterator __last)
 508:/usr/include/c++/4.9/bits/stl_vector.h ****         { _M_assign_dispatch(__first, __last, __false_type()); }
 509:/usr/include/c++/4.9/bits/stl_vector.h **** #else
 510:/usr/include/c++/4.9/bits/stl_vector.h ****       template<typename _InputIterator>
 511:/usr/include/c++/4.9/bits/stl_vector.h ****         void
 512:/usr/include/c++/4.9/bits/stl_vector.h ****         assign(_InputIterator __first, _InputIterator __last)
 513:/usr/include/c++/4.9/bits/stl_vector.h ****         {
 514:/usr/include/c++/4.9/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 515:/usr/include/c++/4.9/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 516:/usr/include/c++/4.9/bits/stl_vector.h **** 	  _M_assign_dispatch(__first, __last, _Integral());
 517:/usr/include/c++/4.9/bits/stl_vector.h **** 	}
 518:/usr/include/c++/4.9/bits/stl_vector.h **** #endif
 519:/usr/include/c++/4.9/bits/stl_vector.h **** 
 520:/usr/include/c++/4.9/bits/stl_vector.h **** #if __cplusplus >= 201103L
 521:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 522:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Assigns an initializer list to a %vector.
 523:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 524:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 525:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 526:/usr/include/c++/4.9/bits/stl_vector.h ****        *  initializer list @a __l.
 527:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 528:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 529:/usr/include/c++/4.9/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 530:/usr/include/c++/4.9/bits/stl_vector.h ****        *  of elements assigned.  Old data may be lost.
 531:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 532:/usr/include/c++/4.9/bits/stl_vector.h ****       void
 533:/usr/include/c++/4.9/bits/stl_vector.h ****       assign(initializer_list<value_type> __l)
 534:/usr/include/c++/4.9/bits/stl_vector.h ****       { this->assign(__l.begin(), __l.end()); }
 535:/usr/include/c++/4.9/bits/stl_vector.h **** #endif
 536:/usr/include/c++/4.9/bits/stl_vector.h **** 
 537:/usr/include/c++/4.9/bits/stl_vector.h ****       /// Get a copy of the memory allocation object.
 538:/usr/include/c++/4.9/bits/stl_vector.h ****       using _Base::get_allocator;
 539:/usr/include/c++/4.9/bits/stl_vector.h **** 
 540:/usr/include/c++/4.9/bits/stl_vector.h ****       // iterators
 541:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 542:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Returns a read/write iterator that points to the first
 543:/usr/include/c++/4.9/bits/stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 544:/usr/include/c++/4.9/bits/stl_vector.h ****        *  element order.
 545:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 546:/usr/include/c++/4.9/bits/stl_vector.h ****       iterator
 547:/usr/include/c++/4.9/bits/stl_vector.h ****       begin() _GLIBCXX_NOEXCEPT
 548:/usr/include/c++/4.9/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 549:/usr/include/c++/4.9/bits/stl_vector.h **** 
 550:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 551:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 552:/usr/include/c++/4.9/bits/stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 553:/usr/include/c++/4.9/bits/stl_vector.h ****        *  element order.
 554:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 555:/usr/include/c++/4.9/bits/stl_vector.h ****       const_iterator
 556:/usr/include/c++/4.9/bits/stl_vector.h ****       begin() const _GLIBCXX_NOEXCEPT
 557:/usr/include/c++/4.9/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 558:/usr/include/c++/4.9/bits/stl_vector.h **** 
 559:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 560:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Returns a read/write iterator that points one past the last
 561:/usr/include/c++/4.9/bits/stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 562:/usr/include/c++/4.9/bits/stl_vector.h ****        *  element order.
 563:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 564:/usr/include/c++/4.9/bits/stl_vector.h ****       iterator
 565:/usr/include/c++/4.9/bits/stl_vector.h ****       end() _GLIBCXX_NOEXCEPT
 566:/usr/include/c++/4.9/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 567:/usr/include/c++/4.9/bits/stl_vector.h **** 
 568:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 569:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 570:/usr/include/c++/4.9/bits/stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 571:/usr/include/c++/4.9/bits/stl_vector.h ****        *  ordinary element order.
 572:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 573:/usr/include/c++/4.9/bits/stl_vector.h ****       const_iterator
 574:/usr/include/c++/4.9/bits/stl_vector.h ****       end() const _GLIBCXX_NOEXCEPT
 575:/usr/include/c++/4.9/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 576:/usr/include/c++/4.9/bits/stl_vector.h **** 
 577:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 578:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Returns a read/write reverse iterator that points to the
 579:/usr/include/c++/4.9/bits/stl_vector.h ****        *  last element in the %vector.  Iteration is done in reverse
 580:/usr/include/c++/4.9/bits/stl_vector.h ****        *  element order.
 581:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 582:/usr/include/c++/4.9/bits/stl_vector.h ****       reverse_iterator
 583:/usr/include/c++/4.9/bits/stl_vector.h ****       rbegin() _GLIBCXX_NOEXCEPT
 584:/usr/include/c++/4.9/bits/stl_vector.h ****       { return reverse_iterator(end()); }
 585:/usr/include/c++/4.9/bits/stl_vector.h **** 
 586:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 587:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 588:/usr/include/c++/4.9/bits/stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 589:/usr/include/c++/4.9/bits/stl_vector.h ****        *  reverse element order.
 590:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 591:/usr/include/c++/4.9/bits/stl_vector.h ****       const_reverse_iterator
 592:/usr/include/c++/4.9/bits/stl_vector.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 593:/usr/include/c++/4.9/bits/stl_vector.h ****       { return const_reverse_iterator(end()); }
 594:/usr/include/c++/4.9/bits/stl_vector.h **** 
 595:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 596:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Returns a read/write reverse iterator that points to one
 597:/usr/include/c++/4.9/bits/stl_vector.h ****        *  before the first element in the %vector.  Iteration is done
 598:/usr/include/c++/4.9/bits/stl_vector.h ****        *  in reverse element order.
 599:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 600:/usr/include/c++/4.9/bits/stl_vector.h ****       reverse_iterator
 601:/usr/include/c++/4.9/bits/stl_vector.h ****       rend() _GLIBCXX_NOEXCEPT
 602:/usr/include/c++/4.9/bits/stl_vector.h ****       { return reverse_iterator(begin()); }
 603:/usr/include/c++/4.9/bits/stl_vector.h **** 
 604:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 605:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 606:/usr/include/c++/4.9/bits/stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 607:/usr/include/c++/4.9/bits/stl_vector.h ****        *  is done in reverse element order.
 608:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 609:/usr/include/c++/4.9/bits/stl_vector.h ****       const_reverse_iterator
 610:/usr/include/c++/4.9/bits/stl_vector.h ****       rend() const _GLIBCXX_NOEXCEPT
 611:/usr/include/c++/4.9/bits/stl_vector.h ****       { return const_reverse_iterator(begin()); }
 612:/usr/include/c++/4.9/bits/stl_vector.h **** 
 613:/usr/include/c++/4.9/bits/stl_vector.h **** #if __cplusplus >= 201103L
 614:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 615:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 616:/usr/include/c++/4.9/bits/stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 617:/usr/include/c++/4.9/bits/stl_vector.h ****        *  element order.
 618:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 619:/usr/include/c++/4.9/bits/stl_vector.h ****       const_iterator
 620:/usr/include/c++/4.9/bits/stl_vector.h ****       cbegin() const noexcept
 621:/usr/include/c++/4.9/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 622:/usr/include/c++/4.9/bits/stl_vector.h **** 
 623:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 624:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 625:/usr/include/c++/4.9/bits/stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 626:/usr/include/c++/4.9/bits/stl_vector.h ****        *  ordinary element order.
 627:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 628:/usr/include/c++/4.9/bits/stl_vector.h ****       const_iterator
 629:/usr/include/c++/4.9/bits/stl_vector.h ****       cend() const noexcept
 630:/usr/include/c++/4.9/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 631:/usr/include/c++/4.9/bits/stl_vector.h **** 
 632:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 633:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 634:/usr/include/c++/4.9/bits/stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 635:/usr/include/c++/4.9/bits/stl_vector.h ****        *  reverse element order.
 636:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 637:/usr/include/c++/4.9/bits/stl_vector.h ****       const_reverse_iterator
 638:/usr/include/c++/4.9/bits/stl_vector.h ****       crbegin() const noexcept
 639:/usr/include/c++/4.9/bits/stl_vector.h ****       { return const_reverse_iterator(end()); }
 640:/usr/include/c++/4.9/bits/stl_vector.h **** 
 641:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 642:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 643:/usr/include/c++/4.9/bits/stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 644:/usr/include/c++/4.9/bits/stl_vector.h ****        *  is done in reverse element order.
 645:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 646:/usr/include/c++/4.9/bits/stl_vector.h ****       const_reverse_iterator
 647:/usr/include/c++/4.9/bits/stl_vector.h ****       crend() const noexcept
 648:/usr/include/c++/4.9/bits/stl_vector.h ****       { return const_reverse_iterator(begin()); }
 649:/usr/include/c++/4.9/bits/stl_vector.h **** #endif
 650:/usr/include/c++/4.9/bits/stl_vector.h **** 
 651:/usr/include/c++/4.9/bits/stl_vector.h ****       // [23.2.4.2] capacity
 652:/usr/include/c++/4.9/bits/stl_vector.h ****       /**  Returns the number of elements in the %vector.  */
 653:/usr/include/c++/4.9/bits/stl_vector.h ****       size_type
 654:/usr/include/c++/4.9/bits/stl_vector.h ****       size() const _GLIBCXX_NOEXCEPT
 655:/usr/include/c++/4.9/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 656:/usr/include/c++/4.9/bits/stl_vector.h **** 
 657:/usr/include/c++/4.9/bits/stl_vector.h ****       /**  Returns the size() of the largest possible %vector.  */
 658:/usr/include/c++/4.9/bits/stl_vector.h ****       size_type
 659:/usr/include/c++/4.9/bits/stl_vector.h ****       max_size() const _GLIBCXX_NOEXCEPT
 660:/usr/include/c++/4.9/bits/stl_vector.h ****       { return _Alloc_traits::max_size(_M_get_Tp_allocator()); }
 661:/usr/include/c++/4.9/bits/stl_vector.h **** 
 662:/usr/include/c++/4.9/bits/stl_vector.h **** #if __cplusplus >= 201103L
 663:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 664:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 665:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 666:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 667:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 668:/usr/include/c++/4.9/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 669:/usr/include/c++/4.9/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 670:/usr/include/c++/4.9/bits/stl_vector.h ****        *  default constructed elements are appended.
 671:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 672:/usr/include/c++/4.9/bits/stl_vector.h ****       void
 673:/usr/include/c++/4.9/bits/stl_vector.h ****       resize(size_type __new_size)
 674:/usr/include/c++/4.9/bits/stl_vector.h ****       {
 675:/usr/include/c++/4.9/bits/stl_vector.h **** 	if (__new_size > size())
 676:/usr/include/c++/4.9/bits/stl_vector.h **** 	  _M_default_append(__new_size - size());
 677:/usr/include/c++/4.9/bits/stl_vector.h **** 	else if (__new_size < size())
 678:/usr/include/c++/4.9/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 679:/usr/include/c++/4.9/bits/stl_vector.h ****       }
 680:/usr/include/c++/4.9/bits/stl_vector.h **** 
 681:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 682:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 683:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 684:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 685:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 686:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 687:/usr/include/c++/4.9/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 688:/usr/include/c++/4.9/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 689:/usr/include/c++/4.9/bits/stl_vector.h ****        *  the %vector is extended and new elements are populated with
 690:/usr/include/c++/4.9/bits/stl_vector.h ****        *  given data.
 691:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 692:/usr/include/c++/4.9/bits/stl_vector.h ****       void
 693:/usr/include/c++/4.9/bits/stl_vector.h ****       resize(size_type __new_size, const value_type& __x)
 694:/usr/include/c++/4.9/bits/stl_vector.h ****       {
 695:/usr/include/c++/4.9/bits/stl_vector.h **** 	if (__new_size > size())
 696:/usr/include/c++/4.9/bits/stl_vector.h **** 	  insert(end(), __new_size - size(), __x);
 697:/usr/include/c++/4.9/bits/stl_vector.h **** 	else if (__new_size < size())
 698:/usr/include/c++/4.9/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 699:/usr/include/c++/4.9/bits/stl_vector.h ****       }
 700:/usr/include/c++/4.9/bits/stl_vector.h **** #else
 701:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 702:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 703:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 704:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 705:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 706:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 707:/usr/include/c++/4.9/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 708:/usr/include/c++/4.9/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 709:/usr/include/c++/4.9/bits/stl_vector.h ****        *  the %vector is extended and new elements are populated with
 710:/usr/include/c++/4.9/bits/stl_vector.h ****        *  given data.
 711:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 712:/usr/include/c++/4.9/bits/stl_vector.h ****       void
 713:/usr/include/c++/4.9/bits/stl_vector.h ****       resize(size_type __new_size, value_type __x = value_type())
 714:/usr/include/c++/4.9/bits/stl_vector.h ****       {
 715:/usr/include/c++/4.9/bits/stl_vector.h **** 	if (__new_size > size())
 716:/usr/include/c++/4.9/bits/stl_vector.h **** 	  insert(end(), __new_size - size(), __x);
 717:/usr/include/c++/4.9/bits/stl_vector.h **** 	else if (__new_size < size())
 718:/usr/include/c++/4.9/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 719:/usr/include/c++/4.9/bits/stl_vector.h ****       }
 720:/usr/include/c++/4.9/bits/stl_vector.h **** #endif
 721:/usr/include/c++/4.9/bits/stl_vector.h **** 
 722:/usr/include/c++/4.9/bits/stl_vector.h **** #if __cplusplus >= 201103L
 723:/usr/include/c++/4.9/bits/stl_vector.h ****       /**  A non-binding request to reduce capacity() to size().  */
 724:/usr/include/c++/4.9/bits/stl_vector.h ****       void
 725:/usr/include/c++/4.9/bits/stl_vector.h ****       shrink_to_fit()
 726:/usr/include/c++/4.9/bits/stl_vector.h ****       { _M_shrink_to_fit(); }
 727:/usr/include/c++/4.9/bits/stl_vector.h **** #endif
 728:/usr/include/c++/4.9/bits/stl_vector.h **** 
 729:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 730:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Returns the total number of elements that the %vector can
 731:/usr/include/c++/4.9/bits/stl_vector.h ****        *  hold before needing to allocate more memory.
 732:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 733:/usr/include/c++/4.9/bits/stl_vector.h ****       size_type
 734:/usr/include/c++/4.9/bits/stl_vector.h ****       capacity() const _GLIBCXX_NOEXCEPT
 735:/usr/include/c++/4.9/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_end_of_storage
 736:/usr/include/c++/4.9/bits/stl_vector.h **** 			 - this->_M_impl._M_start); }
 737:/usr/include/c++/4.9/bits/stl_vector.h **** 
 738:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 739:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Returns true if the %vector is empty.  (Thus begin() would
 740:/usr/include/c++/4.9/bits/stl_vector.h ****        *  equal end().)
 741:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 742:/usr/include/c++/4.9/bits/stl_vector.h ****       bool
 743:/usr/include/c++/4.9/bits/stl_vector.h ****       empty() const _GLIBCXX_NOEXCEPT
 744:/usr/include/c++/4.9/bits/stl_vector.h ****       { return begin() == end(); }
 745:/usr/include/c++/4.9/bits/stl_vector.h **** 
 746:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 747:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
 748:/usr/include/c++/4.9/bits/stl_vector.h ****        *          elements.
 749:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __n  Number of elements required.
 750:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @throw  std::length_error  If @a n exceeds @c max_size().
 751:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 752:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This function attempts to reserve enough memory for the
 753:/usr/include/c++/4.9/bits/stl_vector.h ****        *  %vector to hold the specified number of elements.  If the
 754:/usr/include/c++/4.9/bits/stl_vector.h ****        *  number requested is more than max_size(), length_error is
 755:/usr/include/c++/4.9/bits/stl_vector.h ****        *  thrown.
 756:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 757:/usr/include/c++/4.9/bits/stl_vector.h ****        *  The advantage of this function is that if optimal code is a
 758:/usr/include/c++/4.9/bits/stl_vector.h ****        *  necessity and the user can determine the number of elements
 759:/usr/include/c++/4.9/bits/stl_vector.h ****        *  that will be required, the user can reserve the memory in
 760:/usr/include/c++/4.9/bits/stl_vector.h ****        *  %advance, and thus prevent a possible reallocation of memory
 761:/usr/include/c++/4.9/bits/stl_vector.h ****        *  and copying of %vector data.
 762:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 763:/usr/include/c++/4.9/bits/stl_vector.h ****       void
 764:/usr/include/c++/4.9/bits/stl_vector.h ****       reserve(size_type __n);
 765:/usr/include/c++/4.9/bits/stl_vector.h **** 
 766:/usr/include/c++/4.9/bits/stl_vector.h ****       // element access
 767:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 768:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
 769:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 770:/usr/include/c++/4.9/bits/stl_vector.h ****        *  accessed.
 771:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @return  Read/write reference to data.
 772:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 773:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This operator allows for easy, array-style, data access.
 774:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Note that data access with this operator is unchecked and
 775:/usr/include/c++/4.9/bits/stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
 776:/usr/include/c++/4.9/bits/stl_vector.h ****        *  see at().)
 777:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 778:/usr/include/c++/4.9/bits/stl_vector.h ****       reference
 779:/usr/include/c++/4.9/bits/stl_vector.h ****       operator[](size_type __n) _GLIBCXX_NOEXCEPT
 5247              		.loc 7 779 0
 5248              		.cfi_startproc
 5249 0000 55       		pushq	%rbp
 5250              		.cfi_def_cfa_offset 16
 5251              		.cfi_offset 6, -16
 5252 0001 4889E5   		movq	%rsp, %rbp
 5253              		.cfi_def_cfa_register 6
 5254 0004 48897DF8 		movq	%rdi, -8(%rbp)
 5255 0008 488975F0 		movq	%rsi, -16(%rbp)
 780:/usr/include/c++/4.9/bits/stl_vector.h ****       { return *(this->_M_impl._M_start + __n); }
 5256              		.loc 7 780 0
 5257 000c 488B45F8 		movq	-8(%rbp), %rax
 5258 0010 488B00   		movq	(%rax), %rax
 5259 0013 488B55F0 		movq	-16(%rbp), %rdx
 5260 0017 48C1E202 		salq	$2, %rdx
 5261 001b 4801D0   		addq	%rdx, %rax
 5262 001e 5D       		popq	%rbp
 5263              		.cfi_def_cfa 7, 8
 5264 001f C3       		ret
 5265              		.cfi_endproc
 5266              	.LFE1474:
 5268              		.section	.text._ZNKSt6vectorIfSaIfEE4sizeEv,"axG",@progbits,_ZNKSt6vectorIfSaIfEE4sizeEv,comdat
 5269              		.align 2
 5270              		.weak	_ZNKSt6vectorIfSaIfEE4sizeEv
 5272              	_ZNKSt6vectorIfSaIfEE4sizeEv:
 5273              	.LFB1475:
 654:/usr/include/c++/4.9/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 5274              		.loc 7 654 0
 5275              		.cfi_startproc
 5276 0000 55       		pushq	%rbp
 5277              		.cfi_def_cfa_offset 16
 5278              		.cfi_offset 6, -16
 5279 0001 4889E5   		movq	%rsp, %rbp
 5280              		.cfi_def_cfa_register 6
 5281 0004 48897DF8 		movq	%rdi, -8(%rbp)
 655:/usr/include/c++/4.9/bits/stl_vector.h **** 
 5282              		.loc 7 655 0
 5283 0008 488B45F8 		movq	-8(%rbp), %rax
 5284 000c 488B4008 		movq	8(%rax), %rax
 5285 0010 4889C2   		movq	%rax, %rdx
 5286 0013 488B45F8 		movq	-8(%rbp), %rax
 5287 0017 488B00   		movq	(%rax), %rax
 5288 001a 4829C2   		subq	%rax, %rdx
 5289 001d 4889D0   		movq	%rdx, %rax
 5290 0020 48C1F802 		sarq	$2, %rax
 5291 0024 5D       		popq	%rbp
 5292              		.cfi_def_cfa 7, 8
 5293 0025 C3       		ret
 5294              		.cfi_endproc
 5295              	.LFE1475:
 5297              		.section	.text._ZN8UnitTest15CheckArrayCloseISt6vectorIfSaIfEES3_fEEvRNS_11TestResultsERKT_RKT0_iR
 5298              		.weak	_ZN8UnitTest15CheckArrayCloseISt6vectorIfSaIfEES3_fEEvRNS_11TestResultsERKT_RKT0_iRKT1_RKNS_
 5300              	_ZN8UnitTest15CheckArrayCloseISt6vectorIfSaIfEES3_fEEvRNS_11TestResultsERKT_RKT0_iRKT1_RKNS_11TestD
 5301              	.LFB1476:
  96:../Checks.h   ****                    int const count, Tolerance const& tolerance, TestDetails const& details)
 5302              		.loc 5 96 0
 5303              		.cfi_startproc
 5304              		.cfi_personality 0x3,__gxx_personality_v0
 5305              		.cfi_lsda 0x3,.LLSDA1476
 5306 0000 55       		pushq	%rbp
 5307              		.cfi_def_cfa_offset 16
 5308              		.cfi_offset 6, -16
 5309 0001 4889E5   		movq	%rsp, %rbp
 5310              		.cfi_def_cfa_register 6
 5311 0004 53       		pushq	%rbx
 5312 0005 4881ECB8 		subq	$440, %rsp
 5312      010000
 5313              		.cfi_offset 3, -24
 5314 000c 4889BD68 		movq	%rdi, -408(%rbp)
 5314      FEFFFF
 5315 0013 4889B560 		movq	%rsi, -416(%rbp)
 5315      FEFFFF
 5316 001a 48899558 		movq	%rdx, -424(%rbp)
 5316      FEFFFF
 5317 0021 898D54FE 		movl	%ecx, -428(%rbp)
 5317      FFFF
 5318 0027 4C898548 		movq	%r8, -440(%rbp)
 5318      FEFFFF
 5319 002e 4C898D40 		movq	%r9, -448(%rbp)
 5319      FEFFFF
  96:../Checks.h   ****                    int const count, Tolerance const& tolerance, TestDetails const& details)
 5320              		.loc 5 96 0
 5321 0035 64488B04 		movq	%fs:40, %rax
 5321      25280000 
 5321      00
 5322 003e 488945E8 		movq	%rax, -24(%rbp)
 5323 0042 31C0     		xorl	%eax, %eax
 5324              	.LBB119:
  99:../Checks.h   **** 
 5325              		.loc 5 99 0
 5326 0044 488B8D48 		movq	-440(%rbp), %rcx
 5326      FEFFFF
 5327 004b 8B9554FE 		movl	-428(%rbp), %edx
 5327      FFFF
 5328 0051 488BB558 		movq	-424(%rbp), %rsi
 5328      FEFFFF
 5329 0058 488B8560 		movq	-416(%rbp), %rax
 5329      FEFFFF
 5330 005f 4889C7   		movq	%rax, %rdi
 5331              	.LEHB122:
 5332 0062 E8000000 		call	_ZN8UnitTest13ArrayAreCloseISt6vectorIfSaIfEES3_fEEbRKT_RKT0_iRKT1_
 5332      00
 5333 0067 888577FE 		movb	%al, -393(%rbp)
 5333      FFFF
 5334              	.LBB120:
 101:../Checks.h   ****     {
 5335              		.loc 5 101 0
 5336 006d 0FB68577 		movzbl	-393(%rbp), %eax
 5336      FEFFFF
 5337 0074 83F001   		xorl	$1, %eax
 5338 0077 84C0     		testb	%al, %al
 5339 0079 0F848101 		je	.L278
 5339      0000
 5340              	.LBB121:
 103:../Checks.h   **** 
 5341              		.loc 5 103 0
 5342 007f 488D8580 		leaq	-384(%rbp), %rax
 5342      FEFFFF
 5343 0086 4889C7   		movq	%rax, %rdi
 5344 0089 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 5344      00
 5345              	.LEHE122:
 105:../Checks.h   ****         for (int expectedIndex = 0; expectedIndex < count; ++expectedIndex)
 5346              		.loc 5 105 0
 5347 008e 488D8580 		leaq	-384(%rbp), %rax
 5347      FEFFFF
 5348 0095 BE000000 		movl	$.LC56, %esi
 5348      00
 5349 009a 4889C7   		movq	%rax, %rdi
 5350              	.LEHB123:
 5351 009d E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5351      00
 5352              	.LBB122:
 106:../Checks.h   ****             stream << expected[expectedIndex] << " ";
 5353              		.loc 5 106 0
 5354 00a2 C78578FE 		movl	$0, -392(%rbp)
 5354      FFFF0000 
 5354      0000
 5355 00ac EB4E     		jmp	.L279
 5356              	.L280:
 107:../Checks.h   ****         stream << "] +/- " << tolerance << " but was [ ";
 5357              		.loc 5 107 0
 5358 00ae 8B8578FE 		movl	-392(%rbp), %eax
 5358      FFFF
 5359 00b4 4863D0   		movslq	%eax, %rdx
 5360 00b7 488B8560 		movq	-416(%rbp), %rax
 5360      FEFFFF
 5361 00be 4889D6   		movq	%rdx, %rsi
 5362 00c1 4889C7   		movq	%rax, %rdi
 5363 00c4 E8000000 		call	_ZNKSt6vectorIfSaIfEEixEm
 5363      00
 5364 00c9 8B10     		movl	(%rax), %edx
 5365 00cb 488D8580 		leaq	-384(%rbp), %rax
 5365      FEFFFF
 5366 00d2 899550FE 		movl	%edx, -432(%rbp)
 5366      FFFF
 5367 00d8 F30F1085 		movss	-432(%rbp), %xmm0
 5367      50FEFFFF 
 5368 00e0 4889C7   		movq	%rax, %rdi
 5369 00e3 E8000000 		call	_ZNSolsEf
 5369      00
 5370 00e8 BE000000 		movl	$.LC57, %esi
 5370      00
 5371 00ed 4889C7   		movq	%rax, %rdi
 5372 00f0 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5372      00
 106:../Checks.h   ****             stream << expected[expectedIndex] << " ";
 5373              		.loc 5 106 0 discriminator 2
 5374 00f5 838578FE 		addl	$1, -392(%rbp)
 5374      FFFF01
 5375              	.L279:
 106:../Checks.h   ****             stream << expected[expectedIndex] << " ";
 5376              		.loc 5 106 0 is_stmt 0 discriminator 1
 5377 00fc 8B8578FE 		movl	-392(%rbp), %eax
 5377      FFFF
 5378 0102 3B8554FE 		cmpl	-428(%rbp), %eax
 5378      FFFF
 5379 0108 7CA4     		jl	.L280
 5380              	.LBE122:
 108:../Checks.h   **** 
 5381              		.loc 5 108 0 is_stmt 1
 5382 010a 488B8548 		movq	-440(%rbp), %rax
 5382      FEFFFF
 5383 0111 8B18     		movl	(%rax), %ebx
 5384 0113 488D8580 		leaq	-384(%rbp), %rax
 5384      FEFFFF
 5385 011a BE000000 		movl	$.LC58, %esi
 5385      00
 5386 011f 4889C7   		movq	%rax, %rdi
 5387 0122 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5387      00
 5388 0127 899D50FE 		movl	%ebx, -432(%rbp)
 5388      FFFF
 5389 012d F30F1085 		movss	-432(%rbp), %xmm0
 5389      50FEFFFF 
 5390 0135 4889C7   		movq	%rax, %rdi
 5391 0138 E8000000 		call	_ZNSolsEf
 5391      00
 108:../Checks.h   **** 
 5392              		.loc 5 108 0 is_stmt 0 discriminator 1
 5393 013d BE000000 		movl	$.LC59, %esi
 5393      00
 5394 0142 4889C7   		movq	%rax, %rdi
 5395 0145 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5395      00
 5396              	.LBB123:
 110:../Checks.h   ****             stream << actual[actualIndex] << " ";
 5397              		.loc 5 110 0 is_stmt 1
 5398 014a C7857CFE 		movl	$0, -388(%rbp)
 5398      FFFF0000 
 5398      0000
 5399 0154 EB4E     		jmp	.L281
 5400              	.L282:
 111:../Checks.h   ****         stream << "]";
 5401              		.loc 5 111 0
 5402 0156 8B857CFE 		movl	-388(%rbp), %eax
 5402      FFFF
 5403 015c 4863D0   		movslq	%eax, %rdx
 5404 015f 488B8558 		movq	-424(%rbp), %rax
 5404      FEFFFF
 5405 0166 4889D6   		movq	%rdx, %rsi
 5406 0169 4889C7   		movq	%rax, %rdi
 5407 016c E8000000 		call	_ZNKSt6vectorIfSaIfEEixEm
 5407      00
 5408 0171 8B10     		movl	(%rax), %edx
 5409 0173 488D8580 		leaq	-384(%rbp), %rax
 5409      FEFFFF
 5410 017a 899550FE 		movl	%edx, -432(%rbp)
 5410      FFFF
 5411 0180 F30F1085 		movss	-432(%rbp), %xmm0
 5411      50FEFFFF 
 5412 0188 4889C7   		movq	%rax, %rdi
 5413 018b E8000000 		call	_ZNSolsEf
 5413      00
 5414 0190 BE000000 		movl	$.LC57, %esi
 5414      00
 5415 0195 4889C7   		movq	%rax, %rdi
 5416 0198 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5416      00
 110:../Checks.h   ****             stream << actual[actualIndex] << " ";
 5417              		.loc 5 110 0 discriminator 2
 5418 019d 83857CFE 		addl	$1, -388(%rbp)
 5418      FFFF01
 5419              	.L281:
 110:../Checks.h   ****             stream << actual[actualIndex] << " ";
 5420              		.loc 5 110 0 is_stmt 0 discriminator 1
 5421 01a4 8B857CFE 		movl	-388(%rbp), %eax
 5421      FFFF
 5422 01aa 3B8554FE 		cmpl	-428(%rbp), %eax
 5422      FFFF
 5423 01b0 7CA4     		jl	.L282
 5424              	.LBE123:
 112:../Checks.h   **** 
 5425              		.loc 5 112 0 is_stmt 1
 5426 01b2 488D8580 		leaq	-384(%rbp), %rax
 5426      FEFFFF
 5427 01b9 BE000000 		movl	$.LC60, %esi
 5427      00
 5428 01be 4889C7   		movq	%rax, %rdi
 5429 01c1 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5429      00
 114:../Checks.h   ****     }
 5430              		.loc 5 114 0
 5431 01c6 488D8580 		leaq	-384(%rbp), %rax
 5431      FEFFFF
 5432 01cd 4889C7   		movq	%rax, %rdi
 5433 01d0 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 5433      00
 5434 01d5 4889C2   		movq	%rax, %rdx
 5435 01d8 488B8D40 		movq	-448(%rbp), %rcx
 5435      FEFFFF
 5436 01df 488B8568 		movq	-408(%rbp), %rax
 5436      FEFFFF
 5437 01e6 4889CE   		movq	%rcx, %rsi
 5438 01e9 4889C7   		movq	%rax, %rdi
 5439 01ec E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5439      00
 5440              	.LEHE123:
 114:../Checks.h   ****     }
 5441              		.loc 5 114 0 is_stmt 0 discriminator 4
 5442 01f1 488D8580 		leaq	-384(%rbp), %rax
 5442      FEFFFF
 5443 01f8 4889C7   		movq	%rax, %rdi
 5444              	.LEHB124:
 5445 01fb E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5445      00
 5446              	.LEHE124:
 5447              	.L278:
 5448              	.LBE121:
 5449              	.LBE120:
 5450              	.LBE119:
 5451              		.loc 5 116 0 is_stmt 1
 5452 0200 488B45E8 		movq	-24(%rbp), %rax
 5453 0204 64483304 		xorq	%fs:40, %rax
 5453      25280000 
 5453      00
 5454 020d 7424     		je	.L284
 5455 020f EB1D     		jmp	.L286
 5456              	.L285:
 5457 0211 4889C3   		movq	%rax, %rbx
 5458              	.LBB126:
 5459              	.LBB125:
 5460              	.LBB124:
 114:../Checks.h   ****     }
 5461              		.loc 5 114 0
 5462 0214 488D8580 		leaq	-384(%rbp), %rax
 5462      FEFFFF
 5463 021b 4889C7   		movq	%rax, %rdi
 5464 021e E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5464      00
 5465 0223 4889D8   		movq	%rbx, %rax
 5466 0226 4889C7   		movq	%rax, %rdi
 5467              	.LEHB125:
 5468 0229 E8000000 		call	_Unwind_Resume
 5468      00
 5469              	.LEHE125:
 5470              	.L286:
 5471              	.LBE124:
 5472              	.LBE125:
 5473              	.LBE126:
 5474              		.loc 5 116 0
 5475 022e E8000000 		call	__stack_chk_fail
 5475      00
 5476              	.L284:
 5477 0233 4881C4B8 		addq	$440, %rsp
 5477      010000
 5478 023a 5B       		popq	%rbx
 5479 023b 5D       		popq	%rbp
 5480              		.cfi_def_cfa 7, 8
 5481 023c C3       		ret
 5482              		.cfi_endproc
 5483              	.LFE1476:
 5484              		.section	.gcc_except_table
 5485              	.LLSDA1476:
 5486 0363 FF       		.byte	0xff
 5487 0364 FF       		.byte	0xff
 5488 0365 01       		.byte	0x1
 5489 0366 15       		.uleb128 .LLSDACSE1476-.LLSDACSB1476
 5490              	.LLSDACSB1476:
 5491 0367 62       		.uleb128 .LEHB122-.LFB1476
 5492 0368 2C       		.uleb128 .LEHE122-.LEHB122
 5493 0369 00       		.uleb128 0
 5494 036a 00       		.uleb128 0
 5495 036b 9D01     		.uleb128 .LEHB123-.LFB1476
 5496 036d D402     		.uleb128 .LEHE123-.LEHB123
 5497 036f 9104     		.uleb128 .L285-.LFB1476
 5498 0371 00       		.uleb128 0
 5499 0372 FB03     		.uleb128 .LEHB124-.LFB1476
 5500 0374 05       		.uleb128 .LEHE124-.LEHB124
 5501 0375 00       		.uleb128 0
 5502 0376 00       		.uleb128 0
 5503 0377 A904     		.uleb128 .LEHB125-.LFB1476
 5504 0379 05       		.uleb128 .LEHE125-.LEHB125
 5505 037a 00       		.uleb128 0
 5506 037b 00       		.uleb128 0
 5507              	.LLSDACSE1476:
 5508              		.section	.text._ZN8UnitTest15CheckArrayCloseISt6vectorIfSaIfEES3_fEEvRNS_11TestResultsERKT_RKT0_iR
 5510              		.section	.rodata
 5511              	.LC61:
 5512 05e7 556E6861 		.string	"Unhandled system exception"
 5512      6E646C65 
 5512      64207379 
 5512      7374656D 
 5512      20657863 
 5513              	.LC62:
 5514 0602 556E6861 		.string	"Unhandled exception: Crash!"
 5514      6E646C65 
 5514      64206578 
 5514      63657074 
 5514      696F6E3A 
 5515              		.text
 5517              	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelperEEEvRT_RKNS
 5518              	.LFB1477:
 5519              		.file 8 "../ExecuteTest.h"
   1:../ExecuteTest.h **** #ifndef UNITTEST_EXECUTE_TEST_H
   2:../ExecuteTest.h **** #define UNITTEST_EXECUTE_TEST_H
   3:../ExecuteTest.h **** 
   4:../ExecuteTest.h **** #include "TestDetails.h"
   5:../ExecuteTest.h **** #include "MemoryOutStream.h"
   6:../ExecuteTest.h **** #include "AssertException.h"
   7:../ExecuteTest.h **** #include "CurrentTest.h"
   8:../ExecuteTest.h **** 
   9:../ExecuteTest.h **** #ifdef UNITTEST_POSIX
  10:../ExecuteTest.h **** 	#include "PosixUtils/SignalTranslator.h"
  11:../ExecuteTest.h **** #endif
  12:../ExecuteTest.h **** 
  13:../ExecuteTest.h **** namespace UnitTest {
  14:../ExecuteTest.h **** 
  15:../ExecuteTest.h **** template< typename T >
  16:../ExecuteTest.h **** void ExecuteTest(T& testObject, TestDetails const& details)
 5520              		.loc 8 16 0
 5521              		.cfi_startproc
 5522              		.cfi_personality 0x3,__gxx_personality_v0
 5523              		.cfi_lsda 0x3,.LLSDA1477
 5524 1ba6 55       		pushq	%rbp
 5525              		.cfi_def_cfa_offset 16
 5526              		.cfi_offset 6, -16
 5527 1ba7 4889E5   		movq	%rsp, %rbp
 5528              		.cfi_def_cfa_register 6
 5529 1baa 4154     		pushq	%r12
 5530 1bac 53       		pushq	%rbx
 5531 1bad 4881EC20 		subq	$1568, %rsp
 5531      060000
 5532              		.cfi_offset 12, -24
 5533              		.cfi_offset 3, -32
 5534 1bb4 4889BDD8 		movq	%rdi, -1576(%rbp)
 5534      F9FFFF
 5535 1bbb 4889B5D0 		movq	%rsi, -1584(%rbp)
 5535      F9FFFF
 5536              		.loc 8 16 0
 5537 1bc2 64488B04 		movq	%fs:40, %rax
 5537      25280000 
 5537      00
 5538 1bcb 488945E8 		movq	%rax, -24(%rbp)
 5539 1bcf 31C0     		xorl	%eax, %eax
 5540              	.LEHB126:
 5541              	.LBB127:
  17:../ExecuteTest.h **** {
  18:../ExecuteTest.h **** 	CurrentTest::Details() = &details;
 5542              		.loc 8 18 0
 5543 1bd1 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 5543      00
 5544              	.LEHE126:
 5545 1bd6 4889C2   		movq	%rax, %rdx
 5546 1bd9 488B85D0 		movq	-1584(%rbp), %rax
 5546      F9FFFF
 5547 1be0 488902   		movq	%rax, (%rdx)
 5548              	.LBB128:
  19:../ExecuteTest.h **** 
  20:../ExecuteTest.h **** 	try
  21:../ExecuteTest.h **** 	{
  22:../ExecuteTest.h **** #ifdef UNITTEST_POSIX
  23:../ExecuteTest.h **** 		UNITTEST_THROW_SIGNALS
 5549              		.loc 8 23 0
 5550 1be3 488D8580 		leaq	-1152(%rbp), %rax
 5550      FBFFFF
 5551 1bea 4889C7   		movq	%rax, %rdi
 5552              	.LEHB127:
 5553 1bed E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev
 5553      00
 5554              	.LEHE127:
 5555              		.loc 8 23 0 is_stmt 0 discriminator 1
 5556 1bf2 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 5556      000000
 5557 1bf9 BE010000 		movl	$1, %esi
 5557      00
 5558 1bfe 4889C7   		movq	%rax, %rdi
 5559 1c01 E8000000 		call	__sigsetjmp
 5559      00
 5560 1c06 85C0     		testl	%eax, %eax
 5561 1c08 0F95C0   		setne	%al
 5562 1c0b 84C0     		testb	%al, %al
 5563 1c0d 7423     		je	.L307
 5564              		.loc 8 23 0 discriminator 3
 5565 1c0f BF080000 		movl	$8, %edi
 5565      00
 5566 1c14 E8000000 		call	__cxa_allocate_exception
 5566      00
 5567 1c19 48C70000 		movq	$.LC61, (%rax)
 5567      000000
 5568 1c20 BA000000 		movl	$0, %edx
 5568      00
 5569 1c25 BE000000 		movl	$_ZTIPKc, %esi
 5569      00
 5570 1c2a 4889C7   		movq	%rax, %rdi
 5571              	.LEHB128:
 5572 1c2d E8000000 		call	__cxa_throw
 5572      00
 5573              	.L307:
  24:../ExecuteTest.h **** #endif
  25:../ExecuteTest.h **** 		testObject.RunImpl();
 5574              		.loc 8 25 0 is_stmt 1
 5575 1c32 488B85D8 		movq	-1576(%rbp), %rax
 5575      F9FFFF
 5576 1c39 4889C7   		movq	%rax, %rdi
 5577 1c3c E8E9F8FF 		call	_ZN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelper7RunImplEv
 5577      FF
 5578              	.LEHE128:
 5579              		.loc 8 25 0 is_stmt 0 discriminator 2
 5580 1c41 488D8580 		leaq	-1152(%rbp), %rax
 5580      FBFFFF
 5581 1c48 4889C7   		movq	%rax, %rdi
 5582              	.LEHB129:
 5583 1c4b E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 5583      00
 5584              	.LEHE129:
 5585              	.LBE128:
 5586              	.LBE127:
  26:../ExecuteTest.h **** 	}
  27:../ExecuteTest.h **** 	catch (AssertException const& e)
  28:../ExecuteTest.h **** 	{
  29:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(
  30:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
  31:../ExecuteTest.h **** 	}
  32:../ExecuteTest.h **** 	catch (std::exception const& e)
  33:../ExecuteTest.h **** 	{
  34:../ExecuteTest.h **** 		MemoryOutStream stream;
  35:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
  36:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
  37:../ExecuteTest.h **** 	}
  38:../ExecuteTest.h **** 	catch (...)
  39:../ExecuteTest.h **** 	{
  40:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, "Unhandled exception: Crash!");
  41:../ExecuteTest.h **** 	}
  42:../ExecuteTest.h **** }
 5587              		.loc 8 42 0 is_stmt 1
 5588 1c50 E9EE0100 		jmp	.L309
 5588      00
 5589              	.L302:
 5590 1c55 4989C4   		movq	%rax, %r12
 5591 1c58 4889D3   		movq	%rdx, %rbx
 5592              	.LBB136:
 5593              	.LBB129:
  25:../ExecuteTest.h **** 	}
 5594              		.loc 8 25 0
 5595 1c5b 488D8580 		leaq	-1152(%rbp), %rax
 5595      FBFFFF
 5596 1c62 4889C7   		movq	%rax, %rdi
 5597 1c65 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 5597      00
 5598 1c6a 4C89E0   		movq	%r12, %rax
 5599 1c6d 4889DA   		movq	%rbx, %rdx
 5600 1c70 EB00     		jmp	.L291
 5601              	.L301:
 5602              	.L291:
 5603 1c72 4883FA01 		cmpq	$1, %rdx
 5604 1c76 745C     		je	.L293
 5605 1c78 4883FA02 		cmpq	$2, %rdx
 5606 1c7c 0F84F300 		je	.L294
 5606      0000
 5607 1c82 E9900100 		jmp	.L308
 5607      00
 5608              	.L303:
 5609 1c87 4889C3   		movq	%rax, %rbx
 5610              	.LBE129:
 5611              	.LBB130:
  27:../ExecuteTest.h **** 	{
 5612              		.loc 8 27 0
 5613 1c8a E8000000 		call	__cxa_end_catch
 5613      00
 5614 1c8f 4889D8   		movq	%rbx, %rax
 5615 1c92 4889C7   		movq	%rax, %rdi
 5616              	.LEHB130:
 5617 1c95 E8000000 		call	_Unwind_Resume
 5617      00
 5618              	.LEHE130:
 5619              	.L304:
 5620 1c9a 4889C3   		movq	%rax, %rbx
 5621              	.LBE130:
 5622              	.LBB131:
 5623              	.LBB132:
  36:../ExecuteTest.h **** 	}
 5624              		.loc 8 36 0
 5625 1c9d 488D8510 		leaq	-1520(%rbp), %rax
 5625      FAFFFF
 5626 1ca4 4889C7   		movq	%rax, %rdi
 5627 1ca7 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5627      00
 5628 1cac EB03     		jmp	.L297
 5629              	.L305:
 5630 1cae 4889C3   		movq	%rax, %rbx
 5631              	.L297:
 5632              	.LBE132:
  32:../ExecuteTest.h **** 	{
 5633              		.loc 8 32 0
 5634 1cb1 E8000000 		call	__cxa_end_catch
 5634      00
 5635 1cb6 4889D8   		movq	%rbx, %rax
 5636 1cb9 4889C7   		movq	%rax, %rdi
 5637              	.LEHB131:
 5638 1cbc E8000000 		call	_Unwind_Resume
 5638      00
 5639              	.LEHE131:
 5640              	.L306:
 5641 1cc1 4889C3   		movq	%rax, %rbx
 5642              	.LBE131:
  38:../ExecuteTest.h **** 	{
 5643              		.loc 8 38 0
 5644 1cc4 E8000000 		call	__cxa_end_catch
 5644      00
 5645 1cc9 4889D8   		movq	%rbx, %rax
 5646 1ccc 4889C7   		movq	%rax, %rdi
 5647              	.LEHB132:
 5648 1ccf E8000000 		call	_Unwind_Resume
 5648      00
 5649              	.LEHE132:
 5650              	.L293:
 5651              	.LBB134:
  27:../ExecuteTest.h **** 	{
 5652              		.loc 8 27 0
 5653 1cd4 4889C7   		movq	%rax, %rdi
 5654 1cd7 E8000000 		call	__cxa_begin_catch
 5654      00
 5655 1cdc 488985E0 		movq	%rax, -1568(%rbp)
 5655      F9FFFF
  30:../ExecuteTest.h **** 	}
 5656              		.loc 8 30 0
 5657 1ce3 488B85E0 		movq	-1568(%rbp), %rax
 5657      F9FFFF
 5658 1cea 488B00   		movq	(%rax), %rax
 5659 1ced 4883C010 		addq	$16, %rax
 5660 1cf1 488B00   		movq	(%rax), %rax
 5661 1cf4 488B95E0 		movq	-1568(%rbp), %rdx
 5661      F9FFFF
 5662 1cfb 4889D7   		movq	%rdx, %rdi
 5663 1cfe FFD0     		call	*%rax
 5664 1d00 4889C3   		movq	%rax, %rbx
 5665 1d03 488B85E0 		movq	-1568(%rbp), %rax
 5665      F9FFFF
 5666 1d0a 4889C7   		movq	%rax, %rdi
 5667              	.LEHB133:
 5668 1d0d E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 5668      00
  30:../ExecuteTest.h **** 	}
 5669              		.loc 8 30 0 is_stmt 0 discriminator 1
 5670 1d12 4189C4   		movl	%eax, %r12d
 5671 1d15 488B85E0 		movq	-1568(%rbp), %rax
 5671      F9FFFF
 5672 1d1c 4889C7   		movq	%rax, %rdi
 5673 1d1f E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 5673      00
  30:../ExecuteTest.h **** 	}
 5674              		.loc 8 30 0 discriminator 2
 5675 1d24 4889C1   		movq	%rax, %rcx
 5676 1d27 488B85D0 		movq	-1584(%rbp), %rax
 5676      F9FFFF
 5677 1d2e 488B10   		movq	(%rax), %rdx
 5678 1d31 488B85D0 		movq	-1584(%rbp), %rax
 5678      F9FFFF
 5679 1d38 488B7008 		movq	8(%rax), %rsi
 5680 1d3c 488D85F0 		leaq	-1552(%rbp), %rax
 5680      F9FFFF
 5681 1d43 4589E0   		movl	%r12d, %r8d
 5682 1d46 4889C7   		movq	%rax, %rdi
 5683 1d49 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 5683      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5684              		.loc 8 29 0 is_stmt 1
 5685 1d4e E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5685      00
  30:../ExecuteTest.h **** 	}
 5686              		.loc 8 30 0
 5687 1d53 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5688              		.loc 8 29 0
 5689 1d56 488D8DF0 		leaq	-1552(%rbp), %rcx
 5689      F9FFFF
 5690 1d5d 4889DA   		movq	%rbx, %rdx
 5691 1d60 4889CE   		movq	%rcx, %rsi
 5692 1d63 4889C7   		movq	%rax, %rdi
 5693 1d66 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5693      00
 5694              	.LEHE133:
  27:../ExecuteTest.h **** 	{
 5695              		.loc 8 27 0
 5696 1d6b E8000000 		call	__cxa_end_catch
 5696      00
 5697              	.LBE134:
 5698              	.LBE136:
 5699              		.loc 8 42 0
 5700 1d70 E9CE0000 		jmp	.L309
 5700      00
 5701              	.L294:
 5702              	.LBB137:
 5703              	.LBB135:
  32:../ExecuteTest.h **** 	{
 5704              		.loc 8 32 0
 5705 1d75 4889C7   		movq	%rax, %rdi
 5706 1d78 E8000000 		call	__cxa_begin_catch
 5706      00
 5707 1d7d 488985E8 		movq	%rax, -1560(%rbp)
 5707      F9FFFF
 5708              	.LBB133:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 5709              		.loc 8 34 0
 5710 1d84 488D8510 		leaq	-1520(%rbp), %rax
 5710      FAFFFF
 5711 1d8b 4889C7   		movq	%rax, %rdi
 5712              	.LEHB134:
 5713 1d8e E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 5713      00
 5714              	.LEHE134:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 5715              		.loc 8 35 0
 5716 1d93 488B85E8 		movq	-1560(%rbp), %rax
 5716      F9FFFF
 5717 1d9a 488B00   		movq	(%rax), %rax
 5718 1d9d 4883C010 		addq	$16, %rax
 5719 1da1 488B00   		movq	(%rax), %rax
 5720 1da4 488B95E8 		movq	-1560(%rbp), %rdx
 5720      F9FFFF
 5721 1dab 4889D7   		movq	%rdx, %rdi
 5722 1dae FFD0     		call	*%rax
 5723 1db0 4889C3   		movq	%rax, %rbx
 5724 1db3 488D8510 		leaq	-1520(%rbp), %rax
 5724      FAFFFF
 5725 1dba BE000000 		movl	$.LC45, %esi
 5725      00
 5726 1dbf 4889C7   		movq	%rax, %rdi
 5727              	.LEHB135:
 5728 1dc2 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5728      00
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 5729              		.loc 8 35 0 is_stmt 0 discriminator 1
 5730 1dc7 4889DE   		movq	%rbx, %rsi
 5731 1dca 4889C7   		movq	%rax, %rdi
 5732 1dcd E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5732      00
  36:../ExecuteTest.h **** 	}
 5733              		.loc 8 36 0 is_stmt 1
 5734 1dd2 488D8510 		leaq	-1520(%rbp), %rax
 5734      FAFFFF
 5735 1dd9 4889C7   		movq	%rax, %rdi
 5736 1ddc E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 5736      00
 5737 1de1 4889C3   		movq	%rax, %rbx
 5738 1de4 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5738      00
  36:../ExecuteTest.h **** 	}
 5739              		.loc 8 36 0 is_stmt 0 discriminator 2
 5740 1de9 488B00   		movq	(%rax), %rax
 5741 1dec 488B8DD0 		movq	-1584(%rbp), %rcx
 5741      F9FFFF
 5742 1df3 4889DA   		movq	%rbx, %rdx
 5743 1df6 4889CE   		movq	%rcx, %rsi
 5744 1df9 4889C7   		movq	%rax, %rdi
 5745 1dfc E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5745      00
 5746              	.LEHE135:
  36:../ExecuteTest.h **** 	}
 5747              		.loc 8 36 0 discriminator 6
 5748 1e01 488D8510 		leaq	-1520(%rbp), %rax
 5748      FAFFFF
 5749 1e08 4889C7   		movq	%rax, %rdi
 5750              	.LEHB136:
 5751 1e0b E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5751      00
 5752              	.LEHE136:
 5753              	.LBE133:
  32:../ExecuteTest.h **** 	{
 5754              		.loc 8 32 0 is_stmt 1
 5755 1e10 E8000000 		call	__cxa_end_catch
 5755      00
 5756              	.LBE135:
 5757              	.LBE137:
 5758              		.loc 8 42 0
 5759 1e15 EB2C     		jmp	.L309
 5760              	.L308:
 5761              	.LBB138:
  38:../ExecuteTest.h **** 	{
 5762              		.loc 8 38 0
 5763 1e17 4889C7   		movq	%rax, %rdi
 5764 1e1a E8000000 		call	__cxa_begin_catch
 5764      00
 5765              	.LEHB137:
  40:../ExecuteTest.h **** 	}
 5766              		.loc 8 40 0
 5767 1e1f E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5767      00
 5768 1e24 488B00   		movq	(%rax), %rax
 5769 1e27 488B8DD0 		movq	-1584(%rbp), %rcx
 5769      F9FFFF
 5770 1e2e BA000000 		movl	$.LC62, %edx
 5770      00
 5771 1e33 4889CE   		movq	%rcx, %rsi
 5772 1e36 4889C7   		movq	%rax, %rdi
 5773 1e39 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5773      00
 5774              	.LEHE137:
 5775              	.LEHB138:
  38:../ExecuteTest.h **** 	{
 5776              		.loc 8 38 0
 5777 1e3e E8000000 		call	__cxa_end_catch
 5777      00
 5778              	.LEHE138:
 5779              	.L309:
 5780              	.LBE138:
 5781              		.loc 8 42 0
 5782 1e43 90       		nop
 5783 1e44 488B45E8 		movq	-24(%rbp), %rax
 5784 1e48 64483304 		xorq	%fs:40, %rax
 5784      25280000 
 5784      00
 5785 1e51 7405     		je	.L300
 5786 1e53 E8000000 		call	__stack_chk_fail
 5786      00
 5787              	.L300:
 5788 1e58 4881C420 		addq	$1568, %rsp
 5788      060000
 5789 1e5f 5B       		popq	%rbx
 5790 1e60 415C     		popq	%r12
 5791 1e62 5D       		popq	%rbp
 5792              		.cfi_def_cfa 7, 8
 5793 1e63 C3       		ret
 5794              		.cfi_endproc
 5795              	.LFE1477:
 5796              		.section	.gcc_except_table
 5797              		.align 4
 5798              	.LLSDA1477:
 5799 037c FF       		.byte	0xff
 5800 037d 03       		.byte	0x3
 5801 037e 5D       		.uleb128 .LLSDATT1477-.LLSDATTD1477
 5802              	.LLSDATTD1477:
 5803 037f 01       		.byte	0x1
 5804 0380 47       		.uleb128 .LLSDACSE1477-.LLSDACSB1477
 5805              	.LLSDACSB1477:
 5806 0381 2B       		.uleb128 .LEHB126-.LFB1477
 5807 0382 05       		.uleb128 .LEHE126-.LEHB126
 5808 0383 00       		.uleb128 0
 5809 0384 00       		.uleb128 0
 5810 0385 47       		.uleb128 .LEHB127-.LFB1477
 5811 0386 05       		.uleb128 .LEHE127-.LEHB127
 5812 0387 CC01     		.uleb128 .L301-.LFB1477
 5813 0389 05       		.uleb128 0x5
 5814 038a 8701     		.uleb128 .LEHB128-.LFB1477
 5815 038c 14       		.uleb128 .LEHE128-.LEHB128
 5816 038d AF01     		.uleb128 .L302-.LFB1477
 5817 038f 07       		.uleb128 0x7
 5818 0390 A501     		.uleb128 .LEHB129-.LFB1477
 5819 0392 05       		.uleb128 .LEHE129-.LEHB129
 5820 0393 CC01     		.uleb128 .L301-.LFB1477
 5821 0395 05       		.uleb128 0x5
 5822 0396 EF01     		.uleb128 .LEHB130-.LFB1477
 5823 0398 05       		.uleb128 .LEHE130-.LEHB130
 5824 0399 00       		.uleb128 0
 5825 039a 00       		.uleb128 0
 5826 039b 9602     		.uleb128 .LEHB131-.LFB1477
 5827 039d 05       		.uleb128 .LEHE131-.LEHB131
 5828 039e 00       		.uleb128 0
 5829 039f 00       		.uleb128 0
 5830 03a0 A902     		.uleb128 .LEHB132-.LFB1477
 5831 03a2 05       		.uleb128 .LEHE132-.LEHB132
 5832 03a3 00       		.uleb128 0
 5833 03a4 00       		.uleb128 0
 5834 03a5 E702     		.uleb128 .LEHB133-.LFB1477
 5835 03a7 5E       		.uleb128 .LEHE133-.LEHB133
 5836 03a8 E101     		.uleb128 .L303-.LFB1477
 5837 03aa 00       		.uleb128 0
 5838 03ab E803     		.uleb128 .LEHB134-.LFB1477
 5839 03ad 05       		.uleb128 .LEHE134-.LEHB134
 5840 03ae 8802     		.uleb128 .L305-.LFB1477
 5841 03b0 00       		.uleb128 0
 5842 03b1 9C04     		.uleb128 .LEHB135-.LFB1477
 5843 03b3 3F       		.uleb128 .LEHE135-.LEHB135
 5844 03b4 F401     		.uleb128 .L304-.LFB1477
 5845 03b6 00       		.uleb128 0
 5846 03b7 E504     		.uleb128 .LEHB136-.LFB1477
 5847 03b9 05       		.uleb128 .LEHE136-.LEHB136
 5848 03ba 8802     		.uleb128 .L305-.LFB1477
 5849 03bc 00       		.uleb128 0
 5850 03bd F904     		.uleb128 .LEHB137-.LFB1477
 5851 03bf 1F       		.uleb128 .LEHE137-.LEHB137
 5852 03c0 9B02     		.uleb128 .L306-.LFB1477
 5853 03c2 00       		.uleb128 0
 5854 03c3 9805     		.uleb128 .LEHB138-.LFB1477
 5855 03c5 05       		.uleb128 .LEHE138-.LEHB138
 5856 03c6 00       		.uleb128 0
 5857 03c7 00       		.uleb128 0
 5858              	.LLSDACSE1477:
 5859 03c8 03       		.byte	0x3
 5860 03c9 00       		.byte	0
 5861 03ca 02       		.byte	0x2
 5862 03cb 7D       		.byte	0x7d
 5863 03cc 01       		.byte	0x1
 5864 03cd 7D       		.byte	0x7d
 5865 03ce 00       		.byte	0
 5866 03cf 7D       		.byte	0x7d
 5867              		.align 4
 5868 03d0 00000000 		.long	0
 5869              	
 5870 03d4 00000000 		.long	_ZTISt9exception
 5871 03d8 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 5872              	.LLSDATT1477:
 5873              		.text
 5876              	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelperEEEvRT_RKNS
 5877              	.LFB1479:
  16:../ExecuteTest.h **** {
 5878              		.loc 8 16 0
 5879              		.cfi_startproc
 5880              		.cfi_personality 0x3,__gxx_personality_v0
 5881              		.cfi_lsda 0x3,.LLSDA1479
 5882 1e64 55       		pushq	%rbp
 5883              		.cfi_def_cfa_offset 16
 5884              		.cfi_offset 6, -16
 5885 1e65 4889E5   		movq	%rsp, %rbp
 5886              		.cfi_def_cfa_register 6
 5887 1e68 4154     		pushq	%r12
 5888 1e6a 53       		pushq	%rbx
 5889 1e6b 4881EC20 		subq	$1568, %rsp
 5889      060000
 5890              		.cfi_offset 12, -24
 5891              		.cfi_offset 3, -32
 5892 1e72 4889BDD8 		movq	%rdi, -1576(%rbp)
 5892      F9FFFF
 5893 1e79 4889B5D0 		movq	%rsi, -1584(%rbp)
 5893      F9FFFF
  16:../ExecuteTest.h **** {
 5894              		.loc 8 16 0
 5895 1e80 64488B04 		movq	%fs:40, %rax
 5895      25280000 
 5895      00
 5896 1e89 488945E8 		movq	%rax, -24(%rbp)
 5897 1e8d 31C0     		xorl	%eax, %eax
 5898              	.LEHB139:
 5899              	.LBB139:
  18:../ExecuteTest.h **** 
 5900              		.loc 8 18 0
 5901 1e8f E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 5901      00
 5902              	.LEHE139:
 5903 1e94 4889C2   		movq	%rax, %rdx
 5904 1e97 488B85D0 		movq	-1584(%rbp), %rax
 5904      F9FFFF
 5905 1e9e 488902   		movq	%rax, (%rdx)
 5906              	.LBB140:
  23:../ExecuteTest.h **** #endif
 5907              		.loc 8 23 0
 5908 1ea1 488D8580 		leaq	-1152(%rbp), %rax
 5908      FBFFFF
 5909 1ea8 4889C7   		movq	%rax, %rdi
 5910              	.LEHB140:
 5911 1eab E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev
 5911      00
 5912              	.LEHE140:
  23:../ExecuteTest.h **** #endif
 5913              		.loc 8 23 0 is_stmt 0 discriminator 1
 5914 1eb0 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 5914      000000
 5915 1eb7 BE010000 		movl	$1, %esi
 5915      00
 5916 1ebc 4889C7   		movq	%rax, %rdi
 5917 1ebf E8000000 		call	__sigsetjmp
 5917      00
 5918 1ec4 85C0     		testl	%eax, %eax
 5919 1ec6 0F95C0   		setne	%al
 5920 1ec9 84C0     		testb	%al, %al
 5921 1ecb 7423     		je	.L330
  23:../ExecuteTest.h **** #endif
 5922              		.loc 8 23 0 discriminator 3
 5923 1ecd BF080000 		movl	$8, %edi
 5923      00
 5924 1ed2 E8000000 		call	__cxa_allocate_exception
 5924      00
 5925 1ed7 48C70000 		movq	$.LC61, (%rax)
 5925      000000
 5926 1ede BA000000 		movl	$0, %edx
 5926      00
 5927 1ee3 BE000000 		movl	$_ZTIPKc, %esi
 5927      00
 5928 1ee8 4889C7   		movq	%rax, %rdi
 5929              	.LEHB141:
 5930 1eeb E8000000 		call	__cxa_throw
 5930      00
 5931              	.L330:
  25:../ExecuteTest.h **** 	}
 5932              		.loc 8 25 0 is_stmt 1
 5933 1ef0 488B85D8 		movq	-1576(%rbp), %rax
 5933      F9FFFF
 5934 1ef7 4889C7   		movq	%rax, %rdi
 5935 1efa E89BFAFF 		call	_ZN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelper7RunImplEv
 5935      FF
 5936              	.LEHE141:
  25:../ExecuteTest.h **** 	}
 5937              		.loc 8 25 0 is_stmt 0 discriminator 2
 5938 1eff 488D8580 		leaq	-1152(%rbp), %rax
 5938      FBFFFF
 5939 1f06 4889C7   		movq	%rax, %rdi
 5940              	.LEHB142:
 5941 1f09 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 5941      00
 5942              	.LEHE142:
 5943              	.LBE140:
 5944              	.LBE139:
 5945              		.loc 8 42 0 is_stmt 1
 5946 1f0e E9EE0100 		jmp	.L332
 5946      00
 5947              	.L325:
 5948 1f13 4989C4   		movq	%rax, %r12
 5949 1f16 4889D3   		movq	%rdx, %rbx
 5950              	.LBB148:
 5951              	.LBB141:
  25:../ExecuteTest.h **** 	}
 5952              		.loc 8 25 0
 5953 1f19 488D8580 		leaq	-1152(%rbp), %rax
 5953      FBFFFF
 5954 1f20 4889C7   		movq	%rax, %rdi
 5955 1f23 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 5955      00
 5956 1f28 4C89E0   		movq	%r12, %rax
 5957 1f2b 4889DA   		movq	%rbx, %rdx
 5958 1f2e EB00     		jmp	.L314
 5959              	.L324:
 5960              	.L314:
 5961 1f30 4883FA01 		cmpq	$1, %rdx
 5962 1f34 745C     		je	.L316
 5963 1f36 4883FA02 		cmpq	$2, %rdx
 5964 1f3a 0F84F300 		je	.L317
 5964      0000
 5965 1f40 E9900100 		jmp	.L331
 5965      00
 5966              	.L326:
 5967 1f45 4889C3   		movq	%rax, %rbx
 5968              	.LBE141:
 5969              	.LBB142:
  27:../ExecuteTest.h **** 	{
 5970              		.loc 8 27 0
 5971 1f48 E8000000 		call	__cxa_end_catch
 5971      00
 5972 1f4d 4889D8   		movq	%rbx, %rax
 5973 1f50 4889C7   		movq	%rax, %rdi
 5974              	.LEHB143:
 5975 1f53 E8000000 		call	_Unwind_Resume
 5975      00
 5976              	.LEHE143:
 5977              	.L327:
 5978 1f58 4889C3   		movq	%rax, %rbx
 5979              	.LBE142:
 5980              	.LBB143:
 5981              	.LBB144:
  36:../ExecuteTest.h **** 	}
 5982              		.loc 8 36 0
 5983 1f5b 488D8510 		leaq	-1520(%rbp), %rax
 5983      FAFFFF
 5984 1f62 4889C7   		movq	%rax, %rdi
 5985 1f65 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5985      00
 5986 1f6a EB03     		jmp	.L320
 5987              	.L328:
 5988 1f6c 4889C3   		movq	%rax, %rbx
 5989              	.L320:
 5990              	.LBE144:
  32:../ExecuteTest.h **** 	{
 5991              		.loc 8 32 0
 5992 1f6f E8000000 		call	__cxa_end_catch
 5992      00
 5993 1f74 4889D8   		movq	%rbx, %rax
 5994 1f77 4889C7   		movq	%rax, %rdi
 5995              	.LEHB144:
 5996 1f7a E8000000 		call	_Unwind_Resume
 5996      00
 5997              	.LEHE144:
 5998              	.L329:
 5999 1f7f 4889C3   		movq	%rax, %rbx
 6000              	.LBE143:
  38:../ExecuteTest.h **** 	{
 6001              		.loc 8 38 0
 6002 1f82 E8000000 		call	__cxa_end_catch
 6002      00
 6003 1f87 4889D8   		movq	%rbx, %rax
 6004 1f8a 4889C7   		movq	%rax, %rdi
 6005              	.LEHB145:
 6006 1f8d E8000000 		call	_Unwind_Resume
 6006      00
 6007              	.LEHE145:
 6008              	.L316:
 6009              	.LBB146:
  27:../ExecuteTest.h **** 	{
 6010              		.loc 8 27 0
 6011 1f92 4889C7   		movq	%rax, %rdi
 6012 1f95 E8000000 		call	__cxa_begin_catch
 6012      00
 6013 1f9a 488985E0 		movq	%rax, -1568(%rbp)
 6013      F9FFFF
  30:../ExecuteTest.h **** 	}
 6014              		.loc 8 30 0
 6015 1fa1 488B85E0 		movq	-1568(%rbp), %rax
 6015      F9FFFF
 6016 1fa8 488B00   		movq	(%rax), %rax
 6017 1fab 4883C010 		addq	$16, %rax
 6018 1faf 488B00   		movq	(%rax), %rax
 6019 1fb2 488B95E0 		movq	-1568(%rbp), %rdx
 6019      F9FFFF
 6020 1fb9 4889D7   		movq	%rdx, %rdi
 6021 1fbc FFD0     		call	*%rax
 6022 1fbe 4889C3   		movq	%rax, %rbx
 6023 1fc1 488B85E0 		movq	-1568(%rbp), %rax
 6023      F9FFFF
 6024 1fc8 4889C7   		movq	%rax, %rdi
 6025              	.LEHB146:
 6026 1fcb E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 6026      00
  30:../ExecuteTest.h **** 	}
 6027              		.loc 8 30 0 is_stmt 0 discriminator 1
 6028 1fd0 4189C4   		movl	%eax, %r12d
 6029 1fd3 488B85E0 		movq	-1568(%rbp), %rax
 6029      F9FFFF
 6030 1fda 4889C7   		movq	%rax, %rdi
 6031 1fdd E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 6031      00
  30:../ExecuteTest.h **** 	}
 6032              		.loc 8 30 0 discriminator 2
 6033 1fe2 4889C1   		movq	%rax, %rcx
 6034 1fe5 488B85D0 		movq	-1584(%rbp), %rax
 6034      F9FFFF
 6035 1fec 488B10   		movq	(%rax), %rdx
 6036 1fef 488B85D0 		movq	-1584(%rbp), %rax
 6036      F9FFFF
 6037 1ff6 488B7008 		movq	8(%rax), %rsi
 6038 1ffa 488D85F0 		leaq	-1552(%rbp), %rax
 6038      F9FFFF
 6039 2001 4589E0   		movl	%r12d, %r8d
 6040 2004 4889C7   		movq	%rax, %rdi
 6041 2007 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 6041      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6042              		.loc 8 29 0 is_stmt 1
 6043 200c E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6043      00
  30:../ExecuteTest.h **** 	}
 6044              		.loc 8 30 0
 6045 2011 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6046              		.loc 8 29 0
 6047 2014 488D8DF0 		leaq	-1552(%rbp), %rcx
 6047      F9FFFF
 6048 201b 4889DA   		movq	%rbx, %rdx
 6049 201e 4889CE   		movq	%rcx, %rsi
 6050 2021 4889C7   		movq	%rax, %rdi
 6051 2024 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6051      00
 6052              	.LEHE146:
  27:../ExecuteTest.h **** 	{
 6053              		.loc 8 27 0
 6054 2029 E8000000 		call	__cxa_end_catch
 6054      00
 6055              	.LBE146:
 6056              	.LBE148:
 6057              		.loc 8 42 0
 6058 202e E9CE0000 		jmp	.L332
 6058      00
 6059              	.L317:
 6060              	.LBB149:
 6061              	.LBB147:
  32:../ExecuteTest.h **** 	{
 6062              		.loc 8 32 0
 6063 2033 4889C7   		movq	%rax, %rdi
 6064 2036 E8000000 		call	__cxa_begin_catch
 6064      00
 6065 203b 488985E8 		movq	%rax, -1560(%rbp)
 6065      F9FFFF
 6066              	.LBB145:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6067              		.loc 8 34 0
 6068 2042 488D8510 		leaq	-1520(%rbp), %rax
 6068      FAFFFF
 6069 2049 4889C7   		movq	%rax, %rdi
 6070              	.LEHB147:
 6071 204c E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 6071      00
 6072              	.LEHE147:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 6073              		.loc 8 35 0
 6074 2051 488B85E8 		movq	-1560(%rbp), %rax
 6074      F9FFFF
 6075 2058 488B00   		movq	(%rax), %rax
 6076 205b 4883C010 		addq	$16, %rax
 6077 205f 488B00   		movq	(%rax), %rax
 6078 2062 488B95E8 		movq	-1560(%rbp), %rdx
 6078      F9FFFF
 6079 2069 4889D7   		movq	%rdx, %rdi
 6080 206c FFD0     		call	*%rax
 6081 206e 4889C3   		movq	%rax, %rbx
 6082 2071 488D8510 		leaq	-1520(%rbp), %rax
 6082      FAFFFF
 6083 2078 BE000000 		movl	$.LC45, %esi
 6083      00
 6084 207d 4889C7   		movq	%rax, %rdi
 6085              	.LEHB148:
 6086 2080 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6086      00
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 6087              		.loc 8 35 0 is_stmt 0 discriminator 1
 6088 2085 4889DE   		movq	%rbx, %rsi
 6089 2088 4889C7   		movq	%rax, %rdi
 6090 208b E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6090      00
  36:../ExecuteTest.h **** 	}
 6091              		.loc 8 36 0 is_stmt 1
 6092 2090 488D8510 		leaq	-1520(%rbp), %rax
 6092      FAFFFF
 6093 2097 4889C7   		movq	%rax, %rdi
 6094 209a E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 6094      00
 6095 209f 4889C3   		movq	%rax, %rbx
 6096 20a2 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6096      00
  36:../ExecuteTest.h **** 	}
 6097              		.loc 8 36 0 is_stmt 0 discriminator 2
 6098 20a7 488B00   		movq	(%rax), %rax
 6099 20aa 488B8DD0 		movq	-1584(%rbp), %rcx
 6099      F9FFFF
 6100 20b1 4889DA   		movq	%rbx, %rdx
 6101 20b4 4889CE   		movq	%rcx, %rsi
 6102 20b7 4889C7   		movq	%rax, %rdi
 6103 20ba E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6103      00
 6104              	.LEHE148:
  36:../ExecuteTest.h **** 	}
 6105              		.loc 8 36 0 discriminator 6
 6106 20bf 488D8510 		leaq	-1520(%rbp), %rax
 6106      FAFFFF
 6107 20c6 4889C7   		movq	%rax, %rdi
 6108              	.LEHB149:
 6109 20c9 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6109      00
 6110              	.LEHE149:
 6111              	.LBE145:
  32:../ExecuteTest.h **** 	{
 6112              		.loc 8 32 0 is_stmt 1
 6113 20ce E8000000 		call	__cxa_end_catch
 6113      00
 6114              	.LBE147:
 6115              	.LBE149:
 6116              		.loc 8 42 0
 6117 20d3 EB2C     		jmp	.L332
 6118              	.L331:
 6119              	.LBB150:
  38:../ExecuteTest.h **** 	{
 6120              		.loc 8 38 0
 6121 20d5 4889C7   		movq	%rax, %rdi
 6122 20d8 E8000000 		call	__cxa_begin_catch
 6122      00
 6123              	.LEHB150:
  40:../ExecuteTest.h **** 	}
 6124              		.loc 8 40 0
 6125 20dd E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6125      00
 6126 20e2 488B00   		movq	(%rax), %rax
 6127 20e5 488B8DD0 		movq	-1584(%rbp), %rcx
 6127      F9FFFF
 6128 20ec BA000000 		movl	$.LC62, %edx
 6128      00
 6129 20f1 4889CE   		movq	%rcx, %rsi
 6130 20f4 4889C7   		movq	%rax, %rdi
 6131 20f7 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6131      00
 6132              	.LEHE150:
 6133              	.LEHB151:
  38:../ExecuteTest.h **** 	{
 6134              		.loc 8 38 0
 6135 20fc E8000000 		call	__cxa_end_catch
 6135      00
 6136              	.LEHE151:
 6137              	.L332:
 6138              	.LBE150:
 6139              		.loc 8 42 0
 6140 2101 90       		nop
 6141 2102 488B45E8 		movq	-24(%rbp), %rax
 6142 2106 64483304 		xorq	%fs:40, %rax
 6142      25280000 
 6142      00
 6143 210f 7405     		je	.L323
 6144 2111 E8000000 		call	__stack_chk_fail
 6144      00
 6145              	.L323:
 6146 2116 4881C420 		addq	$1568, %rsp
 6146      060000
 6147 211d 5B       		popq	%rbx
 6148 211e 415C     		popq	%r12
 6149 2120 5D       		popq	%rbp
 6150              		.cfi_def_cfa 7, 8
 6151 2121 C3       		ret
 6152              		.cfi_endproc
 6153              	.LFE1479:
 6154              		.section	.gcc_except_table
 6155              		.align 4
 6156              	.LLSDA1479:
 6157 03dc FF       		.byte	0xff
 6158 03dd 03       		.byte	0x3
 6159 03de 5D       		.uleb128 .LLSDATT1479-.LLSDATTD1479
 6160              	.LLSDATTD1479:
 6161 03df 01       		.byte	0x1
 6162 03e0 47       		.uleb128 .LLSDACSE1479-.LLSDACSB1479
 6163              	.LLSDACSB1479:
 6164 03e1 2B       		.uleb128 .LEHB139-.LFB1479
 6165 03e2 05       		.uleb128 .LEHE139-.LEHB139
 6166 03e3 00       		.uleb128 0
 6167 03e4 00       		.uleb128 0
 6168 03e5 47       		.uleb128 .LEHB140-.LFB1479
 6169 03e6 05       		.uleb128 .LEHE140-.LEHB140
 6170 03e7 CC01     		.uleb128 .L324-.LFB1479
 6171 03e9 05       		.uleb128 0x5
 6172 03ea 8701     		.uleb128 .LEHB141-.LFB1479
 6173 03ec 14       		.uleb128 .LEHE141-.LEHB141
 6174 03ed AF01     		.uleb128 .L325-.LFB1479
 6175 03ef 07       		.uleb128 0x7
 6176 03f0 A501     		.uleb128 .LEHB142-.LFB1479
 6177 03f2 05       		.uleb128 .LEHE142-.LEHB142
 6178 03f3 CC01     		.uleb128 .L324-.LFB1479
 6179 03f5 05       		.uleb128 0x5
 6180 03f6 EF01     		.uleb128 .LEHB143-.LFB1479
 6181 03f8 05       		.uleb128 .LEHE143-.LEHB143
 6182 03f9 00       		.uleb128 0
 6183 03fa 00       		.uleb128 0
 6184 03fb 9602     		.uleb128 .LEHB144-.LFB1479
 6185 03fd 05       		.uleb128 .LEHE144-.LEHB144
 6186 03fe 00       		.uleb128 0
 6187 03ff 00       		.uleb128 0
 6188 0400 A902     		.uleb128 .LEHB145-.LFB1479
 6189 0402 05       		.uleb128 .LEHE145-.LEHB145
 6190 0403 00       		.uleb128 0
 6191 0404 00       		.uleb128 0
 6192 0405 E702     		.uleb128 .LEHB146-.LFB1479
 6193 0407 5E       		.uleb128 .LEHE146-.LEHB146
 6194 0408 E101     		.uleb128 .L326-.LFB1479
 6195 040a 00       		.uleb128 0
 6196 040b E803     		.uleb128 .LEHB147-.LFB1479
 6197 040d 05       		.uleb128 .LEHE147-.LEHB147
 6198 040e 8802     		.uleb128 .L328-.LFB1479
 6199 0410 00       		.uleb128 0
 6200 0411 9C04     		.uleb128 .LEHB148-.LFB1479
 6201 0413 3F       		.uleb128 .LEHE148-.LEHB148
 6202 0414 F401     		.uleb128 .L327-.LFB1479
 6203 0416 00       		.uleb128 0
 6204 0417 E504     		.uleb128 .LEHB149-.LFB1479
 6205 0419 05       		.uleb128 .LEHE149-.LEHB149
 6206 041a 8802     		.uleb128 .L328-.LFB1479
 6207 041c 00       		.uleb128 0
 6208 041d F904     		.uleb128 .LEHB150-.LFB1479
 6209 041f 1F       		.uleb128 .LEHE150-.LEHB150
 6210 0420 9B02     		.uleb128 .L329-.LFB1479
 6211 0422 00       		.uleb128 0
 6212 0423 9805     		.uleb128 .LEHB151-.LFB1479
 6213 0425 05       		.uleb128 .LEHE151-.LEHB151
 6214 0426 00       		.uleb128 0
 6215 0427 00       		.uleb128 0
 6216              	.LLSDACSE1479:
 6217 0428 03       		.byte	0x3
 6218 0429 00       		.byte	0
 6219 042a 02       		.byte	0x2
 6220 042b 7D       		.byte	0x7d
 6221 042c 01       		.byte	0x1
 6222 042d 7D       		.byte	0x7d
 6223 042e 00       		.byte	0
 6224 042f 7D       		.byte	0x7d
 6225              		.align 4
 6226 0430 00000000 		.long	0
 6227              	
 6228 0434 00000000 		.long	_ZTISt9exception
 6229 0438 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 6230              	.LLSDATT1479:
 6231              		.text
 6233              		.section	.text._ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_,"axG",@progbits,_ZN8UnitTest8AreCloseIff
 6234              		.weak	_ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_
 6236              	_ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_:
 6237              	.LFB1511:
  39:../Checks.h   **** {
 6238              		.loc 5 39 0
 6239              		.cfi_startproc
 6240 0000 55       		pushq	%rbp
 6241              		.cfi_def_cfa_offset 16
 6242              		.cfi_offset 6, -16
 6243 0001 4889E5   		movq	%rsp, %rbp
 6244              		.cfi_def_cfa_register 6
 6245 0004 48897DF8 		movq	%rdi, -8(%rbp)
 6246 0008 488975F0 		movq	%rsi, -16(%rbp)
 6247 000c 488955E8 		movq	%rdx, -24(%rbp)
  41:../Checks.h   **** }
 6248              		.loc 5 41 0
 6249 0010 488B45F0 		movq	-16(%rbp), %rax
 6250 0014 F30F1008 		movss	(%rax), %xmm1
 6251 0018 488B45F8 		movq	-8(%rbp), %rax
 6252 001c F30F1000 		movss	(%rax), %xmm0
 6253 0020 488B45E8 		movq	-24(%rbp), %rax
 6254 0024 F30F1010 		movss	(%rax), %xmm2
 6255 0028 F30F5CC2 		subss	%xmm2, %xmm0
 6256 002c 0F2EC8   		ucomiss	%xmm0, %xmm1
 6257 002f 7228     		jb	.L334
  41:../Checks.h   **** }
 6258              		.loc 5 41 0 is_stmt 0 discriminator 1
 6259 0031 488B45F0 		movq	-16(%rbp), %rax
 6260 0035 F30F1008 		movss	(%rax), %xmm1
 6261 0039 488B45F8 		movq	-8(%rbp), %rax
 6262 003d F30F1010 		movss	(%rax), %xmm2
 6263 0041 488B45E8 		movq	-24(%rbp), %rax
 6264 0045 F30F1000 		movss	(%rax), %xmm0
 6265 0049 F30F58C2 		addss	%xmm2, %xmm0
 6266 004d 0F2EC1   		ucomiss	%xmm1, %xmm0
 6267 0050 7207     		jb	.L334
  41:../Checks.h   **** }
 6268              		.loc 5 41 0 discriminator 3
 6269 0052 B8010000 		movl	$1, %eax
 6269      00
 6270 0057 EB05     		jmp	.L338
 6271              	.L334:
  41:../Checks.h   **** }
 6272              		.loc 5 41 0 discriminator 4
 6273 0059 B8000000 		movl	$0, %eax
 6273      00
 6274              	.L338:
  42:../Checks.h   **** 
 6275              		.loc 5 42 0 is_stmt 1 discriminator 7
 6276 005e 5D       		popq	%rbp
 6277              		.cfi_def_cfa 7, 8
 6278 005f C3       		ret
 6279              		.cfi_endproc
 6280              	.LFE1511:
 6282              		.section	.text._ZN8UnitTest13ArrayAreCloseIA3_fS1_fEEbRKT_RKT0_iRKT1_,"axG",@progbits,_ZN8UnitTest
 6283              		.weak	_ZN8UnitTest13ArrayAreCloseIA3_fS1_fEEbRKT_RKT0_iRKT1_
 6285              	_ZN8UnitTest13ArrayAreCloseIA3_fS1_fEEbRKT_RKT0_iRKT1_:
 6286              	.LFB1513:
  87:../Checks.h   **** {
 6287              		.loc 5 87 0
 6288              		.cfi_startproc
 6289 0000 55       		pushq	%rbp
 6290              		.cfi_def_cfa_offset 16
 6291              		.cfi_offset 6, -16
 6292 0001 4889E5   		movq	%rsp, %rbp
 6293              		.cfi_def_cfa_register 6
 6294 0004 4883EC30 		subq	$48, %rsp
 6295 0008 48897DE8 		movq	%rdi, -24(%rbp)
 6296 000c 488975E0 		movq	%rsi, -32(%rbp)
 6297 0010 8955DC   		movl	%edx, -36(%rbp)
 6298 0013 48894DD0 		movq	%rcx, -48(%rbp)
 6299              	.LBB151:
  89:../Checks.h   ****     for (int i = 0; i < count; ++i)
 6300              		.loc 5 89 0
 6301 0017 C645FB01 		movb	$1, -5(%rbp)
 6302              	.LBB152:
  90:../Checks.h   ****         equal &= AreClose(expected[i], actual[i], tolerance);
 6303              		.loc 5 90 0
 6304 001b C745FC00 		movl	$0, -4(%rbp)
 6304      000000
 6305 0022 EB4E     		jmp	.L342
 6306              	.L343:
  91:../Checks.h   ****     return equal;
 6307              		.loc 5 91 0 discriminator 3
 6308 0024 8B45FC   		movl	-4(%rbp), %eax
 6309 0027 4898     		cltq
 6310 0029 488D1485 		leaq	0(,%rax,4), %rdx
 6310      00000000 
 6311 0031 488B45E0 		movq	-32(%rbp), %rax
 6312 0035 488D3402 		leaq	(%rdx,%rax), %rsi
 6313 0039 8B45FC   		movl	-4(%rbp), %eax
 6314 003c 4898     		cltq
 6315 003e 488D1485 		leaq	0(,%rax,4), %rdx
 6315      00000000 
 6316 0046 488B45E8 		movq	-24(%rbp), %rax
 6317 004a 488D0C02 		leaq	(%rdx,%rax), %rcx
 6318 004e 488B45D0 		movq	-48(%rbp), %rax
 6319 0052 4889C2   		movq	%rax, %rdx
 6320 0055 4889CF   		movq	%rcx, %rdi
 6321 0058 E8000000 		call	_ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_
 6321      00
 6322 005d 0FB655FB 		movzbl	-5(%rbp), %edx
 6323 0061 0FB6C0   		movzbl	%al, %eax
 6324 0064 21D0     		andl	%edx, %eax
 6325 0066 85C0     		testl	%eax, %eax
 6326 0068 0F95C0   		setne	%al
 6327 006b 8845FB   		movb	%al, -5(%rbp)
  90:../Checks.h   ****         equal &= AreClose(expected[i], actual[i], tolerance);
 6328              		.loc 5 90 0 discriminator 3
 6329 006e 8345FC01 		addl	$1, -4(%rbp)
 6330              	.L342:
  90:../Checks.h   ****         equal &= AreClose(expected[i], actual[i], tolerance);
 6331              		.loc 5 90 0 is_stmt 0 discriminator 1
 6332 0072 8B45FC   		movl	-4(%rbp), %eax
 6333 0075 3B45DC   		cmpl	-36(%rbp), %eax
 6334 0078 7CAA     		jl	.L343
 6335              	.LBE152:
  92:../Checks.h   **** }
 6336              		.loc 5 92 0 is_stmt 1
 6337 007a 0FB645FB 		movzbl	-5(%rbp), %eax
 6338              	.LBE151:
  93:../Checks.h   **** 
 6339              		.loc 5 93 0
 6340 007e C9       		leave
 6341              		.cfi_def_cfa 7, 8
 6342 007f C3       		ret
 6343              		.cfi_endproc
 6344              	.LFE1513:
 6346              		.section	.text._ZN9__gnu_cxx13new_allocatorIfEC2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIfE
 6347              		.align 2
 6348              		.weak	_ZN9__gnu_cxx13new_allocatorIfEC2Ev
 6350              	_ZN9__gnu_cxx13new_allocatorIfEC2Ev:
 6351              	.LFB1515:
 6352              		.file 9 "/usr/include/c++/4.9/ext/new_allocator.h"
   1:/usr/include/c++/4.9/ext/new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:/usr/include/c++/4.9/ext/new_allocator.h **** 
   3:/usr/include/c++/4.9/ext/new_allocator.h **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   4:/usr/include/c++/4.9/ext/new_allocator.h **** //
   5:/usr/include/c++/4.9/ext/new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/4.9/ext/new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/4.9/ext/new_allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/4.9/ext/new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/4.9/ext/new_allocator.h **** // any later version.
  10:/usr/include/c++/4.9/ext/new_allocator.h **** 
  11:/usr/include/c++/4.9/ext/new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/4.9/ext/new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/4.9/ext/new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/4.9/ext/new_allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/4.9/ext/new_allocator.h **** 
  16:/usr/include/c++/4.9/ext/new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/4.9/ext/new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/4.9/ext/new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/4.9/ext/new_allocator.h **** 
  20:/usr/include/c++/4.9/ext/new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/4.9/ext/new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/4.9/ext/new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/4.9/ext/new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/4.9/ext/new_allocator.h **** 
  25:/usr/include/c++/4.9/ext/new_allocator.h **** /** @file ext/new_allocator.h
  26:/usr/include/c++/4.9/ext/new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/usr/include/c++/4.9/ext/new_allocator.h ****  */
  28:/usr/include/c++/4.9/ext/new_allocator.h **** 
  29:/usr/include/c++/4.9/ext/new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:/usr/include/c++/4.9/ext/new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:/usr/include/c++/4.9/ext/new_allocator.h **** 
  32:/usr/include/c++/4.9/ext/new_allocator.h **** #include <bits/c++config.h>
  33:/usr/include/c++/4.9/ext/new_allocator.h **** #include <new>
  34:/usr/include/c++/4.9/ext/new_allocator.h **** #include <bits/functexcept.h>
  35:/usr/include/c++/4.9/ext/new_allocator.h **** #include <bits/move.h>
  36:/usr/include/c++/4.9/ext/new_allocator.h **** #if __cplusplus >= 201103L
  37:/usr/include/c++/4.9/ext/new_allocator.h **** #include <type_traits>
  38:/usr/include/c++/4.9/ext/new_allocator.h **** #endif
  39:/usr/include/c++/4.9/ext/new_allocator.h **** 
  40:/usr/include/c++/4.9/ext/new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:/usr/include/c++/4.9/ext/new_allocator.h **** {
  42:/usr/include/c++/4.9/ext/new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:/usr/include/c++/4.9/ext/new_allocator.h **** 
  44:/usr/include/c++/4.9/ext/new_allocator.h ****   using std::size_t;
  45:/usr/include/c++/4.9/ext/new_allocator.h ****   using std::ptrdiff_t;
  46:/usr/include/c++/4.9/ext/new_allocator.h **** 
  47:/usr/include/c++/4.9/ext/new_allocator.h ****   /**
  48:/usr/include/c++/4.9/ext/new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  49:/usr/include/c++/4.9/ext/new_allocator.h ****    *  @ingroup allocators
  50:/usr/include/c++/4.9/ext/new_allocator.h ****    *
  51:/usr/include/c++/4.9/ext/new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard. 
  52:/usr/include/c++/4.9/ext/new_allocator.h ****    *    - all allocation calls operator new
  53:/usr/include/c++/4.9/ext/new_allocator.h ****    *    - all deallocation calls operator delete
  54:/usr/include/c++/4.9/ext/new_allocator.h ****    *
  55:/usr/include/c++/4.9/ext/new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  56:/usr/include/c++/4.9/ext/new_allocator.h ****    */
  57:/usr/include/c++/4.9/ext/new_allocator.h ****   template<typename _Tp>
  58:/usr/include/c++/4.9/ext/new_allocator.h ****     class new_allocator
  59:/usr/include/c++/4.9/ext/new_allocator.h ****     {
  60:/usr/include/c++/4.9/ext/new_allocator.h ****     public:
  61:/usr/include/c++/4.9/ext/new_allocator.h ****       typedef size_t     size_type;
  62:/usr/include/c++/4.9/ext/new_allocator.h ****       typedef ptrdiff_t  difference_type;
  63:/usr/include/c++/4.9/ext/new_allocator.h ****       typedef _Tp*       pointer;
  64:/usr/include/c++/4.9/ext/new_allocator.h ****       typedef const _Tp* const_pointer;
  65:/usr/include/c++/4.9/ext/new_allocator.h ****       typedef _Tp&       reference;
  66:/usr/include/c++/4.9/ext/new_allocator.h ****       typedef const _Tp& const_reference;
  67:/usr/include/c++/4.9/ext/new_allocator.h ****       typedef _Tp        value_type;
  68:/usr/include/c++/4.9/ext/new_allocator.h **** 
  69:/usr/include/c++/4.9/ext/new_allocator.h ****       template<typename _Tp1>
  70:/usr/include/c++/4.9/ext/new_allocator.h ****         struct rebind
  71:/usr/include/c++/4.9/ext/new_allocator.h ****         { typedef new_allocator<_Tp1> other; };
  72:/usr/include/c++/4.9/ext/new_allocator.h **** 
  73:/usr/include/c++/4.9/ext/new_allocator.h **** #if __cplusplus >= 201103L
  74:/usr/include/c++/4.9/ext/new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  75:/usr/include/c++/4.9/ext/new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  76:/usr/include/c++/4.9/ext/new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  77:/usr/include/c++/4.9/ext/new_allocator.h **** #endif
  78:/usr/include/c++/4.9/ext/new_allocator.h **** 
  79:/usr/include/c++/4.9/ext/new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 6353              		.loc 9 79 0
 6354              		.cfi_startproc
 6355 0000 55       		pushq	%rbp
 6356              		.cfi_def_cfa_offset 16
 6357              		.cfi_offset 6, -16
 6358 0001 4889E5   		movq	%rsp, %rbp
 6359              		.cfi_def_cfa_register 6
 6360 0004 48897DF8 		movq	%rdi, -8(%rbp)
 6361              		.loc 9 79 0
 6362 0008 5D       		popq	%rbp
 6363              		.cfi_def_cfa 7, 8
 6364 0009 C3       		ret
 6365              		.cfi_endproc
 6366              	.LFE1515:
 6368              		.weak	_ZN9__gnu_cxx13new_allocatorIfEC1Ev
 6369              		.set	_ZN9__gnu_cxx13new_allocatorIfEC1Ev,_ZN9__gnu_cxx13new_allocatorIfEC2Ev
 6370              		.section	.text._ZN9__gnu_cxx13new_allocatorIfED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIfE
 6371              		.align 2
 6372              		.weak	_ZN9__gnu_cxx13new_allocatorIfED2Ev
 6374              	_ZN9__gnu_cxx13new_allocatorIfED2Ev:
 6375              	.LFB1518:
  80:/usr/include/c++/4.9/ext/new_allocator.h **** 
  81:/usr/include/c++/4.9/ext/new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
  82:/usr/include/c++/4.9/ext/new_allocator.h **** 
  83:/usr/include/c++/4.9/ext/new_allocator.h ****       template<typename _Tp1>
  84:/usr/include/c++/4.9/ext/new_allocator.h ****         new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  85:/usr/include/c++/4.9/ext/new_allocator.h **** 
  86:/usr/include/c++/4.9/ext/new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 6376              		.loc 9 86 0
 6377              		.cfi_startproc
 6378 0000 55       		pushq	%rbp
 6379              		.cfi_def_cfa_offset 16
 6380              		.cfi_offset 6, -16
 6381 0001 4889E5   		movq	%rsp, %rbp
 6382              		.cfi_def_cfa_register 6
 6383 0004 48897DF8 		movq	%rdi, -8(%rbp)
 6384              		.loc 9 86 0
 6385 0008 5D       		popq	%rbp
 6386              		.cfi_def_cfa 7, 8
 6387 0009 C3       		ret
 6388              		.cfi_endproc
 6389              	.LFE1518:
 6391              		.weak	_ZN9__gnu_cxx13new_allocatorIfED1Ev
 6392              		.set	_ZN9__gnu_cxx13new_allocatorIfED1Ev,_ZN9__gnu_cxx13new_allocatorIfED2Ev
 6393              		.section	.text._ZNSt12_Vector_baseIfSaIfEE12_Vector_implD2Ev,"axG",@progbits,_ZNSt12_Vector_baseIf
 6394              		.align 2
 6395              		.weak	_ZNSt12_Vector_baseIfSaIfEE12_Vector_implD2Ev
 6397              	_ZNSt12_Vector_baseIfSaIfEE12_Vector_implD2Ev:
 6398              	.LFB1522:
  79:/usr/include/c++/4.9/bits/stl_vector.h ****       : public _Tp_alloc_type
 6399              		.loc 7 79 0
 6400              		.cfi_startproc
 6401 0000 55       		pushq	%rbp
 6402              		.cfi_def_cfa_offset 16
 6403              		.cfi_offset 6, -16
 6404 0001 4889E5   		movq	%rsp, %rbp
 6405              		.cfi_def_cfa_register 6
 6406 0004 4883EC10 		subq	$16, %rsp
 6407 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6408              	.LBB153:
  79:/usr/include/c++/4.9/bits/stl_vector.h ****       : public _Tp_alloc_type
 6409              		.loc 7 79 0
 6410 000c 488B45F8 		movq	-8(%rbp), %rax
 6411 0010 4889C7   		movq	%rax, %rdi
 6412 0013 E8000000 		call	_ZNSaIfED2Ev
 6412      00
 6413              	.LBE153:
 6414 0018 C9       		leave
 6415              		.cfi_def_cfa 7, 8
 6416 0019 C3       		ret
 6417              		.cfi_endproc
 6418              	.LFE1522:
 6420              		.weak	_ZNSt12_Vector_baseIfSaIfEE12_Vector_implD1Ev
 6421              		.set	_ZNSt12_Vector_baseIfSaIfEE12_Vector_implD1Ev,_ZNSt12_Vector_baseIfSaIfEE12_Vector_implD2Ev
 6422              		.section	.text._ZNSt12_Vector_baseIfSaIfEEC2EmRKS0_,"axG",@progbits,_ZNSt12_Vector_baseIfSaIfEEC5E
 6423              		.align 2
 6424              		.weak	_ZNSt12_Vector_baseIfSaIfEEC2EmRKS0_
 6426              	_ZNSt12_Vector_baseIfSaIfEEC2EmRKS0_:
 6427              	.LFB1524:
 134:/usr/include/c++/4.9/bits/stl_vector.h ****       : _M_impl(__a)
 6428              		.loc 7 134 0
 6429              		.cfi_startproc
 6430              		.cfi_personality 0x3,__gxx_personality_v0
 6431              		.cfi_lsda 0x3,.LLSDA1524
 6432 0000 55       		pushq	%rbp
 6433              		.cfi_def_cfa_offset 16
 6434              		.cfi_offset 6, -16
 6435 0001 4889E5   		movq	%rsp, %rbp
 6436              		.cfi_def_cfa_register 6
 6437 0004 53       		pushq	%rbx
 6438 0005 4883EC28 		subq	$40, %rsp
 6439              		.cfi_offset 3, -24
 6440 0009 48897DE8 		movq	%rdi, -24(%rbp)
 6441 000d 488975E0 		movq	%rsi, -32(%rbp)
 6442 0011 488955D8 		movq	%rdx, -40(%rbp)
 6443              	.LBB154:
 135:/usr/include/c++/4.9/bits/stl_vector.h ****       { _M_create_storage(__n); }
 6444              		.loc 7 135 0
 6445 0015 488B45E8 		movq	-24(%rbp), %rax
 6446 0019 488B55D8 		movq	-40(%rbp), %rdx
 6447 001d 4889D6   		movq	%rdx, %rsi
 6448 0020 4889C7   		movq	%rax, %rdi
 6449 0023 E8000000 		call	_ZNSt12_Vector_baseIfSaIfEE12_Vector_implC1ERKS0_
 6449      00
 136:/usr/include/c++/4.9/bits/stl_vector.h **** 
 6450              		.loc 7 136 0
 6451 0028 488B55E0 		movq	-32(%rbp), %rdx
 6452 002c 488B45E8 		movq	-24(%rbp), %rax
 6453 0030 4889D6   		movq	%rdx, %rsi
 6454 0033 4889C7   		movq	%rax, %rdi
 6455              	.LEHB152:
 6456 0036 E8000000 		call	_ZNSt12_Vector_baseIfSaIfEE17_M_create_storageEm
 6456      00
 6457              	.LEHE152:
 6458              	.LBE154:
 6459 003b EB1A     		jmp	.L353
 6460              	.L352:
 6461 003d 4889C3   		movq	%rax, %rbx
 6462              	.LBB155:
 135:/usr/include/c++/4.9/bits/stl_vector.h ****       { _M_create_storage(__n); }
 6463              		.loc 7 135 0
 6464 0040 488B45E8 		movq	-24(%rbp), %rax
 6465 0044 4889C7   		movq	%rax, %rdi
 6466 0047 E8000000 		call	_ZNSt12_Vector_baseIfSaIfEE12_Vector_implD1Ev
 6466      00
 6467 004c 4889D8   		movq	%rbx, %rax
 6468 004f 4889C7   		movq	%rax, %rdi
 6469              	.LEHB153:
 6470 0052 E8000000 		call	_Unwind_Resume
 6470      00
 6471              	.LEHE153:
 6472              	.L353:
 6473              	.LBE155:
 136:/usr/include/c++/4.9/bits/stl_vector.h **** 
 6474              		.loc 7 136 0
 6475 0057 4883C428 		addq	$40, %rsp
 6476 005b 5B       		popq	%rbx
 6477 005c 5D       		popq	%rbp
 6478              		.cfi_def_cfa 7, 8
 6479 005d C3       		ret
 6480              		.cfi_endproc
 6481              	.LFE1524:
 6482              		.section	.gcc_except_table
 6483              	.LLSDA1524:
 6484 043c FF       		.byte	0xff
 6485 043d FF       		.byte	0xff
 6486 043e 01       		.byte	0x1
 6487 043f 08       		.uleb128 .LLSDACSE1524-.LLSDACSB1524
 6488              	.LLSDACSB1524:
 6489 0440 36       		.uleb128 .LEHB152-.LFB1524
 6490 0441 05       		.uleb128 .LEHE152-.LEHB152
 6491 0442 3D       		.uleb128 .L352-.LFB1524
 6492 0443 00       		.uleb128 0
 6493 0444 52       		.uleb128 .LEHB153-.LFB1524
 6494 0445 05       		.uleb128 .LEHE153-.LEHB153
 6495 0446 00       		.uleb128 0
 6496 0447 00       		.uleb128 0
 6497              	.LLSDACSE1524:
 6498              		.section	.text._ZNSt12_Vector_baseIfSaIfEEC2EmRKS0_,"axG",@progbits,_ZNSt12_Vector_baseIfSaIfEEC5E
 6500              		.weak	_ZNSt12_Vector_baseIfSaIfEEC1EmRKS0_
 6501              		.set	_ZNSt12_Vector_baseIfSaIfEEC1EmRKS0_,_ZNSt12_Vector_baseIfSaIfEEC2EmRKS0_
 6502              		.section	.text._ZNSt12_Vector_baseIfSaIfEED2Ev,"axG",@progbits,_ZNSt12_Vector_baseIfSaIfEED5Ev,com
 6503              		.align 2
 6504              		.weak	_ZNSt12_Vector_baseIfSaIfEED2Ev
 6506              	_ZNSt12_Vector_baseIfSaIfEED2Ev:
 6507              	.LFB1527:
 159:/usr/include/c++/4.9/bits/stl_vector.h ****       { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 6508              		.loc 7 159 0
 6509              		.cfi_startproc
 6510              		.cfi_personality 0x3,__gxx_personality_v0
 6511              		.cfi_lsda 0x3,.LLSDA1527
 6512 0000 55       		pushq	%rbp
 6513              		.cfi_def_cfa_offset 16
 6514              		.cfi_offset 6, -16
 6515 0001 4889E5   		movq	%rsp, %rbp
 6516              		.cfi_def_cfa_register 6
 6517 0004 53       		pushq	%rbx
 6518 0005 4883EC18 		subq	$24, %rsp
 6519              		.cfi_offset 3, -24
 6520 0009 48897DE8 		movq	%rdi, -24(%rbp)
 6521              	.LBB156:
 161:/usr/include/c++/4.9/bits/stl_vector.h **** 
 6522              		.loc 7 161 0
 6523 000d 488B45E8 		movq	-24(%rbp), %rax
 6524 0011 488B4010 		movq	16(%rax), %rax
 6525 0015 4889C2   		movq	%rax, %rdx
 6526 0018 488B45E8 		movq	-24(%rbp), %rax
 6527 001c 488B00   		movq	(%rax), %rax
 6528 001f 4829C2   		subq	%rax, %rdx
 6529 0022 4889D0   		movq	%rdx, %rax
 6530 0025 48C1F802 		sarq	$2, %rax
 6531 0029 4889C2   		movq	%rax, %rdx
 6532 002c 488B45E8 		movq	-24(%rbp), %rax
 6533 0030 488B08   		movq	(%rax), %rcx
 160:/usr/include/c++/4.9/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 6534              		.loc 7 160 0
 6535 0033 488B45E8 		movq	-24(%rbp), %rax
 6536 0037 4889CE   		movq	%rcx, %rsi
 6537 003a 4889C7   		movq	%rax, %rdi
 6538              	.LEHB154:
 6539 003d E8000000 		call	_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm
 6539      00
 6540              	.LEHE154:
 161:/usr/include/c++/4.9/bits/stl_vector.h **** 
 6541              		.loc 7 161 0
 6542 0042 488B45E8 		movq	-24(%rbp), %rax
 6543 0046 4889C7   		movq	%rax, %rdi
 6544 0049 E8000000 		call	_ZNSt12_Vector_baseIfSaIfEE12_Vector_implD1Ev
 6544      00
 6545 004e EB1A     		jmp	.L358
 6546              	.L357:
 6547 0050 4889C3   		movq	%rax, %rbx
 6548 0053 488B45E8 		movq	-24(%rbp), %rax
 6549 0057 4889C7   		movq	%rax, %rdi
 6550 005a E8000000 		call	_ZNSt12_Vector_baseIfSaIfEE12_Vector_implD1Ev
 6550      00
 6551 005f 4889D8   		movq	%rbx, %rax
 6552 0062 4889C7   		movq	%rax, %rdi
 6553              	.LEHB155:
 6554 0065 E8000000 		call	_Unwind_Resume
 6554      00
 6555              	.LEHE155:
 6556              	.L358:
 6557              	.LBE156:
 6558 006a 4883C418 		addq	$24, %rsp
 6559 006e 5B       		popq	%rbx
 6560 006f 5D       		popq	%rbp
 6561              		.cfi_def_cfa 7, 8
 6562 0070 C3       		ret
 6563              		.cfi_endproc
 6564              	.LFE1527:
 6565              		.section	.gcc_except_table
 6566              	.LLSDA1527:
 6567 0448 FF       		.byte	0xff
 6568 0449 FF       		.byte	0xff
 6569 044a 01       		.byte	0x1
 6570 044b 08       		.uleb128 .LLSDACSE1527-.LLSDACSB1527
 6571              	.LLSDACSB1527:
 6572 044c 3D       		.uleb128 .LEHB154-.LFB1527
 6573 044d 05       		.uleb128 .LEHE154-.LEHB154
 6574 044e 50       		.uleb128 .L357-.LFB1527
 6575 044f 00       		.uleb128 0
 6576 0450 65       		.uleb128 .LEHB155-.LFB1527
 6577 0451 05       		.uleb128 .LEHE155-.LEHB155
 6578 0452 00       		.uleb128 0
 6579 0453 00       		.uleb128 0
 6580              	.LLSDACSE1527:
 6581              		.section	.text._ZNSt12_Vector_baseIfSaIfEED2Ev,"axG",@progbits,_ZNSt12_Vector_baseIfSaIfEED5Ev,com
 6583              		.weak	_ZNSt12_Vector_baseIfSaIfEED1Ev
 6584              		.set	_ZNSt12_Vector_baseIfSaIfEED1Ev,_ZNSt12_Vector_baseIfSaIfEED2Ev
 6585              		.section	.text._ZNSt6vectorIfSaIfEE18_M_fill_initializeEmRKf,"axG",@progbits,_ZNSt6vectorIfSaIfEE1
 6586              		.align 2
 6587              		.weak	_ZNSt6vectorIfSaIfEE18_M_fill_initializeEmRKf
 6589              	_ZNSt6vectorIfSaIfEE18_M_fill_initializeEmRKf:
 6590              	.LFB1529:
 781:/usr/include/c++/4.9/bits/stl_vector.h **** 
 782:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 783:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
 784:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 785:/usr/include/c++/4.9/bits/stl_vector.h ****        *  accessed.
 786:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @return  Read-only (constant) reference to data.
 787:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 788:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This operator allows for easy, array-style, data access.
 789:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Note that data access with this operator is unchecked and
 790:/usr/include/c++/4.9/bits/stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
 791:/usr/include/c++/4.9/bits/stl_vector.h ****        *  see at().)
 792:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 793:/usr/include/c++/4.9/bits/stl_vector.h ****       const_reference
 794:/usr/include/c++/4.9/bits/stl_vector.h ****       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
 795:/usr/include/c++/4.9/bits/stl_vector.h ****       { return *(this->_M_impl._M_start + __n); }
 796:/usr/include/c++/4.9/bits/stl_vector.h **** 
 797:/usr/include/c++/4.9/bits/stl_vector.h ****     protected:
 798:/usr/include/c++/4.9/bits/stl_vector.h ****       /// Safety check used only from at().
 799:/usr/include/c++/4.9/bits/stl_vector.h ****       void
 800:/usr/include/c++/4.9/bits/stl_vector.h ****       _M_range_check(size_type __n) const
 801:/usr/include/c++/4.9/bits/stl_vector.h ****       {
 802:/usr/include/c++/4.9/bits/stl_vector.h **** 	if (__n >= this->size())
 803:/usr/include/c++/4.9/bits/stl_vector.h **** 	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
 804:/usr/include/c++/4.9/bits/stl_vector.h **** 				       "(which is %zu) >= this->size() "
 805:/usr/include/c++/4.9/bits/stl_vector.h **** 				       "(which is %zu)"),
 806:/usr/include/c++/4.9/bits/stl_vector.h **** 				   __n, this->size());
 807:/usr/include/c++/4.9/bits/stl_vector.h ****       }
 808:/usr/include/c++/4.9/bits/stl_vector.h **** 
 809:/usr/include/c++/4.9/bits/stl_vector.h ****     public:
 810:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 811:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
 812:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 813:/usr/include/c++/4.9/bits/stl_vector.h ****        *  accessed.
 814:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @return  Read/write reference to data.
 815:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
 816:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 817:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This function provides for safer data access.  The parameter
 818:/usr/include/c++/4.9/bits/stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
 819:/usr/include/c++/4.9/bits/stl_vector.h ****        *  function throws out_of_range if the check fails.
 820:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 821:/usr/include/c++/4.9/bits/stl_vector.h ****       reference
 822:/usr/include/c++/4.9/bits/stl_vector.h ****       at(size_type __n)
 823:/usr/include/c++/4.9/bits/stl_vector.h ****       {
 824:/usr/include/c++/4.9/bits/stl_vector.h **** 	_M_range_check(__n);
 825:/usr/include/c++/4.9/bits/stl_vector.h **** 	return (*this)[__n]; 
 826:/usr/include/c++/4.9/bits/stl_vector.h ****       }
 827:/usr/include/c++/4.9/bits/stl_vector.h **** 
 828:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 829:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
 830:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 831:/usr/include/c++/4.9/bits/stl_vector.h ****        *  accessed.
 832:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @return  Read-only (constant) reference to data.
 833:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
 834:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 835:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This function provides for safer data access.  The parameter
 836:/usr/include/c++/4.9/bits/stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
 837:/usr/include/c++/4.9/bits/stl_vector.h ****        *  function throws out_of_range if the check fails.
 838:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 839:/usr/include/c++/4.9/bits/stl_vector.h ****       const_reference
 840:/usr/include/c++/4.9/bits/stl_vector.h ****       at(size_type __n) const
 841:/usr/include/c++/4.9/bits/stl_vector.h ****       {
 842:/usr/include/c++/4.9/bits/stl_vector.h **** 	_M_range_check(__n);
 843:/usr/include/c++/4.9/bits/stl_vector.h **** 	return (*this)[__n];
 844:/usr/include/c++/4.9/bits/stl_vector.h ****       }
 845:/usr/include/c++/4.9/bits/stl_vector.h **** 
 846:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 847:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Returns a read/write reference to the data at the first
 848:/usr/include/c++/4.9/bits/stl_vector.h ****        *  element of the %vector.
 849:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 850:/usr/include/c++/4.9/bits/stl_vector.h ****       reference
 851:/usr/include/c++/4.9/bits/stl_vector.h ****       front() _GLIBCXX_NOEXCEPT
 852:/usr/include/c++/4.9/bits/stl_vector.h ****       { return *begin(); }
 853:/usr/include/c++/4.9/bits/stl_vector.h **** 
 854:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 855:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the first
 856:/usr/include/c++/4.9/bits/stl_vector.h ****        *  element of the %vector.
 857:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 858:/usr/include/c++/4.9/bits/stl_vector.h ****       const_reference
 859:/usr/include/c++/4.9/bits/stl_vector.h ****       front() const _GLIBCXX_NOEXCEPT
 860:/usr/include/c++/4.9/bits/stl_vector.h ****       { return *begin(); }
 861:/usr/include/c++/4.9/bits/stl_vector.h **** 
 862:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 863:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Returns a read/write reference to the data at the last
 864:/usr/include/c++/4.9/bits/stl_vector.h ****        *  element of the %vector.
 865:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 866:/usr/include/c++/4.9/bits/stl_vector.h ****       reference
 867:/usr/include/c++/4.9/bits/stl_vector.h ****       back() _GLIBCXX_NOEXCEPT
 868:/usr/include/c++/4.9/bits/stl_vector.h ****       { return *(end() - 1); }
 869:/usr/include/c++/4.9/bits/stl_vector.h ****       
 870:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 871:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the
 872:/usr/include/c++/4.9/bits/stl_vector.h ****        *  last element of the %vector.
 873:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 874:/usr/include/c++/4.9/bits/stl_vector.h ****       const_reference
 875:/usr/include/c++/4.9/bits/stl_vector.h ****       back() const _GLIBCXX_NOEXCEPT
 876:/usr/include/c++/4.9/bits/stl_vector.h ****       { return *(end() - 1); }
 877:/usr/include/c++/4.9/bits/stl_vector.h **** 
 878:/usr/include/c++/4.9/bits/stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 879:/usr/include/c++/4.9/bits/stl_vector.h ****       // DR 464. Suggestion for new member functions in standard containers.
 880:/usr/include/c++/4.9/bits/stl_vector.h ****       // data access
 881:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 882:/usr/include/c++/4.9/bits/stl_vector.h ****        *   Returns a pointer such that [data(), data() + size()) is a valid
 883:/usr/include/c++/4.9/bits/stl_vector.h ****        *   range.  For a non-empty %vector, data() == &front().
 884:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 885:/usr/include/c++/4.9/bits/stl_vector.h **** #if __cplusplus >= 201103L
 886:/usr/include/c++/4.9/bits/stl_vector.h ****       _Tp*
 887:/usr/include/c++/4.9/bits/stl_vector.h **** #else
 888:/usr/include/c++/4.9/bits/stl_vector.h ****       pointer
 889:/usr/include/c++/4.9/bits/stl_vector.h **** #endif
 890:/usr/include/c++/4.9/bits/stl_vector.h ****       data() _GLIBCXX_NOEXCEPT
 891:/usr/include/c++/4.9/bits/stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
 892:/usr/include/c++/4.9/bits/stl_vector.h **** 
 893:/usr/include/c++/4.9/bits/stl_vector.h **** #if __cplusplus >= 201103L
 894:/usr/include/c++/4.9/bits/stl_vector.h ****       const _Tp*
 895:/usr/include/c++/4.9/bits/stl_vector.h **** #else
 896:/usr/include/c++/4.9/bits/stl_vector.h ****       const_pointer
 897:/usr/include/c++/4.9/bits/stl_vector.h **** #endif
 898:/usr/include/c++/4.9/bits/stl_vector.h ****       data() const _GLIBCXX_NOEXCEPT
 899:/usr/include/c++/4.9/bits/stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
 900:/usr/include/c++/4.9/bits/stl_vector.h **** 
 901:/usr/include/c++/4.9/bits/stl_vector.h ****       // [23.2.4.3] modifiers
 902:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 903:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Add data to the end of the %vector.
 904:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __x  Data to be added.
 905:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 906:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This is a typical stack operation.  The function creates an
 907:/usr/include/c++/4.9/bits/stl_vector.h ****        *  element at the end of the %vector and assigns the given data
 908:/usr/include/c++/4.9/bits/stl_vector.h ****        *  to it.  Due to the nature of a %vector this operation can be
 909:/usr/include/c++/4.9/bits/stl_vector.h ****        *  done in constant time if the %vector has preallocated space
 910:/usr/include/c++/4.9/bits/stl_vector.h ****        *  available.
 911:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 912:/usr/include/c++/4.9/bits/stl_vector.h ****       void
 913:/usr/include/c++/4.9/bits/stl_vector.h ****       push_back(const value_type& __x)
 914:/usr/include/c++/4.9/bits/stl_vector.h ****       {
 915:/usr/include/c++/4.9/bits/stl_vector.h **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 916:/usr/include/c++/4.9/bits/stl_vector.h **** 	  {
 917:/usr/include/c++/4.9/bits/stl_vector.h **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 918:/usr/include/c++/4.9/bits/stl_vector.h **** 	                             __x);
 919:/usr/include/c++/4.9/bits/stl_vector.h **** 	    ++this->_M_impl._M_finish;
 920:/usr/include/c++/4.9/bits/stl_vector.h **** 	  }
 921:/usr/include/c++/4.9/bits/stl_vector.h **** 	else
 922:/usr/include/c++/4.9/bits/stl_vector.h **** #if __cplusplus >= 201103L
 923:/usr/include/c++/4.9/bits/stl_vector.h **** 	  _M_emplace_back_aux(__x);
 924:/usr/include/c++/4.9/bits/stl_vector.h **** #else
 925:/usr/include/c++/4.9/bits/stl_vector.h **** 	  _M_insert_aux(end(), __x);
 926:/usr/include/c++/4.9/bits/stl_vector.h **** #endif
 927:/usr/include/c++/4.9/bits/stl_vector.h ****       }
 928:/usr/include/c++/4.9/bits/stl_vector.h **** 
 929:/usr/include/c++/4.9/bits/stl_vector.h **** #if __cplusplus >= 201103L
 930:/usr/include/c++/4.9/bits/stl_vector.h ****       void
 931:/usr/include/c++/4.9/bits/stl_vector.h ****       push_back(value_type&& __x)
 932:/usr/include/c++/4.9/bits/stl_vector.h ****       { emplace_back(std::move(__x)); }
 933:/usr/include/c++/4.9/bits/stl_vector.h **** 
 934:/usr/include/c++/4.9/bits/stl_vector.h ****       template<typename... _Args>
 935:/usr/include/c++/4.9/bits/stl_vector.h ****         void
 936:/usr/include/c++/4.9/bits/stl_vector.h ****         emplace_back(_Args&&... __args);
 937:/usr/include/c++/4.9/bits/stl_vector.h **** #endif
 938:/usr/include/c++/4.9/bits/stl_vector.h **** 
 939:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 940:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Removes last element.
 941:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 942:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This is a typical stack operation. It shrinks the %vector by one.
 943:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 944:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Note that no data is returned, and if the last element's
 945:/usr/include/c++/4.9/bits/stl_vector.h ****        *  data is needed, it should be retrieved before pop_back() is
 946:/usr/include/c++/4.9/bits/stl_vector.h ****        *  called.
 947:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 948:/usr/include/c++/4.9/bits/stl_vector.h ****       void
 949:/usr/include/c++/4.9/bits/stl_vector.h ****       pop_back() _GLIBCXX_NOEXCEPT
 950:/usr/include/c++/4.9/bits/stl_vector.h ****       {
 951:/usr/include/c++/4.9/bits/stl_vector.h **** 	--this->_M_impl._M_finish;
 952:/usr/include/c++/4.9/bits/stl_vector.h **** 	_Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
 953:/usr/include/c++/4.9/bits/stl_vector.h ****       }
 954:/usr/include/c++/4.9/bits/stl_vector.h **** 
 955:/usr/include/c++/4.9/bits/stl_vector.h **** #if __cplusplus >= 201103L
 956:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 957:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Inserts an object in %vector before specified iterator.
 958:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
 959:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __args  Arguments.
 960:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
 961:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 962:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This function will insert an object of type T constructed
 963:/usr/include/c++/4.9/bits/stl_vector.h ****        *  with T(std::forward<Args>(args)...) before the specified location.
 964:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a %vector
 965:/usr/include/c++/4.9/bits/stl_vector.h ****        *  and if it is frequently used the user should consider using
 966:/usr/include/c++/4.9/bits/stl_vector.h ****        *  std::list.
 967:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 968:/usr/include/c++/4.9/bits/stl_vector.h ****       template<typename... _Args>
 969:/usr/include/c++/4.9/bits/stl_vector.h ****         iterator
 970:/usr/include/c++/4.9/bits/stl_vector.h ****         emplace(const_iterator __position, _Args&&... __args);
 971:/usr/include/c++/4.9/bits/stl_vector.h **** 
 972:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 973:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
 974:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
 975:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
 976:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
 977:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 978:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This function will insert a copy of the given value before
 979:/usr/include/c++/4.9/bits/stl_vector.h ****        *  the specified location.  Note that this kind of operation
 980:/usr/include/c++/4.9/bits/stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
 981:/usr/include/c++/4.9/bits/stl_vector.h ****        *  used the user should consider using std::list.
 982:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 983:/usr/include/c++/4.9/bits/stl_vector.h ****       iterator
 984:/usr/include/c++/4.9/bits/stl_vector.h ****       insert(const_iterator __position, const value_type& __x);
 985:/usr/include/c++/4.9/bits/stl_vector.h **** #else
 986:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 987:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
 988:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
 989:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
 990:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
 991:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 992:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This function will insert a copy of the given value before
 993:/usr/include/c++/4.9/bits/stl_vector.h ****        *  the specified location.  Note that this kind of operation
 994:/usr/include/c++/4.9/bits/stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
 995:/usr/include/c++/4.9/bits/stl_vector.h ****        *  used the user should consider using std::list.
 996:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 997:/usr/include/c++/4.9/bits/stl_vector.h ****       iterator
 998:/usr/include/c++/4.9/bits/stl_vector.h ****       insert(iterator __position, const value_type& __x);
 999:/usr/include/c++/4.9/bits/stl_vector.h **** #endif
1000:/usr/include/c++/4.9/bits/stl_vector.h **** 
1001:/usr/include/c++/4.9/bits/stl_vector.h **** #if __cplusplus >= 201103L
1002:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
1003:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Inserts given rvalue into %vector before specified iterator.
1004:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1005:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
1006:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1007:/usr/include/c++/4.9/bits/stl_vector.h ****        *
1008:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This function will insert a copy of the given rvalue before
1009:/usr/include/c++/4.9/bits/stl_vector.h ****        *  the specified location.  Note that this kind of operation
1010:/usr/include/c++/4.9/bits/stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1011:/usr/include/c++/4.9/bits/stl_vector.h ****        *  used the user should consider using std::list.
1012:/usr/include/c++/4.9/bits/stl_vector.h ****        */
1013:/usr/include/c++/4.9/bits/stl_vector.h ****       iterator
1014:/usr/include/c++/4.9/bits/stl_vector.h ****       insert(const_iterator __position, value_type&& __x)
1015:/usr/include/c++/4.9/bits/stl_vector.h ****       { return emplace(__position, std::move(__x)); }
1016:/usr/include/c++/4.9/bits/stl_vector.h **** 
1017:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
1018:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Inserts an initializer_list into the %vector.
1019:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1020:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
1021:/usr/include/c++/4.9/bits/stl_vector.h ****        *
1022:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This function will insert copies of the data in the 
1023:/usr/include/c++/4.9/bits/stl_vector.h ****        *  initializer_list @a l into the %vector before the location
1024:/usr/include/c++/4.9/bits/stl_vector.h ****        *  specified by @a position.
1025:/usr/include/c++/4.9/bits/stl_vector.h ****        *
1026:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1027:/usr/include/c++/4.9/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1028:/usr/include/c++/4.9/bits/stl_vector.h ****        *  consider using std::list.
1029:/usr/include/c++/4.9/bits/stl_vector.h ****        */
1030:/usr/include/c++/4.9/bits/stl_vector.h ****       iterator
1031:/usr/include/c++/4.9/bits/stl_vector.h ****       insert(const_iterator __position, initializer_list<value_type> __l)
1032:/usr/include/c++/4.9/bits/stl_vector.h ****       { return this->insert(__position, __l.begin(), __l.end()); }
1033:/usr/include/c++/4.9/bits/stl_vector.h **** #endif
1034:/usr/include/c++/4.9/bits/stl_vector.h **** 
1035:/usr/include/c++/4.9/bits/stl_vector.h **** #if __cplusplus >= 201103L
1036:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
1037:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1038:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1039:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1040:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
1041:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1042:/usr/include/c++/4.9/bits/stl_vector.h ****        *
1043:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This function will insert a specified number of copies of
1044:/usr/include/c++/4.9/bits/stl_vector.h ****        *  the given data before the location specified by @a position.
1045:/usr/include/c++/4.9/bits/stl_vector.h ****        *
1046:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1047:/usr/include/c++/4.9/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1048:/usr/include/c++/4.9/bits/stl_vector.h ****        *  consider using std::list.
1049:/usr/include/c++/4.9/bits/stl_vector.h ****        */
1050:/usr/include/c++/4.9/bits/stl_vector.h ****       iterator
1051:/usr/include/c++/4.9/bits/stl_vector.h ****       insert(const_iterator __position, size_type __n, const value_type& __x)
1052:/usr/include/c++/4.9/bits/stl_vector.h ****       {
1053:/usr/include/c++/4.9/bits/stl_vector.h **** 	difference_type __offset = __position - cbegin();
1054:/usr/include/c++/4.9/bits/stl_vector.h **** 	_M_fill_insert(begin() + __offset, __n, __x);
1055:/usr/include/c++/4.9/bits/stl_vector.h **** 	return begin() + __offset;
1056:/usr/include/c++/4.9/bits/stl_vector.h ****       }
1057:/usr/include/c++/4.9/bits/stl_vector.h **** #else
1058:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
1059:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1060:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1061:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1062:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
1063:/usr/include/c++/4.9/bits/stl_vector.h ****        *
1064:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This function will insert a specified number of copies of
1065:/usr/include/c++/4.9/bits/stl_vector.h ****        *  the given data before the location specified by @a position.
1066:/usr/include/c++/4.9/bits/stl_vector.h ****        *
1067:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1068:/usr/include/c++/4.9/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1069:/usr/include/c++/4.9/bits/stl_vector.h ****        *  consider using std::list.
1070:/usr/include/c++/4.9/bits/stl_vector.h ****        */
1071:/usr/include/c++/4.9/bits/stl_vector.h ****       void
1072:/usr/include/c++/4.9/bits/stl_vector.h ****       insert(iterator __position, size_type __n, const value_type& __x)
1073:/usr/include/c++/4.9/bits/stl_vector.h ****       { _M_fill_insert(__position, __n, __x); }
1074:/usr/include/c++/4.9/bits/stl_vector.h **** #endif
1075:/usr/include/c++/4.9/bits/stl_vector.h **** 
1076:/usr/include/c++/4.9/bits/stl_vector.h **** #if __cplusplus >= 201103L
1077:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
1078:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1079:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1080:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __first  An input iterator.
1081:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __last   An input iterator.
1082:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1083:/usr/include/c++/4.9/bits/stl_vector.h ****        *
1084:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This function will insert copies of the data in the range
1085:/usr/include/c++/4.9/bits/stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1086:/usr/include/c++/4.9/bits/stl_vector.h ****        *  by @a pos.
1087:/usr/include/c++/4.9/bits/stl_vector.h ****        *
1088:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1089:/usr/include/c++/4.9/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1090:/usr/include/c++/4.9/bits/stl_vector.h ****        *  consider using std::list.
1091:/usr/include/c++/4.9/bits/stl_vector.h ****        */
1092:/usr/include/c++/4.9/bits/stl_vector.h ****       template<typename _InputIterator,
1093:/usr/include/c++/4.9/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1094:/usr/include/c++/4.9/bits/stl_vector.h ****         iterator
1095:/usr/include/c++/4.9/bits/stl_vector.h ****         insert(const_iterator __position, _InputIterator __first,
1096:/usr/include/c++/4.9/bits/stl_vector.h **** 	       _InputIterator __last)
1097:/usr/include/c++/4.9/bits/stl_vector.h ****         {
1098:/usr/include/c++/4.9/bits/stl_vector.h **** 	  difference_type __offset = __position - cbegin();
1099:/usr/include/c++/4.9/bits/stl_vector.h **** 	  _M_insert_dispatch(begin() + __offset,
1100:/usr/include/c++/4.9/bits/stl_vector.h **** 			     __first, __last, __false_type());
1101:/usr/include/c++/4.9/bits/stl_vector.h **** 	  return begin() + __offset;
1102:/usr/include/c++/4.9/bits/stl_vector.h **** 	}
1103:/usr/include/c++/4.9/bits/stl_vector.h **** #else
1104:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
1105:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1106:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1107:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __first  An input iterator.
1108:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __last   An input iterator.
1109:/usr/include/c++/4.9/bits/stl_vector.h ****        *
1110:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This function will insert copies of the data in the range
1111:/usr/include/c++/4.9/bits/stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1112:/usr/include/c++/4.9/bits/stl_vector.h ****        *  by @a pos.
1113:/usr/include/c++/4.9/bits/stl_vector.h ****        *
1114:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1115:/usr/include/c++/4.9/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1116:/usr/include/c++/4.9/bits/stl_vector.h ****        *  consider using std::list.
1117:/usr/include/c++/4.9/bits/stl_vector.h ****        */
1118:/usr/include/c++/4.9/bits/stl_vector.h ****       template<typename _InputIterator>
1119:/usr/include/c++/4.9/bits/stl_vector.h ****         void
1120:/usr/include/c++/4.9/bits/stl_vector.h ****         insert(iterator __position, _InputIterator __first,
1121:/usr/include/c++/4.9/bits/stl_vector.h **** 	       _InputIterator __last)
1122:/usr/include/c++/4.9/bits/stl_vector.h ****         {
1123:/usr/include/c++/4.9/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
1124:/usr/include/c++/4.9/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1125:/usr/include/c++/4.9/bits/stl_vector.h **** 	  _M_insert_dispatch(__position, __first, __last, _Integral());
1126:/usr/include/c++/4.9/bits/stl_vector.h **** 	}
1127:/usr/include/c++/4.9/bits/stl_vector.h **** #endif
1128:/usr/include/c++/4.9/bits/stl_vector.h **** 
1129:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
1130:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Remove element at given position.
1131:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __position  Iterator pointing to element to be erased.
1132:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @return  An iterator pointing to the next element (or end()).
1133:/usr/include/c++/4.9/bits/stl_vector.h ****        *
1134:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This function will erase the element at the given position and thus
1135:/usr/include/c++/4.9/bits/stl_vector.h ****        *  shorten the %vector by one.
1136:/usr/include/c++/4.9/bits/stl_vector.h ****        *
1137:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Note This operation could be expensive and if it is
1138:/usr/include/c++/4.9/bits/stl_vector.h ****        *  frequently used the user should consider using std::list.
1139:/usr/include/c++/4.9/bits/stl_vector.h ****        *  The user is also cautioned that this function only erases
1140:/usr/include/c++/4.9/bits/stl_vector.h ****        *  the element, and that if the element is itself a pointer,
1141:/usr/include/c++/4.9/bits/stl_vector.h ****        *  the pointed-to memory is not touched in any way.  Managing
1142:/usr/include/c++/4.9/bits/stl_vector.h ****        *  the pointer is the user's responsibility.
1143:/usr/include/c++/4.9/bits/stl_vector.h ****        */
1144:/usr/include/c++/4.9/bits/stl_vector.h ****       iterator
1145:/usr/include/c++/4.9/bits/stl_vector.h **** #if __cplusplus >= 201103L
1146:/usr/include/c++/4.9/bits/stl_vector.h ****       erase(const_iterator __position)
1147:/usr/include/c++/4.9/bits/stl_vector.h ****       { return _M_erase(begin() + (__position - cbegin())); }
1148:/usr/include/c++/4.9/bits/stl_vector.h **** #else
1149:/usr/include/c++/4.9/bits/stl_vector.h ****       erase(iterator __position)
1150:/usr/include/c++/4.9/bits/stl_vector.h ****       { return _M_erase(__position); }
1151:/usr/include/c++/4.9/bits/stl_vector.h **** #endif
1152:/usr/include/c++/4.9/bits/stl_vector.h **** 
1153:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
1154:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Remove a range of elements.
1155:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __first  Iterator pointing to the first element to be erased.
1156:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __last  Iterator pointing to one past the last element to be
1157:/usr/include/c++/4.9/bits/stl_vector.h ****        *                  erased.
1158:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @return  An iterator pointing to the element pointed to by @a __last
1159:/usr/include/c++/4.9/bits/stl_vector.h ****        *           prior to erasing (or end()).
1160:/usr/include/c++/4.9/bits/stl_vector.h ****        *
1161:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This function will erase the elements in the range
1162:/usr/include/c++/4.9/bits/stl_vector.h ****        *  [__first,__last) and shorten the %vector accordingly.
1163:/usr/include/c++/4.9/bits/stl_vector.h ****        *
1164:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Note This operation could be expensive and if it is
1165:/usr/include/c++/4.9/bits/stl_vector.h ****        *  frequently used the user should consider using std::list.
1166:/usr/include/c++/4.9/bits/stl_vector.h ****        *  The user is also cautioned that this function only erases
1167:/usr/include/c++/4.9/bits/stl_vector.h ****        *  the elements, and that if the elements themselves are
1168:/usr/include/c++/4.9/bits/stl_vector.h ****        *  pointers, the pointed-to memory is not touched in any way.
1169:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Managing the pointer is the user's responsibility.
1170:/usr/include/c++/4.9/bits/stl_vector.h ****        */
1171:/usr/include/c++/4.9/bits/stl_vector.h ****       iterator
1172:/usr/include/c++/4.9/bits/stl_vector.h **** #if __cplusplus >= 201103L
1173:/usr/include/c++/4.9/bits/stl_vector.h ****       erase(const_iterator __first, const_iterator __last)
1174:/usr/include/c++/4.9/bits/stl_vector.h ****       {
1175:/usr/include/c++/4.9/bits/stl_vector.h **** 	const auto __beg = begin();
1176:/usr/include/c++/4.9/bits/stl_vector.h **** 	const auto __cbeg = cbegin();
1177:/usr/include/c++/4.9/bits/stl_vector.h **** 	return _M_erase(__beg + (__first - __cbeg), __beg + (__last - __cbeg));
1178:/usr/include/c++/4.9/bits/stl_vector.h ****       }
1179:/usr/include/c++/4.9/bits/stl_vector.h **** #else
1180:/usr/include/c++/4.9/bits/stl_vector.h ****       erase(iterator __first, iterator __last)
1181:/usr/include/c++/4.9/bits/stl_vector.h ****       { return _M_erase(__first, __last); }
1182:/usr/include/c++/4.9/bits/stl_vector.h **** #endif
1183:/usr/include/c++/4.9/bits/stl_vector.h **** 
1184:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
1185:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Swaps data with another %vector.
1186:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __x  A %vector of the same element and allocator types.
1187:/usr/include/c++/4.9/bits/stl_vector.h ****        *
1188:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This exchanges the elements between two vectors in constant time.
1189:/usr/include/c++/4.9/bits/stl_vector.h ****        *  (Three pointers, so it should be quite fast.)
1190:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Note that the global std::swap() function is specialized such that
1191:/usr/include/c++/4.9/bits/stl_vector.h ****        *  std::swap(v1,v2) will feed to this function.
1192:/usr/include/c++/4.9/bits/stl_vector.h ****        */
1193:/usr/include/c++/4.9/bits/stl_vector.h ****       void
1194:/usr/include/c++/4.9/bits/stl_vector.h ****       swap(vector& __x)
1195:/usr/include/c++/4.9/bits/stl_vector.h **** #if __cplusplus >= 201103L
1196:/usr/include/c++/4.9/bits/stl_vector.h ****       noexcept(_Alloc_traits::_S_nothrow_swap())
1197:/usr/include/c++/4.9/bits/stl_vector.h **** #endif
1198:/usr/include/c++/4.9/bits/stl_vector.h ****       {
1199:/usr/include/c++/4.9/bits/stl_vector.h **** 	this->_M_impl._M_swap_data(__x._M_impl);
1200:/usr/include/c++/4.9/bits/stl_vector.h **** 	_Alloc_traits::_S_on_swap(_M_get_Tp_allocator(),
1201:/usr/include/c++/4.9/bits/stl_vector.h **** 	                          __x._M_get_Tp_allocator());
1202:/usr/include/c++/4.9/bits/stl_vector.h ****       }
1203:/usr/include/c++/4.9/bits/stl_vector.h **** 
1204:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
1205:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Erases all the elements.  Note that this function only erases the
1206:/usr/include/c++/4.9/bits/stl_vector.h ****        *  elements, and that if the elements themselves are pointers, the
1207:/usr/include/c++/4.9/bits/stl_vector.h ****        *  pointed-to memory is not touched in any way.  Managing the pointer is
1208:/usr/include/c++/4.9/bits/stl_vector.h ****        *  the user's responsibility.
1209:/usr/include/c++/4.9/bits/stl_vector.h ****        */
1210:/usr/include/c++/4.9/bits/stl_vector.h ****       void
1211:/usr/include/c++/4.9/bits/stl_vector.h ****       clear() _GLIBCXX_NOEXCEPT
1212:/usr/include/c++/4.9/bits/stl_vector.h ****       { _M_erase_at_end(this->_M_impl._M_start); }
1213:/usr/include/c++/4.9/bits/stl_vector.h **** 
1214:/usr/include/c++/4.9/bits/stl_vector.h ****     protected:
1215:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
1216:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Memory expansion handler.  Uses the member allocation function to
1217:/usr/include/c++/4.9/bits/stl_vector.h ****        *  obtain @a n bytes of memory, and then copies [first,last) into it.
1218:/usr/include/c++/4.9/bits/stl_vector.h ****        */
1219:/usr/include/c++/4.9/bits/stl_vector.h ****       template<typename _ForwardIterator>
1220:/usr/include/c++/4.9/bits/stl_vector.h ****         pointer
1221:/usr/include/c++/4.9/bits/stl_vector.h ****         _M_allocate_and_copy(size_type __n,
1222:/usr/include/c++/4.9/bits/stl_vector.h **** 			     _ForwardIterator __first, _ForwardIterator __last)
1223:/usr/include/c++/4.9/bits/stl_vector.h ****         {
1224:/usr/include/c++/4.9/bits/stl_vector.h **** 	  pointer __result = this->_M_allocate(__n);
1225:/usr/include/c++/4.9/bits/stl_vector.h **** 	  __try
1226:/usr/include/c++/4.9/bits/stl_vector.h **** 	    {
1227:/usr/include/c++/4.9/bits/stl_vector.h **** 	      std::__uninitialized_copy_a(__first, __last, __result,
1228:/usr/include/c++/4.9/bits/stl_vector.h **** 					  _M_get_Tp_allocator());
1229:/usr/include/c++/4.9/bits/stl_vector.h **** 	      return __result;
1230:/usr/include/c++/4.9/bits/stl_vector.h **** 	    }
1231:/usr/include/c++/4.9/bits/stl_vector.h **** 	  __catch(...)
1232:/usr/include/c++/4.9/bits/stl_vector.h **** 	    {
1233:/usr/include/c++/4.9/bits/stl_vector.h **** 	      _M_deallocate(__result, __n);
1234:/usr/include/c++/4.9/bits/stl_vector.h **** 	      __throw_exception_again;
1235:/usr/include/c++/4.9/bits/stl_vector.h **** 	    }
1236:/usr/include/c++/4.9/bits/stl_vector.h **** 	}
1237:/usr/include/c++/4.9/bits/stl_vector.h **** 
1238:/usr/include/c++/4.9/bits/stl_vector.h **** 
1239:/usr/include/c++/4.9/bits/stl_vector.h ****       // Internal constructor functions follow.
1240:/usr/include/c++/4.9/bits/stl_vector.h **** 
1241:/usr/include/c++/4.9/bits/stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1242:/usr/include/c++/4.9/bits/stl_vector.h **** 
1243:/usr/include/c++/4.9/bits/stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1244:/usr/include/c++/4.9/bits/stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1245:/usr/include/c++/4.9/bits/stl_vector.h ****       template<typename _Integer>
1246:/usr/include/c++/4.9/bits/stl_vector.h ****         void
1247:/usr/include/c++/4.9/bits/stl_vector.h ****         _M_initialize_dispatch(_Integer __n, _Integer __value, __true_type)
1248:/usr/include/c++/4.9/bits/stl_vector.h ****         {
1249:/usr/include/c++/4.9/bits/stl_vector.h **** 	  this->_M_impl._M_start = _M_allocate(static_cast<size_type>(__n));
1250:/usr/include/c++/4.9/bits/stl_vector.h **** 	  this->_M_impl._M_end_of_storage =
1251:/usr/include/c++/4.9/bits/stl_vector.h **** 	    this->_M_impl._M_start + static_cast<size_type>(__n);
1252:/usr/include/c++/4.9/bits/stl_vector.h **** 	  _M_fill_initialize(static_cast<size_type>(__n), __value);
1253:/usr/include/c++/4.9/bits/stl_vector.h **** 	}
1254:/usr/include/c++/4.9/bits/stl_vector.h **** 
1255:/usr/include/c++/4.9/bits/stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1256:/usr/include/c++/4.9/bits/stl_vector.h ****       template<typename _InputIterator>
1257:/usr/include/c++/4.9/bits/stl_vector.h ****         void
1258:/usr/include/c++/4.9/bits/stl_vector.h ****         _M_initialize_dispatch(_InputIterator __first, _InputIterator __last,
1259:/usr/include/c++/4.9/bits/stl_vector.h **** 			       __false_type)
1260:/usr/include/c++/4.9/bits/stl_vector.h ****         {
1261:/usr/include/c++/4.9/bits/stl_vector.h **** 	  typedef typename std::iterator_traits<_InputIterator>::
1262:/usr/include/c++/4.9/bits/stl_vector.h **** 	    iterator_category _IterCategory;
1263:/usr/include/c++/4.9/bits/stl_vector.h **** 	  _M_range_initialize(__first, __last, _IterCategory());
1264:/usr/include/c++/4.9/bits/stl_vector.h **** 	}
1265:/usr/include/c++/4.9/bits/stl_vector.h **** 
1266:/usr/include/c++/4.9/bits/stl_vector.h ****       // Called by the second initialize_dispatch above
1267:/usr/include/c++/4.9/bits/stl_vector.h ****       template<typename _InputIterator>
1268:/usr/include/c++/4.9/bits/stl_vector.h ****         void
1269:/usr/include/c++/4.9/bits/stl_vector.h ****         _M_range_initialize(_InputIterator __first,
1270:/usr/include/c++/4.9/bits/stl_vector.h **** 			    _InputIterator __last, std::input_iterator_tag)
1271:/usr/include/c++/4.9/bits/stl_vector.h ****         {
1272:/usr/include/c++/4.9/bits/stl_vector.h **** 	  for (; __first != __last; ++__first)
1273:/usr/include/c++/4.9/bits/stl_vector.h **** #if __cplusplus >= 201103L
1274:/usr/include/c++/4.9/bits/stl_vector.h **** 	    emplace_back(*__first);
1275:/usr/include/c++/4.9/bits/stl_vector.h **** #else
1276:/usr/include/c++/4.9/bits/stl_vector.h **** 	    push_back(*__first);
1277:/usr/include/c++/4.9/bits/stl_vector.h **** #endif
1278:/usr/include/c++/4.9/bits/stl_vector.h **** 	}
1279:/usr/include/c++/4.9/bits/stl_vector.h **** 
1280:/usr/include/c++/4.9/bits/stl_vector.h ****       // Called by the second initialize_dispatch above
1281:/usr/include/c++/4.9/bits/stl_vector.h ****       template<typename _ForwardIterator>
1282:/usr/include/c++/4.9/bits/stl_vector.h ****         void
1283:/usr/include/c++/4.9/bits/stl_vector.h ****         _M_range_initialize(_ForwardIterator __first,
1284:/usr/include/c++/4.9/bits/stl_vector.h **** 			    _ForwardIterator __last, std::forward_iterator_tag)
1285:/usr/include/c++/4.9/bits/stl_vector.h ****         {
1286:/usr/include/c++/4.9/bits/stl_vector.h **** 	  const size_type __n = std::distance(__first, __last);
1287:/usr/include/c++/4.9/bits/stl_vector.h **** 	  this->_M_impl._M_start = this->_M_allocate(__n);
1288:/usr/include/c++/4.9/bits/stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
1289:/usr/include/c++/4.9/bits/stl_vector.h **** 	  this->_M_impl._M_finish =
1290:/usr/include/c++/4.9/bits/stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
1291:/usr/include/c++/4.9/bits/stl_vector.h **** 					this->_M_impl._M_start,
1292:/usr/include/c++/4.9/bits/stl_vector.h **** 					_M_get_Tp_allocator());
1293:/usr/include/c++/4.9/bits/stl_vector.h **** 	}
1294:/usr/include/c++/4.9/bits/stl_vector.h **** 
1295:/usr/include/c++/4.9/bits/stl_vector.h ****       // Called by the first initialize_dispatch above and by the
1296:/usr/include/c++/4.9/bits/stl_vector.h ****       // vector(n,value,a) constructor.
1297:/usr/include/c++/4.9/bits/stl_vector.h ****       void
1298:/usr/include/c++/4.9/bits/stl_vector.h ****       _M_fill_initialize(size_type __n, const value_type& __value)
 6591              		.loc 7 1298 0
 6592              		.cfi_startproc
 6593 0000 55       		pushq	%rbp
 6594              		.cfi_def_cfa_offset 16
 6595              		.cfi_offset 6, -16
 6596 0001 4889E5   		movq	%rsp, %rbp
 6597              		.cfi_def_cfa_register 6
 6598 0004 4883EC20 		subq	$32, %rsp
 6599 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6600 000c 488975F0 		movq	%rsi, -16(%rbp)
 6601 0010 488955E8 		movq	%rdx, -24(%rbp)
1299:/usr/include/c++/4.9/bits/stl_vector.h ****       {
1300:/usr/include/c++/4.9/bits/stl_vector.h **** 	std::__uninitialized_fill_n_a(this->_M_impl._M_start, __n, __value, 
1301:/usr/include/c++/4.9/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 6602              		.loc 7 1301 0
 6603 0014 488B45F8 		movq	-8(%rbp), %rax
 6604 0018 4889C7   		movq	%rax, %rdi
 6605 001b E8000000 		call	_ZNSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv
 6605      00
 6606 0020 4889C1   		movq	%rax, %rcx
 6607 0023 488B45F8 		movq	-8(%rbp), %rax
 6608 0027 488B00   		movq	(%rax), %rax
1300:/usr/include/c++/4.9/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 6609              		.loc 7 1300 0
 6610 002a 488B55E8 		movq	-24(%rbp), %rdx
 6611 002e 488B75F0 		movq	-16(%rbp), %rsi
 6612 0032 4889C7   		movq	%rax, %rdi
 6613 0035 E8000000 		call	_ZSt24__uninitialized_fill_n_aIPfmffEvT_T0_RKT1_RSaIT2_E
 6613      00
1302:/usr/include/c++/4.9/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_end_of_storage;
 6614              		.loc 7 1302 0
 6615 003a 488B45F8 		movq	-8(%rbp), %rax
 6616 003e 488B5010 		movq	16(%rax), %rdx
 6617 0042 488B45F8 		movq	-8(%rbp), %rax
 6618 0046 48895008 		movq	%rdx, 8(%rax)
1303:/usr/include/c++/4.9/bits/stl_vector.h ****       }
 6619              		.loc 7 1303 0
 6620 004a C9       		leave
 6621              		.cfi_def_cfa 7, 8
 6622 004b C3       		ret
 6623              		.cfi_endproc
 6624              	.LFE1529:
 6626              		.section	.text._ZNSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNSt12_Vector_b
 6627              		.align 2
 6628              		.weak	_ZNSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv
 6630              	_ZNSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv:
 6631              	.LFB1530:
 113:/usr/include/c++/4.9/bits/stl_vector.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 6632              		.loc 7 113 0
 6633              		.cfi_startproc
 6634 0000 55       		pushq	%rbp
 6635              		.cfi_def_cfa_offset 16
 6636              		.cfi_offset 6, -16
 6637 0001 4889E5   		movq	%rsp, %rbp
 6638              		.cfi_def_cfa_register 6
 6639 0004 48897DF8 		movq	%rdi, -8(%rbp)
 114:/usr/include/c++/4.9/bits/stl_vector.h **** 
 6640              		.loc 7 114 0
 6641 0008 488B45F8 		movq	-8(%rbp), %rax
 6642 000c 5D       		popq	%rbp
 6643              		.cfi_def_cfa 7, 8
 6644 000d C3       		ret
 6645              		.cfi_endproc
 6646              	.LFE1530:
 6648              		.section	.text._ZSt8_DestroyIPffEvT_S1_RSaIT0_E,"axG",@progbits,_ZSt8_DestroyIPffEvT_S1_RSaIT0_E,c
 6649              		.weak	_ZSt8_DestroyIPffEvT_S1_RSaIT0_E
 6651              	_ZSt8_DestroyIPffEvT_S1_RSaIT0_E:
 6652              	.LFB1531:
 6653              		.file 10 "/usr/include/c++/4.9/bits/stl_construct.h"
   1:/usr/include/c++/4.9/bits/stl_construct.h **** // nonstandard construct and destroy functions -*- C++ -*-
   2:/usr/include/c++/4.9/bits/stl_construct.h **** 
   3:/usr/include/c++/4.9/bits/stl_construct.h **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   4:/usr/include/c++/4.9/bits/stl_construct.h **** //
   5:/usr/include/c++/4.9/bits/stl_construct.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/4.9/bits/stl_construct.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/4.9/bits/stl_construct.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/4.9/bits/stl_construct.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/4.9/bits/stl_construct.h **** // any later version.
  10:/usr/include/c++/4.9/bits/stl_construct.h **** 
  11:/usr/include/c++/4.9/bits/stl_construct.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/4.9/bits/stl_construct.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/4.9/bits/stl_construct.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/4.9/bits/stl_construct.h **** // GNU General Public License for more details.
  15:/usr/include/c++/4.9/bits/stl_construct.h **** 
  16:/usr/include/c++/4.9/bits/stl_construct.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/4.9/bits/stl_construct.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/4.9/bits/stl_construct.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/4.9/bits/stl_construct.h **** 
  20:/usr/include/c++/4.9/bits/stl_construct.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/4.9/bits/stl_construct.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/4.9/bits/stl_construct.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/4.9/bits/stl_construct.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/4.9/bits/stl_construct.h **** 
  25:/usr/include/c++/4.9/bits/stl_construct.h **** /*
  26:/usr/include/c++/4.9/bits/stl_construct.h ****  *
  27:/usr/include/c++/4.9/bits/stl_construct.h ****  * Copyright (c) 1994
  28:/usr/include/c++/4.9/bits/stl_construct.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/4.9/bits/stl_construct.h ****  *
  30:/usr/include/c++/4.9/bits/stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/4.9/bits/stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/4.9/bits/stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/4.9/bits/stl_construct.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/4.9/bits/stl_construct.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/4.9/bits/stl_construct.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/4.9/bits/stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/4.9/bits/stl_construct.h ****  *
  38:/usr/include/c++/4.9/bits/stl_construct.h ****  *
  39:/usr/include/c++/4.9/bits/stl_construct.h ****  * Copyright (c) 1996,1997
  40:/usr/include/c++/4.9/bits/stl_construct.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/4.9/bits/stl_construct.h ****  *
  42:/usr/include/c++/4.9/bits/stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/4.9/bits/stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/4.9/bits/stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/4.9/bits/stl_construct.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/4.9/bits/stl_construct.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/4.9/bits/stl_construct.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/4.9/bits/stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/4.9/bits/stl_construct.h ****  */
  50:/usr/include/c++/4.9/bits/stl_construct.h **** 
  51:/usr/include/c++/4.9/bits/stl_construct.h **** /** @file bits/stl_construct.h
  52:/usr/include/c++/4.9/bits/stl_construct.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/4.9/bits/stl_construct.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:/usr/include/c++/4.9/bits/stl_construct.h ****  */
  55:/usr/include/c++/4.9/bits/stl_construct.h **** 
  56:/usr/include/c++/4.9/bits/stl_construct.h **** #ifndef _STL_CONSTRUCT_H
  57:/usr/include/c++/4.9/bits/stl_construct.h **** #define _STL_CONSTRUCT_H 1
  58:/usr/include/c++/4.9/bits/stl_construct.h **** 
  59:/usr/include/c++/4.9/bits/stl_construct.h **** #include <new>
  60:/usr/include/c++/4.9/bits/stl_construct.h **** #include <bits/move.h>
  61:/usr/include/c++/4.9/bits/stl_construct.h **** #include <ext/alloc_traits.h>
  62:/usr/include/c++/4.9/bits/stl_construct.h **** 
  63:/usr/include/c++/4.9/bits/stl_construct.h **** namespace std _GLIBCXX_VISIBILITY(default)
  64:/usr/include/c++/4.9/bits/stl_construct.h **** {
  65:/usr/include/c++/4.9/bits/stl_construct.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  66:/usr/include/c++/4.9/bits/stl_construct.h **** 
  67:/usr/include/c++/4.9/bits/stl_construct.h ****   /**
  68:/usr/include/c++/4.9/bits/stl_construct.h ****    * Constructs an object in existing memory by invoking an allocated
  69:/usr/include/c++/4.9/bits/stl_construct.h ****    * object's constructor with an initializer.
  70:/usr/include/c++/4.9/bits/stl_construct.h ****    */
  71:/usr/include/c++/4.9/bits/stl_construct.h **** #if __cplusplus >= 201103L
  72:/usr/include/c++/4.9/bits/stl_construct.h ****   template<typename _T1, typename... _Args>
  73:/usr/include/c++/4.9/bits/stl_construct.h ****     inline void
  74:/usr/include/c++/4.9/bits/stl_construct.h ****     _Construct(_T1* __p, _Args&&... __args)
  75:/usr/include/c++/4.9/bits/stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
  76:/usr/include/c++/4.9/bits/stl_construct.h **** #else
  77:/usr/include/c++/4.9/bits/stl_construct.h ****   template<typename _T1, typename _T2>
  78:/usr/include/c++/4.9/bits/stl_construct.h ****     inline void
  79:/usr/include/c++/4.9/bits/stl_construct.h ****     _Construct(_T1* __p, const _T2& __value)
  80:/usr/include/c++/4.9/bits/stl_construct.h ****     {
  81:/usr/include/c++/4.9/bits/stl_construct.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  82:/usr/include/c++/4.9/bits/stl_construct.h ****       // 402. wrong new expression in [some_]allocator::construct
  83:/usr/include/c++/4.9/bits/stl_construct.h ****       ::new(static_cast<void*>(__p)) _T1(__value);
  84:/usr/include/c++/4.9/bits/stl_construct.h ****     }
  85:/usr/include/c++/4.9/bits/stl_construct.h **** #endif
  86:/usr/include/c++/4.9/bits/stl_construct.h **** 
  87:/usr/include/c++/4.9/bits/stl_construct.h ****   /**
  88:/usr/include/c++/4.9/bits/stl_construct.h ****    * Destroy the object pointed to by a pointer type.
  89:/usr/include/c++/4.9/bits/stl_construct.h ****    */
  90:/usr/include/c++/4.9/bits/stl_construct.h ****   template<typename _Tp>
  91:/usr/include/c++/4.9/bits/stl_construct.h ****     inline void
  92:/usr/include/c++/4.9/bits/stl_construct.h ****     _Destroy(_Tp* __pointer)
  93:/usr/include/c++/4.9/bits/stl_construct.h ****     { __pointer->~_Tp(); }
  94:/usr/include/c++/4.9/bits/stl_construct.h **** 
  95:/usr/include/c++/4.9/bits/stl_construct.h ****   template<bool>
  96:/usr/include/c++/4.9/bits/stl_construct.h ****     struct _Destroy_aux
  97:/usr/include/c++/4.9/bits/stl_construct.h ****     {
  98:/usr/include/c++/4.9/bits/stl_construct.h ****       template<typename _ForwardIterator>
  99:/usr/include/c++/4.9/bits/stl_construct.h ****         static void
 100:/usr/include/c++/4.9/bits/stl_construct.h ****         __destroy(_ForwardIterator __first, _ForwardIterator __last)
 101:/usr/include/c++/4.9/bits/stl_construct.h **** 	{
 102:/usr/include/c++/4.9/bits/stl_construct.h **** 	  for (; __first != __last; ++__first)
 103:/usr/include/c++/4.9/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 104:/usr/include/c++/4.9/bits/stl_construct.h **** 	}
 105:/usr/include/c++/4.9/bits/stl_construct.h ****     };
 106:/usr/include/c++/4.9/bits/stl_construct.h **** 
 107:/usr/include/c++/4.9/bits/stl_construct.h ****   template<>
 108:/usr/include/c++/4.9/bits/stl_construct.h ****     struct _Destroy_aux<true>
 109:/usr/include/c++/4.9/bits/stl_construct.h ****     {
 110:/usr/include/c++/4.9/bits/stl_construct.h ****       template<typename _ForwardIterator>
 111:/usr/include/c++/4.9/bits/stl_construct.h ****         static void
 112:/usr/include/c++/4.9/bits/stl_construct.h ****         __destroy(_ForwardIterator, _ForwardIterator) { }
 113:/usr/include/c++/4.9/bits/stl_construct.h ****     };
 114:/usr/include/c++/4.9/bits/stl_construct.h **** 
 115:/usr/include/c++/4.9/bits/stl_construct.h ****   /**
 116:/usr/include/c++/4.9/bits/stl_construct.h ****    * Destroy a range of objects.  If the value_type of the object has
 117:/usr/include/c++/4.9/bits/stl_construct.h ****    * a trivial destructor, the compiler should optimize all of this
 118:/usr/include/c++/4.9/bits/stl_construct.h ****    * away, otherwise the objects' destructors must be invoked.
 119:/usr/include/c++/4.9/bits/stl_construct.h ****    */
 120:/usr/include/c++/4.9/bits/stl_construct.h ****   template<typename _ForwardIterator>
 121:/usr/include/c++/4.9/bits/stl_construct.h ****     inline void
 122:/usr/include/c++/4.9/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 123:/usr/include/c++/4.9/bits/stl_construct.h ****     {
 124:/usr/include/c++/4.9/bits/stl_construct.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 125:/usr/include/c++/4.9/bits/stl_construct.h ****                        _Value_type;
 126:/usr/include/c++/4.9/bits/stl_construct.h ****       std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
 127:/usr/include/c++/4.9/bits/stl_construct.h **** 	__destroy(__first, __last);
 128:/usr/include/c++/4.9/bits/stl_construct.h ****     }
 129:/usr/include/c++/4.9/bits/stl_construct.h **** 
 130:/usr/include/c++/4.9/bits/stl_construct.h ****   /**
 131:/usr/include/c++/4.9/bits/stl_construct.h ****    * Destroy a range of objects using the supplied allocator.  For
 132:/usr/include/c++/4.9/bits/stl_construct.h ****    * nondefault allocators we do not optimize away invocation of 
 133:/usr/include/c++/4.9/bits/stl_construct.h ****    * destroy() even if _Tp has a trivial destructor.
 134:/usr/include/c++/4.9/bits/stl_construct.h ****    */
 135:/usr/include/c++/4.9/bits/stl_construct.h **** 
 136:/usr/include/c++/4.9/bits/stl_construct.h ****   template<typename _ForwardIterator, typename _Allocator>
 137:/usr/include/c++/4.9/bits/stl_construct.h ****     void
 138:/usr/include/c++/4.9/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 139:/usr/include/c++/4.9/bits/stl_construct.h **** 	     _Allocator& __alloc)
 140:/usr/include/c++/4.9/bits/stl_construct.h ****     {
 141:/usr/include/c++/4.9/bits/stl_construct.h ****       typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 142:/usr/include/c++/4.9/bits/stl_construct.h ****       for (; __first != __last; ++__first)
 143:/usr/include/c++/4.9/bits/stl_construct.h **** 	__traits::destroy(__alloc, std::__addressof(*__first));
 144:/usr/include/c++/4.9/bits/stl_construct.h ****     }
 145:/usr/include/c++/4.9/bits/stl_construct.h **** 
 146:/usr/include/c++/4.9/bits/stl_construct.h ****   template<typename _ForwardIterator, typename _Tp>
 147:/usr/include/c++/4.9/bits/stl_construct.h ****     inline void
 148:/usr/include/c++/4.9/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 6654              		.loc 10 148 0
 6655              		.cfi_startproc
 6656 0000 55       		pushq	%rbp
 6657              		.cfi_def_cfa_offset 16
 6658              		.cfi_offset 6, -16
 6659 0001 4889E5   		movq	%rsp, %rbp
 6660              		.cfi_def_cfa_register 6
 6661 0004 4883EC20 		subq	$32, %rsp
 6662 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6663 000c 488975F0 		movq	%rsi, -16(%rbp)
 6664 0010 488955E8 		movq	%rdx, -24(%rbp)
 149:/usr/include/c++/4.9/bits/stl_construct.h **** 	     allocator<_Tp>&)
 150:/usr/include/c++/4.9/bits/stl_construct.h ****     {
 151:/usr/include/c++/4.9/bits/stl_construct.h ****       _Destroy(__first, __last);
 6665              		.loc 10 151 0
 6666 0014 488B55F0 		movq	-16(%rbp), %rdx
 6667 0018 488B45F8 		movq	-8(%rbp), %rax
 6668 001c 4889D6   		movq	%rdx, %rsi
 6669 001f 4889C7   		movq	%rax, %rdi
 6670 0022 E8000000 		call	_ZSt8_DestroyIPfEvT_S1_
 6670      00
 152:/usr/include/c++/4.9/bits/stl_construct.h ****     }
 6671              		.loc 10 152 0
 6672 0027 C9       		leave
 6673              		.cfi_def_cfa 7, 8
 6674 0028 C3       		ret
 6675              		.cfi_endproc
 6676              	.LFE1531:
 6678              		.section	.text._ZN8UnitTest13ArrayAreCloseISt6vectorIfSaIfEES3_fEEbRKT_RKT0_iRKT1_,"axG",@progbits
 6679              		.weak	_ZN8UnitTest13ArrayAreCloseISt6vectorIfSaIfEES3_fEEbRKT_RKT0_iRKT1_
 6681              	_ZN8UnitTest13ArrayAreCloseISt6vectorIfSaIfEES3_fEEbRKT_RKT0_iRKT1_:
 6682              	.LFB1532:
  87:../Checks.h   **** {
 6683              		.loc 5 87 0
 6684              		.cfi_startproc
 6685 0000 55       		pushq	%rbp
 6686              		.cfi_def_cfa_offset 16
 6687              		.cfi_offset 6, -16
 6688 0001 4889E5   		movq	%rsp, %rbp
 6689              		.cfi_def_cfa_register 6
 6690 0004 53       		pushq	%rbx
 6691 0005 4883EC38 		subq	$56, %rsp
 6692              		.cfi_offset 3, -24
 6693 0009 48897DD8 		movq	%rdi, -40(%rbp)
 6694 000d 488975D0 		movq	%rsi, -48(%rbp)
 6695 0011 8955CC   		movl	%edx, -52(%rbp)
 6696 0014 48894DC0 		movq	%rcx, -64(%rbp)
 6697              	.LBB157:
  89:../Checks.h   ****     for (int i = 0; i < count; ++i)
 6698              		.loc 5 89 0
 6699 0018 C645EB01 		movb	$1, -21(%rbp)
 6700              	.LBB158:
  90:../Checks.h   ****         equal &= AreClose(expected[i], actual[i], tolerance);
 6701              		.loc 5 90 0
 6702 001c C745EC00 		movl	$0, -20(%rbp)
 6702      000000
 6703 0023 EB57     		jmp	.L364
 6704              	.L365:
  91:../Checks.h   ****     return equal;
 6705              		.loc 5 91 0 discriminator 3
 6706 0025 8B45EC   		movl	-20(%rbp), %eax
 6707 0028 4863D0   		movslq	%eax, %rdx
 6708 002b 488B45D0 		movq	-48(%rbp), %rax
 6709 002f 4889D6   		movq	%rdx, %rsi
 6710 0032 4889C7   		movq	%rax, %rdi
 6711 0035 E8000000 		call	_ZNKSt6vectorIfSaIfEEixEm
 6711      00
 6712 003a 4889C3   		movq	%rax, %rbx
 6713 003d 8B45EC   		movl	-20(%rbp), %eax
 6714 0040 4863D0   		movslq	%eax, %rdx
 6715 0043 488B45D8 		movq	-40(%rbp), %rax
 6716 0047 4889D6   		movq	%rdx, %rsi
 6717 004a 4889C7   		movq	%rax, %rdi
 6718 004d E8000000 		call	_ZNKSt6vectorIfSaIfEEixEm
 6718      00
 6719 0052 4889C1   		movq	%rax, %rcx
 6720 0055 488B45C0 		movq	-64(%rbp), %rax
 6721 0059 4889C2   		movq	%rax, %rdx
 6722 005c 4889DE   		movq	%rbx, %rsi
 6723 005f 4889CF   		movq	%rcx, %rdi
 6724 0062 E8000000 		call	_ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_
 6724      00
 6725 0067 0FB655EB 		movzbl	-21(%rbp), %edx
 6726 006b 0FB6C0   		movzbl	%al, %eax
 6727 006e 21D0     		andl	%edx, %eax
 6728 0070 85C0     		testl	%eax, %eax
 6729 0072 0F95C0   		setne	%al
 6730 0075 8845EB   		movb	%al, -21(%rbp)
  90:../Checks.h   ****         equal &= AreClose(expected[i], actual[i], tolerance);
 6731              		.loc 5 90 0 discriminator 3
 6732 0078 8345EC01 		addl	$1, -20(%rbp)
 6733              	.L364:
  90:../Checks.h   ****         equal &= AreClose(expected[i], actual[i], tolerance);
 6734              		.loc 5 90 0 is_stmt 0 discriminator 1
 6735 007c 8B45EC   		movl	-20(%rbp), %eax
 6736 007f 3B45CC   		cmpl	-52(%rbp), %eax
 6737 0082 7CA1     		jl	.L365
 6738              	.LBE158:
  92:../Checks.h   **** }
 6739              		.loc 5 92 0 is_stmt 1
 6740 0084 0FB645EB 		movzbl	-21(%rbp), %eax
 6741              	.LBE157:
  93:../Checks.h   **** 
 6742              		.loc 5 93 0
 6743 0088 4883C438 		addq	$56, %rsp
 6744 008c 5B       		popq	%rbx
 6745 008d 5D       		popq	%rbp
 6746              		.cfi_def_cfa 7, 8
 6747 008e C3       		ret
 6748              		.cfi_endproc
 6749              	.LFE1532:
 6751              		.section	.text._ZNKSt6vectorIfSaIfEEixEm,"axG",@progbits,_ZNKSt6vectorIfSaIfEEixEm,comdat
 6752              		.align 2
 6753              		.weak	_ZNKSt6vectorIfSaIfEEixEm
 6755              	_ZNKSt6vectorIfSaIfEEixEm:
 6756              	.LFB1533:
 794:/usr/include/c++/4.9/bits/stl_vector.h ****       { return *(this->_M_impl._M_start + __n); }
 6757              		.loc 7 794 0
 6758              		.cfi_startproc
 6759 0000 55       		pushq	%rbp
 6760              		.cfi_def_cfa_offset 16
 6761              		.cfi_offset 6, -16
 6762 0001 4889E5   		movq	%rsp, %rbp
 6763              		.cfi_def_cfa_register 6
 6764 0004 48897DF8 		movq	%rdi, -8(%rbp)
 6765 0008 488975F0 		movq	%rsi, -16(%rbp)
 795:/usr/include/c++/4.9/bits/stl_vector.h **** 
 6766              		.loc 7 795 0
 6767 000c 488B45F8 		movq	-8(%rbp), %rax
 6768 0010 488B00   		movq	(%rax), %rax
 6769 0013 488B55F0 		movq	-16(%rbp), %rdx
 6770 0017 48C1E202 		salq	$2, %rdx
 6771 001b 4801D0   		addq	%rdx, %rax
 6772 001e 5D       		popq	%rbp
 6773              		.cfi_def_cfa 7, 8
 6774 001f C3       		ret
 6775              		.cfi_endproc
 6776              	.LFE1533:
 6778              		.section	.text._ZNSt12_Vector_baseIfSaIfEE12_Vector_implC2ERKS0_,"axG",@progbits,_ZNSt12_Vector_ba
 6779              		.align 2
 6780              		.weak	_ZNSt12_Vector_baseIfSaIfEE12_Vector_implC2ERKS0_
 6782              	_ZNSt12_Vector_baseIfSaIfEE12_Vector_implC2ERKS0_:
 6783              	.LFB1551:
  90:/usr/include/c++/4.9/bits/stl_vector.h **** 	: _Tp_alloc_type(__a), _M_start(0), _M_finish(0), _M_end_of_storage(0)
 6784              		.loc 7 90 0
 6785              		.cfi_startproc
 6786 0000 55       		pushq	%rbp
 6787              		.cfi_def_cfa_offset 16
 6788              		.cfi_offset 6, -16
 6789 0001 4889E5   		movq	%rsp, %rbp
 6790              		.cfi_def_cfa_register 6
 6791 0004 4883EC10 		subq	$16, %rsp
 6792 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6793 000c 488975F0 		movq	%rsi, -16(%rbp)
 6794              	.LBB159:
  91:/usr/include/c++/4.9/bits/stl_vector.h **** 	{ }
 6795              		.loc 7 91 0
 6796 0010 488B55F0 		movq	-16(%rbp), %rdx
 6797 0014 488B45F8 		movq	-8(%rbp), %rax
 6798 0018 4889D6   		movq	%rdx, %rsi
 6799 001b 4889C7   		movq	%rax, %rdi
 6800 001e E8000000 		call	_ZNSaIfEC2ERKS_
 6800      00
 6801 0023 488B45F8 		movq	-8(%rbp), %rax
 6802 0027 48C70000 		movq	$0, (%rax)
 6802      000000
 6803 002e 488B45F8 		movq	-8(%rbp), %rax
 6804 0032 48C74008 		movq	$0, 8(%rax)
 6804      00000000 
 6805 003a 488B45F8 		movq	-8(%rbp), %rax
 6806 003e 48C74010 		movq	$0, 16(%rax)
 6806      00000000 
 6807              	.LBE159:
  92:/usr/include/c++/4.9/bits/stl_vector.h **** 
 6808              		.loc 7 92 0
 6809 0046 C9       		leave
 6810              		.cfi_def_cfa 7, 8
 6811 0047 C3       		ret
 6812              		.cfi_endproc
 6813              	.LFE1551:
 6815              		.weak	_ZNSt12_Vector_baseIfSaIfEE12_Vector_implC1ERKS0_
 6816              		.set	_ZNSt12_Vector_baseIfSaIfEE12_Vector_implC1ERKS0_,_ZNSt12_Vector_baseIfSaIfEE12_Vector_implC2
 6817              		.section	.text._ZNSt12_Vector_baseIfSaIfEE17_M_create_storageEm,"axG",@progbits,_ZNSt12_Vector_bas
 6818              		.align 2
 6819              		.weak	_ZNSt12_Vector_baseIfSaIfEE17_M_create_storageEm
 6821              	_ZNSt12_Vector_baseIfSaIfEE17_M_create_storageEm:
 6822              	.LFB1553:
 183:/usr/include/c++/4.9/bits/stl_vector.h ****       {
 6823              		.loc 7 183 0
 6824              		.cfi_startproc
 6825 0000 55       		pushq	%rbp
 6826              		.cfi_def_cfa_offset 16
 6827              		.cfi_offset 6, -16
 6828 0001 4889E5   		movq	%rsp, %rbp
 6829              		.cfi_def_cfa_register 6
 6830 0004 4883EC10 		subq	$16, %rsp
 6831 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6832 000c 488975F0 		movq	%rsi, -16(%rbp)
 185:/usr/include/c++/4.9/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 6833              		.loc 7 185 0
 6834 0010 488B55F0 		movq	-16(%rbp), %rdx
 6835 0014 488B45F8 		movq	-8(%rbp), %rax
 6836 0018 4889D6   		movq	%rdx, %rsi
 6837 001b 4889C7   		movq	%rax, %rdi
 6838 001e E8000000 		call	_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm
 6838      00
 6839 0023 4889C2   		movq	%rax, %rdx
 6840 0026 488B45F8 		movq	-8(%rbp), %rax
 6841 002a 488910   		movq	%rdx, (%rax)
 186:/usr/include/c++/4.9/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 6842              		.loc 7 186 0
 6843 002d 488B45F8 		movq	-8(%rbp), %rax
 6844 0031 488B10   		movq	(%rax), %rdx
 6845 0034 488B45F8 		movq	-8(%rbp), %rax
 6846 0038 48895008 		movq	%rdx, 8(%rax)
 187:/usr/include/c++/4.9/bits/stl_vector.h ****       }
 6847              		.loc 7 187 0
 6848 003c 488B45F8 		movq	-8(%rbp), %rax
 6849 0040 488B00   		movq	(%rax), %rax
 6850 0043 488B55F0 		movq	-16(%rbp), %rdx
 6851 0047 48C1E202 		salq	$2, %rdx
 6852 004b 4801C2   		addq	%rax, %rdx
 6853 004e 488B45F8 		movq	-8(%rbp), %rax
 6854 0052 48895010 		movq	%rdx, 16(%rax)
 188:/usr/include/c++/4.9/bits/stl_vector.h ****     };
 6855              		.loc 7 188 0
 6856 0056 C9       		leave
 6857              		.cfi_def_cfa 7, 8
 6858 0057 C3       		ret
 6859              		.cfi_endproc
 6860              	.LFE1553:
 6862              		.section	.text._ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm,"axG",@progbits,_ZNSt12_Vector_baseI
 6863              		.align 2
 6864              		.weak	_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm
 6866              	_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm:
 6867              	.LFB1554:
 174:/usr/include/c++/4.9/bits/stl_vector.h ****       {
 6868              		.loc 7 174 0
 6869              		.cfi_startproc
 6870 0000 55       		pushq	%rbp
 6871              		.cfi_def_cfa_offset 16
 6872              		.cfi_offset 6, -16
 6873 0001 4889E5   		movq	%rsp, %rbp
 6874              		.cfi_def_cfa_register 6
 6875 0004 4883EC20 		subq	$32, %rsp
 6876 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6877 000c 488975F0 		movq	%rsi, -16(%rbp)
 6878 0010 488955E8 		movq	%rdx, -24(%rbp)
 6879              	.LBB160:
 177:/usr/include/c++/4.9/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 6880              		.loc 7 177 0
 6881 0014 48837DF0 		cmpq	$0, -16(%rbp)
 6881      00
 6882 0019 7417     		je	.L371
 178:/usr/include/c++/4.9/bits/stl_vector.h ****       }
 6883              		.loc 7 178 0
 6884 001b 488B45F8 		movq	-8(%rbp), %rax
 6885 001f 488B55E8 		movq	-24(%rbp), %rdx
 6886 0023 488B4DF0 		movq	-16(%rbp), %rcx
 6887 0027 4889CE   		movq	%rcx, %rsi
 6888 002a 4889C7   		movq	%rax, %rdi
 6889 002d E8000000 		call	_ZN9__gnu_cxx14__alloc_traitsISaIfEE10deallocateERS1_Pfm
 6889      00
 6890              	.L371:
 6891              	.LBE160:
 179:/usr/include/c++/4.9/bits/stl_vector.h **** 
 6892              		.loc 7 179 0
 6893 0032 C9       		leave
 6894              		.cfi_def_cfa 7, 8
 6895 0033 C3       		ret
 6896              		.cfi_endproc
 6897              	.LFE1554:
 6899              		.section	.text._ZSt24__uninitialized_fill_n_aIPfmffEvT_T0_RKT1_RSaIT2_E,"axG",@progbits,_ZSt24__un
 6900              		.weak	_ZSt24__uninitialized_fill_n_aIPfmffEvT_T0_RKT1_RSaIT2_E
 6902              	_ZSt24__uninitialized_fill_n_aIPfmffEvT_T0_RKT1_RSaIT2_E:
 6903              	.LFB1555:
 6904              		.file 11 "/usr/include/c++/4.9/bits/stl_uninitialized.h"
   1:/usr/include/c++/4.9/bits/stl_uninitialized.h **** // Raw memory manipulators -*- C++ -*-
   2:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 
   3:/usr/include/c++/4.9/bits/stl_uninitialized.h **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   4:/usr/include/c++/4.9/bits/stl_uninitialized.h **** //
   5:/usr/include/c++/4.9/bits/stl_uninitialized.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/4.9/bits/stl_uninitialized.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/4.9/bits/stl_uninitialized.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/4.9/bits/stl_uninitialized.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/4.9/bits/stl_uninitialized.h **** // any later version.
  10:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 
  11:/usr/include/c++/4.9/bits/stl_uninitialized.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/4.9/bits/stl_uninitialized.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/4.9/bits/stl_uninitialized.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/4.9/bits/stl_uninitialized.h **** // GNU General Public License for more details.
  15:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 
  16:/usr/include/c++/4.9/bits/stl_uninitialized.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/4.9/bits/stl_uninitialized.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/4.9/bits/stl_uninitialized.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 
  20:/usr/include/c++/4.9/bits/stl_uninitialized.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/4.9/bits/stl_uninitialized.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/4.9/bits/stl_uninitialized.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/4.9/bits/stl_uninitialized.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 
  25:/usr/include/c++/4.9/bits/stl_uninitialized.h **** /*
  26:/usr/include/c++/4.9/bits/stl_uninitialized.h ****  *
  27:/usr/include/c++/4.9/bits/stl_uninitialized.h ****  * Copyright (c) 1994
  28:/usr/include/c++/4.9/bits/stl_uninitialized.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/4.9/bits/stl_uninitialized.h ****  *
  30:/usr/include/c++/4.9/bits/stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/4.9/bits/stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/4.9/bits/stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/4.9/bits/stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/4.9/bits/stl_uninitialized.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/4.9/bits/stl_uninitialized.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/4.9/bits/stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/4.9/bits/stl_uninitialized.h ****  *
  38:/usr/include/c++/4.9/bits/stl_uninitialized.h ****  *
  39:/usr/include/c++/4.9/bits/stl_uninitialized.h ****  * Copyright (c) 1996,1997
  40:/usr/include/c++/4.9/bits/stl_uninitialized.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/4.9/bits/stl_uninitialized.h ****  *
  42:/usr/include/c++/4.9/bits/stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/4.9/bits/stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/4.9/bits/stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/4.9/bits/stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/4.9/bits/stl_uninitialized.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/4.9/bits/stl_uninitialized.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/4.9/bits/stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/4.9/bits/stl_uninitialized.h ****  */
  50:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 
  51:/usr/include/c++/4.9/bits/stl_uninitialized.h **** /** @file bits/stl_uninitialized.h
  52:/usr/include/c++/4.9/bits/stl_uninitialized.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/4.9/bits/stl_uninitialized.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:/usr/include/c++/4.9/bits/stl_uninitialized.h ****  */
  55:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 
  56:/usr/include/c++/4.9/bits/stl_uninitialized.h **** #ifndef _STL_UNINITIALIZED_H
  57:/usr/include/c++/4.9/bits/stl_uninitialized.h **** #define _STL_UNINITIALIZED_H 1
  58:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 
  59:/usr/include/c++/4.9/bits/stl_uninitialized.h **** namespace std _GLIBCXX_VISIBILITY(default)
  60:/usr/include/c++/4.9/bits/stl_uninitialized.h **** {
  61:/usr/include/c++/4.9/bits/stl_uninitialized.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  62:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 
  63:/usr/include/c++/4.9/bits/stl_uninitialized.h ****   template<bool _TrivialValueTypes>
  64:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     struct __uninitialized_copy
  65:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     {
  66:/usr/include/c++/4.9/bits/stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
  67:/usr/include/c++/4.9/bits/stl_uninitialized.h ****         static _ForwardIterator
  68:/usr/include/c++/4.9/bits/stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
  69:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
  70:/usr/include/c++/4.9/bits/stl_uninitialized.h ****         {
  71:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	  _ForwardIterator __cur = __result;
  72:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	  __try
  73:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	    {
  74:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	      for (; __first != __last; ++__first, ++__cur)
  75:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
  76:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	      return __cur;
  77:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	    }
  78:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	  __catch(...)
  79:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	    {
  80:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	      std::_Destroy(__result, __cur);
  81:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	      __throw_exception_again;
  82:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	    }
  83:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	}
  84:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     };
  85:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 
  86:/usr/include/c++/4.9/bits/stl_uninitialized.h ****   template<>
  87:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     struct __uninitialized_copy<true>
  88:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     {
  89:/usr/include/c++/4.9/bits/stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
  90:/usr/include/c++/4.9/bits/stl_uninitialized.h ****         static _ForwardIterator
  91:/usr/include/c++/4.9/bits/stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
  92:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
  93:/usr/include/c++/4.9/bits/stl_uninitialized.h ****         { return std::copy(__first, __last, __result); }
  94:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     };
  95:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 
  96:/usr/include/c++/4.9/bits/stl_uninitialized.h ****   /**
  97:/usr/include/c++/4.9/bits/stl_uninitialized.h ****    *  @brief Copies the range [first,last) into result.
  98:/usr/include/c++/4.9/bits/stl_uninitialized.h ****    *  @param  __first  An input iterator.
  99:/usr/include/c++/4.9/bits/stl_uninitialized.h ****    *  @param  __last   An input iterator.
 100:/usr/include/c++/4.9/bits/stl_uninitialized.h ****    *  @param  __result An output iterator.
 101:/usr/include/c++/4.9/bits/stl_uninitialized.h ****    *  @return   __result + (__first - __last)
 102:/usr/include/c++/4.9/bits/stl_uninitialized.h ****    *
 103:/usr/include/c++/4.9/bits/stl_uninitialized.h ****    *  Like copy(), but does not require an initialized output range.
 104:/usr/include/c++/4.9/bits/stl_uninitialized.h ****   */
 105:/usr/include/c++/4.9/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator>
 106:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     inline _ForwardIterator
 107:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     uninitialized_copy(_InputIterator __first, _InputIterator __last,
 108:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 109:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     {
 110:/usr/include/c++/4.9/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::value_type
 111:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	_ValueType1;
 112:/usr/include/c++/4.9/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 113:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	_ValueType2;
 114:/usr/include/c++/4.9/bits/stl_uninitialized.h **** #if __cplusplus < 201103L
 115:/usr/include/c++/4.9/bits/stl_uninitialized.h ****       const bool __assignable = true;
 116:/usr/include/c++/4.9/bits/stl_uninitialized.h **** #else
 117:/usr/include/c++/4.9/bits/stl_uninitialized.h ****       // trivial types can have deleted assignment
 118:/usr/include/c++/4.9/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::reference _RefType1;
 119:/usr/include/c++/4.9/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::reference _RefType2;
 120:/usr/include/c++/4.9/bits/stl_uninitialized.h ****       const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 121:/usr/include/c++/4.9/bits/stl_uninitialized.h **** #endif
 122:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 
 123:/usr/include/c++/4.9/bits/stl_uninitialized.h ****       return std::__uninitialized_copy<__is_trivial(_ValueType1)
 124:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 				       && __is_trivial(_ValueType2)
 125:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 				       && __assignable>::
 126:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	__uninit_copy(__first, __last, __result);
 127:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     }
 128:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 
 129:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 
 130:/usr/include/c++/4.9/bits/stl_uninitialized.h ****   template<bool _TrivialValueType>
 131:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     struct __uninitialized_fill
 132:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     {
 133:/usr/include/c++/4.9/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 134:/usr/include/c++/4.9/bits/stl_uninitialized.h ****         static void
 135:/usr/include/c++/4.9/bits/stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 136:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 		      const _Tp& __x)
 137:/usr/include/c++/4.9/bits/stl_uninitialized.h ****         {
 138:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 139:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	  __try
 140:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	    {
 141:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 142:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 143:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	    }
 144:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	  __catch(...)
 145:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	    {
 146:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 147:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	      __throw_exception_again;
 148:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	    }
 149:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	}
 150:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     };
 151:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 
 152:/usr/include/c++/4.9/bits/stl_uninitialized.h ****   template<>
 153:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     struct __uninitialized_fill<true>
 154:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     {
 155:/usr/include/c++/4.9/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 156:/usr/include/c++/4.9/bits/stl_uninitialized.h ****         static void
 157:/usr/include/c++/4.9/bits/stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 158:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 		      const _Tp& __x)
 159:/usr/include/c++/4.9/bits/stl_uninitialized.h ****         { std::fill(__first, __last, __x); }
 160:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     };
 161:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 
 162:/usr/include/c++/4.9/bits/stl_uninitialized.h ****   /**
 163:/usr/include/c++/4.9/bits/stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,last).
 164:/usr/include/c++/4.9/bits/stl_uninitialized.h ****    *  @param  __first  An input iterator.
 165:/usr/include/c++/4.9/bits/stl_uninitialized.h ****    *  @param  __last   An input iterator.
 166:/usr/include/c++/4.9/bits/stl_uninitialized.h ****    *  @param  __x      The source value.
 167:/usr/include/c++/4.9/bits/stl_uninitialized.h ****    *  @return   Nothing.
 168:/usr/include/c++/4.9/bits/stl_uninitialized.h ****    *
 169:/usr/include/c++/4.9/bits/stl_uninitialized.h ****    *  Like fill(), but does not require an initialized output range.
 170:/usr/include/c++/4.9/bits/stl_uninitialized.h ****   */
 171:/usr/include/c++/4.9/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp>
 172:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     inline void
 173:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last,
 174:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 		       const _Tp& __x)
 175:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     {
 176:/usr/include/c++/4.9/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 177:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	_ValueType;
 178:/usr/include/c++/4.9/bits/stl_uninitialized.h **** #if __cplusplus < 201103L
 179:/usr/include/c++/4.9/bits/stl_uninitialized.h ****       const bool __assignable = true;
 180:/usr/include/c++/4.9/bits/stl_uninitialized.h **** #else
 181:/usr/include/c++/4.9/bits/stl_uninitialized.h ****       // trivial types can have deleted assignment
 182:/usr/include/c++/4.9/bits/stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 183:/usr/include/c++/4.9/bits/stl_uninitialized.h **** #endif
 184:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 
 185:/usr/include/c++/4.9/bits/stl_uninitialized.h ****       std::__uninitialized_fill<__is_trivial(_ValueType) && __assignable>::
 186:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	__uninit_fill(__first, __last, __x);
 187:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     }
 188:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 
 189:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 
 190:/usr/include/c++/4.9/bits/stl_uninitialized.h ****   template<bool _TrivialValueType>
 191:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     struct __uninitialized_fill_n
 192:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     {
 193:/usr/include/c++/4.9/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 194:/usr/include/c++/4.9/bits/stl_uninitialized.h ****         static void
 195:/usr/include/c++/4.9/bits/stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 196:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 			const _Tp& __x)
 197:/usr/include/c++/4.9/bits/stl_uninitialized.h ****         {
 198:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 199:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	  __try
 200:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	    {
 201:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	      for (; __n > 0; --__n, ++__cur)
 202:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 203:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	    }
 204:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	  __catch(...)
 205:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	    {
 206:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 207:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	      __throw_exception_again;
 208:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	    }
 209:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	}
 210:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     };
 211:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 
 212:/usr/include/c++/4.9/bits/stl_uninitialized.h ****   template<>
 213:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     struct __uninitialized_fill_n<true>
 214:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     {
 215:/usr/include/c++/4.9/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 216:/usr/include/c++/4.9/bits/stl_uninitialized.h ****         static void
 217:/usr/include/c++/4.9/bits/stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 218:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 			const _Tp& __x)
 219:/usr/include/c++/4.9/bits/stl_uninitialized.h ****         { std::fill_n(__first, __n, __x); }
 220:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     };
 221:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 
 222:/usr/include/c++/4.9/bits/stl_uninitialized.h ****   /**
 223:/usr/include/c++/4.9/bits/stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,first+n).
 224:/usr/include/c++/4.9/bits/stl_uninitialized.h ****    *  @param  __first  An input iterator.
 225:/usr/include/c++/4.9/bits/stl_uninitialized.h ****    *  @param  __n      The number of copies to make.
 226:/usr/include/c++/4.9/bits/stl_uninitialized.h ****    *  @param  __x      The source value.
 227:/usr/include/c++/4.9/bits/stl_uninitialized.h ****    *  @return   Nothing.
 228:/usr/include/c++/4.9/bits/stl_uninitialized.h ****    *
 229:/usr/include/c++/4.9/bits/stl_uninitialized.h ****    *  Like fill_n(), but does not require an initialized output range.
 230:/usr/include/c++/4.9/bits/stl_uninitialized.h ****   */
 231:/usr/include/c++/4.9/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp>
 232:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     inline void
 233:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp& __x)
 234:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     {
 235:/usr/include/c++/4.9/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 236:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	_ValueType;
 237:/usr/include/c++/4.9/bits/stl_uninitialized.h **** #if __cplusplus < 201103L
 238:/usr/include/c++/4.9/bits/stl_uninitialized.h ****       const bool __assignable = true;
 239:/usr/include/c++/4.9/bits/stl_uninitialized.h **** #else
 240:/usr/include/c++/4.9/bits/stl_uninitialized.h ****       // trivial types can have deleted assignment
 241:/usr/include/c++/4.9/bits/stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 242:/usr/include/c++/4.9/bits/stl_uninitialized.h **** #endif
 243:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 
 244:/usr/include/c++/4.9/bits/stl_uninitialized.h ****       std::__uninitialized_fill_n<__is_trivial(_ValueType) && __assignable>::
 245:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	__uninit_fill_n(__first, __n, __x);
 246:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     }
 247:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 
 248:/usr/include/c++/4.9/bits/stl_uninitialized.h ****   // Extensions: versions of uninitialized_copy, uninitialized_fill,
 249:/usr/include/c++/4.9/bits/stl_uninitialized.h ****   //  and uninitialized_fill_n that take an allocator parameter.
 250:/usr/include/c++/4.9/bits/stl_uninitialized.h ****   //  We dispatch back to the standard versions when we're given the
 251:/usr/include/c++/4.9/bits/stl_uninitialized.h ****   //  default allocator.  For nondefault allocators we do not use 
 252:/usr/include/c++/4.9/bits/stl_uninitialized.h ****   //  any of the POD optimizations.
 253:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 
 254:/usr/include/c++/4.9/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 255:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	   typename _Allocator>
 256:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     _ForwardIterator
 257:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 258:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, _Allocator& __alloc)
 259:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     {
 260:/usr/include/c++/4.9/bits/stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 261:/usr/include/c++/4.9/bits/stl_uninitialized.h ****       __try
 262:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	{
 263:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 264:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	  for (; __first != __last; ++__first, ++__cur)
 265:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), *__first);
 266:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	  return __cur;
 267:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	}
 268:/usr/include/c++/4.9/bits/stl_uninitialized.h ****       __catch(...)
 269:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	{
 270:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	  std::_Destroy(__result, __cur, __alloc);
 271:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 272:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	}
 273:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     }
 274:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 
 275:/usr/include/c++/4.9/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
 276:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     inline _ForwardIterator
 277:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 278:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, allocator<_Tp>&)
 279:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     { return std::uninitialized_copy(__first, __last, __result); }
 280:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 
 281:/usr/include/c++/4.9/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 282:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	   typename _Allocator>
 283:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     inline _ForwardIterator
 284:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     __uninitialized_move_a(_InputIterator __first, _InputIterator __last,
 285:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, _Allocator& __alloc)
 286:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     {
 287:/usr/include/c++/4.9/bits/stl_uninitialized.h ****       return std::__uninitialized_copy_a(_GLIBCXX_MAKE_MOVE_ITERATOR(__first),
 288:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 					 _GLIBCXX_MAKE_MOVE_ITERATOR(__last),
 289:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 					 __result, __alloc);
 290:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     }
 291:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 
 292:/usr/include/c++/4.9/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 293:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	   typename _Allocator>
 294:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     inline _ForwardIterator
 295:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     __uninitialized_move_if_noexcept_a(_InputIterator __first,
 296:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 				       _InputIterator __last,
 297:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 				       _ForwardIterator __result,
 298:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 				       _Allocator& __alloc)
 299:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     {
 300:/usr/include/c++/4.9/bits/stl_uninitialized.h ****       return std::__uninitialized_copy_a
 301:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	(_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__first),
 302:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	 _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__last), __result, __alloc);
 303:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     }
 304:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 
 305:/usr/include/c++/4.9/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp, typename _Allocator>
 306:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     void
 307:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last,
 308:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 			   const _Tp& __x, _Allocator& __alloc)
 309:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     {
 310:/usr/include/c++/4.9/bits/stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 311:/usr/include/c++/4.9/bits/stl_uninitialized.h ****       __try
 312:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	{
 313:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 314:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	  for (; __cur != __last; ++__cur)
 315:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), __x);
 316:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	}
 317:/usr/include/c++/4.9/bits/stl_uninitialized.h ****       __catch(...)
 318:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	{
 319:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 320:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 321:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	}
 322:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     }
 323:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 
 324:/usr/include/c++/4.9/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp, typename _Tp2>
 325:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     inline void
 326:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last,
 327:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 			   const _Tp& __x, allocator<_Tp2>&)
 328:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     { std::uninitialized_fill(__first, __last, __x); }
 329:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 
 330:/usr/include/c++/4.9/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp,
 331:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	   typename _Allocator>
 332:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     void
 333:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, 
 334:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 			     const _Tp& __x, _Allocator& __alloc)
 335:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     {
 336:/usr/include/c++/4.9/bits/stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 337:/usr/include/c++/4.9/bits/stl_uninitialized.h ****       __try
 338:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	{
 339:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 340:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	  for (; __n > 0; --__n, ++__cur)
 341:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), __x);
 342:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	}
 343:/usr/include/c++/4.9/bits/stl_uninitialized.h ****       __catch(...)
 344:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	{
 345:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 346:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 347:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	}
 348:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     }
 349:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 
 350:/usr/include/c++/4.9/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp,
 351:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	   typename _Tp2>
 352:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     inline void
 353:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, 
 6905              		.loc 11 353 0
 6906              		.cfi_startproc
 6907 0000 55       		pushq	%rbp
 6908              		.cfi_def_cfa_offset 16
 6909              		.cfi_offset 6, -16
 6910 0001 4889E5   		movq	%rsp, %rbp
 6911              		.cfi_def_cfa_register 6
 6912 0004 4883EC20 		subq	$32, %rsp
 6913 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6914 000c 488975F0 		movq	%rsi, -16(%rbp)
 6915 0010 488955E8 		movq	%rdx, -24(%rbp)
 6916 0014 48894DE0 		movq	%rcx, -32(%rbp)
 354:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 			     const _Tp& __x, allocator<_Tp2>&)
 355:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     { std::uninitialized_fill_n(__first, __n, __x); }
 6917              		.loc 11 355 0
 6918 0018 488B55E8 		movq	-24(%rbp), %rdx
 6919 001c 488B4DF0 		movq	-16(%rbp), %rcx
 6920 0020 488B45F8 		movq	-8(%rbp), %rax
 6921 0024 4889CE   		movq	%rcx, %rsi
 6922 0027 4889C7   		movq	%rax, %rdi
 6923 002a E8000000 		call	_ZSt20uninitialized_fill_nIPfmfEvT_T0_RKT1_
 6923      00
 6924 002f C9       		leave
 6925              		.cfi_def_cfa 7, 8
 6926 0030 C3       		ret
 6927              		.cfi_endproc
 6928              	.LFE1555:
 6930              		.section	.text._ZSt8_DestroyIPfEvT_S1_,"axG",@progbits,_ZSt8_DestroyIPfEvT_S1_,comdat
 6931              		.weak	_ZSt8_DestroyIPfEvT_S1_
 6933              	_ZSt8_DestroyIPfEvT_S1_:
 6934              	.LFB1556:
 122:/usr/include/c++/4.9/bits/stl_construct.h ****     {
 6935              		.loc 10 122 0
 6936              		.cfi_startproc
 6937 0000 55       		pushq	%rbp
 6938              		.cfi_def_cfa_offset 16
 6939              		.cfi_offset 6, -16
 6940 0001 4889E5   		movq	%rsp, %rbp
 6941              		.cfi_def_cfa_register 6
 6942 0004 4883EC10 		subq	$16, %rsp
 6943 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6944 000c 488975F0 		movq	%rsi, -16(%rbp)
 6945              	.LBB161:
 126:/usr/include/c++/4.9/bits/stl_construct.h **** 	__destroy(__first, __last);
 6946              		.loc 10 126 0
 6947 0010 488B55F0 		movq	-16(%rbp), %rdx
 6948 0014 488B45F8 		movq	-8(%rbp), %rax
 6949 0018 4889D6   		movq	%rdx, %rsi
 6950 001b 4889C7   		movq	%rax, %rdi
 6951 001e E8000000 		call	_ZNSt12_Destroy_auxILb1EE9__destroyIPfEEvT_S3_
 6951      00
 6952              	.LBE161:
 128:/usr/include/c++/4.9/bits/stl_construct.h **** 
 6953              		.loc 10 128 0
 6954 0023 C9       		leave
 6955              		.cfi_def_cfa 7, 8
 6956 0024 C3       		ret
 6957              		.cfi_endproc
 6958              	.LFE1556:
 6960              		.section	.text._ZNSaIfEC2ERKS_,"axG",@progbits,_ZNSaIfEC5ERKS_,comdat
 6961              		.align 2
 6962              		.weak	_ZNSaIfEC2ERKS_
 6964              	_ZNSaIfEC2ERKS_:
 6965              	.LFB1562:
 115:/usr/include/c++/4.9/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 6966              		.loc 6 115 0
 6967              		.cfi_startproc
 6968 0000 55       		pushq	%rbp
 6969              		.cfi_def_cfa_offset 16
 6970              		.cfi_offset 6, -16
 6971 0001 4889E5   		movq	%rsp, %rbp
 6972              		.cfi_def_cfa_register 6
 6973 0004 4883EC10 		subq	$16, %rsp
 6974 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6975 000c 488975F0 		movq	%rsi, -16(%rbp)
 6976              	.LBB162:
 116:/usr/include/c++/4.9/bits/allocator.h **** 
 6977              		.loc 6 116 0
 6978 0010 488B55F0 		movq	-16(%rbp), %rdx
 6979 0014 488B45F8 		movq	-8(%rbp), %rax
 6980 0018 4889D6   		movq	%rdx, %rsi
 6981 001b 4889C7   		movq	%rax, %rdi
 6982 001e E8000000 		call	_ZN9__gnu_cxx13new_allocatorIfEC2ERKS1_
 6982      00
 6983              	.LBE162:
 6984 0023 C9       		leave
 6985              		.cfi_def_cfa 7, 8
 6986 0024 C3       		ret
 6987              		.cfi_endproc
 6988              	.LFE1562:
 6990              		.weak	_ZNSaIfEC1ERKS_
 6991              		.set	_ZNSaIfEC1ERKS_,_ZNSaIfEC2ERKS_
 6992              		.section	.text._ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm,"axG",@progbits,_ZNSt12_Vector_baseIfSaI
 6993              		.align 2
 6994              		.weak	_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm
 6996              	_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm:
 6997              	.LFB1564:
 167:/usr/include/c++/4.9/bits/stl_vector.h ****       {
 6998              		.loc 7 167 0
 6999              		.cfi_startproc
 7000 0000 55       		pushq	%rbp
 7001              		.cfi_def_cfa_offset 16
 7002              		.cfi_offset 6, -16
 7003 0001 4889E5   		movq	%rsp, %rbp
 7004              		.cfi_def_cfa_register 6
 7005 0004 4883EC10 		subq	$16, %rsp
 7006 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7007 000c 488975F0 		movq	%rsi, -16(%rbp)
 7008              	.LBB163:
 170:/usr/include/c++/4.9/bits/stl_vector.h ****       }
 7009              		.loc 7 170 0
 7010 0010 48837DF0 		cmpq	$0, -16(%rbp)
 7010      00
 7011 0015 7415     		je	.L377
 170:/usr/include/c++/4.9/bits/stl_vector.h ****       }
 7012              		.loc 7 170 0 is_stmt 0 discriminator 1
 7013 0017 488B45F8 		movq	-8(%rbp), %rax
 7014 001b 488B55F0 		movq	-16(%rbp), %rdx
 7015 001f 4889D6   		movq	%rdx, %rsi
 7016 0022 4889C7   		movq	%rax, %rdi
 7017 0025 E8000000 		call	_ZN9__gnu_cxx14__alloc_traitsISaIfEE8allocateERS1_m
 7017      00
 7018 002a EB05     		jmp	.L378
 7019              	.L377:
 170:/usr/include/c++/4.9/bits/stl_vector.h ****       }
 7020              		.loc 7 170 0 discriminator 2
 7021 002c B8000000 		movl	$0, %eax
 7021      00
 7022              	.L378:
 7023              	.LBE163:
 171:/usr/include/c++/4.9/bits/stl_vector.h **** 
 7024              		.loc 7 171 0 is_stmt 1 discriminator 4
 7025 0031 C9       		leave
 7026              		.cfi_def_cfa 7, 8
 7027 0032 C3       		ret
 7028              		.cfi_endproc
 7029              	.LFE1564:
 7031              		.section	.text._ZN9__gnu_cxx14__alloc_traitsISaIfEE10deallocateERS1_Pfm,"axG",@progbits,_ZN9__gnu_
 7032              		.weak	_ZN9__gnu_cxx14__alloc_traitsISaIfEE10deallocateERS1_Pfm
 7034              	_ZN9__gnu_cxx14__alloc_traitsISaIfEE10deallocateERS1_Pfm:
 7035              	.LFB1565:
 7036              		.file 12 "/usr/include/c++/4.9/ext/alloc_traits.h"
   1:/usr/include/c++/4.9/ext/alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:/usr/include/c++/4.9/ext/alloc_traits.h **** 
   3:/usr/include/c++/4.9/ext/alloc_traits.h **** // Copyright (C) 2011-2014 Free Software Foundation, Inc.
   4:/usr/include/c++/4.9/ext/alloc_traits.h **** //
   5:/usr/include/c++/4.9/ext/alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/4.9/ext/alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/4.9/ext/alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/4.9/ext/alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/4.9/ext/alloc_traits.h **** // any later version.
  10:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  11:/usr/include/c++/4.9/ext/alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/4.9/ext/alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/4.9/ext/alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/4.9/ext/alloc_traits.h **** // GNU General Public License for more details.
  15:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  16:/usr/include/c++/4.9/ext/alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/4.9/ext/alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/4.9/ext/alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  20:/usr/include/c++/4.9/ext/alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/4.9/ext/alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/4.9/ext/alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/4.9/ext/alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  25:/usr/include/c++/4.9/ext/alloc_traits.h **** /** @file ext/alloc_traits.h
  26:/usr/include/c++/4.9/ext/alloc_traits.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/usr/include/c++/4.9/ext/alloc_traits.h ****  */
  28:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  29:/usr/include/c++/4.9/ext/alloc_traits.h **** #ifndef _EXT_ALLOC_TRAITS_H
  30:/usr/include/c++/4.9/ext/alloc_traits.h **** #define _EXT_ALLOC_TRAITS_H 1
  31:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  32:/usr/include/c++/4.9/ext/alloc_traits.h **** #pragma GCC system_header
  33:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  34:/usr/include/c++/4.9/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  35:/usr/include/c++/4.9/ext/alloc_traits.h **** # include <bits/move.h>
  36:/usr/include/c++/4.9/ext/alloc_traits.h **** # include <bits/alloc_traits.h>
  37:/usr/include/c++/4.9/ext/alloc_traits.h **** #else
  38:/usr/include/c++/4.9/ext/alloc_traits.h **** # include <bits/allocator.h>  // for __alloc_swap
  39:/usr/include/c++/4.9/ext/alloc_traits.h **** #endif
  40:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  41:/usr/include/c++/4.9/ext/alloc_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  42:/usr/include/c++/4.9/ext/alloc_traits.h **** {
  43:/usr/include/c++/4.9/ext/alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  45:/usr/include/c++/4.9/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  46:/usr/include/c++/4.9/ext/alloc_traits.h ****   template<typename _Alloc>
  47:/usr/include/c++/4.9/ext/alloc_traits.h ****     struct __allocator_always_compares_equal : std::false_type { };
  48:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  49:/usr/include/c++/4.9/ext/alloc_traits.h ****   template<typename _Tp>
  50:/usr/include/c++/4.9/ext/alloc_traits.h ****     struct __allocator_always_compares_equal<std::allocator<_Tp>>
  51:/usr/include/c++/4.9/ext/alloc_traits.h ****     : std::true_type { };
  52:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  53:/usr/include/c++/4.9/ext/alloc_traits.h ****   template<typename, typename> struct array_allocator;
  54:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  55:/usr/include/c++/4.9/ext/alloc_traits.h ****   template<typename _Tp, typename _Array>
  56:/usr/include/c++/4.9/ext/alloc_traits.h ****     struct __allocator_always_compares_equal<array_allocator<_Tp, _Array>>
  57:/usr/include/c++/4.9/ext/alloc_traits.h ****     : std::true_type { };
  58:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  59:/usr/include/c++/4.9/ext/alloc_traits.h ****   template<typename> struct bitmap_allocator;
  60:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  61:/usr/include/c++/4.9/ext/alloc_traits.h ****   template<typename _Tp>
  62:/usr/include/c++/4.9/ext/alloc_traits.h ****     struct __allocator_always_compares_equal<bitmap_allocator<_Tp>>
  63:/usr/include/c++/4.9/ext/alloc_traits.h ****     : std::true_type { };
  64:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  65:/usr/include/c++/4.9/ext/alloc_traits.h ****   template<typename> struct malloc_allocator;
  66:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  67:/usr/include/c++/4.9/ext/alloc_traits.h ****   template<typename _Tp>
  68:/usr/include/c++/4.9/ext/alloc_traits.h ****     struct __allocator_always_compares_equal<malloc_allocator<_Tp>>
  69:/usr/include/c++/4.9/ext/alloc_traits.h ****     : std::true_type { };
  70:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  71:/usr/include/c++/4.9/ext/alloc_traits.h ****   template<typename> struct mt_allocator;
  72:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  73:/usr/include/c++/4.9/ext/alloc_traits.h ****   template<typename _Tp>
  74:/usr/include/c++/4.9/ext/alloc_traits.h ****     struct __allocator_always_compares_equal<mt_allocator<_Tp>>
  75:/usr/include/c++/4.9/ext/alloc_traits.h ****     : std::true_type { };
  76:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  77:/usr/include/c++/4.9/ext/alloc_traits.h ****   template<typename> struct new_allocator;
  78:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  79:/usr/include/c++/4.9/ext/alloc_traits.h ****   template<typename _Tp>
  80:/usr/include/c++/4.9/ext/alloc_traits.h ****     struct __allocator_always_compares_equal<new_allocator<_Tp>>
  81:/usr/include/c++/4.9/ext/alloc_traits.h ****     : std::true_type { };
  82:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  83:/usr/include/c++/4.9/ext/alloc_traits.h ****   template<typename> struct pool_allocator;
  84:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  85:/usr/include/c++/4.9/ext/alloc_traits.h ****   template<typename _Tp>
  86:/usr/include/c++/4.9/ext/alloc_traits.h ****     struct __allocator_always_compares_equal<pool_allocator<_Tp>>
  87:/usr/include/c++/4.9/ext/alloc_traits.h ****     : std::true_type { };
  88:/usr/include/c++/4.9/ext/alloc_traits.h **** #endif
  89:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  90:/usr/include/c++/4.9/ext/alloc_traits.h **** /**
  91:/usr/include/c++/4.9/ext/alloc_traits.h ****  * @brief  Uniform interface to C++98 and C++0x allocators.
  92:/usr/include/c++/4.9/ext/alloc_traits.h ****  * @ingroup allocators
  93:/usr/include/c++/4.9/ext/alloc_traits.h **** */
  94:/usr/include/c++/4.9/ext/alloc_traits.h **** template<typename _Alloc>
  95:/usr/include/c++/4.9/ext/alloc_traits.h ****   struct __alloc_traits
  96:/usr/include/c++/4.9/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  97:/usr/include/c++/4.9/ext/alloc_traits.h ****   : std::allocator_traits<_Alloc>
  98:/usr/include/c++/4.9/ext/alloc_traits.h **** #endif
  99:/usr/include/c++/4.9/ext/alloc_traits.h ****   {
 100:/usr/include/c++/4.9/ext/alloc_traits.h ****     typedef _Alloc allocator_type;
 101:/usr/include/c++/4.9/ext/alloc_traits.h **** #if __cplusplus >= 201103L
 102:/usr/include/c++/4.9/ext/alloc_traits.h ****     typedef std::allocator_traits<_Alloc>           _Base_type;
 103:/usr/include/c++/4.9/ext/alloc_traits.h ****     typedef typename _Base_type::value_type         value_type;
 104:/usr/include/c++/4.9/ext/alloc_traits.h ****     typedef typename _Base_type::pointer            pointer;
 105:/usr/include/c++/4.9/ext/alloc_traits.h ****     typedef typename _Base_type::const_pointer      const_pointer;
 106:/usr/include/c++/4.9/ext/alloc_traits.h ****     typedef typename _Base_type::size_type          size_type;
 107:/usr/include/c++/4.9/ext/alloc_traits.h ****     typedef typename _Base_type::difference_type    difference_type;
 108:/usr/include/c++/4.9/ext/alloc_traits.h ****     // C++11 allocators do not define reference or const_reference
 109:/usr/include/c++/4.9/ext/alloc_traits.h ****     typedef value_type&                             reference;
 110:/usr/include/c++/4.9/ext/alloc_traits.h ****     typedef const value_type&                       const_reference;
 111:/usr/include/c++/4.9/ext/alloc_traits.h ****     using _Base_type::allocate;
 112:/usr/include/c++/4.9/ext/alloc_traits.h ****     using _Base_type::deallocate;
 113:/usr/include/c++/4.9/ext/alloc_traits.h ****     using _Base_type::construct;
 114:/usr/include/c++/4.9/ext/alloc_traits.h ****     using _Base_type::destroy;
 115:/usr/include/c++/4.9/ext/alloc_traits.h ****     using _Base_type::max_size;
 116:/usr/include/c++/4.9/ext/alloc_traits.h **** 
 117:/usr/include/c++/4.9/ext/alloc_traits.h ****   private:
 118:/usr/include/c++/4.9/ext/alloc_traits.h ****     template<typename _Ptr>
 119:/usr/include/c++/4.9/ext/alloc_traits.h ****       using __is_custom_pointer
 120:/usr/include/c++/4.9/ext/alloc_traits.h **** 	= std::__and_<std::is_same<pointer, _Ptr>,
 121:/usr/include/c++/4.9/ext/alloc_traits.h **** 		      std::__not_<std::is_pointer<_Ptr>>>;
 122:/usr/include/c++/4.9/ext/alloc_traits.h **** 
 123:/usr/include/c++/4.9/ext/alloc_traits.h ****   public:
 124:/usr/include/c++/4.9/ext/alloc_traits.h ****     // overload construct for non-standard pointer types
 125:/usr/include/c++/4.9/ext/alloc_traits.h ****     template<typename _Ptr, typename... _Args>
 126:/usr/include/c++/4.9/ext/alloc_traits.h ****       static typename std::enable_if<__is_custom_pointer<_Ptr>::value>::type
 127:/usr/include/c++/4.9/ext/alloc_traits.h ****       construct(_Alloc& __a, _Ptr __p, _Args&&... __args)
 128:/usr/include/c++/4.9/ext/alloc_traits.h ****       {
 129:/usr/include/c++/4.9/ext/alloc_traits.h **** 	_Base_type::construct(__a, std::addressof(*__p),
 130:/usr/include/c++/4.9/ext/alloc_traits.h **** 			      std::forward<_Args>(__args)...);
 131:/usr/include/c++/4.9/ext/alloc_traits.h ****       }
 132:/usr/include/c++/4.9/ext/alloc_traits.h **** 
 133:/usr/include/c++/4.9/ext/alloc_traits.h ****     // overload destroy for non-standard pointer types
 134:/usr/include/c++/4.9/ext/alloc_traits.h ****     template<typename _Ptr>
 135:/usr/include/c++/4.9/ext/alloc_traits.h ****       static typename std::enable_if<__is_custom_pointer<_Ptr>::value>::type
 136:/usr/include/c++/4.9/ext/alloc_traits.h ****       destroy(_Alloc& __a, _Ptr __p)
 137:/usr/include/c++/4.9/ext/alloc_traits.h ****       { _Base_type::destroy(__a, std::addressof(*__p)); }
 138:/usr/include/c++/4.9/ext/alloc_traits.h **** 
 139:/usr/include/c++/4.9/ext/alloc_traits.h ****     static _Alloc _S_select_on_copy(const _Alloc& __a)
 140:/usr/include/c++/4.9/ext/alloc_traits.h ****     { return _Base_type::select_on_container_copy_construction(__a); }
 141:/usr/include/c++/4.9/ext/alloc_traits.h **** 
 142:/usr/include/c++/4.9/ext/alloc_traits.h ****     static void _S_on_swap(_Alloc& __a, _Alloc& __b)
 143:/usr/include/c++/4.9/ext/alloc_traits.h ****     { std::__alloc_on_swap(__a, __b); }
 144:/usr/include/c++/4.9/ext/alloc_traits.h **** 
 145:/usr/include/c++/4.9/ext/alloc_traits.h ****     static constexpr bool _S_propagate_on_copy_assign()
 146:/usr/include/c++/4.9/ext/alloc_traits.h ****     { return _Base_type::propagate_on_container_copy_assignment::value; }
 147:/usr/include/c++/4.9/ext/alloc_traits.h **** 
 148:/usr/include/c++/4.9/ext/alloc_traits.h ****     static constexpr bool _S_propagate_on_move_assign()
 149:/usr/include/c++/4.9/ext/alloc_traits.h ****     { return _Base_type::propagate_on_container_move_assignment::value; }
 150:/usr/include/c++/4.9/ext/alloc_traits.h **** 
 151:/usr/include/c++/4.9/ext/alloc_traits.h ****     static constexpr bool _S_propagate_on_swap()
 152:/usr/include/c++/4.9/ext/alloc_traits.h ****     { return _Base_type::propagate_on_container_swap::value; }
 153:/usr/include/c++/4.9/ext/alloc_traits.h **** 
 154:/usr/include/c++/4.9/ext/alloc_traits.h ****     static constexpr bool _S_always_equal()
 155:/usr/include/c++/4.9/ext/alloc_traits.h ****     { return __allocator_always_compares_equal<_Alloc>::value; }
 156:/usr/include/c++/4.9/ext/alloc_traits.h **** 
 157:/usr/include/c++/4.9/ext/alloc_traits.h ****     static constexpr bool _S_nothrow_move()
 158:/usr/include/c++/4.9/ext/alloc_traits.h ****     { return _S_propagate_on_move_assign() || _S_always_equal(); }
 159:/usr/include/c++/4.9/ext/alloc_traits.h **** 
 160:/usr/include/c++/4.9/ext/alloc_traits.h ****     static constexpr bool _S_nothrow_swap()
 161:/usr/include/c++/4.9/ext/alloc_traits.h ****     {
 162:/usr/include/c++/4.9/ext/alloc_traits.h ****       using std::swap;
 163:/usr/include/c++/4.9/ext/alloc_traits.h ****       return !_S_propagate_on_swap()
 164:/usr/include/c++/4.9/ext/alloc_traits.h ****        	|| noexcept(swap(std::declval<_Alloc&>(), std::declval<_Alloc&>()));
 165:/usr/include/c++/4.9/ext/alloc_traits.h ****     }
 166:/usr/include/c++/4.9/ext/alloc_traits.h **** 
 167:/usr/include/c++/4.9/ext/alloc_traits.h ****     template<typename _Tp>
 168:/usr/include/c++/4.9/ext/alloc_traits.h ****       struct rebind
 169:/usr/include/c++/4.9/ext/alloc_traits.h ****       { typedef typename _Base_type::template rebind_alloc<_Tp> other; };
 170:/usr/include/c++/4.9/ext/alloc_traits.h **** #else
 171:/usr/include/c++/4.9/ext/alloc_traits.h **** 
 172:/usr/include/c++/4.9/ext/alloc_traits.h ****     typedef typename _Alloc::pointer                pointer;
 173:/usr/include/c++/4.9/ext/alloc_traits.h ****     typedef typename _Alloc::const_pointer          const_pointer;
 174:/usr/include/c++/4.9/ext/alloc_traits.h ****     typedef typename _Alloc::value_type             value_type;
 175:/usr/include/c++/4.9/ext/alloc_traits.h ****     typedef typename _Alloc::reference              reference;
 176:/usr/include/c++/4.9/ext/alloc_traits.h ****     typedef typename _Alloc::const_reference        const_reference;
 177:/usr/include/c++/4.9/ext/alloc_traits.h ****     typedef typename _Alloc::size_type              size_type;
 178:/usr/include/c++/4.9/ext/alloc_traits.h ****     typedef typename _Alloc::difference_type        difference_type;
 179:/usr/include/c++/4.9/ext/alloc_traits.h **** 
 180:/usr/include/c++/4.9/ext/alloc_traits.h ****     static pointer
 181:/usr/include/c++/4.9/ext/alloc_traits.h ****     allocate(_Alloc& __a, size_type __n)
 182:/usr/include/c++/4.9/ext/alloc_traits.h ****     { return __a.allocate(__n); }
 183:/usr/include/c++/4.9/ext/alloc_traits.h **** 
 184:/usr/include/c++/4.9/ext/alloc_traits.h ****     static void deallocate(_Alloc& __a, pointer __p, size_type __n)
 7037              		.loc 12 184 0
 7038              		.cfi_startproc
 7039 0000 55       		pushq	%rbp
 7040              		.cfi_def_cfa_offset 16
 7041              		.cfi_offset 6, -16
 7042 0001 4889E5   		movq	%rsp, %rbp
 7043              		.cfi_def_cfa_register 6
 7044 0004 4883EC20 		subq	$32, %rsp
 7045 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7046 000c 488975F0 		movq	%rsi, -16(%rbp)
 7047 0010 488955E8 		movq	%rdx, -24(%rbp)
 185:/usr/include/c++/4.9/ext/alloc_traits.h ****     { __a.deallocate(__p, __n); }
 7048              		.loc 12 185 0
 7049 0014 488B55E8 		movq	-24(%rbp), %rdx
 7050 0018 488B4DF0 		movq	-16(%rbp), %rcx
 7051 001c 488B45F8 		movq	-8(%rbp), %rax
 7052 0020 4889CE   		movq	%rcx, %rsi
 7053 0023 4889C7   		movq	%rax, %rdi
 7054 0026 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIfE10deallocateEPfm
 7054      00
 7055 002b C9       		leave
 7056              		.cfi_def_cfa 7, 8
 7057 002c C3       		ret
 7058              		.cfi_endproc
 7059              	.LFE1565:
 7061              		.section	.text._ZSt20uninitialized_fill_nIPfmfEvT_T0_RKT1_,"axG",@progbits,_ZSt20uninitialized_fil
 7062              		.weak	_ZSt20uninitialized_fill_nIPfmfEvT_T0_RKT1_
 7064              	_ZSt20uninitialized_fill_nIPfmfEvT_T0_RKT1_:
 7065              	.LFB1566:
 233:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     {
 7066              		.loc 11 233 0
 7067              		.cfi_startproc
 7068 0000 55       		pushq	%rbp
 7069              		.cfi_def_cfa_offset 16
 7070              		.cfi_offset 6, -16
 7071 0001 4889E5   		movq	%rsp, %rbp
 7072              		.cfi_def_cfa_register 6
 7073 0004 4883EC30 		subq	$48, %rsp
 7074 0008 48897DE8 		movq	%rdi, -24(%rbp)
 7075 000c 488975E0 		movq	%rsi, -32(%rbp)
 7076 0010 488955D8 		movq	%rdx, -40(%rbp)
 7077              	.LBB164:
 238:/usr/include/c++/4.9/bits/stl_uninitialized.h **** #else
 7078              		.loc 11 238 0
 7079 0014 C645FF01 		movb	$1, -1(%rbp)
 244:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 	__uninit_fill_n(__first, __n, __x);
 7080              		.loc 11 244 0
 7081 0018 488B55D8 		movq	-40(%rbp), %rdx
 7082 001c 488B4DE0 		movq	-32(%rbp), %rcx
 7083 0020 488B45E8 		movq	-24(%rbp), %rax
 7084 0024 4889CE   		movq	%rcx, %rsi
 7085 0027 4889C7   		movq	%rax, %rdi
 7086 002a E8000000 		call	_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPfmfEEvT_T0_RKT1_
 7086      00
 7087              	.LBE164:
 246:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 
 7088              		.loc 11 246 0
 7089 002f C9       		leave
 7090              		.cfi_def_cfa 7, 8
 7091 0030 C3       		ret
 7092              		.cfi_endproc
 7093              	.LFE1566:
 7095              		.section	.text._ZNSt12_Destroy_auxILb1EE9__destroyIPfEEvT_S3_,"axG",@progbits,_ZNSt12_Destroy_auxI
 7096              		.weak	_ZNSt12_Destroy_auxILb1EE9__destroyIPfEEvT_S3_
 7098              	_ZNSt12_Destroy_auxILb1EE9__destroyIPfEEvT_S3_:
 7099              	.LFB1567:
 112:/usr/include/c++/4.9/bits/stl_construct.h ****     };
 7100              		.loc 10 112 0
 7101              		.cfi_startproc
 7102 0000 55       		pushq	%rbp
 7103              		.cfi_def_cfa_offset 16
 7104              		.cfi_offset 6, -16
 7105 0001 4889E5   		movq	%rsp, %rbp
 7106              		.cfi_def_cfa_register 6
 7107 0004 48897DF8 		movq	%rdi, -8(%rbp)
 7108 0008 488975F0 		movq	%rsi, -16(%rbp)
 112:/usr/include/c++/4.9/bits/stl_construct.h ****     };
 7109              		.loc 10 112 0
 7110 000c 5D       		popq	%rbp
 7111              		.cfi_def_cfa 7, 8
 7112 000d C3       		ret
 7113              		.cfi_endproc
 7114              	.LFE1567:
 7116              		.section	.text._ZN9__gnu_cxx13new_allocatorIfEC2ERKS1_,"axG",@progbits,_ZN9__gnu_cxx13new_allocato
 7117              		.align 2
 7118              		.weak	_ZN9__gnu_cxx13new_allocatorIfEC2ERKS1_
 7120              	_ZN9__gnu_cxx13new_allocatorIfEC2ERKS1_:
 7121              	.LFB1569:
  81:/usr/include/c++/4.9/ext/new_allocator.h **** 
 7122              		.loc 9 81 0
 7123              		.cfi_startproc
 7124 0000 55       		pushq	%rbp
 7125              		.cfi_def_cfa_offset 16
 7126              		.cfi_offset 6, -16
 7127 0001 4889E5   		movq	%rsp, %rbp
 7128              		.cfi_def_cfa_register 6
 7129 0004 48897DF8 		movq	%rdi, -8(%rbp)
 7130 0008 488975F0 		movq	%rsi, -16(%rbp)
  81:/usr/include/c++/4.9/ext/new_allocator.h **** 
 7131              		.loc 9 81 0
 7132 000c 5D       		popq	%rbp
 7133              		.cfi_def_cfa 7, 8
 7134 000d C3       		ret
 7135              		.cfi_endproc
 7136              	.LFE1569:
 7138              		.weak	_ZN9__gnu_cxx13new_allocatorIfEC1ERKS1_
 7139              		.set	_ZN9__gnu_cxx13new_allocatorIfEC1ERKS1_,_ZN9__gnu_cxx13new_allocatorIfEC2ERKS1_
 7140              		.section	.text._ZN9__gnu_cxx14__alloc_traitsISaIfEE8allocateERS1_m,"axG",@progbits,_ZN9__gnu_cxx14
 7141              		.weak	_ZN9__gnu_cxx14__alloc_traitsISaIfEE8allocateERS1_m
 7143              	_ZN9__gnu_cxx14__alloc_traitsISaIfEE8allocateERS1_m:
 7144              	.LFB1571:
 181:/usr/include/c++/4.9/ext/alloc_traits.h ****     { return __a.allocate(__n); }
 7145              		.loc 12 181 0
 7146              		.cfi_startproc
 7147 0000 55       		pushq	%rbp
 7148              		.cfi_def_cfa_offset 16
 7149              		.cfi_offset 6, -16
 7150 0001 4889E5   		movq	%rsp, %rbp
 7151              		.cfi_def_cfa_register 6
 7152 0004 4883EC10 		subq	$16, %rsp
 7153 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7154 000c 488975F0 		movq	%rsi, -16(%rbp)
 182:/usr/include/c++/4.9/ext/alloc_traits.h **** 
 7155              		.loc 12 182 0
 7156 0010 488B4DF0 		movq	-16(%rbp), %rcx
 7157 0014 488B45F8 		movq	-8(%rbp), %rax
 7158 0018 BA000000 		movl	$0, %edx
 7158      00
 7159 001d 4889CE   		movq	%rcx, %rsi
 7160 0020 4889C7   		movq	%rax, %rdi
 7161 0023 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIfE8allocateEmPKv
 7161      00
 7162 0028 C9       		leave
 7163              		.cfi_def_cfa 7, 8
 7164 0029 C3       		ret
 7165              		.cfi_endproc
 7166              	.LFE1571:
 7168              		.section	.text._ZN9__gnu_cxx13new_allocatorIfE10deallocateEPfm,"axG",@progbits,_ZN9__gnu_cxx13new_
 7169              		.align 2
 7170              		.weak	_ZN9__gnu_cxx13new_allocatorIfE10deallocateEPfm
 7172              	_ZN9__gnu_cxx13new_allocatorIfE10deallocateEPfm:
 7173              	.LFB1572:
  87:/usr/include/c++/4.9/ext/new_allocator.h **** 
  88:/usr/include/c++/4.9/ext/new_allocator.h ****       pointer
  89:/usr/include/c++/4.9/ext/new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  90:/usr/include/c++/4.9/ext/new_allocator.h ****       { return std::__addressof(__x); }
  91:/usr/include/c++/4.9/ext/new_allocator.h **** 
  92:/usr/include/c++/4.9/ext/new_allocator.h ****       const_pointer
  93:/usr/include/c++/4.9/ext/new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  94:/usr/include/c++/4.9/ext/new_allocator.h ****       { return std::__addressof(__x); }
  95:/usr/include/c++/4.9/ext/new_allocator.h **** 
  96:/usr/include/c++/4.9/ext/new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
  97:/usr/include/c++/4.9/ext/new_allocator.h ****       // about what the return value is when __n == 0.
  98:/usr/include/c++/4.9/ext/new_allocator.h ****       pointer
  99:/usr/include/c++/4.9/ext/new_allocator.h ****       allocate(size_type __n, const void* = 0)
 100:/usr/include/c++/4.9/ext/new_allocator.h ****       { 
 101:/usr/include/c++/4.9/ext/new_allocator.h **** 	if (__n > this->max_size())
 102:/usr/include/c++/4.9/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 103:/usr/include/c++/4.9/ext/new_allocator.h **** 
 104:/usr/include/c++/4.9/ext/new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 105:/usr/include/c++/4.9/ext/new_allocator.h ****       }
 106:/usr/include/c++/4.9/ext/new_allocator.h **** 
 107:/usr/include/c++/4.9/ext/new_allocator.h ****       // __p is not permitted to be a null pointer.
 108:/usr/include/c++/4.9/ext/new_allocator.h ****       void
 109:/usr/include/c++/4.9/ext/new_allocator.h ****       deallocate(pointer __p, size_type)
 7174              		.loc 9 109 0
 7175              		.cfi_startproc
 7176 0000 55       		pushq	%rbp
 7177              		.cfi_def_cfa_offset 16
 7178              		.cfi_offset 6, -16
 7179 0001 4889E5   		movq	%rsp, %rbp
 7180              		.cfi_def_cfa_register 6
 7181 0004 4883EC20 		subq	$32, %rsp
 7182 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7183 000c 488975F0 		movq	%rsi, -16(%rbp)
 7184 0010 488955E8 		movq	%rdx, -24(%rbp)
 110:/usr/include/c++/4.9/ext/new_allocator.h ****       { ::operator delete(__p); }
 7185              		.loc 9 110 0
 7186 0014 488B45F0 		movq	-16(%rbp), %rax
 7187 0018 4889C7   		movq	%rax, %rdi
 7188 001b E8000000 		call	_ZdlPv
 7188      00
 7189 0020 C9       		leave
 7190              		.cfi_def_cfa 7, 8
 7191 0021 C3       		ret
 7192              		.cfi_endproc
 7193              	.LFE1572:
 7195              		.section	.text._ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPfmfEEvT_T0_RKT1_,"axG",@progb
 7196              		.weak	_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPfmfEEvT_T0_RKT1_
 7198              	_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPfmfEEvT_T0_RKT1_:
 7199              	.LFB1573:
 217:/usr/include/c++/4.9/bits/stl_uninitialized.h **** 			const _Tp& __x)
 7200              		.loc 11 217 0
 7201              		.cfi_startproc
 7202 0000 55       		pushq	%rbp
 7203              		.cfi_def_cfa_offset 16
 7204              		.cfi_offset 6, -16
 7205 0001 4889E5   		movq	%rsp, %rbp
 7206              		.cfi_def_cfa_register 6
 7207 0004 4883EC20 		subq	$32, %rsp
 7208 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7209 000c 488975F0 		movq	%rsi, -16(%rbp)
 7210 0010 488955E8 		movq	%rdx, -24(%rbp)
 219:/usr/include/c++/4.9/bits/stl_uninitialized.h ****     };
 7211              		.loc 11 219 0
 7212 0014 488B55E8 		movq	-24(%rbp), %rdx
 7213 0018 488B4DF0 		movq	-16(%rbp), %rcx
 7214 001c 488B45F8 		movq	-8(%rbp), %rax
 7215 0020 4889CE   		movq	%rcx, %rsi
 7216 0023 4889C7   		movq	%rax, %rdi
 7217 0026 E8000000 		call	_ZSt6fill_nIPfmfET_S1_T0_RKT1_
 7217      00
 7218 002b C9       		leave
 7219              		.cfi_def_cfa 7, 8
 7220 002c C3       		ret
 7221              		.cfi_endproc
 7222              	.LFE1573:
 7224              		.section	.text._ZN9__gnu_cxx13new_allocatorIfE8allocateEmPKv,"axG",@progbits,_ZN9__gnu_cxx13new_al
 7225              		.align 2
 7226              		.weak	_ZN9__gnu_cxx13new_allocatorIfE8allocateEmPKv
 7228              	_ZN9__gnu_cxx13new_allocatorIfE8allocateEmPKv:
 7229              	.LFB1574:
  99:/usr/include/c++/4.9/ext/new_allocator.h ****       { 
 7230              		.loc 9 99 0
 7231              		.cfi_startproc
 7232 0000 55       		pushq	%rbp
 7233              		.cfi_def_cfa_offset 16
 7234              		.cfi_offset 6, -16
 7235 0001 4889E5   		movq	%rsp, %rbp
 7236              		.cfi_def_cfa_register 6
 7237 0004 4883EC20 		subq	$32, %rsp
 7238 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7239 000c 488975F0 		movq	%rsi, -16(%rbp)
 7240 0010 488955E8 		movq	%rdx, -24(%rbp)
 101:/usr/include/c++/4.9/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 7241              		.loc 9 101 0
 7242 0014 488B45F8 		movq	-8(%rbp), %rax
 7243 0018 4889C7   		movq	%rax, %rdi
 7244 001b E8000000 		call	_ZNK9__gnu_cxx13new_allocatorIfE8max_sizeEv
 7244      00
 7245 0020 483B45F0 		cmpq	-16(%rbp), %rax
 7246 0024 0F92C0   		setb	%al
 7247 0027 84C0     		testb	%al, %al
 7248 0029 7405     		je	.L389
 102:/usr/include/c++/4.9/ext/new_allocator.h **** 
 7249              		.loc 9 102 0
 7250 002b E8000000 		call	_ZSt17__throw_bad_allocv
 7250      00
 7251              	.L389:
 104:/usr/include/c++/4.9/ext/new_allocator.h ****       }
 7252              		.loc 9 104 0
 7253 0030 488B45F0 		movq	-16(%rbp), %rax
 7254 0034 48C1E002 		salq	$2, %rax
 7255 0038 4889C7   		movq	%rax, %rdi
 7256 003b E8000000 		call	_Znwm
 7256      00
 105:/usr/include/c++/4.9/ext/new_allocator.h **** 
 7257              		.loc 9 105 0
 7258 0040 C9       		leave
 7259              		.cfi_def_cfa 7, 8
 7260 0041 C3       		ret
 7261              		.cfi_endproc
 7262              	.LFE1574:
 7264              		.section	.text._ZSt6fill_nIPfmfET_S1_T0_RKT1_,"axG",@progbits,_ZSt6fill_nIPfmfET_S1_T0_RKT1_,comda
 7265              		.weak	_ZSt6fill_nIPfmfET_S1_T0_RKT1_
 7267              	_ZSt6fill_nIPfmfET_S1_T0_RKT1_:
 7268              	.LFB1575:
 7269              		.file 13 "/usr/include/c++/4.9/bits/stl_algobase.h"
   1:/usr/include/c++/4.9/bits/stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:/usr/include/c++/4.9/bits/stl_algobase.h **** 
   3:/usr/include/c++/4.9/bits/stl_algobase.h **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   4:/usr/include/c++/4.9/bits/stl_algobase.h **** //
   5:/usr/include/c++/4.9/bits/stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/4.9/bits/stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/4.9/bits/stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/4.9/bits/stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/4.9/bits/stl_algobase.h **** // any later version.
  10:/usr/include/c++/4.9/bits/stl_algobase.h **** 
  11:/usr/include/c++/4.9/bits/stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/4.9/bits/stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/4.9/bits/stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/4.9/bits/stl_algobase.h **** // GNU General Public License for more details.
  15:/usr/include/c++/4.9/bits/stl_algobase.h **** 
  16:/usr/include/c++/4.9/bits/stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/4.9/bits/stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/4.9/bits/stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/4.9/bits/stl_algobase.h **** 
  20:/usr/include/c++/4.9/bits/stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/4.9/bits/stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/4.9/bits/stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/4.9/bits/stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/4.9/bits/stl_algobase.h **** 
  25:/usr/include/c++/4.9/bits/stl_algobase.h **** /*
  26:/usr/include/c++/4.9/bits/stl_algobase.h ****  *
  27:/usr/include/c++/4.9/bits/stl_algobase.h ****  * Copyright (c) 1994
  28:/usr/include/c++/4.9/bits/stl_algobase.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/4.9/bits/stl_algobase.h ****  *
  30:/usr/include/c++/4.9/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/4.9/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/4.9/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/4.9/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/4.9/bits/stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/4.9/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/4.9/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/4.9/bits/stl_algobase.h ****  *
  38:/usr/include/c++/4.9/bits/stl_algobase.h ****  *
  39:/usr/include/c++/4.9/bits/stl_algobase.h ****  * Copyright (c) 1996-1998
  40:/usr/include/c++/4.9/bits/stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/4.9/bits/stl_algobase.h ****  *
  42:/usr/include/c++/4.9/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/4.9/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/4.9/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/4.9/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/4.9/bits/stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/4.9/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/4.9/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/4.9/bits/stl_algobase.h ****  */
  50:/usr/include/c++/4.9/bits/stl_algobase.h **** 
  51:/usr/include/c++/4.9/bits/stl_algobase.h **** /** @file bits/stl_algobase.h
  52:/usr/include/c++/4.9/bits/stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/4.9/bits/stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:/usr/include/c++/4.9/bits/stl_algobase.h ****  */
  55:/usr/include/c++/4.9/bits/stl_algobase.h **** 
  56:/usr/include/c++/4.9/bits/stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:/usr/include/c++/4.9/bits/stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:/usr/include/c++/4.9/bits/stl_algobase.h **** 
  59:/usr/include/c++/4.9/bits/stl_algobase.h **** #include <bits/c++config.h>
  60:/usr/include/c++/4.9/bits/stl_algobase.h **** #include <bits/functexcept.h>
  61:/usr/include/c++/4.9/bits/stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:/usr/include/c++/4.9/bits/stl_algobase.h **** #include <ext/type_traits.h>
  63:/usr/include/c++/4.9/bits/stl_algobase.h **** #include <ext/numeric_traits.h>
  64:/usr/include/c++/4.9/bits/stl_algobase.h **** #include <bits/stl_pair.h>
  65:/usr/include/c++/4.9/bits/stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:/usr/include/c++/4.9/bits/stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:/usr/include/c++/4.9/bits/stl_algobase.h **** #include <bits/stl_iterator.h>
  68:/usr/include/c++/4.9/bits/stl_algobase.h **** #include <bits/concept_check.h>
  69:/usr/include/c++/4.9/bits/stl_algobase.h **** #include <debug/debug.h>
  70:/usr/include/c++/4.9/bits/stl_algobase.h **** #include <bits/move.h> // For std::swap and _GLIBCXX_MOVE
  71:/usr/include/c++/4.9/bits/stl_algobase.h **** #include <bits/predefined_ops.h>
  72:/usr/include/c++/4.9/bits/stl_algobase.h **** 
  73:/usr/include/c++/4.9/bits/stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  74:/usr/include/c++/4.9/bits/stl_algobase.h **** {
  75:/usr/include/c++/4.9/bits/stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  76:/usr/include/c++/4.9/bits/stl_algobase.h **** 
  77:/usr/include/c++/4.9/bits/stl_algobase.h **** #if __cplusplus < 201103L
  78:/usr/include/c++/4.9/bits/stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
  79:/usr/include/c++/4.9/bits/stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
  80:/usr/include/c++/4.9/bits/stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
  81:/usr/include/c++/4.9/bits/stl_algobase.h ****   template<bool _BoolType>
  82:/usr/include/c++/4.9/bits/stl_algobase.h ****     struct __iter_swap
  83:/usr/include/c++/4.9/bits/stl_algobase.h ****     {
  84:/usr/include/c++/4.9/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
  85:/usr/include/c++/4.9/bits/stl_algobase.h ****         static void
  86:/usr/include/c++/4.9/bits/stl_algobase.h ****         iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
  87:/usr/include/c++/4.9/bits/stl_algobase.h ****         {
  88:/usr/include/c++/4.9/bits/stl_algobase.h ****           typedef typename iterator_traits<_ForwardIterator1>::value_type
  89:/usr/include/c++/4.9/bits/stl_algobase.h ****             _ValueType1;
  90:/usr/include/c++/4.9/bits/stl_algobase.h ****           _ValueType1 __tmp = _GLIBCXX_MOVE(*__a);
  91:/usr/include/c++/4.9/bits/stl_algobase.h ****           *__a = _GLIBCXX_MOVE(*__b);
  92:/usr/include/c++/4.9/bits/stl_algobase.h ****           *__b = _GLIBCXX_MOVE(__tmp);
  93:/usr/include/c++/4.9/bits/stl_algobase.h **** 	}
  94:/usr/include/c++/4.9/bits/stl_algobase.h ****     };
  95:/usr/include/c++/4.9/bits/stl_algobase.h **** 
  96:/usr/include/c++/4.9/bits/stl_algobase.h ****   template<>
  97:/usr/include/c++/4.9/bits/stl_algobase.h ****     struct __iter_swap<true>
  98:/usr/include/c++/4.9/bits/stl_algobase.h ****     {
  99:/usr/include/c++/4.9/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 100:/usr/include/c++/4.9/bits/stl_algobase.h ****         static void 
 101:/usr/include/c++/4.9/bits/stl_algobase.h ****         iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 102:/usr/include/c++/4.9/bits/stl_algobase.h ****         {
 103:/usr/include/c++/4.9/bits/stl_algobase.h ****           swap(*__a, *__b);
 104:/usr/include/c++/4.9/bits/stl_algobase.h ****         }
 105:/usr/include/c++/4.9/bits/stl_algobase.h ****     };
 106:/usr/include/c++/4.9/bits/stl_algobase.h **** #endif
 107:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 108:/usr/include/c++/4.9/bits/stl_algobase.h ****   /**
 109:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 110:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 111:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @param  __a  An iterator.
 112:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @param  __b  Another iterator.
 113:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @return   Nothing.
 114:/usr/include/c++/4.9/bits/stl_algobase.h ****    *
 115:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 116:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  iterators themselves.
 117:/usr/include/c++/4.9/bits/stl_algobase.h ****   */
 118:/usr/include/c++/4.9/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 119:/usr/include/c++/4.9/bits/stl_algobase.h ****     inline void
 120:/usr/include/c++/4.9/bits/stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 121:/usr/include/c++/4.9/bits/stl_algobase.h ****     {
 122:/usr/include/c++/4.9/bits/stl_algobase.h ****       // concept requirements
 123:/usr/include/c++/4.9/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 124:/usr/include/c++/4.9/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 125:/usr/include/c++/4.9/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 126:/usr/include/c++/4.9/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 127:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 128:/usr/include/c++/4.9/bits/stl_algobase.h **** #if __cplusplus < 201103L
 129:/usr/include/c++/4.9/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 130:/usr/include/c++/4.9/bits/stl_algobase.h **** 	_ValueType1;
 131:/usr/include/c++/4.9/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 132:/usr/include/c++/4.9/bits/stl_algobase.h **** 	_ValueType2;
 133:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 134:/usr/include/c++/4.9/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 135:/usr/include/c++/4.9/bits/stl_algobase.h **** 				  _ValueType2>)
 136:/usr/include/c++/4.9/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 137:/usr/include/c++/4.9/bits/stl_algobase.h **** 				  _ValueType1>)
 138:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 139:/usr/include/c++/4.9/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 140:/usr/include/c++/4.9/bits/stl_algobase.h **** 	_ReferenceType1;
 141:/usr/include/c++/4.9/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 142:/usr/include/c++/4.9/bits/stl_algobase.h **** 	_ReferenceType2;
 143:/usr/include/c++/4.9/bits/stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 144:/usr/include/c++/4.9/bits/stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 145:/usr/include/c++/4.9/bits/stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 146:/usr/include/c++/4.9/bits/stl_algobase.h **** 	iter_swap(__a, __b);
 147:/usr/include/c++/4.9/bits/stl_algobase.h **** #else
 148:/usr/include/c++/4.9/bits/stl_algobase.h ****       swap(*__a, *__b);
 149:/usr/include/c++/4.9/bits/stl_algobase.h **** #endif
 150:/usr/include/c++/4.9/bits/stl_algobase.h ****     }
 151:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 152:/usr/include/c++/4.9/bits/stl_algobase.h ****   /**
 153:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 154:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 155:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @param  __first1  A forward iterator.
 156:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @param  __last1   A forward iterator.
 157:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @param  __first2  A forward iterator.
 158:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 159:/usr/include/c++/4.9/bits/stl_algobase.h ****    *
 160:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 161:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 162:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  The ranges must not overlap.
 163:/usr/include/c++/4.9/bits/stl_algobase.h ****   */
 164:/usr/include/c++/4.9/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 165:/usr/include/c++/4.9/bits/stl_algobase.h ****     _ForwardIterator2
 166:/usr/include/c++/4.9/bits/stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 167:/usr/include/c++/4.9/bits/stl_algobase.h **** 		_ForwardIterator2 __first2)
 168:/usr/include/c++/4.9/bits/stl_algobase.h ****     {
 169:/usr/include/c++/4.9/bits/stl_algobase.h ****       // concept requirements
 170:/usr/include/c++/4.9/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 171:/usr/include/c++/4.9/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 172:/usr/include/c++/4.9/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 173:/usr/include/c++/4.9/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 174:/usr/include/c++/4.9/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 175:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 176:/usr/include/c++/4.9/bits/stl_algobase.h ****       for (; __first1 != __last1; ++__first1, ++__first2)
 177:/usr/include/c++/4.9/bits/stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 178:/usr/include/c++/4.9/bits/stl_algobase.h ****       return __first2;
 179:/usr/include/c++/4.9/bits/stl_algobase.h ****     }
 180:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 181:/usr/include/c++/4.9/bits/stl_algobase.h ****   /**
 182:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 183:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 184:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 185:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 186:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 187:/usr/include/c++/4.9/bits/stl_algobase.h ****    *
 188:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 189:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 190:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  preprocessor macro.
 191:/usr/include/c++/4.9/bits/stl_algobase.h ****   */
 192:/usr/include/c++/4.9/bits/stl_algobase.h ****   template<typename _Tp>
 193:/usr/include/c++/4.9/bits/stl_algobase.h ****     inline const _Tp&
 194:/usr/include/c++/4.9/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 195:/usr/include/c++/4.9/bits/stl_algobase.h ****     {
 196:/usr/include/c++/4.9/bits/stl_algobase.h ****       // concept requirements
 197:/usr/include/c++/4.9/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 198:/usr/include/c++/4.9/bits/stl_algobase.h ****       //return __b < __a ? __b : __a;
 199:/usr/include/c++/4.9/bits/stl_algobase.h ****       if (__b < __a)
 200:/usr/include/c++/4.9/bits/stl_algobase.h **** 	return __b;
 201:/usr/include/c++/4.9/bits/stl_algobase.h ****       return __a;
 202:/usr/include/c++/4.9/bits/stl_algobase.h ****     }
 203:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 204:/usr/include/c++/4.9/bits/stl_algobase.h ****   /**
 205:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 206:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 207:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 208:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 209:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 210:/usr/include/c++/4.9/bits/stl_algobase.h ****    *
 211:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 212:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 213:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  preprocessor macro.
 214:/usr/include/c++/4.9/bits/stl_algobase.h ****   */
 215:/usr/include/c++/4.9/bits/stl_algobase.h ****   template<typename _Tp>
 216:/usr/include/c++/4.9/bits/stl_algobase.h ****     inline const _Tp&
 217:/usr/include/c++/4.9/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 218:/usr/include/c++/4.9/bits/stl_algobase.h ****     {
 219:/usr/include/c++/4.9/bits/stl_algobase.h ****       // concept requirements
 220:/usr/include/c++/4.9/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 221:/usr/include/c++/4.9/bits/stl_algobase.h ****       //return  __a < __b ? __b : __a;
 222:/usr/include/c++/4.9/bits/stl_algobase.h ****       if (__a < __b)
 223:/usr/include/c++/4.9/bits/stl_algobase.h **** 	return __b;
 224:/usr/include/c++/4.9/bits/stl_algobase.h ****       return __a;
 225:/usr/include/c++/4.9/bits/stl_algobase.h ****     }
 226:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 227:/usr/include/c++/4.9/bits/stl_algobase.h ****   /**
 228:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 229:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 230:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 231:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 232:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 233:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 234:/usr/include/c++/4.9/bits/stl_algobase.h ****    *
 235:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 236:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 237:/usr/include/c++/4.9/bits/stl_algobase.h ****   */
 238:/usr/include/c++/4.9/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 239:/usr/include/c++/4.9/bits/stl_algobase.h ****     inline const _Tp&
 240:/usr/include/c++/4.9/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b, _Compare __comp)
 241:/usr/include/c++/4.9/bits/stl_algobase.h ****     {
 242:/usr/include/c++/4.9/bits/stl_algobase.h ****       //return __comp(__b, __a) ? __b : __a;
 243:/usr/include/c++/4.9/bits/stl_algobase.h ****       if (__comp(__b, __a))
 244:/usr/include/c++/4.9/bits/stl_algobase.h **** 	return __b;
 245:/usr/include/c++/4.9/bits/stl_algobase.h ****       return __a;
 246:/usr/include/c++/4.9/bits/stl_algobase.h ****     }
 247:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 248:/usr/include/c++/4.9/bits/stl_algobase.h ****   /**
 249:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 250:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 251:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 252:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 253:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 254:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 255:/usr/include/c++/4.9/bits/stl_algobase.h ****    *
 256:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 257:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 258:/usr/include/c++/4.9/bits/stl_algobase.h ****   */
 259:/usr/include/c++/4.9/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 260:/usr/include/c++/4.9/bits/stl_algobase.h ****     inline const _Tp&
 261:/usr/include/c++/4.9/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
 262:/usr/include/c++/4.9/bits/stl_algobase.h ****     {
 263:/usr/include/c++/4.9/bits/stl_algobase.h ****       //return __comp(__a, __b) ? __b : __a;
 264:/usr/include/c++/4.9/bits/stl_algobase.h ****       if (__comp(__a, __b))
 265:/usr/include/c++/4.9/bits/stl_algobase.h **** 	return __b;
 266:/usr/include/c++/4.9/bits/stl_algobase.h ****       return __a;
 267:/usr/include/c++/4.9/bits/stl_algobase.h ****     }
 268:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 269:/usr/include/c++/4.9/bits/stl_algobase.h ****   // If _Iterator is a __normal_iterator return its base (a plain pointer,
 270:/usr/include/c++/4.9/bits/stl_algobase.h ****   // normally) otherwise return it untouched.  See copy, fill, ... 
 271:/usr/include/c++/4.9/bits/stl_algobase.h ****   template<typename _Iterator>
 272:/usr/include/c++/4.9/bits/stl_algobase.h ****     struct _Niter_base
 273:/usr/include/c++/4.9/bits/stl_algobase.h ****     : _Iter_base<_Iterator, __is_normal_iterator<_Iterator>::__value>
 274:/usr/include/c++/4.9/bits/stl_algobase.h ****     { };
 275:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 276:/usr/include/c++/4.9/bits/stl_algobase.h ****   template<typename _Iterator>
 277:/usr/include/c++/4.9/bits/stl_algobase.h ****     inline typename _Niter_base<_Iterator>::iterator_type
 278:/usr/include/c++/4.9/bits/stl_algobase.h ****     __niter_base(_Iterator __it)
 279:/usr/include/c++/4.9/bits/stl_algobase.h ****     { return std::_Niter_base<_Iterator>::_S_base(__it); }
 280:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 281:/usr/include/c++/4.9/bits/stl_algobase.h ****   // Likewise, for move_iterator.
 282:/usr/include/c++/4.9/bits/stl_algobase.h ****   template<typename _Iterator>
 283:/usr/include/c++/4.9/bits/stl_algobase.h ****     struct _Miter_base
 284:/usr/include/c++/4.9/bits/stl_algobase.h ****     : _Iter_base<_Iterator, __is_move_iterator<_Iterator>::__value>
 285:/usr/include/c++/4.9/bits/stl_algobase.h ****     { };
 286:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 287:/usr/include/c++/4.9/bits/stl_algobase.h ****   template<typename _Iterator>
 288:/usr/include/c++/4.9/bits/stl_algobase.h ****     inline typename _Miter_base<_Iterator>::iterator_type
 289:/usr/include/c++/4.9/bits/stl_algobase.h ****     __miter_base(_Iterator __it)
 290:/usr/include/c++/4.9/bits/stl_algobase.h ****     { return std::_Miter_base<_Iterator>::_S_base(__it); }
 291:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 292:/usr/include/c++/4.9/bits/stl_algobase.h ****   // All of these auxiliary structs serve two purposes.  (1) Replace
 293:/usr/include/c++/4.9/bits/stl_algobase.h ****   // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
 294:/usr/include/c++/4.9/bits/stl_algobase.h ****   // because the input and output ranges are permitted to overlap.)
 295:/usr/include/c++/4.9/bits/stl_algobase.h ****   // (2) If we're using random access iterators, then write the loop as
 296:/usr/include/c++/4.9/bits/stl_algobase.h ****   // a for loop with an explicit count.
 297:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 298:/usr/include/c++/4.9/bits/stl_algobase.h ****   template<bool, bool, typename>
 299:/usr/include/c++/4.9/bits/stl_algobase.h ****     struct __copy_move
 300:/usr/include/c++/4.9/bits/stl_algobase.h ****     {
 301:/usr/include/c++/4.9/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 302:/usr/include/c++/4.9/bits/stl_algobase.h ****         static _OI
 303:/usr/include/c++/4.9/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 304:/usr/include/c++/4.9/bits/stl_algobase.h ****         {
 305:/usr/include/c++/4.9/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, ++__first)
 306:/usr/include/c++/4.9/bits/stl_algobase.h **** 	    *__result = *__first;
 307:/usr/include/c++/4.9/bits/stl_algobase.h **** 	  return __result;
 308:/usr/include/c++/4.9/bits/stl_algobase.h **** 	}
 309:/usr/include/c++/4.9/bits/stl_algobase.h ****     };
 310:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 311:/usr/include/c++/4.9/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 312:/usr/include/c++/4.9/bits/stl_algobase.h ****   template<typename _Category>
 313:/usr/include/c++/4.9/bits/stl_algobase.h ****     struct __copy_move<true, false, _Category>
 314:/usr/include/c++/4.9/bits/stl_algobase.h ****     {
 315:/usr/include/c++/4.9/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 316:/usr/include/c++/4.9/bits/stl_algobase.h ****         static _OI
 317:/usr/include/c++/4.9/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 318:/usr/include/c++/4.9/bits/stl_algobase.h ****         {
 319:/usr/include/c++/4.9/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, ++__first)
 320:/usr/include/c++/4.9/bits/stl_algobase.h **** 	    *__result = std::move(*__first);
 321:/usr/include/c++/4.9/bits/stl_algobase.h **** 	  return __result;
 322:/usr/include/c++/4.9/bits/stl_algobase.h **** 	}
 323:/usr/include/c++/4.9/bits/stl_algobase.h ****     };
 324:/usr/include/c++/4.9/bits/stl_algobase.h **** #endif
 325:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 326:/usr/include/c++/4.9/bits/stl_algobase.h ****   template<>
 327:/usr/include/c++/4.9/bits/stl_algobase.h ****     struct __copy_move<false, false, random_access_iterator_tag>
 328:/usr/include/c++/4.9/bits/stl_algobase.h ****     {
 329:/usr/include/c++/4.9/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 330:/usr/include/c++/4.9/bits/stl_algobase.h ****         static _OI
 331:/usr/include/c++/4.9/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 332:/usr/include/c++/4.9/bits/stl_algobase.h ****         { 
 333:/usr/include/c++/4.9/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 334:/usr/include/c++/4.9/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 335:/usr/include/c++/4.9/bits/stl_algobase.h **** 	    {
 336:/usr/include/c++/4.9/bits/stl_algobase.h **** 	      *__result = *__first;
 337:/usr/include/c++/4.9/bits/stl_algobase.h **** 	      ++__first;
 338:/usr/include/c++/4.9/bits/stl_algobase.h **** 	      ++__result;
 339:/usr/include/c++/4.9/bits/stl_algobase.h **** 	    }
 340:/usr/include/c++/4.9/bits/stl_algobase.h **** 	  return __result;
 341:/usr/include/c++/4.9/bits/stl_algobase.h **** 	}
 342:/usr/include/c++/4.9/bits/stl_algobase.h ****     };
 343:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 344:/usr/include/c++/4.9/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 345:/usr/include/c++/4.9/bits/stl_algobase.h ****   template<>
 346:/usr/include/c++/4.9/bits/stl_algobase.h ****     struct __copy_move<true, false, random_access_iterator_tag>
 347:/usr/include/c++/4.9/bits/stl_algobase.h ****     {
 348:/usr/include/c++/4.9/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 349:/usr/include/c++/4.9/bits/stl_algobase.h ****         static _OI
 350:/usr/include/c++/4.9/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 351:/usr/include/c++/4.9/bits/stl_algobase.h ****         { 
 352:/usr/include/c++/4.9/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 353:/usr/include/c++/4.9/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 354:/usr/include/c++/4.9/bits/stl_algobase.h **** 	    {
 355:/usr/include/c++/4.9/bits/stl_algobase.h **** 	      *__result = std::move(*__first);
 356:/usr/include/c++/4.9/bits/stl_algobase.h **** 	      ++__first;
 357:/usr/include/c++/4.9/bits/stl_algobase.h **** 	      ++__result;
 358:/usr/include/c++/4.9/bits/stl_algobase.h **** 	    }
 359:/usr/include/c++/4.9/bits/stl_algobase.h **** 	  return __result;
 360:/usr/include/c++/4.9/bits/stl_algobase.h **** 	}
 361:/usr/include/c++/4.9/bits/stl_algobase.h ****     };
 362:/usr/include/c++/4.9/bits/stl_algobase.h **** #endif
 363:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 364:/usr/include/c++/4.9/bits/stl_algobase.h ****   template<bool _IsMove>
 365:/usr/include/c++/4.9/bits/stl_algobase.h ****     struct __copy_move<_IsMove, true, random_access_iterator_tag>
 366:/usr/include/c++/4.9/bits/stl_algobase.h ****     {
 367:/usr/include/c++/4.9/bits/stl_algobase.h ****       template<typename _Tp>
 368:/usr/include/c++/4.9/bits/stl_algobase.h ****         static _Tp*
 369:/usr/include/c++/4.9/bits/stl_algobase.h ****         __copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 370:/usr/include/c++/4.9/bits/stl_algobase.h ****         {
 371:/usr/include/c++/4.9/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 372:/usr/include/c++/4.9/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 373:/usr/include/c++/4.9/bits/stl_algobase.h **** 	  static_assert( is_copy_assignable<_Tp>::value,
 374:/usr/include/c++/4.9/bits/stl_algobase.h **** 	                 "type is not assignable" );
 375:/usr/include/c++/4.9/bits/stl_algobase.h **** #endif
 376:/usr/include/c++/4.9/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 377:/usr/include/c++/4.9/bits/stl_algobase.h **** 	  if (_Num)
 378:/usr/include/c++/4.9/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 379:/usr/include/c++/4.9/bits/stl_algobase.h **** 	  return __result + _Num;
 380:/usr/include/c++/4.9/bits/stl_algobase.h **** 	}
 381:/usr/include/c++/4.9/bits/stl_algobase.h ****     };
 382:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 383:/usr/include/c++/4.9/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 384:/usr/include/c++/4.9/bits/stl_algobase.h ****     inline _OI
 385:/usr/include/c++/4.9/bits/stl_algobase.h ****     __copy_move_a(_II __first, _II __last, _OI __result)
 386:/usr/include/c++/4.9/bits/stl_algobase.h ****     {
 387:/usr/include/c++/4.9/bits/stl_algobase.h ****       typedef typename iterator_traits<_II>::value_type _ValueTypeI;
 388:/usr/include/c++/4.9/bits/stl_algobase.h ****       typedef typename iterator_traits<_OI>::value_type _ValueTypeO;
 389:/usr/include/c++/4.9/bits/stl_algobase.h ****       typedef typename iterator_traits<_II>::iterator_category _Category;
 390:/usr/include/c++/4.9/bits/stl_algobase.h ****       const bool __simple = (__is_trivial(_ValueTypeI)
 391:/usr/include/c++/4.9/bits/stl_algobase.h **** 	                     && __is_pointer<_II>::__value
 392:/usr/include/c++/4.9/bits/stl_algobase.h **** 	                     && __is_pointer<_OI>::__value
 393:/usr/include/c++/4.9/bits/stl_algobase.h **** 			     && __are_same<_ValueTypeI, _ValueTypeO>::__value);
 394:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 395:/usr/include/c++/4.9/bits/stl_algobase.h ****       return std::__copy_move<_IsMove, __simple,
 396:/usr/include/c++/4.9/bits/stl_algobase.h **** 	                      _Category>::__copy_m(__first, __last, __result);
 397:/usr/include/c++/4.9/bits/stl_algobase.h ****     }
 398:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 399:/usr/include/c++/4.9/bits/stl_algobase.h ****   // Helpers for streambuf iterators (either istream or ostream).
 400:/usr/include/c++/4.9/bits/stl_algobase.h ****   // NB: avoid including <iosfwd>, relatively large.
 401:/usr/include/c++/4.9/bits/stl_algobase.h ****   template<typename _CharT>
 402:/usr/include/c++/4.9/bits/stl_algobase.h ****     struct char_traits;
 403:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 404:/usr/include/c++/4.9/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 405:/usr/include/c++/4.9/bits/stl_algobase.h ****     class istreambuf_iterator;
 406:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 407:/usr/include/c++/4.9/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 408:/usr/include/c++/4.9/bits/stl_algobase.h ****     class ostreambuf_iterator;
 409:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 410:/usr/include/c++/4.9/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 411:/usr/include/c++/4.9/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, 
 412:/usr/include/c++/4.9/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 413:/usr/include/c++/4.9/bits/stl_algobase.h ****     __copy_move_a2(_CharT*, _CharT*,
 414:/usr/include/c++/4.9/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 415:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 416:/usr/include/c++/4.9/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 417:/usr/include/c++/4.9/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, 
 418:/usr/include/c++/4.9/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 419:/usr/include/c++/4.9/bits/stl_algobase.h ****     __copy_move_a2(const _CharT*, const _CharT*,
 420:/usr/include/c++/4.9/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 421:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 422:/usr/include/c++/4.9/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 423:/usr/include/c++/4.9/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 424:/usr/include/c++/4.9/bits/stl_algobase.h **** 				    _CharT*>::__type
 425:/usr/include/c++/4.9/bits/stl_algobase.h ****     __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >,
 426:/usr/include/c++/4.9/bits/stl_algobase.h **** 		   istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT*);
 427:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 428:/usr/include/c++/4.9/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 429:/usr/include/c++/4.9/bits/stl_algobase.h ****     inline _OI
 430:/usr/include/c++/4.9/bits/stl_algobase.h ****     __copy_move_a2(_II __first, _II __last, _OI __result)
 431:/usr/include/c++/4.9/bits/stl_algobase.h ****     {
 432:/usr/include/c++/4.9/bits/stl_algobase.h ****       return _OI(std::__copy_move_a<_IsMove>(std::__niter_base(__first),
 433:/usr/include/c++/4.9/bits/stl_algobase.h **** 					     std::__niter_base(__last),
 434:/usr/include/c++/4.9/bits/stl_algobase.h **** 					     std::__niter_base(__result)));
 435:/usr/include/c++/4.9/bits/stl_algobase.h ****     }
 436:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 437:/usr/include/c++/4.9/bits/stl_algobase.h ****   /**
 438:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 439:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 440:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 441:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 442:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 443:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @return   result + (first - last)
 444:/usr/include/c++/4.9/bits/stl_algobase.h ****    *
 445:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 446:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 447:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 448:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 449:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  [first,last); the copy_backward function should be used instead.
 450:/usr/include/c++/4.9/bits/stl_algobase.h ****    *
 451:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 452:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  within [first,last).
 453:/usr/include/c++/4.9/bits/stl_algobase.h ****   */
 454:/usr/include/c++/4.9/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 455:/usr/include/c++/4.9/bits/stl_algobase.h ****     inline _OI
 456:/usr/include/c++/4.9/bits/stl_algobase.h ****     copy(_II __first, _II __last, _OI __result)
 457:/usr/include/c++/4.9/bits/stl_algobase.h ****     {
 458:/usr/include/c++/4.9/bits/stl_algobase.h ****       // concept requirements
 459:/usr/include/c++/4.9/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 460:/usr/include/c++/4.9/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 461:/usr/include/c++/4.9/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 462:/usr/include/c++/4.9/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 463:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 464:/usr/include/c++/4.9/bits/stl_algobase.h ****       return (std::__copy_move_a2<__is_move_iterator<_II>::__value>
 465:/usr/include/c++/4.9/bits/stl_algobase.h **** 	      (std::__miter_base(__first), std::__miter_base(__last),
 466:/usr/include/c++/4.9/bits/stl_algobase.h **** 	       __result));
 467:/usr/include/c++/4.9/bits/stl_algobase.h ****     }
 468:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 469:/usr/include/c++/4.9/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 470:/usr/include/c++/4.9/bits/stl_algobase.h ****   /**
 471:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 472:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 473:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 474:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 475:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 476:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @return   result + (first - last)
 477:/usr/include/c++/4.9/bits/stl_algobase.h ****    *
 478:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 479:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 480:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 481:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 482:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  [first,last); the move_backward function should be used instead.
 483:/usr/include/c++/4.9/bits/stl_algobase.h ****    *
 484:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 485:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  within [first,last).
 486:/usr/include/c++/4.9/bits/stl_algobase.h ****   */
 487:/usr/include/c++/4.9/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 488:/usr/include/c++/4.9/bits/stl_algobase.h ****     inline _OI
 489:/usr/include/c++/4.9/bits/stl_algobase.h ****     move(_II __first, _II __last, _OI __result)
 490:/usr/include/c++/4.9/bits/stl_algobase.h ****     {
 491:/usr/include/c++/4.9/bits/stl_algobase.h ****       // concept requirements
 492:/usr/include/c++/4.9/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 493:/usr/include/c++/4.9/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 494:/usr/include/c++/4.9/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 495:/usr/include/c++/4.9/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 496:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 497:/usr/include/c++/4.9/bits/stl_algobase.h ****       return std::__copy_move_a2<true>(std::__miter_base(__first),
 498:/usr/include/c++/4.9/bits/stl_algobase.h **** 				       std::__miter_base(__last), __result);
 499:/usr/include/c++/4.9/bits/stl_algobase.h ****     }
 500:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 501:/usr/include/c++/4.9/bits/stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::move(_Tp, _Up, _Vp)
 502:/usr/include/c++/4.9/bits/stl_algobase.h **** #else
 503:/usr/include/c++/4.9/bits/stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::copy(_Tp, _Up, _Vp)
 504:/usr/include/c++/4.9/bits/stl_algobase.h **** #endif
 505:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 506:/usr/include/c++/4.9/bits/stl_algobase.h ****   template<bool, bool, typename>
 507:/usr/include/c++/4.9/bits/stl_algobase.h ****     struct __copy_move_backward
 508:/usr/include/c++/4.9/bits/stl_algobase.h ****     {
 509:/usr/include/c++/4.9/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 510:/usr/include/c++/4.9/bits/stl_algobase.h ****         static _BI2
 511:/usr/include/c++/4.9/bits/stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 512:/usr/include/c++/4.9/bits/stl_algobase.h ****         {
 513:/usr/include/c++/4.9/bits/stl_algobase.h **** 	  while (__first != __last)
 514:/usr/include/c++/4.9/bits/stl_algobase.h **** 	    *--__result = *--__last;
 515:/usr/include/c++/4.9/bits/stl_algobase.h **** 	  return __result;
 516:/usr/include/c++/4.9/bits/stl_algobase.h **** 	}
 517:/usr/include/c++/4.9/bits/stl_algobase.h ****     };
 518:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 519:/usr/include/c++/4.9/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 520:/usr/include/c++/4.9/bits/stl_algobase.h ****   template<typename _Category>
 521:/usr/include/c++/4.9/bits/stl_algobase.h ****     struct __copy_move_backward<true, false, _Category>
 522:/usr/include/c++/4.9/bits/stl_algobase.h ****     {
 523:/usr/include/c++/4.9/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 524:/usr/include/c++/4.9/bits/stl_algobase.h ****         static _BI2
 525:/usr/include/c++/4.9/bits/stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 526:/usr/include/c++/4.9/bits/stl_algobase.h ****         {
 527:/usr/include/c++/4.9/bits/stl_algobase.h **** 	  while (__first != __last)
 528:/usr/include/c++/4.9/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 529:/usr/include/c++/4.9/bits/stl_algobase.h **** 	  return __result;
 530:/usr/include/c++/4.9/bits/stl_algobase.h **** 	}
 531:/usr/include/c++/4.9/bits/stl_algobase.h ****     };
 532:/usr/include/c++/4.9/bits/stl_algobase.h **** #endif
 533:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 534:/usr/include/c++/4.9/bits/stl_algobase.h ****   template<>
 535:/usr/include/c++/4.9/bits/stl_algobase.h ****     struct __copy_move_backward<false, false, random_access_iterator_tag>
 536:/usr/include/c++/4.9/bits/stl_algobase.h ****     {
 537:/usr/include/c++/4.9/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 538:/usr/include/c++/4.9/bits/stl_algobase.h ****         static _BI2
 539:/usr/include/c++/4.9/bits/stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 540:/usr/include/c++/4.9/bits/stl_algobase.h ****         {
 541:/usr/include/c++/4.9/bits/stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type __n;
 542:/usr/include/c++/4.9/bits/stl_algobase.h **** 	  for (__n = __last - __first; __n > 0; --__n)
 543:/usr/include/c++/4.9/bits/stl_algobase.h **** 	    *--__result = *--__last;
 544:/usr/include/c++/4.9/bits/stl_algobase.h **** 	  return __result;
 545:/usr/include/c++/4.9/bits/stl_algobase.h **** 	}
 546:/usr/include/c++/4.9/bits/stl_algobase.h ****     };
 547:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 548:/usr/include/c++/4.9/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 549:/usr/include/c++/4.9/bits/stl_algobase.h ****   template<>
 550:/usr/include/c++/4.9/bits/stl_algobase.h ****     struct __copy_move_backward<true, false, random_access_iterator_tag>
 551:/usr/include/c++/4.9/bits/stl_algobase.h ****     {
 552:/usr/include/c++/4.9/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 553:/usr/include/c++/4.9/bits/stl_algobase.h ****         static _BI2
 554:/usr/include/c++/4.9/bits/stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 555:/usr/include/c++/4.9/bits/stl_algobase.h ****         {
 556:/usr/include/c++/4.9/bits/stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type __n;
 557:/usr/include/c++/4.9/bits/stl_algobase.h **** 	  for (__n = __last - __first; __n > 0; --__n)
 558:/usr/include/c++/4.9/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 559:/usr/include/c++/4.9/bits/stl_algobase.h **** 	  return __result;
 560:/usr/include/c++/4.9/bits/stl_algobase.h **** 	}
 561:/usr/include/c++/4.9/bits/stl_algobase.h ****     };
 562:/usr/include/c++/4.9/bits/stl_algobase.h **** #endif
 563:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 564:/usr/include/c++/4.9/bits/stl_algobase.h ****   template<bool _IsMove>
 565:/usr/include/c++/4.9/bits/stl_algobase.h ****     struct __copy_move_backward<_IsMove, true, random_access_iterator_tag>
 566:/usr/include/c++/4.9/bits/stl_algobase.h ****     {
 567:/usr/include/c++/4.9/bits/stl_algobase.h ****       template<typename _Tp>
 568:/usr/include/c++/4.9/bits/stl_algobase.h ****         static _Tp*
 569:/usr/include/c++/4.9/bits/stl_algobase.h ****         __copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
 570:/usr/include/c++/4.9/bits/stl_algobase.h ****         {
 571:/usr/include/c++/4.9/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 572:/usr/include/c++/4.9/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 573:/usr/include/c++/4.9/bits/stl_algobase.h **** 	  static_assert( is_copy_assignable<_Tp>::value,
 574:/usr/include/c++/4.9/bits/stl_algobase.h **** 	                 "type is not assignable" );
 575:/usr/include/c++/4.9/bits/stl_algobase.h **** #endif
 576:/usr/include/c++/4.9/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 577:/usr/include/c++/4.9/bits/stl_algobase.h **** 	  if (_Num)
 578:/usr/include/c++/4.9/bits/stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 579:/usr/include/c++/4.9/bits/stl_algobase.h **** 	  return __result - _Num;
 580:/usr/include/c++/4.9/bits/stl_algobase.h **** 	}
 581:/usr/include/c++/4.9/bits/stl_algobase.h ****     };
 582:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 583:/usr/include/c++/4.9/bits/stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 584:/usr/include/c++/4.9/bits/stl_algobase.h ****     inline _BI2
 585:/usr/include/c++/4.9/bits/stl_algobase.h ****     __copy_move_backward_a(_BI1 __first, _BI1 __last, _BI2 __result)
 586:/usr/include/c++/4.9/bits/stl_algobase.h ****     {
 587:/usr/include/c++/4.9/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI1>::value_type _ValueType1;
 588:/usr/include/c++/4.9/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI2>::value_type _ValueType2;
 589:/usr/include/c++/4.9/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI1>::iterator_category _Category;
 590:/usr/include/c++/4.9/bits/stl_algobase.h ****       const bool __simple = (__is_trivial(_ValueType1)
 591:/usr/include/c++/4.9/bits/stl_algobase.h **** 	                     && __is_pointer<_BI1>::__value
 592:/usr/include/c++/4.9/bits/stl_algobase.h **** 	                     && __is_pointer<_BI2>::__value
 593:/usr/include/c++/4.9/bits/stl_algobase.h **** 			     && __are_same<_ValueType1, _ValueType2>::__value);
 594:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 595:/usr/include/c++/4.9/bits/stl_algobase.h ****       return std::__copy_move_backward<_IsMove, __simple,
 596:/usr/include/c++/4.9/bits/stl_algobase.h **** 	                               _Category>::__copy_move_b(__first,
 597:/usr/include/c++/4.9/bits/stl_algobase.h **** 								 __last,
 598:/usr/include/c++/4.9/bits/stl_algobase.h **** 								 __result);
 599:/usr/include/c++/4.9/bits/stl_algobase.h ****     }
 600:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 601:/usr/include/c++/4.9/bits/stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 602:/usr/include/c++/4.9/bits/stl_algobase.h ****     inline _BI2
 603:/usr/include/c++/4.9/bits/stl_algobase.h ****     __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
 604:/usr/include/c++/4.9/bits/stl_algobase.h ****     {
 605:/usr/include/c++/4.9/bits/stl_algobase.h ****       return _BI2(std::__copy_move_backward_a<_IsMove>
 606:/usr/include/c++/4.9/bits/stl_algobase.h **** 		  (std::__niter_base(__first), std::__niter_base(__last),
 607:/usr/include/c++/4.9/bits/stl_algobase.h **** 		   std::__niter_base(__result)));
 608:/usr/include/c++/4.9/bits/stl_algobase.h ****     }
 609:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 610:/usr/include/c++/4.9/bits/stl_algobase.h ****   /**
 611:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 612:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 613:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 614:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 615:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 616:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @return   result - (first - last)
 617:/usr/include/c++/4.9/bits/stl_algobase.h ****    *
 618:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  The function has the same effect as copy, but starts at the end of the
 619:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 620:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 621:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 622:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 623:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  optimizations such as unrolling).
 624:/usr/include/c++/4.9/bits/stl_algobase.h ****    *
 625:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  Result may not be in the range (first,last].  Use copy instead.  Note
 626:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 627:/usr/include/c++/4.9/bits/stl_algobase.h ****   */
 628:/usr/include/c++/4.9/bits/stl_algobase.h ****   template<typename _BI1, typename _BI2>
 629:/usr/include/c++/4.9/bits/stl_algobase.h ****     inline _BI2
 630:/usr/include/c++/4.9/bits/stl_algobase.h ****     copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 631:/usr/include/c++/4.9/bits/stl_algobase.h ****     {
 632:/usr/include/c++/4.9/bits/stl_algobase.h ****       // concept requirements
 633:/usr/include/c++/4.9/bits/stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 634:/usr/include/c++/4.9/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 635:/usr/include/c++/4.9/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
 636:/usr/include/c++/4.9/bits/stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
 637:/usr/include/c++/4.9/bits/stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 638:/usr/include/c++/4.9/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 639:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 640:/usr/include/c++/4.9/bits/stl_algobase.h ****       return (std::__copy_move_backward_a2<__is_move_iterator<_BI1>::__value>
 641:/usr/include/c++/4.9/bits/stl_algobase.h **** 	      (std::__miter_base(__first), std::__miter_base(__last),
 642:/usr/include/c++/4.9/bits/stl_algobase.h **** 	       __result));
 643:/usr/include/c++/4.9/bits/stl_algobase.h ****     }
 644:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 645:/usr/include/c++/4.9/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 646:/usr/include/c++/4.9/bits/stl_algobase.h ****   /**
 647:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 648:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 649:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 650:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 651:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 652:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @return   result - (first - last)
 653:/usr/include/c++/4.9/bits/stl_algobase.h ****    *
 654:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  The function has the same effect as move, but starts at the end of the
 655:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 656:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 657:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 658:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 659:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  optimizations such as unrolling).
 660:/usr/include/c++/4.9/bits/stl_algobase.h ****    *
 661:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  Result may not be in the range (first,last].  Use move instead.  Note
 662:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 663:/usr/include/c++/4.9/bits/stl_algobase.h ****   */
 664:/usr/include/c++/4.9/bits/stl_algobase.h ****   template<typename _BI1, typename _BI2>
 665:/usr/include/c++/4.9/bits/stl_algobase.h ****     inline _BI2
 666:/usr/include/c++/4.9/bits/stl_algobase.h ****     move_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 667:/usr/include/c++/4.9/bits/stl_algobase.h ****     {
 668:/usr/include/c++/4.9/bits/stl_algobase.h ****       // concept requirements
 669:/usr/include/c++/4.9/bits/stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 670:/usr/include/c++/4.9/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 671:/usr/include/c++/4.9/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
 672:/usr/include/c++/4.9/bits/stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
 673:/usr/include/c++/4.9/bits/stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 674:/usr/include/c++/4.9/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 675:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 676:/usr/include/c++/4.9/bits/stl_algobase.h ****       return std::__copy_move_backward_a2<true>(std::__miter_base(__first),
 677:/usr/include/c++/4.9/bits/stl_algobase.h **** 						std::__miter_base(__last),
 678:/usr/include/c++/4.9/bits/stl_algobase.h **** 						__result);
 679:/usr/include/c++/4.9/bits/stl_algobase.h ****     }
 680:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 681:/usr/include/c++/4.9/bits/stl_algobase.h **** #define _GLIBCXX_MOVE_BACKWARD3(_Tp, _Up, _Vp) std::move_backward(_Tp, _Up, _Vp)
 682:/usr/include/c++/4.9/bits/stl_algobase.h **** #else
 683:/usr/include/c++/4.9/bits/stl_algobase.h **** #define _GLIBCXX_MOVE_BACKWARD3(_Tp, _Up, _Vp) std::copy_backward(_Tp, _Up, _Vp)
 684:/usr/include/c++/4.9/bits/stl_algobase.h **** #endif
 685:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 686:/usr/include/c++/4.9/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 687:/usr/include/c++/4.9/bits/stl_algobase.h ****     inline typename
 688:/usr/include/c++/4.9/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, void>::__type
 689:/usr/include/c++/4.9/bits/stl_algobase.h ****     __fill_a(_ForwardIterator __first, _ForwardIterator __last,
 690:/usr/include/c++/4.9/bits/stl_algobase.h ****  	     const _Tp& __value)
 691:/usr/include/c++/4.9/bits/stl_algobase.h ****     {
 692:/usr/include/c++/4.9/bits/stl_algobase.h ****       for (; __first != __last; ++__first)
 693:/usr/include/c++/4.9/bits/stl_algobase.h **** 	*__first = __value;
 694:/usr/include/c++/4.9/bits/stl_algobase.h ****     }
 695:/usr/include/c++/4.9/bits/stl_algobase.h ****     
 696:/usr/include/c++/4.9/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 697:/usr/include/c++/4.9/bits/stl_algobase.h ****     inline typename
 698:/usr/include/c++/4.9/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, void>::__type
 699:/usr/include/c++/4.9/bits/stl_algobase.h ****     __fill_a(_ForwardIterator __first, _ForwardIterator __last,
 700:/usr/include/c++/4.9/bits/stl_algobase.h **** 	     const _Tp& __value)
 701:/usr/include/c++/4.9/bits/stl_algobase.h ****     {
 702:/usr/include/c++/4.9/bits/stl_algobase.h ****       const _Tp __tmp = __value;
 703:/usr/include/c++/4.9/bits/stl_algobase.h ****       for (; __first != __last; ++__first)
 704:/usr/include/c++/4.9/bits/stl_algobase.h **** 	*__first = __tmp;
 705:/usr/include/c++/4.9/bits/stl_algobase.h ****     }
 706:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 707:/usr/include/c++/4.9/bits/stl_algobase.h ****   // Specialization: for char types we can use memset.
 708:/usr/include/c++/4.9/bits/stl_algobase.h ****   template<typename _Tp>
 709:/usr/include/c++/4.9/bits/stl_algobase.h ****     inline typename
 710:/usr/include/c++/4.9/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, void>::__type
 711:/usr/include/c++/4.9/bits/stl_algobase.h ****     __fill_a(_Tp* __first, _Tp* __last, const _Tp& __c)
 712:/usr/include/c++/4.9/bits/stl_algobase.h ****     {
 713:/usr/include/c++/4.9/bits/stl_algobase.h ****       const _Tp __tmp = __c;
 714:/usr/include/c++/4.9/bits/stl_algobase.h ****       __builtin_memset(__first, static_cast<unsigned char>(__tmp),
 715:/usr/include/c++/4.9/bits/stl_algobase.h **** 		       __last - __first);
 716:/usr/include/c++/4.9/bits/stl_algobase.h ****     }
 717:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 718:/usr/include/c++/4.9/bits/stl_algobase.h ****   /**
 719:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @brief Fills the range [first,last) with copies of value.
 720:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 721:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @param  __first  A forward iterator.
 722:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @param  __last   A forward iterator.
 723:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @param  __value  A reference-to-const of arbitrary type.
 724:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @return   Nothing.
 725:/usr/include/c++/4.9/bits/stl_algobase.h ****    *
 726:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  This function fills a range with copies of the same value.  For char
 727:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  types filling contiguous areas of memory, this becomes an inline call
 728:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  to @c memset or @c wmemset.
 729:/usr/include/c++/4.9/bits/stl_algobase.h ****   */
 730:/usr/include/c++/4.9/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 731:/usr/include/c++/4.9/bits/stl_algobase.h ****     inline void
 732:/usr/include/c++/4.9/bits/stl_algobase.h ****     fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)
 733:/usr/include/c++/4.9/bits/stl_algobase.h ****     {
 734:/usr/include/c++/4.9/bits/stl_algobase.h ****       // concept requirements
 735:/usr/include/c++/4.9/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 736:/usr/include/c++/4.9/bits/stl_algobase.h **** 				  _ForwardIterator>)
 737:/usr/include/c++/4.9/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 738:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 739:/usr/include/c++/4.9/bits/stl_algobase.h ****       std::__fill_a(std::__niter_base(__first), std::__niter_base(__last),
 740:/usr/include/c++/4.9/bits/stl_algobase.h **** 		    __value);
 741:/usr/include/c++/4.9/bits/stl_algobase.h ****     }
 742:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 743:/usr/include/c++/4.9/bits/stl_algobase.h ****   template<typename _OutputIterator, typename _Size, typename _Tp>
 744:/usr/include/c++/4.9/bits/stl_algobase.h ****     inline typename
 745:/usr/include/c++/4.9/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, _OutputIterator>::__type
 746:/usr/include/c++/4.9/bits/stl_algobase.h ****     __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value)
 747:/usr/include/c++/4.9/bits/stl_algobase.h ****     {
 748:/usr/include/c++/4.9/bits/stl_algobase.h ****       for (__decltype(__n + 0) __niter = __n;
 749:/usr/include/c++/4.9/bits/stl_algobase.h **** 	   __niter > 0; --__niter, ++__first)
 750:/usr/include/c++/4.9/bits/stl_algobase.h **** 	*__first = __value;
 751:/usr/include/c++/4.9/bits/stl_algobase.h ****       return __first;
 752:/usr/include/c++/4.9/bits/stl_algobase.h ****     }
 753:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 754:/usr/include/c++/4.9/bits/stl_algobase.h ****   template<typename _OutputIterator, typename _Size, typename _Tp>
 755:/usr/include/c++/4.9/bits/stl_algobase.h ****     inline typename
 756:/usr/include/c++/4.9/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, _OutputIterator>::__type
 757:/usr/include/c++/4.9/bits/stl_algobase.h ****     __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value)
 758:/usr/include/c++/4.9/bits/stl_algobase.h ****     {
 759:/usr/include/c++/4.9/bits/stl_algobase.h ****       const _Tp __tmp = __value;
 760:/usr/include/c++/4.9/bits/stl_algobase.h ****       for (__decltype(__n + 0) __niter = __n;
 761:/usr/include/c++/4.9/bits/stl_algobase.h **** 	   __niter > 0; --__niter, ++__first)
 762:/usr/include/c++/4.9/bits/stl_algobase.h **** 	*__first = __tmp;
 763:/usr/include/c++/4.9/bits/stl_algobase.h ****       return __first;
 764:/usr/include/c++/4.9/bits/stl_algobase.h ****     }
 765:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 766:/usr/include/c++/4.9/bits/stl_algobase.h ****   template<typename _Size, typename _Tp>
 767:/usr/include/c++/4.9/bits/stl_algobase.h ****     inline typename
 768:/usr/include/c++/4.9/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, _Tp*>::__type
 769:/usr/include/c++/4.9/bits/stl_algobase.h ****     __fill_n_a(_Tp* __first, _Size __n, const _Tp& __c)
 770:/usr/include/c++/4.9/bits/stl_algobase.h ****     {
 771:/usr/include/c++/4.9/bits/stl_algobase.h ****       std::__fill_a(__first, __first + __n, __c);
 772:/usr/include/c++/4.9/bits/stl_algobase.h ****       return __first + __n;
 773:/usr/include/c++/4.9/bits/stl_algobase.h ****     }
 774:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 775:/usr/include/c++/4.9/bits/stl_algobase.h ****   /**
 776:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @brief Fills the range [first,first+n) with copies of value.
 777:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 778:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @param  __first  An output iterator.
 779:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @param  __n      The count of copies to perform.
 780:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @param  __value  A reference-to-const of arbitrary type.
 781:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  @return   The iterator at first+n.
 782:/usr/include/c++/4.9/bits/stl_algobase.h ****    *
 783:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  This function fills a range with copies of the same value.  For char
 784:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  types filling contiguous areas of memory, this becomes an inline call
 785:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  to @c memset or @ wmemset.
 786:/usr/include/c++/4.9/bits/stl_algobase.h ****    *
 787:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  _GLIBCXX_RESOLVE_LIB_DEFECTS
 788:/usr/include/c++/4.9/bits/stl_algobase.h ****    *  DR 865. More algorithms that throw away information
 789:/usr/include/c++/4.9/bits/stl_algobase.h ****   */
 790:/usr/include/c++/4.9/bits/stl_algobase.h ****   template<typename _OI, typename _Size, typename _Tp>
 791:/usr/include/c++/4.9/bits/stl_algobase.h ****     inline _OI
 792:/usr/include/c++/4.9/bits/stl_algobase.h ****     fill_n(_OI __first, _Size __n, const _Tp& __value)
 7270              		.loc 13 792 0
 7271              		.cfi_startproc
 7272 0000 55       		pushq	%rbp
 7273              		.cfi_def_cfa_offset 16
 7274              		.cfi_offset 6, -16
 7275 0001 4889E5   		movq	%rsp, %rbp
 7276              		.cfi_def_cfa_register 6
 7277 0004 4883EC20 		subq	$32, %rsp
 7278 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7279 000c 488975F0 		movq	%rsi, -16(%rbp)
 7280 0010 488955E8 		movq	%rdx, -24(%rbp)
 793:/usr/include/c++/4.9/bits/stl_algobase.h ****     {
 794:/usr/include/c++/4.9/bits/stl_algobase.h ****       // concept requirements
 795:/usr/include/c++/4.9/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI, _Tp>)
 796:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 797:/usr/include/c++/4.9/bits/stl_algobase.h ****       return _OI(std::__fill_n_a(std::__niter_base(__first), __n, __value));
 7281              		.loc 13 797 0
 7282 0014 488B45F8 		movq	-8(%rbp), %rax
 7283 0018 4889C7   		movq	%rax, %rdi
 7284 001b E8000000 		call	_ZSt12__niter_baseIPfENSt11_Niter_baseIT_E13iterator_typeES2_
 7284      00
 7285 0020 4889C1   		movq	%rax, %rcx
 7286 0023 488B55E8 		movq	-24(%rbp), %rdx
 7287 0027 488B45F0 		movq	-16(%rbp), %rax
 7288 002b 4889C6   		movq	%rax, %rsi
 7289 002e 4889CF   		movq	%rcx, %rdi
 7290 0031 E8000000 		call	_ZSt10__fill_n_aIPfmfEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT1_E7__valueET_E6__typeES6_
 7290      00
 798:/usr/include/c++/4.9/bits/stl_algobase.h ****     }
 7291              		.loc 13 798 0
 7292 0036 C9       		leave
 7293              		.cfi_def_cfa 7, 8
 7294 0037 C3       		ret
 7295              		.cfi_endproc
 7296              	.LFE1575:
 7298              		.section	.text._ZNK9__gnu_cxx13new_allocatorIfE8max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_all
 7299              		.align 2
 7300              		.weak	_ZNK9__gnu_cxx13new_allocatorIfE8max_sizeEv
 7302              	_ZNK9__gnu_cxx13new_allocatorIfE8max_sizeEv:
 7303              	.LFB1576:
 111:/usr/include/c++/4.9/ext/new_allocator.h **** 
 112:/usr/include/c++/4.9/ext/new_allocator.h ****       size_type
 113:/usr/include/c++/4.9/ext/new_allocator.h ****       max_size() const _GLIBCXX_USE_NOEXCEPT
 7304              		.loc 9 113 0
 7305              		.cfi_startproc
 7306 0000 55       		pushq	%rbp
 7307              		.cfi_def_cfa_offset 16
 7308              		.cfi_offset 6, -16
 7309 0001 4889E5   		movq	%rsp, %rbp
 7310              		.cfi_def_cfa_register 6
 7311 0004 48897DF8 		movq	%rdi, -8(%rbp)
 114:/usr/include/c++/4.9/ext/new_allocator.h ****       { return size_t(-1) / sizeof(_Tp); }
 7312              		.loc 9 114 0
 7313 0008 48B8FFFF 		movabsq	$4611686018427387903, %rax
 7313      FFFFFFFF 
 7313      FF3F
 7314 0012 5D       		popq	%rbp
 7315              		.cfi_def_cfa 7, 8
 7316 0013 C3       		ret
 7317              		.cfi_endproc
 7318              	.LFE1576:
 7320              		.section	.text._ZSt12__niter_baseIPfENSt11_Niter_baseIT_E13iterator_typeES2_,"axG",@progbits,_ZSt1
 7321              		.weak	_ZSt12__niter_baseIPfENSt11_Niter_baseIT_E13iterator_typeES2_
 7323              	_ZSt12__niter_baseIPfENSt11_Niter_baseIT_E13iterator_typeES2_:
 7324              	.LFB1577:
 278:/usr/include/c++/4.9/bits/stl_algobase.h ****     { return std::_Niter_base<_Iterator>::_S_base(__it); }
 7325              		.loc 13 278 0
 7326              		.cfi_startproc
 7327 0000 55       		pushq	%rbp
 7328              		.cfi_def_cfa_offset 16
 7329              		.cfi_offset 6, -16
 7330 0001 4889E5   		movq	%rsp, %rbp
 7331              		.cfi_def_cfa_register 6
 7332 0004 4883EC10 		subq	$16, %rsp
 7333 0008 48897DF8 		movq	%rdi, -8(%rbp)
 279:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 7334              		.loc 13 279 0
 7335 000c 488B45F8 		movq	-8(%rbp), %rax
 7336 0010 4889C7   		movq	%rax, %rdi
 7337 0013 E8000000 		call	_ZNSt10_Iter_baseIPfLb0EE7_S_baseES0_
 7337      00
 7338 0018 C9       		leave
 7339              		.cfi_def_cfa 7, 8
 7340 0019 C3       		ret
 7341              		.cfi_endproc
 7342              	.LFE1577:
 7344              		.section	.text._ZSt10__fill_n_aIPfmfEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT1_E7__valueET_E6
 7345              		.weak	_ZSt10__fill_n_aIPfmfEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT1_E7__valueET_E6__typeES6
 7347              	_ZSt10__fill_n_aIPfmfEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT1_E7__valueET_E6__typeES6_T0_RKS
 7348              	.LFB1578:
 757:/usr/include/c++/4.9/bits/stl_algobase.h ****     {
 7349              		.loc 13 757 0
 7350              		.cfi_startproc
 7351 0000 55       		pushq	%rbp
 7352              		.cfi_def_cfa_offset 16
 7353              		.cfi_offset 6, -16
 7354 0001 4889E5   		movq	%rsp, %rbp
 7355              		.cfi_def_cfa_register 6
 7356 0004 48897DE8 		movq	%rdi, -24(%rbp)
 7357 0008 488975E0 		movq	%rsi, -32(%rbp)
 7358 000c 488955D8 		movq	%rdx, -40(%rbp)
 7359              	.LBB165:
 759:/usr/include/c++/4.9/bits/stl_algobase.h ****       for (__decltype(__n + 0) __niter = __n;
 7360              		.loc 13 759 0
 7361 0010 488B45D8 		movq	-40(%rbp), %rax
 7362 0014 8B00     		movl	(%rax), %eax
 7363 0016 8945F4   		movl	%eax, -12(%rbp)
 7364              	.LBB166:
 760:/usr/include/c++/4.9/bits/stl_algobase.h **** 	   __niter > 0; --__niter, ++__first)
 7365              		.loc 13 760 0
 7366 0019 488B45E0 		movq	-32(%rbp), %rax
 7367 001d 488945F8 		movq	%rax, -8(%rbp)
 7368 0021 EB13     		jmp	.L398
 7369              	.L399:
 762:/usr/include/c++/4.9/bits/stl_algobase.h ****       return __first;
 7370              		.loc 13 762 0 discriminator 3
 7371 0023 488B55E8 		movq	-24(%rbp), %rdx
 7372 0027 8B45F4   		movl	-12(%rbp), %eax
 7373 002a 8902     		movl	%eax, (%rdx)
 760:/usr/include/c++/4.9/bits/stl_algobase.h **** 	   __niter > 0; --__niter, ++__first)
 7374              		.loc 13 760 0 discriminator 3
 7375 002c 48836DF8 		subq	$1, -8(%rbp)
 7375      01
 7376 0031 488345E8 		addq	$4, -24(%rbp)
 7376      04
 7377              	.L398:
 760:/usr/include/c++/4.9/bits/stl_algobase.h **** 	   __niter > 0; --__niter, ++__first)
 7378              		.loc 13 760 0 is_stmt 0 discriminator 1
 7379 0036 48837DF8 		cmpq	$0, -8(%rbp)
 7379      00
 7380 003b 75E6     		jne	.L399
 7381              	.LBE166:
 763:/usr/include/c++/4.9/bits/stl_algobase.h ****     }
 7382              		.loc 13 763 0 is_stmt 1
 7383 003d 488B45E8 		movq	-24(%rbp), %rax
 7384              	.LBE165:
 764:/usr/include/c++/4.9/bits/stl_algobase.h **** 
 7385              		.loc 13 764 0
 7386 0041 5D       		popq	%rbp
 7387              		.cfi_def_cfa 7, 8
 7388 0042 C3       		ret
 7389              		.cfi_endproc
 7390              	.LFE1578:
 7392              		.section	.text._ZNSt10_Iter_baseIPfLb0EE7_S_baseES0_,"axG",@progbits,_ZNSt10_Iter_baseIPfLb0EE7_S_
 7393              		.weak	_ZNSt10_Iter_baseIPfLb0EE7_S_baseES0_
 7395              	_ZNSt10_Iter_baseIPfLb0EE7_S_baseES0_:
 7396              	.LFB1579:
 7397              		.file 14 "/usr/include/c++/4.9/bits/stl_iterator_base_types.h"
   1:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** // Types used in iterator implementation -*- C++ -*-
   2:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** 
   3:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   4:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** //
   5:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** // any later version.
  10:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** 
  11:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** // GNU General Public License for more details.
  15:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** 
  16:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** 
  20:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** 
  25:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** /*
  26:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****  *
  27:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****  * Copyright (c) 1994
  28:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****  *
  30:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****  *
  38:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****  *
  39:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****  * Copyright (c) 1996-1998
  40:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****  *
  42:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****  */
  50:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** 
  51:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** /** @file bits/stl_iterator_base_types.h
  52:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****  *  Do not attempt to use it directly. @headername{iterator}
  54:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****  *
  55:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****  *  This file contains all of the general iterator-related utility types,
  56:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****  *  such as iterator_traits and struct iterator.
  57:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****  */
  58:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** 
  59:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** #ifndef _STL_ITERATOR_BASE_TYPES_H
  60:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** #define _STL_ITERATOR_BASE_TYPES_H 1
  61:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** 
  62:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** #pragma GCC system_header
  63:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** 
  64:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** #include <bits/c++config.h>
  65:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** 
  66:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** #if __cplusplus >= 201103L
  67:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** # include <type_traits>  // For _GLIBCXX_HAS_NESTED_TYPE, is_convertible
  68:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** #endif
  69:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** 
  70:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** namespace std _GLIBCXX_VISIBILITY(default)
  71:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** {
  72:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  73:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** 
  74:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****   /**
  75:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****    *  @defgroup iterators Iterators
  76:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****    *  Abstractions for uniform iterating through various underlying types.
  77:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****   */
  78:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****   //@{ 
  79:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** 
  80:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****   /**
  81:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****    *  @defgroup iterator_tags Iterator Tags
  82:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****    *  These are empty types, used to distinguish different iterators.  The
  83:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****    *  distinction is not made by what they contain, but simply by what they
  84:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****    *  are.  Different underlying algorithms can then be used based on the
  85:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****    *  different operations supported by different iterator types.
  86:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****   */
  87:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****   //@{ 
  88:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****   ///  Marking input iterators.
  89:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****   struct input_iterator_tag { };
  90:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** 
  91:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****   ///  Marking output iterators.
  92:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****   struct output_iterator_tag { };
  93:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** 
  94:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****   /// Forward iterators support a superset of input iterator operations.
  95:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****   struct forward_iterator_tag : public input_iterator_tag { };
  96:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** 
  97:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****   /// Bidirectional iterators support a superset of forward iterator
  98:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****   /// operations.
  99:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****   struct bidirectional_iterator_tag : public forward_iterator_tag { };
 100:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** 
 101:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****   /// Random-access iterators support a superset of bidirectional
 102:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****   /// iterator operations.
 103:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****   struct random_access_iterator_tag : public bidirectional_iterator_tag { };
 104:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****   //@}
 105:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** 
 106:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****   /**
 107:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****    *  @brief  Common %iterator class.
 108:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****    *
 109:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****    *  This class does nothing but define nested typedefs.  %Iterator classes
 110:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****    *  can inherit from this class to save some work.  The typedefs are then
 111:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****    *  used in specializations and overloading.
 112:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****    *
 113:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****    *  In particular, there are no default implementations of requirements
 114:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****    *  such as @c operator++ and the like.  (How could there be?)
 115:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****   */
 116:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****   template<typename _Category, typename _Tp, typename _Distance = ptrdiff_t,
 117:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****            typename _Pointer = _Tp*, typename _Reference = _Tp&>
 118:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****     struct iterator
 119:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****     {
 120:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****       /// One of the @link iterator_tags tag types@endlink.
 121:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****       typedef _Category  iterator_category;
 122:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****       /// The type "pointed to" by the iterator.
 123:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****       typedef _Tp        value_type;
 124:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****       /// Distance between iterators is represented as this type.
 125:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****       typedef _Distance  difference_type;
 126:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****       /// This type represents a pointer-to-value_type.
 127:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****       typedef _Pointer   pointer;
 128:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****       /// This type represents a reference-to-value_type.
 129:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****       typedef _Reference reference;
 130:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****     };
 131:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** 
 132:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****   /**
 133:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****    *  @brief  Traits class for iterators.
 134:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****    *
 135:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****    *  This class does nothing but define nested typedefs.  The general
 136:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****    *  version simply @a forwards the nested typedefs from the Iterator
 137:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****    *  argument.  Specialized versions for pointers and pointers-to-const
 138:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****    *  provide tighter, more correct semantics.
 139:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****   */
 140:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** #if __cplusplus >= 201103L
 141:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** 
 142:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** _GLIBCXX_HAS_NESTED_TYPE(iterator_category)
 143:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** 
 144:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****   template<typename _Iterator,
 145:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** 	   bool = __has_iterator_category<_Iterator>::value>
 146:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****     struct __iterator_traits { };
 147:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** 
 148:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****   template<typename _Iterator>
 149:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****     struct __iterator_traits<_Iterator, true>
 150:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****     {
 151:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::iterator_category iterator_category;
 152:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::value_type        value_type;
 153:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::difference_type   difference_type;
 154:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::pointer           pointer;
 155:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::reference         reference;
 156:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****     };
 157:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** 
 158:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****   template<typename _Iterator>
 159:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****     struct iterator_traits
 160:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****     : public __iterator_traits<_Iterator> { };
 161:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** #else
 162:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****   template<typename _Iterator>
 163:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****     struct iterator_traits
 164:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****     {
 165:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::iterator_category iterator_category;
 166:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::value_type        value_type;
 167:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::difference_type   difference_type;
 168:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::pointer           pointer;
 169:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::reference         reference;
 170:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****     };
 171:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** #endif
 172:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** 
 173:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****   /// Partial specialization for pointer types.
 174:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****   template<typename _Tp>
 175:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****     struct iterator_traits<_Tp*>
 176:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****     {
 177:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****       typedef random_access_iterator_tag iterator_category;
 178:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****       typedef _Tp                         value_type;
 179:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****       typedef ptrdiff_t                   difference_type;
 180:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****       typedef _Tp*                        pointer;
 181:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****       typedef _Tp&                        reference;
 182:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****     };
 183:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** 
 184:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****   /// Partial specialization for const pointer types.
 185:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****   template<typename _Tp>
 186:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****     struct iterator_traits<const _Tp*>
 187:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****     {
 188:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****       typedef random_access_iterator_tag iterator_category;
 189:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****       typedef _Tp                         value_type;
 190:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****       typedef ptrdiff_t                   difference_type;
 191:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****       typedef const _Tp*                  pointer;
 192:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****       typedef const _Tp&                  reference;
 193:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****     };
 194:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** 
 195:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****   /**
 196:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****    *  This function is not a part of the C++ standard but is syntactic
 197:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****    *  sugar for internal library use only.
 198:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****   */
 199:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****   template<typename _Iter>
 200:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****     inline typename iterator_traits<_Iter>::iterator_category
 201:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****     __iterator_category(const _Iter&)
 202:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****     { return typename iterator_traits<_Iter>::iterator_category(); }
 203:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** 
 204:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****   //@}
 205:/usr/include/c++/4.9/bits/stl_iterator_base_types.h **** 
 206:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****   // If _Iterator has a base returns it otherwise _Iterator is returned
 207:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****   // untouched
 208:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****   template<typename _Iterator, bool _HasBase>
 209:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****     struct _Iter_base
 210:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****     {
 211:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****       typedef _Iterator iterator_type;
 212:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****       static iterator_type _S_base(_Iterator __it)
 7398              		.loc 14 212 0
 7399              		.cfi_startproc
 7400 0000 55       		pushq	%rbp
 7401              		.cfi_def_cfa_offset 16
 7402              		.cfi_offset 6, -16
 7403 0001 4889E5   		movq	%rsp, %rbp
 7404              		.cfi_def_cfa_register 6
 7405 0004 48897DF8 		movq	%rdi, -8(%rbp)
 213:/usr/include/c++/4.9/bits/stl_iterator_base_types.h ****       { return __it; }
 7406              		.loc 14 213 0
 7407 0008 488B45F8 		movq	-8(%rbp), %rax
 7408 000c 5D       		popq	%rbp
 7409              		.cfi_def_cfa 7, 8
 7410 000d C3       		ret
 7411              		.cfi_endproc
 7412              	.LFE1579:
 7414              		.section	.rodata
 7415 061e 0000     		.align 32
 7418              	_ZTVN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionE:
 7419 0620 00000000 		.quad	0
 7419      00000000 
 7420 0628 00000000 		.quad	_ZTIN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionE
 7420      00000000 
 7421 0630 00000000 		.quad	_ZN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionD1Ev
 7421      00000000 
 7422 0638 00000000 		.quad	_ZN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionD0Ev
 7422      00000000 
 7423 0640 00000000 		.quad	_ZNK12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunction7RunImplEv
 7423      00000000 
 7424              		.text
 7425              		.align 2
 7427              	_ZN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionD2Ev:
 7428              	.LFB1581:
 151:TestUnitTest++.cpp **** {
 7429              		.loc 4 151 0
 7430              		.cfi_startproc
 7431 2122 55       		pushq	%rbp
 7432              		.cfi_def_cfa_offset 16
 7433              		.cfi_offset 6, -16
 7434 2123 4889E5   		movq	%rsp, %rbp
 7435              		.cfi_def_cfa_register 6
 7436 2126 4883EC10 		subq	$16, %rsp
 7437 212a 48897DF8 		movq	%rdi, -8(%rbp)
 7438              	.LBB167:
 151:TestUnitTest++.cpp **** {
 7439              		.loc 4 151 0
 7440 212e 488B45F8 		movq	-8(%rbp), %rax
 7441 2132 48C70000 		movq	$_ZTVN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionE+16, (%rax)
 7441      000000
 7442 2139 488B45F8 		movq	-8(%rbp), %rax
 7443 213d 4889C7   		movq	%rax, %rdi
 7444 2140 E8000000 		call	_ZN8UnitTest4TestD2Ev
 7444      00
 7445              	.LBE167:
 7446 2145 B8000000 		movl	$0, %eax
 7446      00
 7447 214a 85C0     		testl	%eax, %eax
 7448 214c 740C     		je	.L403
 151:TestUnitTest++.cpp **** {
 7449              		.loc 4 151 0 is_stmt 0 discriminator 4
 7450 214e 488B45F8 		movq	-8(%rbp), %rax
 7451 2152 4889C7   		movq	%rax, %rdi
 7452 2155 E8000000 		call	_ZdlPv
 7452      00
 7453              	.L403:
 151:TestUnitTest++.cpp **** {
 7454              		.loc 4 151 0
 7455 215a C9       		leave
 7456              		.cfi_def_cfa 7, 8
 7457 215b C3       		ret
 7458              		.cfi_endproc
 7459              	.LFE1581:
 7461              		.set	_ZN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionD1Ev,_ZN12_GLOBAL__N_137TestCanCallCH
 7462              		.align 2
 7464              	_ZN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionD0Ev:
 7465              	.LFB1583:
 151:TestUnitTest++.cpp **** {
 7466              		.loc 4 151 0 is_stmt 1
 7467              		.cfi_startproc
 7468 215c 55       		pushq	%rbp
 7469              		.cfi_def_cfa_offset 16
 7470              		.cfi_offset 6, -16
 7471 215d 4889E5   		movq	%rsp, %rbp
 7472              		.cfi_def_cfa_register 6
 7473 2160 4883EC10 		subq	$16, %rsp
 7474 2164 48897DF8 		movq	%rdi, -8(%rbp)
 151:TestUnitTest++.cpp **** {
 7475              		.loc 4 151 0
 7476 2168 488B45F8 		movq	-8(%rbp), %rax
 7477 216c 4889C7   		movq	%rax, %rdi
 7478 216f E8AEFFFF 		call	_ZN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionD2Ev
 7478      FF
 7479 2174 488B45F8 		movq	-8(%rbp), %rax
 7480 2178 4889C7   		movq	%rax, %rdi
 7481 217b E8000000 		call	_ZdlPv
 7481      00
 7482 2180 C9       		leave
 7483              		.cfi_def_cfa 7, 8
 7484 2181 C3       		ret
 7485              		.cfi_endproc
 7486              	.LFE1583:
 7488              		.section	.rodata
 7489 0648 00000000 		.align 32
 7489      00000000 
 7489      00000000 
 7489      00000000 
 7489      00000000 
 7492              	_ZTVN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeE:
 7493 0660 00000000 		.quad	0
 7493      00000000 
 7494 0668 00000000 		.quad	_ZTIN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeE
 7494      00000000 
 7495 0670 00000000 		.quad	_ZN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeD1Ev
 7495      00000000 
 7496 0678 00000000 		.quad	_ZN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeD0Ev
 7496      00000000 
 7497 0680 00000000 		.quad	_ZNK12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATime7RunImplEv
 7497      00000000 
 7498              		.text
 7499              		.align 2
 7501              	_ZN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeD2Ev:
 7502              	.LFB1585:
 141:TestUnitTest++.cpp **** {
 7503              		.loc 4 141 0
 7504              		.cfi_startproc
 7505 2182 55       		pushq	%rbp
 7506              		.cfi_def_cfa_offset 16
 7507              		.cfi_offset 6, -16
 7508 2183 4889E5   		movq	%rsp, %rbp
 7509              		.cfi_def_cfa_register 6
 7510 2186 4883EC10 		subq	$16, %rsp
 7511 218a 48897DF8 		movq	%rdi, -8(%rbp)
 7512              	.LBB168:
 141:TestUnitTest++.cpp **** {
 7513              		.loc 4 141 0
 7514 218e 488B45F8 		movq	-8(%rbp), %rax
 7515 2192 48C70000 		movq	$_ZTVN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeE+16, (%rax)
 7515      000000
 7516 2199 488B45F8 		movq	-8(%rbp), %rax
 7517 219d 4889C7   		movq	%rax, %rdi
 7518 21a0 E8000000 		call	_ZN8UnitTest4TestD2Ev
 7518      00
 7519              	.LBE168:
 7520 21a5 B8000000 		movl	$0, %eax
 7520      00
 7521 21aa 85C0     		testl	%eax, %eax
 7522 21ac 740C     		je	.L408
 141:TestUnitTest++.cpp **** {
 7523              		.loc 4 141 0 is_stmt 0 discriminator 4
 7524 21ae 488B45F8 		movq	-8(%rbp), %rax
 7525 21b2 4889C7   		movq	%rax, %rdi
 7526 21b5 E8000000 		call	_ZdlPv
 7526      00
 7527              	.L408:
 141:TestUnitTest++.cpp **** {
 7528              		.loc 4 141 0
 7529 21ba C9       		leave
 7530              		.cfi_def_cfa 7, 8
 7531 21bb C3       		ret
 7532              		.cfi_endproc
 7533              	.LFE1585:
 7535              		.set	_ZN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeD1Ev,_ZN12_GLOBAL__N_143TestSim
 7536              		.align 2
 7538              	_ZN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeD0Ev:
 7539              	.LFB1587:
 141:TestUnitTest++.cpp **** {
 7540              		.loc 4 141 0 is_stmt 1
 7541              		.cfi_startproc
 7542 21bc 55       		pushq	%rbp
 7543              		.cfi_def_cfa_offset 16
 7544              		.cfi_offset 6, -16
 7545 21bd 4889E5   		movq	%rsp, %rbp
 7546              		.cfi_def_cfa_register 6
 7547 21c0 4883EC10 		subq	$16, %rsp
 7548 21c4 48897DF8 		movq	%rdi, -8(%rbp)
 141:TestUnitTest++.cpp **** {
 7549              		.loc 4 141 0
 7550 21c8 488B45F8 		movq	-8(%rbp), %rax
 7551 21cc 4889C7   		movq	%rax, %rdi
 7552 21cf E8AEFFFF 		call	_ZN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeD2Ev
 7552      FF
 7553 21d4 488B45F8 		movq	-8(%rbp), %rax
 7554 21d8 4889C7   		movq	%rax, %rdi
 7555 21db E8000000 		call	_ZdlPv
 7555      00
 7556 21e0 C9       		leave
 7557              		.cfi_def_cfa 7, 8
 7558 21e1 C3       		ret
 7559              		.cfi_endproc
 7560              	.LFE1587:
 7562              		.section	.rodata
 7563 0688 00000000 		.align 32
 7563      00000000 
 7563      00000000 
 7563      00000000 
 7563      00000000 
 7566              	_ZTVN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledE:
 7567 06a0 00000000 		.quad	0
 7567      00000000 
 7568 06a8 00000000 		.quad	_ZTIN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledE
 7568      00000000 
 7569 06b0 00000000 		.quad	_ZN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledD1Ev
 7569      00000000 
 7570 06b8 00000000 		.quad	_ZN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledD0Ev
 7570      00000000 
 7571 06c0 00000000 		.quad	_ZNK12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalled7RunImplEv
 7571      00000000 
 7572              		.text
 7573              		.align 2
 7575              	_ZN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledD2Ev:
 7576              	.LFB1589:
 136:TestUnitTest++.cpp **** {
 7577              		.loc 4 136 0
 7578              		.cfi_startproc
 7579 21e2 55       		pushq	%rbp
 7580              		.cfi_def_cfa_offset 16
 7581              		.cfi_offset 6, -16
 7582 21e3 4889E5   		movq	%rsp, %rbp
 7583              		.cfi_def_cfa_register 6
 7584 21e6 4883EC10 		subq	$16, %rsp
 7585 21ea 48897DF8 		movq	%rdi, -8(%rbp)
 7586              	.LBB169:
 136:TestUnitTest++.cpp **** {
 7587              		.loc 4 136 0
 7588 21ee 488B45F8 		movq	-8(%rbp), %rax
 7589 21f2 48C70000 		movq	$_ZTVN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledE+16, (%rax)
 7589      000000
 7590 21f9 488B45F8 		movq	-8(%rbp), %rax
 7591 21fd 4889C7   		movq	%rax, %rdi
 7592 2200 E8000000 		call	_ZN8UnitTest4TestD2Ev
 7592      00
 7593              	.LBE169:
 7594 2205 B8000000 		movl	$0, %eax
 7594      00
 7595 220a 85C0     		testl	%eax, %eax
 7596 220c 740C     		je	.L413
 136:TestUnitTest++.cpp **** {
 7597              		.loc 4 136 0 is_stmt 0 discriminator 4
 7598 220e 488B45F8 		movq	-8(%rbp), %rax
 7599 2212 4889C7   		movq	%rax, %rdi
 7600 2215 E8000000 		call	_ZdlPv
 7600      00
 7601              	.L413:
 136:TestUnitTest++.cpp **** {
 7602              		.loc 4 136 0
 7603 221a C9       		leave
 7604              		.cfi_def_cfa 7, 8
 7605 221b C3       		ret
 7606              		.cfi_endproc
 7607              	.LFE1589:
 7609              		.set	_ZN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledD1Ev,_ZN12_GLOBAL__N_143TestSim
 7610              		.align 2
 7612              	_ZN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledD0Ev:
 7613              	.LFB1591:
 136:TestUnitTest++.cpp **** {
 7614              		.loc 4 136 0 is_stmt 1
 7615              		.cfi_startproc
 7616 221c 55       		pushq	%rbp
 7617              		.cfi_def_cfa_offset 16
 7618              		.cfi_offset 6, -16
 7619 221d 4889E5   		movq	%rsp, %rbp
 7620              		.cfi_def_cfa_register 6
 7621 2220 4883EC10 		subq	$16, %rsp
 7622 2224 48897DF8 		movq	%rdi, -8(%rbp)
 136:TestUnitTest++.cpp **** {
 7623              		.loc 4 136 0
 7624 2228 488B45F8 		movq	-8(%rbp), %rax
 7625 222c 4889C7   		movq	%rax, %rdi
 7626 222f E8AEFFFF 		call	_ZN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledD2Ev
 7626      FF
 7627 2234 488B45F8 		movq	-8(%rbp), %rax
 7628 2238 4889C7   		movq	%rax, %rdi
 7629 223b E8000000 		call	_ZdlPv
 7629      00
 7630 2240 C9       		leave
 7631              		.cfi_def_cfa 7, 8
 7632 2241 C3       		ret
 7633              		.cfi_endproc
 7634              	.LFE1591:
 7636              		.section	.rodata
 7637 06c8 00000000 		.align 32
 7637      00000000 
 7637      00000000 
 7637      00000000 
 7637      00000000 
 7640              	_ZTVN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionE:
 7641 06e0 00000000 		.quad	0
 7641      00000000 
 7642 06e8 00000000 		.quad	_ZTIN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionE
 7642      00000000 
 7643 06f0 00000000 		.quad	_ZN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionD1Ev
 7643      00000000 
 7644 06f8 00000000 		.quad	_ZN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionD0Ev
 7644      00000000 
 7645 0700 00000000 		.quad	_ZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEv
 7645      00000000 
 7646              		.text
 7647              		.align 2
 7649              	_ZN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionD2Ev:
 7650              	.LFB1593:
  97:TestUnitTest++.cpp **** {
 7651              		.loc 4 97 0
 7652              		.cfi_startproc
 7653 2242 55       		pushq	%rbp
 7654              		.cfi_def_cfa_offset 16
 7655              		.cfi_offset 6, -16
 7656 2243 4889E5   		movq	%rsp, %rbp
 7657              		.cfi_def_cfa_register 6
 7658 2246 4883EC10 		subq	$16, %rsp
 7659 224a 48897DF8 		movq	%rdi, -8(%rbp)
 7660              	.LBB170:
  97:TestUnitTest++.cpp **** {
 7661              		.loc 4 97 0
 7662 224e 488B45F8 		movq	-8(%rbp), %rax
 7663 2252 48C70000 		movq	$_ZTVN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionE+16, (%rax)
 7663      000000
 7664 2259 488B45F8 		movq	-8(%rbp), %rax
 7665 225d 4889C7   		movq	%rax, %rdi
 7666 2260 E8000000 		call	_ZN8UnitTest4TestD2Ev
 7666      00
 7667              	.LBE170:
 7668 2265 B8000000 		movl	$0, %eax
 7668      00
 7669 226a 85C0     		testl	%eax, %eax
 7670 226c 740C     		je	.L418
  97:TestUnitTest++.cpp **** {
 7671              		.loc 4 97 0 is_stmt 0 discriminator 4
 7672 226e 488B45F8 		movq	-8(%rbp), %rax
 7673 2272 4889C7   		movq	%rax, %rdi
 7674 2275 E8000000 		call	_ZdlPv
 7674      00
 7675              	.L418:
  97:TestUnitTest++.cpp **** {
 7676              		.loc 4 97 0
 7677 227a C9       		leave
 7678              		.cfi_def_cfa 7, 8
 7679 227b C3       		ret
 7680              		.cfi_endproc
 7681              	.LFE1593:
 7683              		.set	_ZN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionD1Ev,_ZN12_GLOBAL__N_140TestCheckT
 7684              		.align 2
 7686              	_ZN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionD0Ev:
 7687              	.LFB1595:
  97:TestUnitTest++.cpp **** {
 7688              		.loc 4 97 0 is_stmt 1
 7689              		.cfi_startproc
 7690 227c 55       		pushq	%rbp
 7691              		.cfi_def_cfa_offset 16
 7692              		.cfi_offset 6, -16
 7693 227d 4889E5   		movq	%rsp, %rbp
 7694              		.cfi_def_cfa_register 6
 7695 2280 4883EC10 		subq	$16, %rsp
 7696 2284 48897DF8 		movq	%rdi, -8(%rbp)
  97:TestUnitTest++.cpp **** {
 7697              		.loc 4 97 0
 7698 2288 488B45F8 		movq	-8(%rbp), %rax
 7699 228c 4889C7   		movq	%rax, %rdi
 7700 228f E8AEFFFF 		call	_ZN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionD2Ev
 7700      FF
 7701 2294 488B45F8 		movq	-8(%rbp), %rax
 7702 2298 4889C7   		movq	%rax, %rdi
 7703 229b E8000000 		call	_ZdlPv
 7703      00
 7704 22a0 C9       		leave
 7705              		.cfi_def_cfa 7, 8
 7706 22a1 C3       		ret
 7707              		.cfi_endproc
 7708              	.LFE1595:
 7710              		.section	.rodata
 7711 0708 00000000 		.align 32
 7711      00000000 
 7711      00000000 
 7711      00000000 
 7711      00000000 
 7714              	_ZTVZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvE14WrongThrowTest:
 7715 0720 00000000 		.quad	0
 7715      00000000 
 7716 0728 00000000 		.quad	_ZTIZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvE14WrongThrowTest
 7716      00000000 
 7717 0730 00000000 		.quad	_ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestD1E
 7717      00000000 
 7718 0738 00000000 		.quad	_ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestD0E
 7718      00000000 
 7719 0740 00000000 		.quad	_ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvENK14WrongThrowTest7R
 7719      00000000 
 7720              		.text
 7721              		.align 2
 7723              	_ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestD2Ev:
 7724              	.LFB1597:
  99:TestUnitTest++.cpp ****     {
 7725              		.loc 4 99 0
 7726              		.cfi_startproc
 7727 22a2 55       		pushq	%rbp
 7728              		.cfi_def_cfa_offset 16
 7729              		.cfi_offset 6, -16
 7730 22a3 4889E5   		movq	%rsp, %rbp
 7731              		.cfi_def_cfa_register 6
 7732 22a6 4883EC10 		subq	$16, %rsp
 7733 22aa 48897DF8 		movq	%rdi, -8(%rbp)
 7734              	.LBB171:
  99:TestUnitTest++.cpp ****     {
 7735              		.loc 4 99 0
 7736 22ae 488B45F8 		movq	-8(%rbp), %rax
 7737 22b2 48C70000 		movq	$_ZTVZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvE14WrongThrowTest+1
 7737      000000
 7738 22b9 488B45F8 		movq	-8(%rbp), %rax
 7739 22bd 4889C7   		movq	%rax, %rdi
 7740 22c0 E8000000 		call	_ZN8UnitTest4TestD2Ev
 7740      00
 7741              	.LBE171:
 7742 22c5 B8000000 		movl	$0, %eax
 7742      00
 7743 22ca 85C0     		testl	%eax, %eax
 7744 22cc 740C     		je	.L423
  99:TestUnitTest++.cpp ****     {
 7745              		.loc 4 99 0 is_stmt 0 discriminator 4
 7746 22ce 488B45F8 		movq	-8(%rbp), %rax
 7747 22d2 4889C7   		movq	%rax, %rdi
 7748 22d5 E8000000 		call	_ZdlPv
 7748      00
 7749              	.L423:
  99:TestUnitTest++.cpp ****     {
 7750              		.loc 4 99 0
 7751 22da C9       		leave
 7752              		.cfi_def_cfa 7, 8
 7753 22db C3       		ret
 7754              		.cfi_endproc
 7755              	.LFE1597:
 7757              		.set	_ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestD1Ev
 7758              		.align 2
 7760              	_ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestD0Ev:
 7761              	.LFB1599:
  99:TestUnitTest++.cpp ****     {
 7762              		.loc 4 99 0 is_stmt 1
 7763              		.cfi_startproc
 7764 22dc 55       		pushq	%rbp
 7765              		.cfi_def_cfa_offset 16
 7766              		.cfi_offset 6, -16
 7767 22dd 4889E5   		movq	%rsp, %rbp
 7768              		.cfi_def_cfa_register 6
 7769 22e0 4883EC10 		subq	$16, %rsp
 7770 22e4 48897DF8 		movq	%rdi, -8(%rbp)
  99:TestUnitTest++.cpp ****     {
 7771              		.loc 4 99 0
 7772 22e8 488B45F8 		movq	-8(%rbp), %rax
 7773 22ec 4889C7   		movq	%rax, %rdi
 7774 22ef E8AEFFFF 		call	_ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestD2Ev
 7774      FF
 7775 22f4 488B45F8 		movq	-8(%rbp), %rax
 7776 22f8 4889C7   		movq	%rax, %rdi
 7777 22fb E8000000 		call	_ZdlPv
 7777      00
 7778 2300 C9       		leave
 7779              		.cfi_def_cfa 7, 8
 7780 2301 C3       		ret
 7781              		.cfi_endproc
 7782              	.LFE1599:
 7784              		.section	.rodata
 7785 0748 00000000 		.align 32
 7785      00000000 
 7785      00000000 
 7785      00000000 
 7785      00000000 
 7788              	_ZTVN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionE:
 7789 0760 00000000 		.quad	0
 7789      00000000 
 7790 0768 00000000 		.quad	_ZTIN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionE
 7790      00000000 
 7791 0770 00000000 		.quad	_ZN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionD1Ev
 7791      00000000 
 7792 0778 00000000 		.quad	_ZN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionD0Ev
 7792      00000000 
 7793 0780 00000000 		.quad	_ZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEv
 7793      00000000 
 7794              		.text
 7795              		.align 2
 7797              	_ZN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionD2Ev:
 7798              	.LFB1601:
  70:TestUnitTest++.cpp **** {
 7799              		.loc 4 70 0
 7800              		.cfi_startproc
 7801 2302 55       		pushq	%rbp
 7802              		.cfi_def_cfa_offset 16
 7803              		.cfi_offset 6, -16
 7804 2303 4889E5   		movq	%rsp, %rbp
 7805              		.cfi_def_cfa_register 6
 7806 2306 4883EC10 		subq	$16, %rsp
 7807 230a 48897DF8 		movq	%rdi, -8(%rbp)
 7808              	.LBB172:
  70:TestUnitTest++.cpp **** {
 7809              		.loc 4 70 0
 7810 230e 488B45F8 		movq	-8(%rbp), %rax
 7811 2312 48C70000 		movq	$_ZTVN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionE+16, (%rax)
 7811      000000
 7812 2319 488B45F8 		movq	-8(%rbp), %rax
 7813 231d 4889C7   		movq	%rax, %rdi
 7814 2320 E8000000 		call	_ZN8UnitTest4TestD2Ev
 7814      00
 7815              	.LBE172:
 7816 2325 B8000000 		movl	$0, %eax
 7816      00
 7817 232a 85C0     		testl	%eax, %eax
 7818 232c 740C     		je	.L428
  70:TestUnitTest++.cpp **** {
 7819              		.loc 4 70 0 is_stmt 0 discriminator 4
 7820 232e 488B45F8 		movq	-8(%rbp), %rax
 7821 2332 4889C7   		movq	%rax, %rdi
 7822 2335 E8000000 		call	_ZdlPv
 7822      00
 7823              	.L428:
  70:TestUnitTest++.cpp **** {
 7824              		.loc 4 70 0
 7825 233a C9       		leave
 7826              		.cfi_def_cfa 7, 8
 7827 233b C3       		ret
 7828              		.cfi_endproc
 7829              	.LFE1601:
 7831              		.set	_ZN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionD1Ev,_ZN12_GLOBAL__N_142TestChec
 7832              		.align 2
 7834              	_ZN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionD0Ev:
 7835              	.LFB1603:
  70:TestUnitTest++.cpp **** {
 7836              		.loc 4 70 0 is_stmt 1
 7837              		.cfi_startproc
 7838 233c 55       		pushq	%rbp
 7839              		.cfi_def_cfa_offset 16
 7840              		.cfi_offset 6, -16
 7841 233d 4889E5   		movq	%rsp, %rbp
 7842              		.cfi_def_cfa_register 6
 7843 2340 4883EC10 		subq	$16, %rsp
 7844 2344 48897DF8 		movq	%rdi, -8(%rbp)
  70:TestUnitTest++.cpp **** {
 7845              		.loc 4 70 0
 7846 2348 488B45F8 		movq	-8(%rbp), %rax
 7847 234c 4889C7   		movq	%rax, %rdi
 7848 234f E8AEFFFF 		call	_ZN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionD2Ev
 7848      FF
 7849 2354 488B45F8 		movq	-8(%rbp), %rax
 7850 2358 4889C7   		movq	%rax, %rdi
 7851 235b E8000000 		call	_ZdlPv
 7851      00
 7852 2360 C9       		leave
 7853              		.cfi_def_cfa 7, 8
 7854 2361 C3       		ret
 7855              		.cfi_endproc
 7856              	.LFE1603:
 7858              		.section	.rodata
 7859 0788 00000000 		.align 32
 7859      00000000 
 7859      00000000 
 7859      00000000 
 7859      00000000 
 7862              	_ZTVZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvE11NoThrowTest:
 7863 07a0 00000000 		.quad	0
 7863      00000000 
 7864 07a8 00000000 		.quad	_ZTIZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvE11NoThrowTest
 7864      00000000 
 7865 07b0 00000000 		.quad	_ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestD1Ev
 7865      00000000 
 7866 07b8 00000000 		.quad	_ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestD0Ev
 7866      00000000 
 7867 07c0 00000000 		.quad	_ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvENK11NoThrowTest7Ru
 7867      00000000 
 7868              		.text
 7869              		.align 2
 7871              	_ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestD2Ev:
 7872              	.LFB1605:
  72:TestUnitTest++.cpp ****     {
 7873              		.loc 4 72 0
 7874              		.cfi_startproc
 7875 2362 55       		pushq	%rbp
 7876              		.cfi_def_cfa_offset 16
 7877              		.cfi_offset 6, -16
 7878 2363 4889E5   		movq	%rsp, %rbp
 7879              		.cfi_def_cfa_register 6
 7880 2366 4883EC10 		subq	$16, %rsp
 7881 236a 48897DF8 		movq	%rdi, -8(%rbp)
 7882              	.LBB173:
  72:TestUnitTest++.cpp ****     {
 7883              		.loc 4 72 0
 7884 236e 488B45F8 		movq	-8(%rbp), %rax
 7885 2372 48C70000 		movq	$_ZTVZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvE11NoThrowTest+16
 7885      000000
 7886 2379 488B45F8 		movq	-8(%rbp), %rax
 7887 237d 4889C7   		movq	%rax, %rdi
 7888 2380 E8000000 		call	_ZN8UnitTest4TestD2Ev
 7888      00
 7889              	.LBE173:
 7890 2385 B8000000 		movl	$0, %eax
 7890      00
 7891 238a 85C0     		testl	%eax, %eax
 7892 238c 740C     		je	.L433
  72:TestUnitTest++.cpp ****     {
 7893              		.loc 4 72 0 is_stmt 0 discriminator 4
 7894 238e 488B45F8 		movq	-8(%rbp), %rax
 7895 2392 4889C7   		movq	%rax, %rdi
 7896 2395 E8000000 		call	_ZdlPv
 7896      00
 7897              	.L433:
  72:TestUnitTest++.cpp ****     {
 7898              		.loc 4 72 0
 7899 239a C9       		leave
 7900              		.cfi_def_cfa 7, 8
 7901 239b C3       		ret
 7902              		.cfi_endproc
 7903              	.LFE1605:
 7905              		.set	_ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestD1Ev,
 7906              		.align 2
 7908              	_ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestD0Ev:
 7909              	.LFB1607:
  72:TestUnitTest++.cpp ****     {
 7910              		.loc 4 72 0 is_stmt 1
 7911              		.cfi_startproc
 7912 239c 55       		pushq	%rbp
 7913              		.cfi_def_cfa_offset 16
 7914              		.cfi_offset 6, -16
 7915 239d 4889E5   		movq	%rsp, %rbp
 7916              		.cfi_def_cfa_register 6
 7917 23a0 4883EC10 		subq	$16, %rsp
 7918 23a4 48897DF8 		movq	%rdi, -8(%rbp)
  72:TestUnitTest++.cpp ****     {
 7919              		.loc 4 72 0
 7920 23a8 488B45F8 		movq	-8(%rbp), %rax
 7921 23ac 4889C7   		movq	%rax, %rdi
 7922 23af E8AEFFFF 		call	_ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestD2Ev
 7922      FF
 7923 23b4 488B45F8 		movq	-8(%rbp), %rax
 7924 23b8 4889C7   		movq	%rax, %rdi
 7925 23bb E8000000 		call	_ZdlPv
 7925      00
 7926 23c0 C9       		leave
 7927              		.cfi_def_cfa 7, 8
 7928 23c1 C3       		ret
 7929              		.cfi_endproc
 7930              	.LFE1607:
 7932              		.section	.rodata
 7933 07c8 00000000 		.align 32
 7933      00000000 
 7933      00000000 
 7933      00000000 
 7933      00000000 
 7936              	_ZTVN12_GLOBAL__N_123TestCheckAssertSucceedsE:
 7937 07e0 00000000 		.quad	0
 7937      00000000 
 7938 07e8 00000000 		.quad	_ZTIN12_GLOBAL__N_123TestCheckAssertSucceedsE
 7938      00000000 
 7939 07f0 00000000 		.quad	_ZN12_GLOBAL__N_123TestCheckAssertSucceedsD1Ev
 7939      00000000 
 7940 07f8 00000000 		.quad	_ZN12_GLOBAL__N_123TestCheckAssertSucceedsD0Ev
 7940      00000000 
 7941 0800 00000000 		.quad	_ZNK12_GLOBAL__N_123TestCheckAssertSucceeds7RunImplEv
 7941      00000000 
 7942              		.text
 7943              		.align 2
 7945              	_ZN12_GLOBAL__N_123TestCheckAssertSucceedsD2Ev:
 7946              	.LFB1609:
  65:TestUnitTest++.cpp **** {
 7947              		.loc 4 65 0
 7948              		.cfi_startproc
 7949 23c2 55       		pushq	%rbp
 7950              		.cfi_def_cfa_offset 16
 7951              		.cfi_offset 6, -16
 7952 23c3 4889E5   		movq	%rsp, %rbp
 7953              		.cfi_def_cfa_register 6
 7954 23c6 4883EC10 		subq	$16, %rsp
 7955 23ca 48897DF8 		movq	%rdi, -8(%rbp)
 7956              	.LBB174:
  65:TestUnitTest++.cpp **** {
 7957              		.loc 4 65 0
 7958 23ce 488B45F8 		movq	-8(%rbp), %rax
 7959 23d2 48C70000 		movq	$_ZTVN12_GLOBAL__N_123TestCheckAssertSucceedsE+16, (%rax)
 7959      000000
 7960 23d9 488B45F8 		movq	-8(%rbp), %rax
 7961 23dd 4889C7   		movq	%rax, %rdi
 7962 23e0 E8000000 		call	_ZN8UnitTest4TestD2Ev
 7962      00
 7963              	.LBE174:
 7964 23e5 B8000000 		movl	$0, %eax
 7964      00
 7965 23ea 85C0     		testl	%eax, %eax
 7966 23ec 740C     		je	.L438
  65:TestUnitTest++.cpp **** {
 7967              		.loc 4 65 0 is_stmt 0 discriminator 4
 7968 23ee 488B45F8 		movq	-8(%rbp), %rax
 7969 23f2 4889C7   		movq	%rax, %rdi
 7970 23f5 E8000000 		call	_ZdlPv
 7970      00
 7971              	.L438:
  65:TestUnitTest++.cpp **** {
 7972              		.loc 4 65 0
 7973 23fa C9       		leave
 7974              		.cfi_def_cfa 7, 8
 7975 23fb C3       		ret
 7976              		.cfi_endproc
 7977              	.LFE1609:
 7979              		.set	_ZN12_GLOBAL__N_123TestCheckAssertSucceedsD1Ev,_ZN12_GLOBAL__N_123TestCheckAssertSucceedsD2Ev
 7980              		.align 2
 7982              	_ZN12_GLOBAL__N_123TestCheckAssertSucceedsD0Ev:
 7983              	.LFB1611:
  65:TestUnitTest++.cpp **** {
 7984              		.loc 4 65 0 is_stmt 1
 7985              		.cfi_startproc
 7986 23fc 55       		pushq	%rbp
 7987              		.cfi_def_cfa_offset 16
 7988              		.cfi_offset 6, -16
 7989 23fd 4889E5   		movq	%rsp, %rbp
 7990              		.cfi_def_cfa_register 6
 7991 2400 4883EC10 		subq	$16, %rsp
 7992 2404 48897DF8 		movq	%rdi, -8(%rbp)
  65:TestUnitTest++.cpp **** {
 7993              		.loc 4 65 0
 7994 2408 488B45F8 		movq	-8(%rbp), %rax
 7995 240c 4889C7   		movq	%rax, %rdi
 7996 240f E8AEFFFF 		call	_ZN12_GLOBAL__N_123TestCheckAssertSucceedsD2Ev
 7996      FF
 7997 2414 488B45F8 		movq	-8(%rbp), %rax
 7998 2418 4889C7   		movq	%rax, %rdi
 7999 241b E8000000 		call	_ZdlPv
 7999      00
 8000 2420 C9       		leave
 8001              		.cfi_def_cfa 7, 8
 8002 2421 C3       		ret
 8003              		.cfi_endproc
 8004              	.LFE1611:
 8006              		.section	.rodata
 8007 0808 00000000 		.align 32
 8007      00000000 
 8007      00000000 
 8007      00000000 
 8007      00000000 
 8010              	_ZTVN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionE:
 8011 0820 00000000 		.quad	0
 8011      00000000 
 8012 0828 00000000 		.quad	_ZTIN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionE
 8012      00000000 
 8013 0830 00000000 		.quad	_ZN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionD1Ev
 8013      00000000 
 8014 0838 00000000 		.quad	_ZN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionD0Ev
 8014      00000000 
 8015 0840 00000000 		.quad	_ZNK12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectException7RunImplEv
 8015      00000000 
 8016              		.text
 8017              		.align 2
 8019              	_ZN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionD2Ev:
 8020              	.LFB1613:
  59:TestUnitTest++.cpp **** {
 8021              		.loc 4 59 0
 8022              		.cfi_startproc
 8023 2422 55       		pushq	%rbp
 8024              		.cfi_def_cfa_offset 16
 8025              		.cfi_offset 6, -16
 8026 2423 4889E5   		movq	%rsp, %rbp
 8027              		.cfi_def_cfa_register 6
 8028 2426 4883EC10 		subq	$16, %rsp
 8029 242a 48897DF8 		movq	%rdi, -8(%rbp)
 8030              	.LBB175:
  59:TestUnitTest++.cpp **** {
 8031              		.loc 4 59 0
 8032 242e 488B45F8 		movq	-8(%rbp), %rax
 8033 2432 48C70000 		movq	$_ZTVN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionE+16, (%rax)
 8033      000000
 8034 2439 488B45F8 		movq	-8(%rbp), %rax
 8035 243d 4889C7   		movq	%rax, %rdi
 8036 2440 E8000000 		call	_ZN8UnitTest4TestD2Ev
 8036      00
 8037              	.LBE175:
 8038 2445 B8000000 		movl	$0, %eax
 8038      00
 8039 244a 85C0     		testl	%eax, %eax
 8040 244c 740C     		je	.L443
  59:TestUnitTest++.cpp **** {
 8041              		.loc 4 59 0 is_stmt 0 discriminator 4
 8042 244e 488B45F8 		movq	-8(%rbp), %rax
 8043 2452 4889C7   		movq	%rax, %rdi
 8044 2455 E8000000 		call	_ZdlPv
 8044      00
 8045              	.L443:
  59:TestUnitTest++.cpp **** {
 8046              		.loc 4 59 0
 8047 245a C9       		leave
 8048              		.cfi_def_cfa 7, 8
 8049 245b C3       		ret
 8050              		.cfi_endproc
 8051              	.LFE1613:
 8053              		.set	_ZN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionD1Ev,_ZN12_GLOBAL__N_145TestC
 8054              		.align 2
 8056              	_ZN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionD0Ev:
 8057              	.LFB1615:
  59:TestUnitTest++.cpp **** {
 8058              		.loc 4 59 0 is_stmt 1
 8059              		.cfi_startproc
 8060 245c 55       		pushq	%rbp
 8061              		.cfi_def_cfa_offset 16
 8062              		.cfi_offset 6, -16
 8063 245d 4889E5   		movq	%rsp, %rbp
 8064              		.cfi_def_cfa_register 6
 8065 2460 4883EC10 		subq	$16, %rsp
 8066 2464 48897DF8 		movq	%rdi, -8(%rbp)
  59:TestUnitTest++.cpp **** {
 8067              		.loc 4 59 0
 8068 2468 488B45F8 		movq	-8(%rbp), %rax
 8069 246c 4889C7   		movq	%rax, %rdi
 8070 246f E8AEFFFF 		call	_ZN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionD2Ev
 8070      FF
 8071 2474 488B45F8 		movq	-8(%rbp), %rax
 8072 2478 4889C7   		movq	%rax, %rdi
 8073 247b E8000000 		call	_ZdlPv
 8073      00
 8074 2480 C9       		leave
 8075              		.cfi_def_cfa 7, 8
 8076 2481 C3       		ret
 8077              		.cfi_endproc
 8078              	.LFE1615:
 8080              		.section	.rodata
 8081 0848 00000000 		.align 32
 8081      00000000 
 8081      00000000 
 8081      00000000 
 8081      00000000 
 8084              	_ZTVN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsE:
 8085 0860 00000000 		.quad	0
 8085      00000000 
 8086 0868 00000000 		.quad	_ZTIN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsE
 8086      00000000 
 8087 0870 00000000 		.quad	_ZN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsD1Ev
 8087      00000000 
 8088 0878 00000000 		.quad	_ZN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsD0Ev
 8088      00000000 
 8089 0880 00000000 		.quad	_ZNK12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectors7RunImplEv
 8089      00000000 
 8090              		.text
 8091              		.align 2
 8093              	_ZN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsD2Ev:
 8094              	.LFB1617:
  50:TestUnitTest++.cpp **** {
 8095              		.loc 4 50 0
 8096              		.cfi_startproc
 8097 2482 55       		pushq	%rbp
 8098              		.cfi_def_cfa_offset 16
 8099              		.cfi_offset 6, -16
 8100 2483 4889E5   		movq	%rsp, %rbp
 8101              		.cfi_def_cfa_register 6
 8102 2486 4883EC10 		subq	$16, %rsp
 8103 248a 48897DF8 		movq	%rdi, -8(%rbp)
 8104              	.LBB176:
  50:TestUnitTest++.cpp **** {
 8105              		.loc 4 50 0
 8106 248e 488B45F8 		movq	-8(%rbp), %rax
 8107 2492 48C70000 		movq	$_ZTVN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsE+16, (%rax)
 8107      000000
 8108 2499 488B45F8 		movq	-8(%rbp), %rax
 8109 249d 4889C7   		movq	%rax, %rdi
 8110 24a0 E8000000 		call	_ZN8UnitTest4TestD2Ev
 8110      00
 8111              	.LBE176:
 8112 24a5 B8000000 		movl	$0, %eax
 8112      00
 8113 24aa 85C0     		testl	%eax, %eax
 8114 24ac 740C     		je	.L448
  50:TestUnitTest++.cpp **** {
 8115              		.loc 4 50 0 is_stmt 0 discriminator 4
 8116 24ae 488B45F8 		movq	-8(%rbp), %rax
 8117 24b2 4889C7   		movq	%rax, %rdi
 8118 24b5 E8000000 		call	_ZdlPv
 8118      00
 8119              	.L448:
  50:TestUnitTest++.cpp **** {
 8120              		.loc 4 50 0
 8121 24ba C9       		leave
 8122              		.cfi_def_cfa 7, 8
 8123 24bb C3       		ret
 8124              		.cfi_endproc
 8125              	.LFE1617:
 8127              		.set	_ZN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsD1Ev,_ZN12_GLOBAL__N_135TestCheckArrayC
 8128              		.align 2
 8130              	_ZN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsD0Ev:
 8131              	.LFB1619:
  50:TestUnitTest++.cpp **** {
 8132              		.loc 4 50 0 is_stmt 1
 8133              		.cfi_startproc
 8134 24bc 55       		pushq	%rbp
 8135              		.cfi_def_cfa_offset 16
 8136              		.cfi_offset 6, -16
 8137 24bd 4889E5   		movq	%rsp, %rbp
 8138              		.cfi_def_cfa_register 6
 8139 24c0 4883EC10 		subq	$16, %rsp
 8140 24c4 48897DF8 		movq	%rdi, -8(%rbp)
  50:TestUnitTest++.cpp **** {
 8141              		.loc 4 50 0
 8142 24c8 488B45F8 		movq	-8(%rbp), %rax
 8143 24cc 4889C7   		movq	%rax, %rdi
 8144 24cf E8AEFFFF 		call	_ZN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsD2Ev
 8144      FF
 8145 24d4 488B45F8 		movq	-8(%rbp), %rax
 8146 24d8 4889C7   		movq	%rax, %rdi
 8147 24db E8000000 		call	_ZdlPv
 8147      00
 8148 24e0 C9       		leave
 8149              		.cfi_def_cfa 7, 8
 8150 24e1 C3       		ret
 8151              		.cfi_endproc
 8152              	.LFE1619:
 8154              		.section	.rodata
 8155 0888 00000000 		.align 32
 8155      00000000 
 8155      00000000 
 8155      00000000 
 8155      00000000 
 8158              	_ZTVN12_GLOBAL__N_122TestArrayCloseSucceedsE:
 8159 08a0 00000000 		.quad	0
 8159      00000000 
 8160 08a8 00000000 		.quad	_ZTIN12_GLOBAL__N_122TestArrayCloseSucceedsE
 8160      00000000 
 8161 08b0 00000000 		.quad	_ZN12_GLOBAL__N_122TestArrayCloseSucceedsD1Ev
 8161      00000000 
 8162 08b8 00000000 		.quad	_ZN12_GLOBAL__N_122TestArrayCloseSucceedsD0Ev
 8162      00000000 
 8163 08c0 00000000 		.quad	_ZNK12_GLOBAL__N_122TestArrayCloseSucceeds7RunImplEv
 8163      00000000 
 8164              		.text
 8165              		.align 2
 8167              	_ZN12_GLOBAL__N_122TestArrayCloseSucceedsD2Ev:
 8168              	.LFB1621:
  43:TestUnitTest++.cpp **** {
 8169              		.loc 4 43 0
 8170              		.cfi_startproc
 8171 24e2 55       		pushq	%rbp
 8172              		.cfi_def_cfa_offset 16
 8173              		.cfi_offset 6, -16
 8174 24e3 4889E5   		movq	%rsp, %rbp
 8175              		.cfi_def_cfa_register 6
 8176 24e6 4883EC10 		subq	$16, %rsp
 8177 24ea 48897DF8 		movq	%rdi, -8(%rbp)
 8178              	.LBB177:
  43:TestUnitTest++.cpp **** {
 8179              		.loc 4 43 0
 8180 24ee 488B45F8 		movq	-8(%rbp), %rax
 8181 24f2 48C70000 		movq	$_ZTVN12_GLOBAL__N_122TestArrayCloseSucceedsE+16, (%rax)
 8181      000000
 8182 24f9 488B45F8 		movq	-8(%rbp), %rax
 8183 24fd 4889C7   		movq	%rax, %rdi
 8184 2500 E8000000 		call	_ZN8UnitTest4TestD2Ev
 8184      00
 8185              	.LBE177:
 8186 2505 B8000000 		movl	$0, %eax
 8186      00
 8187 250a 85C0     		testl	%eax, %eax
 8188 250c 740C     		je	.L453
  43:TestUnitTest++.cpp **** {
 8189              		.loc 4 43 0 is_stmt 0 discriminator 4
 8190 250e 488B45F8 		movq	-8(%rbp), %rax
 8191 2512 4889C7   		movq	%rax, %rdi
 8192 2515 E8000000 		call	_ZdlPv
 8192      00
 8193              	.L453:
  43:TestUnitTest++.cpp **** {
 8194              		.loc 4 43 0
 8195 251a C9       		leave
 8196              		.cfi_def_cfa 7, 8
 8197 251b C3       		ret
 8198              		.cfi_endproc
 8199              	.LFE1621:
 8201              		.set	_ZN12_GLOBAL__N_122TestArrayCloseSucceedsD1Ev,_ZN12_GLOBAL__N_122TestArrayCloseSucceedsD2Ev
 8202              		.align 2
 8204              	_ZN12_GLOBAL__N_122TestArrayCloseSucceedsD0Ev:
 8205              	.LFB1623:
  43:TestUnitTest++.cpp **** {
 8206              		.loc 4 43 0 is_stmt 1
 8207              		.cfi_startproc
 8208 251c 55       		pushq	%rbp
 8209              		.cfi_def_cfa_offset 16
 8210              		.cfi_offset 6, -16
 8211 251d 4889E5   		movq	%rsp, %rbp
 8212              		.cfi_def_cfa_register 6
 8213 2520 4883EC10 		subq	$16, %rsp
 8214 2524 48897DF8 		movq	%rdi, -8(%rbp)
  43:TestUnitTest++.cpp **** {
 8215              		.loc 4 43 0
 8216 2528 488B45F8 		movq	-8(%rbp), %rax
 8217 252c 4889C7   		movq	%rax, %rdi
 8218 252f E8AEFFFF 		call	_ZN12_GLOBAL__N_122TestArrayCloseSucceedsD2Ev
 8218      FF
 8219 2534 488B45F8 		movq	-8(%rbp), %rax
 8220 2538 4889C7   		movq	%rax, %rdi
 8221 253b E8000000 		call	_ZdlPv
 8221      00
 8222 2540 C9       		leave
 8223              		.cfi_def_cfa 7, 8
 8224 2541 C3       		ret
 8225              		.cfi_endproc
 8226              	.LFE1623:
 8228              		.section	.rodata
 8229 08c8 00000000 		.align 32
 8229      00000000 
 8229      00000000 
 8229      00000000 
 8229      00000000 
 8232              	_ZTVN12_GLOBAL__N_127TestValidCheckCloseSucceedsE:
 8233 08e0 00000000 		.quad	0
 8233      00000000 
 8234 08e8 00000000 		.quad	_ZTIN12_GLOBAL__N_127TestValidCheckCloseSucceedsE
 8234      00000000 
 8235 08f0 00000000 		.quad	_ZN12_GLOBAL__N_127TestValidCheckCloseSucceedsD1Ev
 8235      00000000 
 8236 08f8 00000000 		.quad	_ZN12_GLOBAL__N_127TestValidCheckCloseSucceedsD0Ev
 8236      00000000 
 8237 0900 00000000 		.quad	_ZNK12_GLOBAL__N_127TestValidCheckCloseSucceeds7RunImplEv
 8237      00000000 
 8238              		.text
 8239              		.align 2
 8241              	_ZN12_GLOBAL__N_127TestValidCheckCloseSucceedsD2Ev:
 8242              	.LFB1625:
  37:TestUnitTest++.cpp **** {
 8243              		.loc 4 37 0
 8244              		.cfi_startproc
 8245 2542 55       		pushq	%rbp
 8246              		.cfi_def_cfa_offset 16
 8247              		.cfi_offset 6, -16
 8248 2543 4889E5   		movq	%rsp, %rbp
 8249              		.cfi_def_cfa_register 6
 8250 2546 4883EC10 		subq	$16, %rsp
 8251 254a 48897DF8 		movq	%rdi, -8(%rbp)
 8252              	.LBB178:
  37:TestUnitTest++.cpp **** {
 8253              		.loc 4 37 0
 8254 254e 488B45F8 		movq	-8(%rbp), %rax
 8255 2552 48C70000 		movq	$_ZTVN12_GLOBAL__N_127TestValidCheckCloseSucceedsE+16, (%rax)
 8255      000000
 8256 2559 488B45F8 		movq	-8(%rbp), %rax
 8257 255d 4889C7   		movq	%rax, %rdi
 8258 2560 E8000000 		call	_ZN8UnitTest4TestD2Ev
 8258      00
 8259              	.LBE178:
 8260 2565 B8000000 		movl	$0, %eax
 8260      00
 8261 256a 85C0     		testl	%eax, %eax
 8262 256c 740C     		je	.L458
  37:TestUnitTest++.cpp **** {
 8263              		.loc 4 37 0 is_stmt 0 discriminator 4
 8264 256e 488B45F8 		movq	-8(%rbp), %rax
 8265 2572 4889C7   		movq	%rax, %rdi
 8266 2575 E8000000 		call	_ZdlPv
 8266      00
 8267              	.L458:
  37:TestUnitTest++.cpp **** {
 8268              		.loc 4 37 0
 8269 257a C9       		leave
 8270              		.cfi_def_cfa 7, 8
 8271 257b C3       		ret
 8272              		.cfi_endproc
 8273              	.LFE1625:
 8275              		.set	_ZN12_GLOBAL__N_127TestValidCheckCloseSucceedsD1Ev,_ZN12_GLOBAL__N_127TestValidCheckCloseSucc
 8276              		.align 2
 8278              	_ZN12_GLOBAL__N_127TestValidCheckCloseSucceedsD0Ev:
 8279              	.LFB1627:
  37:TestUnitTest++.cpp **** {
 8280              		.loc 4 37 0 is_stmt 1
 8281              		.cfi_startproc
 8282 257c 55       		pushq	%rbp
 8283              		.cfi_def_cfa_offset 16
 8284              		.cfi_offset 6, -16
 8285 257d 4889E5   		movq	%rsp, %rbp
 8286              		.cfi_def_cfa_register 6
 8287 2580 4883EC10 		subq	$16, %rsp
 8288 2584 48897DF8 		movq	%rdi, -8(%rbp)
  37:TestUnitTest++.cpp **** {
 8289              		.loc 4 37 0
 8290 2588 488B45F8 		movq	-8(%rbp), %rax
 8291 258c 4889C7   		movq	%rax, %rdi
 8292 258f E8AEFFFF 		call	_ZN12_GLOBAL__N_127TestValidCheckCloseSucceedsD2Ev
 8292      FF
 8293 2594 488B45F8 		movq	-8(%rbp), %rax
 8294 2598 4889C7   		movq	%rax, %rdi
 8295 259b E8000000 		call	_ZdlPv
 8295      00
 8296 25a0 C9       		leave
 8297              		.cfi_def_cfa 7, 8
 8298 25a1 C3       		ret
 8299              		.cfi_endproc
 8300              	.LFE1627:
 8302              		.section	.rodata
 8303 0908 00000000 		.align 32
 8303      00000000 
 8303      00000000 
 8303      00000000 
 8303      00000000 
 8306              	_ZTVN12_GLOBAL__N_131TestCheckEqualWorksWithPointersE:
 8307 0920 00000000 		.quad	0
 8307      00000000 
 8308 0928 00000000 		.quad	_ZTIN12_GLOBAL__N_131TestCheckEqualWorksWithPointersE
 8308      00000000 
 8309 0930 00000000 		.quad	_ZN12_GLOBAL__N_131TestCheckEqualWorksWithPointersD1Ev
 8309      00000000 
 8310 0938 00000000 		.quad	_ZN12_GLOBAL__N_131TestCheckEqualWorksWithPointersD0Ev
 8310      00000000 
 8311 0940 00000000 		.quad	_ZNK12_GLOBAL__N_131TestCheckEqualWorksWithPointers7RunImplEv
 8311      00000000 
 8312              		.text
 8313              		.align 2
 8315              	_ZN12_GLOBAL__N_131TestCheckEqualWorksWithPointersD2Ev:
 8316              	.LFB1629:
  31:TestUnitTest++.cpp **** {
 8317              		.loc 4 31 0
 8318              		.cfi_startproc
 8319 25a2 55       		pushq	%rbp
 8320              		.cfi_def_cfa_offset 16
 8321              		.cfi_offset 6, -16
 8322 25a3 4889E5   		movq	%rsp, %rbp
 8323              		.cfi_def_cfa_register 6
 8324 25a6 4883EC10 		subq	$16, %rsp
 8325 25aa 48897DF8 		movq	%rdi, -8(%rbp)
 8326              	.LBB179:
  31:TestUnitTest++.cpp **** {
 8327              		.loc 4 31 0
 8328 25ae 488B45F8 		movq	-8(%rbp), %rax
 8329 25b2 48C70000 		movq	$_ZTVN12_GLOBAL__N_131TestCheckEqualWorksWithPointersE+16, (%rax)
 8329      000000
 8330 25b9 488B45F8 		movq	-8(%rbp), %rax
 8331 25bd 4889C7   		movq	%rax, %rdi
 8332 25c0 E8000000 		call	_ZN8UnitTest4TestD2Ev
 8332      00
 8333              	.LBE179:
 8334 25c5 B8000000 		movl	$0, %eax
 8334      00
 8335 25ca 85C0     		testl	%eax, %eax
 8336 25cc 740C     		je	.L463
  31:TestUnitTest++.cpp **** {
 8337              		.loc 4 31 0 is_stmt 0 discriminator 4
 8338 25ce 488B45F8 		movq	-8(%rbp), %rax
 8339 25d2 4889C7   		movq	%rax, %rdi
 8340 25d5 E8000000 		call	_ZdlPv
 8340      00
 8341              	.L463:
  31:TestUnitTest++.cpp **** {
 8342              		.loc 4 31 0
 8343 25da C9       		leave
 8344              		.cfi_def_cfa 7, 8
 8345 25db C3       		ret
 8346              		.cfi_endproc
 8347              	.LFE1629:
 8349              		.set	_ZN12_GLOBAL__N_131TestCheckEqualWorksWithPointersD1Ev,_ZN12_GLOBAL__N_131TestCheckEqualWorks
 8350              		.align 2
 8352              	_ZN12_GLOBAL__N_131TestCheckEqualWorksWithPointersD0Ev:
 8353              	.LFB1631:
  31:TestUnitTest++.cpp **** {
 8354              		.loc 4 31 0 is_stmt 1
 8355              		.cfi_startproc
 8356 25dc 55       		pushq	%rbp
 8357              		.cfi_def_cfa_offset 16
 8358              		.cfi_offset 6, -16
 8359 25dd 4889E5   		movq	%rsp, %rbp
 8360              		.cfi_def_cfa_register 6
 8361 25e0 4883EC10 		subq	$16, %rsp
 8362 25e4 48897DF8 		movq	%rdi, -8(%rbp)
  31:TestUnitTest++.cpp **** {
 8363              		.loc 4 31 0
 8364 25e8 488B45F8 		movq	-8(%rbp), %rax
 8365 25ec 4889C7   		movq	%rax, %rdi
 8366 25ef E8AEFFFF 		call	_ZN12_GLOBAL__N_131TestCheckEqualWorksWithPointersD2Ev
 8366      FF
 8367 25f4 488B45F8 		movq	-8(%rbp), %rax
 8368 25f8 4889C7   		movq	%rax, %rdi
 8369 25fb E8000000 		call	_ZdlPv
 8369      00
 8370 2600 C9       		leave
 8371              		.cfi_def_cfa 7, 8
 8372 2601 C3       		ret
 8373              		.cfi_endproc
 8374              	.LFE1631:
 8376              		.section	.rodata
 8377 0948 00000000 		.align 32
 8377      00000000 
 8377      00000000 
 8377      00000000 
 8377      00000000 
 8380              	_ZTVN12_GLOBAL__N_127TestValidCheckEqualSucceedsE:
 8381 0960 00000000 		.quad	0
 8381      00000000 
 8382 0968 00000000 		.quad	_ZTIN12_GLOBAL__N_127TestValidCheckEqualSucceedsE
 8382      00000000 
 8383 0970 00000000 		.quad	_ZN12_GLOBAL__N_127TestValidCheckEqualSucceedsD1Ev
 8383      00000000 
 8384 0978 00000000 		.quad	_ZN12_GLOBAL__N_127TestValidCheckEqualSucceedsD0Ev
 8384      00000000 
 8385 0980 00000000 		.quad	_ZNK12_GLOBAL__N_127TestValidCheckEqualSucceeds7RunImplEv
 8385      00000000 
 8386              		.text
 8387              		.align 2
 8389              	_ZN12_GLOBAL__N_127TestValidCheckEqualSucceedsD2Ev:
 8390              	.LFB1633:
  24:TestUnitTest++.cpp **** {
 8391              		.loc 4 24 0
 8392              		.cfi_startproc
 8393 2602 55       		pushq	%rbp
 8394              		.cfi_def_cfa_offset 16
 8395              		.cfi_offset 6, -16
 8396 2603 4889E5   		movq	%rsp, %rbp
 8397              		.cfi_def_cfa_register 6
 8398 2606 4883EC10 		subq	$16, %rsp
 8399 260a 48897DF8 		movq	%rdi, -8(%rbp)
 8400              	.LBB180:
  24:TestUnitTest++.cpp **** {
 8401              		.loc 4 24 0
 8402 260e 488B45F8 		movq	-8(%rbp), %rax
 8403 2612 48C70000 		movq	$_ZTVN12_GLOBAL__N_127TestValidCheckEqualSucceedsE+16, (%rax)
 8403      000000
 8404 2619 488B45F8 		movq	-8(%rbp), %rax
 8405 261d 4889C7   		movq	%rax, %rdi
 8406 2620 E8000000 		call	_ZN8UnitTest4TestD2Ev
 8406      00
 8407              	.LBE180:
 8408 2625 B8000000 		movl	$0, %eax
 8408      00
 8409 262a 85C0     		testl	%eax, %eax
 8410 262c 740C     		je	.L468
  24:TestUnitTest++.cpp **** {
 8411              		.loc 4 24 0 is_stmt 0 discriminator 4
 8412 262e 488B45F8 		movq	-8(%rbp), %rax
 8413 2632 4889C7   		movq	%rax, %rdi
 8414 2635 E8000000 		call	_ZdlPv
 8414      00
 8415              	.L468:
  24:TestUnitTest++.cpp **** {
 8416              		.loc 4 24 0
 8417 263a C9       		leave
 8418              		.cfi_def_cfa 7, 8
 8419 263b C3       		ret
 8420              		.cfi_endproc
 8421              	.LFE1633:
 8423              		.set	_ZN12_GLOBAL__N_127TestValidCheckEqualSucceedsD1Ev,_ZN12_GLOBAL__N_127TestValidCheckEqualSucc
 8424              		.align 2
 8426              	_ZN12_GLOBAL__N_127TestValidCheckEqualSucceedsD0Ev:
 8427              	.LFB1635:
  24:TestUnitTest++.cpp **** {
 8428              		.loc 4 24 0 is_stmt 1
 8429              		.cfi_startproc
 8430 263c 55       		pushq	%rbp
 8431              		.cfi_def_cfa_offset 16
 8432              		.cfi_offset 6, -16
 8433 263d 4889E5   		movq	%rsp, %rbp
 8434              		.cfi_def_cfa_register 6
 8435 2640 4883EC10 		subq	$16, %rsp
 8436 2644 48897DF8 		movq	%rdi, -8(%rbp)
  24:TestUnitTest++.cpp **** {
 8437              		.loc 4 24 0
 8438 2648 488B45F8 		movq	-8(%rbp), %rax
 8439 264c 4889C7   		movq	%rax, %rdi
 8440 264f E8AEFFFF 		call	_ZN12_GLOBAL__N_127TestValidCheckEqualSucceedsD2Ev
 8440      FF
 8441 2654 488B45F8 		movq	-8(%rbp), %rax
 8442 2658 4889C7   		movq	%rax, %rdi
 8443 265b E8000000 		call	_ZdlPv
 8443      00
 8444 2660 C9       		leave
 8445              		.cfi_def_cfa 7, 8
 8446 2661 C3       		ret
 8447              		.cfi_endproc
 8448              	.LFE1635:
 8450              		.section	.rodata
 8451 0988 00000000 		.align 32
 8451      00000000 
 8451      00000000 
 8451      00000000 
 8451      00000000 
 8454              	_ZTVN12_GLOBAL__N_126TestCheckWorksWithPointersE:
 8455 09a0 00000000 		.quad	0
 8455      00000000 
 8456 09a8 00000000 		.quad	_ZTIN12_GLOBAL__N_126TestCheckWorksWithPointersE
 8456      00000000 
 8457 09b0 00000000 		.quad	_ZN12_GLOBAL__N_126TestCheckWorksWithPointersD1Ev
 8457      00000000 
 8458 09b8 00000000 		.quad	_ZN12_GLOBAL__N_126TestCheckWorksWithPointersD0Ev
 8458      00000000 
 8459 09c0 00000000 		.quad	_ZNK12_GLOBAL__N_126TestCheckWorksWithPointers7RunImplEv
 8459      00000000 
 8460              		.text
 8461              		.align 2
 8463              	_ZN12_GLOBAL__N_126TestCheckWorksWithPointersD2Ev:
 8464              	.LFB1637:
  17:TestUnitTest++.cpp **** {
 8465              		.loc 4 17 0
 8466              		.cfi_startproc
 8467 2662 55       		pushq	%rbp
 8468              		.cfi_def_cfa_offset 16
 8469              		.cfi_offset 6, -16
 8470 2663 4889E5   		movq	%rsp, %rbp
 8471              		.cfi_def_cfa_register 6
 8472 2666 4883EC10 		subq	$16, %rsp
 8473 266a 48897DF8 		movq	%rdi, -8(%rbp)
 8474              	.LBB181:
  17:TestUnitTest++.cpp **** {
 8475              		.loc 4 17 0
 8476 266e 488B45F8 		movq	-8(%rbp), %rax
 8477 2672 48C70000 		movq	$_ZTVN12_GLOBAL__N_126TestCheckWorksWithPointersE+16, (%rax)
 8477      000000
 8478 2679 488B45F8 		movq	-8(%rbp), %rax
 8479 267d 4889C7   		movq	%rax, %rdi
 8480 2680 E8000000 		call	_ZN8UnitTest4TestD2Ev
 8480      00
 8481              	.LBE181:
 8482 2685 B8000000 		movl	$0, %eax
 8482      00
 8483 268a 85C0     		testl	%eax, %eax
 8484 268c 740C     		je	.L473
  17:TestUnitTest++.cpp **** {
 8485              		.loc 4 17 0 is_stmt 0 discriminator 4
 8486 268e 488B45F8 		movq	-8(%rbp), %rax
 8487 2692 4889C7   		movq	%rax, %rdi
 8488 2695 E8000000 		call	_ZdlPv
 8488      00
 8489              	.L473:
  17:TestUnitTest++.cpp **** {
 8490              		.loc 4 17 0
 8491 269a C9       		leave
 8492              		.cfi_def_cfa 7, 8
 8493 269b C3       		ret
 8494              		.cfi_endproc
 8495              	.LFE1637:
 8497              		.set	_ZN12_GLOBAL__N_126TestCheckWorksWithPointersD1Ev,_ZN12_GLOBAL__N_126TestCheckWorksWithPointe
 8498              		.align 2
 8500              	_ZN12_GLOBAL__N_126TestCheckWorksWithPointersD0Ev:
 8501              	.LFB1639:
  17:TestUnitTest++.cpp **** {
 8502              		.loc 4 17 0 is_stmt 1
 8503              		.cfi_startproc
 8504 269c 55       		pushq	%rbp
 8505              		.cfi_def_cfa_offset 16
 8506              		.cfi_offset 6, -16
 8507 269d 4889E5   		movq	%rsp, %rbp
 8508              		.cfi_def_cfa_register 6
 8509 26a0 4883EC10 		subq	$16, %rsp
 8510 26a4 48897DF8 		movq	%rdi, -8(%rbp)
  17:TestUnitTest++.cpp **** {
 8511              		.loc 4 17 0
 8512 26a8 488B45F8 		movq	-8(%rbp), %rax
 8513 26ac 4889C7   		movq	%rax, %rdi
 8514 26af E8AEFFFF 		call	_ZN12_GLOBAL__N_126TestCheckWorksWithPointersD2Ev
 8514      FF
 8515 26b4 488B45F8 		movq	-8(%rbp), %rax
 8516 26b8 4889C7   		movq	%rax, %rdi
 8517 26bb E8000000 		call	_ZdlPv
 8517      00
 8518 26c0 C9       		leave
 8519              		.cfi_def_cfa 7, 8
 8520 26c1 C3       		ret
 8521              		.cfi_endproc
 8522              	.LFE1639:
 8524              		.section	.rodata
 8525 09c8 00000000 		.align 32
 8525      00000000 
 8525      00000000 
 8525      00000000 
 8525      00000000 
 8528              	_ZTVN12_GLOBAL__N_122TestValidCheckSucceedsE:
 8529 09e0 00000000 		.quad	0
 8529      00000000 
 8530 09e8 00000000 		.quad	_ZTIN12_GLOBAL__N_122TestValidCheckSucceedsE
 8530      00000000 
 8531 09f0 00000000 		.quad	_ZN12_GLOBAL__N_122TestValidCheckSucceedsD1Ev
 8531      00000000 
 8532 09f8 00000000 		.quad	_ZN12_GLOBAL__N_122TestValidCheckSucceedsD0Ev
 8532      00000000 
 8533 0a00 00000000 		.quad	_ZNK12_GLOBAL__N_122TestValidCheckSucceeds7RunImplEv
 8533      00000000 
 8534              		.text
 8535              		.align 2
 8537              	_ZN12_GLOBAL__N_122TestValidCheckSucceedsD2Ev:
 8538              	.LFB1641:
  11:TestUnitTest++.cpp **** {
 8539              		.loc 4 11 0
 8540              		.cfi_startproc
 8541 26c2 55       		pushq	%rbp
 8542              		.cfi_def_cfa_offset 16
 8543              		.cfi_offset 6, -16
 8544 26c3 4889E5   		movq	%rsp, %rbp
 8545              		.cfi_def_cfa_register 6
 8546 26c6 4883EC10 		subq	$16, %rsp
 8547 26ca 48897DF8 		movq	%rdi, -8(%rbp)
 8548              	.LBB182:
  11:TestUnitTest++.cpp **** {
 8549              		.loc 4 11 0
 8550 26ce 488B45F8 		movq	-8(%rbp), %rax
 8551 26d2 48C70000 		movq	$_ZTVN12_GLOBAL__N_122TestValidCheckSucceedsE+16, (%rax)
 8551      000000
 8552 26d9 488B45F8 		movq	-8(%rbp), %rax
 8553 26dd 4889C7   		movq	%rax, %rdi
 8554 26e0 E8000000 		call	_ZN8UnitTest4TestD2Ev
 8554      00
 8555              	.LBE182:
 8556 26e5 B8000000 		movl	$0, %eax
 8556      00
 8557 26ea 85C0     		testl	%eax, %eax
 8558 26ec 740C     		je	.L478
  11:TestUnitTest++.cpp **** {
 8559              		.loc 4 11 0 is_stmt 0 discriminator 4
 8560 26ee 488B45F8 		movq	-8(%rbp), %rax
 8561 26f2 4889C7   		movq	%rax, %rdi
 8562 26f5 E8000000 		call	_ZdlPv
 8562      00
 8563              	.L478:
  11:TestUnitTest++.cpp **** {
 8564              		.loc 4 11 0
 8565 26fa C9       		leave
 8566              		.cfi_def_cfa 7, 8
 8567 26fb C3       		ret
 8568              		.cfi_endproc
 8569              	.LFE1641:
 8571              		.set	_ZN12_GLOBAL__N_122TestValidCheckSucceedsD1Ev,_ZN12_GLOBAL__N_122TestValidCheckSucceedsD2Ev
 8572              		.align 2
 8574              	_ZN12_GLOBAL__N_122TestValidCheckSucceedsD0Ev:
 8575              	.LFB1643:
  11:TestUnitTest++.cpp **** {
 8576              		.loc 4 11 0 is_stmt 1
 8577              		.cfi_startproc
 8578 26fc 55       		pushq	%rbp
 8579              		.cfi_def_cfa_offset 16
 8580              		.cfi_offset 6, -16
 8581 26fd 4889E5   		movq	%rsp, %rbp
 8582              		.cfi_def_cfa_register 6
 8583 2700 4883EC10 		subq	$16, %rsp
 8584 2704 48897DF8 		movq	%rdi, -8(%rbp)
  11:TestUnitTest++.cpp **** {
 8585              		.loc 4 11 0
 8586 2708 488B45F8 		movq	-8(%rbp), %rax
 8587 270c 4889C7   		movq	%rax, %rdi
 8588 270f E8AEFFFF 		call	_ZN12_GLOBAL__N_122TestValidCheckSucceedsD2Ev
 8588      FF
 8589 2714 488B45F8 		movq	-8(%rbp), %rax
 8590 2718 4889C7   		movq	%rax, %rdi
 8591 271b E8000000 		call	_ZdlPv
 8591      00
 8592 2720 C9       		leave
 8593              		.cfi_def_cfa 7, 8
 8594 2721 C3       		ret
 8595              		.cfi_endproc
 8596              	.LFE1643:
 8598              		.weak	_ZTVN8UnitTest15MemoryOutStreamE
 8599              		.section	.rodata._ZTVN8UnitTest15MemoryOutStreamE,"aG",@progbits,_ZTVN8UnitTest15MemoryOutStreamE,
 8600              		.align 64
 8603              	_ZTVN8UnitTest15MemoryOutStreamE:
 8604 0000 60000000 		.quad	96
 8604      00000000 
 8605 0008 00000000 		.quad	0
 8605      00000000 
 8606 0010 00000000 		.quad	_ZTIN8UnitTest15MemoryOutStreamE
 8606      00000000 
 8607 0018 00000000 		.quad	_ZN8UnitTest15MemoryOutStreamD1Ev
 8607      00000000 
 8608 0020 00000000 		.quad	_ZN8UnitTest15MemoryOutStreamD0Ev
 8608      00000000 
 8609 0028 A0FFFFFF 		.quad	-96
 8609      FFFFFFFF 
 8610 0030 A0FFFFFF 		.quad	-96
 8610      FFFFFFFF 
 8611 0038 00000000 		.quad	_ZTIN8UnitTest15MemoryOutStreamE
 8611      00000000 
 8612 0040 00000000 		.quad	_ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev
 8612      00000000 
 8613 0048 00000000 		.quad	_ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev
 8613      00000000 
 8614              		.section	.text._ZN8UnitTest15MemoryOutStreamD1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamD1Ev
 8615              		.align 2
 8616              		.weak	_ZN8UnitTest15MemoryOutStreamD1Ev
 8618              	_ZN8UnitTest15MemoryOutStreamD1Ev:
 8619              	.LFB1646:
  13:../MemoryOutStream.h **** {
 8620              		.loc 2 13 0
 8621              		.cfi_startproc
 8622              		.cfi_personality 0x3,__gxx_personality_v0
 8623              		.cfi_lsda 0x3,.LLSDA1646
 8624 0000 55       		pushq	%rbp
 8625              		.cfi_def_cfa_offset 16
 8626              		.cfi_offset 6, -16
 8627 0001 4889E5   		movq	%rsp, %rbp
 8628              		.cfi_def_cfa_register 6
 8629 0004 53       		pushq	%rbx
 8630 0005 4883EC18 		subq	$24, %rsp
 8631              		.cfi_offset 3, -24
 8632 0009 48897DE8 		movq	%rdi, -24(%rbp)
 8633              	.LBB183:
  13:../MemoryOutStream.h **** {
 8634              		.loc 2 13 0
 8635 000d BA000000 		movl	$_ZTVN8UnitTest15MemoryOutStreamE+24, %edx
 8635      00
 8636 0012 488B45E8 		movq	-24(%rbp), %rax
 8637 0016 488910   		movq	%rdx, (%rax)
 8638 0019 BA600000 		movl	$96, %edx
 8638      00
 8639 001e 488B45E8 		movq	-24(%rbp), %rax
 8640 0022 4801D0   		addq	%rdx, %rax
 8641 0025 BA000000 		movl	$_ZTVN8UnitTest15MemoryOutStreamE+64, %edx
 8641      00
 8642 002a 488910   		movq	%rdx, (%rax)
 8643 002d 488B45E8 		movq	-24(%rbp), %rax
 8644 0031 4883C058 		addq	$88, %rax
 8645 0035 4889C7   		movq	%rax, %rdi
 8646              	.LEHB156:
 8647 0038 E8000000 		call	_ZNSsD1Ev
 8647      00
 8648              	.LEHE156:
  13:../MemoryOutStream.h **** {
 8649              		.loc 2 13 0 is_stmt 0 discriminator 14
 8650 003d BA000000 		movl	$_ZTTN8UnitTest15MemoryOutStreamE+8, %edx
 8650      00
 8651 0042 488B45E8 		movq	-24(%rbp), %rax
 8652 0046 4889D6   		movq	%rdx, %rsi
 8653 0049 4889C7   		movq	%rax, %rdi
 8654              	.LEHB157:
 8655 004c E8000000 		call	_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev
 8655      00
 8656              	.LEHE157:
  13:../MemoryOutStream.h **** {
 8657              		.loc 2 13 0 discriminator 20
 8658 0051 B8020000 		movl	$2, %eax
 8658      00
 8659 0056 85C0     		testl	%eax, %eax
 8660 0058 7410     		je	.L485
  13:../MemoryOutStream.h **** {
 8661              		.loc 2 13 0 discriminator 21
 8662 005a 488B45E8 		movq	-24(%rbp), %rax
 8663 005e 4883C060 		addq	$96, %rax
 8664 0062 4889C7   		movq	%rax, %rdi
 8665              	.LEHB158:
 8666 0065 E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev
 8666      00
 8667              	.LEHE158:
 8668              	.L485:
 8669              	.LBE183:
  13:../MemoryOutStream.h **** {
 8670              		.loc 2 13 0 discriminator 24
 8671 006a B8000000 		movl	$0, %eax
 8671      00
 8672 006f 85C0     		testl	%eax, %eax
 8673 0071 744E     		je	.L492
  13:../MemoryOutStream.h **** {
 8674              		.loc 2 13 0 discriminator 25
 8675 0073 488B45E8 		movq	-24(%rbp), %rax
 8676 0077 4889C7   		movq	%rax, %rdi
 8677 007a E8000000 		call	_ZdlPv
 8677      00
 8678 007f EB40     		jmp	.L492
 8679              	.L490:
 8680 0081 4889C3   		movq	%rax, %rbx
 8681              	.LBB184:
  13:../MemoryOutStream.h **** {
 8682              		.loc 2 13 0
 8683 0084 BA000000 		movl	$_ZTTN8UnitTest15MemoryOutStreamE+8, %edx
 8683      00
 8684 0089 488B45E8 		movq	-24(%rbp), %rax
 8685 008d 4889D6   		movq	%rdx, %rsi
 8686 0090 4889C7   		movq	%rax, %rdi
 8687 0093 E8000000 		call	_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev
 8687      00
 8688 0098 EB03     		jmp	.L488
 8689              	.L491:
 8690 009a 4889C3   		movq	%rax, %rbx
 8691              	.L488:
  13:../MemoryOutStream.h **** {
 8692              		.loc 2 13 0 discriminator 19
 8693 009d B8020000 		movl	$2, %eax
 8693      00
 8694 00a2 85C0     		testl	%eax, %eax
 8695 00a4 7410     		je	.L489
  13:../MemoryOutStream.h **** {
 8696              		.loc 2 13 0 discriminator 32
 8697 00a6 488B45E8 		movq	-24(%rbp), %rax
 8698 00aa 4883C060 		addq	$96, %rax
 8699 00ae 4889C7   		movq	%rax, %rdi
 8700 00b1 E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev
 8700      00
 8701              	.L489:
 8702 00b6 4889D8   		movq	%rbx, %rax
 8703 00b9 4889C7   		movq	%rax, %rdi
 8704              	.LEHB159:
 8705 00bc E8000000 		call	_Unwind_Resume
 8705      00
 8706              	.LEHE159:
 8707              	.L492:
 8708              	.LBE184:
  13:../MemoryOutStream.h **** {
 8709              		.loc 2 13 0
 8710 00c1 4883C418 		addq	$24, %rsp
 8711 00c5 5B       		popq	%rbx
 8712 00c6 5D       		popq	%rbp
 8713              		.cfi_def_cfa 7, 8
 8714 00c7 C3       		ret
 8715              		.cfi_endproc
 8716              	.LFE1646:
 8717              		.section	.gcc_except_table
 8718              	.LLSDA1646:
 8719 0454 FF       		.byte	0xff
 8720 0455 FF       		.byte	0xff
 8721 0456 01       		.byte	0x1
 8722 0457 13       		.uleb128 .LLSDACSE1646-.LLSDACSB1646
 8723              	.LLSDACSB1646:
 8724 0458 38       		.uleb128 .LEHB156-.LFB1646
 8725 0459 05       		.uleb128 .LEHE156-.LEHB156
 8726 045a 8101     		.uleb128 .L490-.LFB1646
 8727 045c 00       		.uleb128 0
 8728 045d 4C       		.uleb128 .LEHB157-.LFB1646
 8729 045e 05       		.uleb128 .LEHE157-.LEHB157
 8730 045f 9A01     		.uleb128 .L491-.LFB1646
 8731 0461 00       		.uleb128 0
 8732 0462 65       		.uleb128 .LEHB158-.LFB1646
 8733 0463 05       		.uleb128 .LEHE158-.LEHB158
 8734 0464 00       		.uleb128 0
 8735 0465 00       		.uleb128 0
 8736 0466 BC01     		.uleb128 .LEHB159-.LFB1646
 8737 0468 05       		.uleb128 .LEHE159-.LEHB159
 8738 0469 00       		.uleb128 0
 8739 046a 00       		.uleb128 0
 8740              	.LLSDACSE1646:
 8741              		.section	.text._ZN8UnitTest15MemoryOutStreamD1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamD1Ev
 8743              		.set	.LTHUNK0,_ZN8UnitTest15MemoryOutStreamD1Ev
 8744              		.weak	_ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev
 8746              	_ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev:
 8747              	.LFB1650:
  13:../MemoryOutStream.h **** {
 8748              		.loc 2 13 0 is_stmt 1
 8749              		.cfi_startproc
 8750 00c8 4C8B17   		movq	(%rdi), %r10
 8751 00cb 49037AE8 		addq	-24(%r10), %rdi
 8752 00cf E92CFFFF 		jmp	.LTHUNK0
 8752      FF
 8753              		.cfi_endproc
 8754              	.LFE1650:
 8756              		.section	.text._ZN8UnitTest15MemoryOutStreamD0Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamD0Ev
 8757              		.align 2
 8758              		.weak	_ZN8UnitTest15MemoryOutStreamD0Ev
 8760              	_ZN8UnitTest15MemoryOutStreamD0Ev:
 8761              	.LFB1647:
  13:../MemoryOutStream.h **** {
 8762              		.loc 2 13 0
 8763              		.cfi_startproc
 8764 0000 55       		pushq	%rbp
 8765              		.cfi_def_cfa_offset 16
 8766              		.cfi_offset 6, -16
 8767 0001 4889E5   		movq	%rsp, %rbp
 8768              		.cfi_def_cfa_register 6
 8769 0004 4883EC10 		subq	$16, %rsp
 8770 0008 48897DF8 		movq	%rdi, -8(%rbp)
  13:../MemoryOutStream.h **** {
 8771              		.loc 2 13 0
 8772 000c 488B45F8 		movq	-8(%rbp), %rax
 8773 0010 4889C7   		movq	%rax, %rdi
 8774 0013 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 8774      00
 8775 0018 488B45F8 		movq	-8(%rbp), %rax
 8776 001c 4889C7   		movq	%rax, %rdi
 8777 001f E8000000 		call	_ZdlPv
 8777      00
 8778 0024 C9       		leave
 8779              		.cfi_def_cfa 7, 8
 8780 0025 C3       		ret
 8781              		.cfi_endproc
 8782              	.LFE1647:
 8784              		.set	.LTHUNK1,_ZN8UnitTest15MemoryOutStreamD0Ev
 8785              		.weak	_ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev
 8787              	_ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev:
 8788              	.LFB1651:
  13:../MemoryOutStream.h **** {
 8789              		.loc 2 13 0
 8790              		.cfi_startproc
 8791 0026 4C8B17   		movq	(%rdi), %r10
 8792 0029 49037AE8 		addq	-24(%r10), %rdi
 8793 002d EBD1     		jmp	.LTHUNK1
 8794              		.cfi_endproc
 8795              	.LFE1651:
 8797              		.weak	_ZTTN8UnitTest15MemoryOutStreamE
 8798              		.section	.rodata._ZTTN8UnitTest15MemoryOutStreamE,"aG",@progbits,_ZTVN8UnitTest15MemoryOutStreamE,
 8799              		.align 32
 8802              	_ZTTN8UnitTest15MemoryOutStreamE:
 8803 0000 00000000 		.quad	_ZTVN8UnitTest15MemoryOutStreamE+24
 8803      00000000 
 8804 0008 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_St19basic_ostringstreamIcSt11char_traitsIcESaIcEE+24
 8804      00000000 
 8805 0010 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_So+24
 8805      00000000 
 8806 0018 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_So+64
 8806      00000000 
 8807 0020 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_St19basic_ostringstreamIcSt11char_traitsIcESaIcEE+64
 8807      00000000 
 8808 0028 00000000 		.quad	_ZTVN8UnitTest15MemoryOutStreamE+64
 8808      00000000 
 8809              		.hidden	_ZTCN8UnitTest15MemoryOutStreamE0_St19basic_ostringstreamIcSt11char_traitsIcESaIcEE
 8810              		.weak	_ZTCN8UnitTest15MemoryOutStreamE0_St19basic_ostringstreamIcSt11char_traitsIcESaIcEE
 8811              		.section	.rodata._ZTCN8UnitTest15MemoryOutStreamE0_St19basic_ostringstreamIcSt11char_traitsIcESaIc
 8812              		.align 64
 8815              	_ZTCN8UnitTest15MemoryOutStreamE0_St19basic_ostringstreamIcSt11char_traitsIcESaIcEE:
 8816 0000 60000000 		.quad	96
 8816      00000000 
 8817 0008 00000000 		.quad	0
 8817      00000000 
 8818 0010 00000000 		.quad	_ZTISt19basic_ostringstreamIcSt11char_traitsIcESaIcEE
 8818      00000000 
 8819 0018 00000000 		.quad	0
 8819      00000000 
 8820 0020 00000000 		.quad	0
 8820      00000000 
 8821 0028 A0FFFFFF 		.quad	-96
 8821      FFFFFFFF 
 8822 0030 A0FFFFFF 		.quad	-96
 8822      FFFFFFFF 
 8823 0038 00000000 		.quad	_ZTISt19basic_ostringstreamIcSt11char_traitsIcESaIcEE
 8823      00000000 
 8824 0040 00000000 		.quad	0
 8824      00000000 
 8825 0048 00000000 		.quad	0
 8825      00000000 
 8826              		.hidden	_ZTCN8UnitTest15MemoryOutStreamE0_So
 8827              		.weak	_ZTCN8UnitTest15MemoryOutStreamE0_So
 8828              		.section	.rodata._ZTCN8UnitTest15MemoryOutStreamE0_So,"aG",@progbits,_ZTVN8UnitTest15MemoryOutStre
 8829              		.align 64
 8832              	_ZTCN8UnitTest15MemoryOutStreamE0_So:
 8833 0000 60000000 		.quad	96
 8833      00000000 
 8834 0008 00000000 		.quad	0
 8834      00000000 
 8835 0010 00000000 		.quad	_ZTISo
 8835      00000000 
 8836 0018 00000000 		.quad	0
 8836      00000000 
 8837 0020 00000000 		.quad	0
 8837      00000000 
 8838 0028 A0FFFFFF 		.quad	-96
 8838      FFFFFFFF 
 8839 0030 A0FFFFFF 		.quad	-96
 8839      FFFFFFFF 
 8840 0038 00000000 		.quad	_ZTISo
 8840      00000000 
 8841 0040 00000000 		.quad	0
 8841      00000000 
 8842 0048 00000000 		.quad	0
 8842      00000000 
 8843              		.weak	_ZTSN8UnitTest15MemoryOutStreamE
 8844              		.section	.rodata._ZTSN8UnitTest15MemoryOutStreamE,"aG",@progbits,_ZTSN8UnitTest15MemoryOutStreamE,
 8845              		.align 16
 8848              	_ZTSN8UnitTest15MemoryOutStreamE:
 8849 0000 4E38556E 		.string	"N8UnitTest15MemoryOutStreamE"
 8849      69745465 
 8849      73743135 
 8849      4D656D6F 
 8849      72794F75 
 8850              		.weak	_ZTIN8UnitTest15MemoryOutStreamE
 8851              		.section	.rodata._ZTIN8UnitTest15MemoryOutStreamE,"aG",@progbits,_ZTIN8UnitTest15MemoryOutStreamE,
 8852              		.align 16
 8855              	_ZTIN8UnitTest15MemoryOutStreamE:
 8856 0000 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 8856      00000000 
 8857 0008 00000000 		.quad	_ZTSN8UnitTest15MemoryOutStreamE
 8857      00000000 
 8858 0010 00000000 		.quad	_ZTISt19basic_ostringstreamIcSt11char_traitsIcESaIcEE
 8858      00000000 
 8859              		.text
 8861              	_Z41__static_initialization_and_destruction_0ii:
 8862              	.LFB1648:
 155:TestUnitTest++.cpp **** 
 156:TestUnitTest++.cpp **** }
 8863              		.loc 4 156 0
 8864              		.cfi_startproc
 8865 2722 55       		pushq	%rbp
 8866              		.cfi_def_cfa_offset 16
 8867              		.cfi_offset 6, -16
 8868 2723 4889E5   		movq	%rsp, %rbp
 8869              		.cfi_def_cfa_register 6
 8870 2726 4883EC10 		subq	$16, %rsp
 8871 272a 897DFC   		movl	%edi, -4(%rbp)
 8872 272d 8975F8   		movl	%esi, -8(%rbp)
 8873              		.loc 4 156 0
 8874 2730 837DFC01 		cmpl	$1, -4(%rbp)
 8875 2734 0F85F302 		jne	.L495
 8875      0000
 8876              		.loc 4 156 0 is_stmt 0 discriminator 1
 8877 273a 817DF8FF 		cmpl	$65535, -8(%rbp)
 8877      FF0000
 8878 2741 0F85E602 		jne	.L495
 8878      0000
  11:TestUnitTest++.cpp **** {
 8879              		.loc 4 11 0 is_stmt 1
 8880 2747 BF000000 		movl	$_ZN12_GLOBAL__N_130testValidCheckSucceedsInstanceE, %edi
 8880      00
 8881 274c E8AFD8FF 		call	_ZN12_GLOBAL__N_122TestValidCheckSucceedsC2Ev
 8881      FF
 8882 2751 BA000000 		movl	$__dso_handle, %edx
 8882      00
 8883 2756 BE000000 		movl	$_ZN12_GLOBAL__N_130testValidCheckSucceedsInstanceE, %esi
 8883      00
 8884 275b BF000000 		movl	$_ZN12_GLOBAL__N_122TestValidCheckSucceedsD1Ev, %edi
 8884      00
 8885 2760 E8000000 		call	__cxa_atexit
 8885      00
 8886 2765 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 8886      00
 8887 276a BA000000 		movl	$_ZN12_GLOBAL__N_130testValidCheckSucceedsInstanceE, %edx
 8887      00
 8888 276f 4889C6   		movq	%rax, %rsi
 8889 2772 BF000000 		movl	$_ZN12_GLOBAL__N_123adderValidCheckSucceedsE, %edi
 8889      00
 8890 2777 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 8890      00
  17:TestUnitTest++.cpp **** {
 8891              		.loc 4 17 0
 8892 277c BF000000 		movl	$_ZN12_GLOBAL__N_134testCheckWorksWithPointersInstanceE, %edi
 8892      00
 8893 2781 E89CD9FF 		call	_ZN12_GLOBAL__N_126TestCheckWorksWithPointersC2Ev
 8893      FF
 8894 2786 BA000000 		movl	$__dso_handle, %edx
 8894      00
 8895 278b BE000000 		movl	$_ZN12_GLOBAL__N_134testCheckWorksWithPointersInstanceE, %esi
 8895      00
 8896 2790 BF000000 		movl	$_ZN12_GLOBAL__N_126TestCheckWorksWithPointersD1Ev, %edi
 8896      00
 8897 2795 E8000000 		call	__cxa_atexit
 8897      00
 8898 279a E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 8898      00
 8899 279f BA000000 		movl	$_ZN12_GLOBAL__N_134testCheckWorksWithPointersInstanceE, %edx
 8899      00
 8900 27a4 4889C6   		movq	%rax, %rsi
 8901 27a7 BF000000 		movl	$_ZN12_GLOBAL__N_127adderCheckWorksWithPointersE, %edi
 8901      00
 8902 27ac E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 8902      00
  24:TestUnitTest++.cpp **** {
 8903              		.loc 4 24 0
 8904 27b1 BF000000 		movl	$_ZN12_GLOBAL__N_135testValidCheckEqualSucceedsInstanceE, %edi
 8904      00
 8905 27b6 E83FDBFF 		call	_ZN12_GLOBAL__N_127TestValidCheckEqualSucceedsC2Ev
 8905      FF
 8906 27bb BA000000 		movl	$__dso_handle, %edx
 8906      00
 8907 27c0 BE000000 		movl	$_ZN12_GLOBAL__N_135testValidCheckEqualSucceedsInstanceE, %esi
 8907      00
 8908 27c5 BF000000 		movl	$_ZN12_GLOBAL__N_127TestValidCheckEqualSucceedsD1Ev, %edi
 8908      00
 8909 27ca E8000000 		call	__cxa_atexit
 8909      00
 8910 27cf E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 8910      00
 8911 27d4 BA000000 		movl	$_ZN12_GLOBAL__N_135testValidCheckEqualSucceedsInstanceE, %edx
 8911      00
 8912 27d9 4889C6   		movq	%rax, %rsi
 8913 27dc BF000000 		movl	$_ZN12_GLOBAL__N_128adderValidCheckEqualSucceedsE, %edi
 8913      00
 8914 27e1 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 8914      00
  31:TestUnitTest++.cpp **** {
 8915              		.loc 4 31 0
 8916 27e6 BF000000 		movl	$_ZN12_GLOBAL__N_139testCheckEqualWorksWithPointersInstanceE, %edi
 8916      00
 8917 27eb E820DCFF 		call	_ZN12_GLOBAL__N_131TestCheckEqualWorksWithPointersC2Ev
 8917      FF
 8918 27f0 BA000000 		movl	$__dso_handle, %edx
 8918      00
 8919 27f5 BE000000 		movl	$_ZN12_GLOBAL__N_139testCheckEqualWorksWithPointersInstanceE, %esi
 8919      00
 8920 27fa BF000000 		movl	$_ZN12_GLOBAL__N_131TestCheckEqualWorksWithPointersD1Ev, %edi
 8920      00
 8921 27ff E8000000 		call	__cxa_atexit
 8921      00
 8922 2804 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 8922      00
 8923 2809 BA000000 		movl	$_ZN12_GLOBAL__N_139testCheckEqualWorksWithPointersInstanceE, %edx
 8923      00
 8924 280e 4889C6   		movq	%rax, %rsi
 8925 2811 BF000000 		movl	$_ZN12_GLOBAL__N_132adderCheckEqualWorksWithPointersE, %edi
 8925      00
 8926 2816 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 8926      00
  37:TestUnitTest++.cpp **** {
 8927              		.loc 4 37 0
 8928 281b BF000000 		movl	$_ZN12_GLOBAL__N_135testValidCheckCloseSucceedsInstanceE, %edi
 8928      00
 8929 2820 E803DDFF 		call	_ZN12_GLOBAL__N_127TestValidCheckCloseSucceedsC2Ev
 8929      FF
 8930 2825 BA000000 		movl	$__dso_handle, %edx
 8930      00
 8931 282a BE000000 		movl	$_ZN12_GLOBAL__N_135testValidCheckCloseSucceedsInstanceE, %esi
 8931      00
 8932 282f BF000000 		movl	$_ZN12_GLOBAL__N_127TestValidCheckCloseSucceedsD1Ev, %edi
 8932      00
 8933 2834 E8000000 		call	__cxa_atexit
 8933      00
 8934 2839 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 8934      00
 8935 283e BA000000 		movl	$_ZN12_GLOBAL__N_135testValidCheckCloseSucceedsInstanceE, %edx
 8935      00
 8936 2843 4889C6   		movq	%rax, %rsi
 8937 2846 BF000000 		movl	$_ZN12_GLOBAL__N_128adderValidCheckCloseSucceedsE, %edi
 8937      00
 8938 284b E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 8938      00
  43:TestUnitTest++.cpp **** {
 8939              		.loc 4 43 0
 8940 2850 BF000000 		movl	$_ZN12_GLOBAL__N_130testArrayCloseSucceedsInstanceE, %edi
 8940      00
 8941 2855 E8B2DEFF 		call	_ZN12_GLOBAL__N_122TestArrayCloseSucceedsC2Ev
 8941      FF
 8942 285a BA000000 		movl	$__dso_handle, %edx
 8942      00
 8943 285f BE000000 		movl	$_ZN12_GLOBAL__N_130testArrayCloseSucceedsInstanceE, %esi
 8943      00
 8944 2864 BF000000 		movl	$_ZN12_GLOBAL__N_122TestArrayCloseSucceedsD1Ev, %edi
 8944      00
 8945 2869 E8000000 		call	__cxa_atexit
 8945      00
 8946 286e E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 8946      00
 8947 2873 BA000000 		movl	$_ZN12_GLOBAL__N_130testArrayCloseSucceedsInstanceE, %edx
 8947      00
 8948 2878 4889C6   		movq	%rax, %rsi
 8949 287b BF000000 		movl	$_ZN12_GLOBAL__N_123adderArrayCloseSucceedsE, %edi
 8949      00
 8950 2880 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 8950      00
  50:TestUnitTest++.cpp **** {
 8951              		.loc 4 50 0
 8952 2885 BF000000 		movl	$_ZN12_GLOBAL__N_143testCheckArrayCloseWorksWithVectorsInstanceE, %edi
 8952      00
 8953 288a E8D3DFFF 		call	_ZN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsC2Ev
 8953      FF
 8954 288f BA000000 		movl	$__dso_handle, %edx
 8954      00
 8955 2894 BE000000 		movl	$_ZN12_GLOBAL__N_143testCheckArrayCloseWorksWithVectorsInstanceE, %esi
 8955      00
 8956 2899 BF000000 		movl	$_ZN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsD1Ev, %edi
 8956      00
 8957 289e E8000000 		call	__cxa_atexit
 8957      00
 8958 28a3 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 8958      00
 8959 28a8 BA000000 		movl	$_ZN12_GLOBAL__N_143testCheckArrayCloseWorksWithVectorsInstanceE, %edx
 8959      00
 8960 28ad 4889C6   		movq	%rax, %rsi
 8961 28b0 BF000000 		movl	$_ZN12_GLOBAL__N_136adderCheckArrayCloseWorksWithVectorsE, %edi
 8961      00
 8962 28b5 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 8962      00
  59:TestUnitTest++.cpp **** {
 8963              		.loc 4 59 0
 8964 28ba BF000000 		movl	$_ZN12_GLOBAL__N_153testCheckThrowMacroSucceedsOnCorrectExceptionInstanceE, %edi
 8964      00
 8965 28bf E880E1FF 		call	_ZN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionC2Ev
 8965      FF
 8966 28c4 BA000000 		movl	$__dso_handle, %edx
 8966      00
 8967 28c9 BE000000 		movl	$_ZN12_GLOBAL__N_153testCheckThrowMacroSucceedsOnCorrectExceptionInstanceE, %esi
 8967      00
 8968 28ce BF000000 		movl	$_ZN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionD1Ev, %edi
 8968      00
 8969 28d3 E8000000 		call	__cxa_atexit
 8969      00
 8970 28d8 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 8970      00
 8971 28dd BA000000 		movl	$_ZN12_GLOBAL__N_153testCheckThrowMacroSucceedsOnCorrectExceptionInstanceE, %edx
 8971      00
 8972 28e2 4889C6   		movq	%rax, %rsi
 8973 28e5 BF000000 		movl	$_ZN12_GLOBAL__N_146adderCheckThrowMacroSucceedsOnCorrectExceptionE, %edi
 8973      00
 8974 28ea E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 8974      00
  65:TestUnitTest++.cpp **** {
 8975              		.loc 4 65 0
 8976 28ef BF000000 		movl	$_ZN12_GLOBAL__N_131testCheckAssertSucceedsInstanceE, %edi
 8976      00
 8977 28f4 E84BE2FF 		call	_ZN12_GLOBAL__N_123TestCheckAssertSucceedsC2Ev
 8977      FF
 8978 28f9 BA000000 		movl	$__dso_handle, %edx
 8978      00
 8979 28fe BE000000 		movl	$_ZN12_GLOBAL__N_131testCheckAssertSucceedsInstanceE, %esi
 8979      00
 8980 2903 BF000000 		movl	$_ZN12_GLOBAL__N_123TestCheckAssertSucceedsD1Ev, %edi
 8980      00
 8981 2908 E8000000 		call	__cxa_atexit
 8981      00
 8982 290d E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 8982      00
 8983 2912 BA000000 		movl	$_ZN12_GLOBAL__N_131testCheckAssertSucceedsInstanceE, %edx
 8983      00
 8984 2917 4889C6   		movq	%rax, %rsi
 8985 291a BF000000 		movl	$_ZN12_GLOBAL__N_124adderCheckAssertSucceedsE, %edi
 8985      00
 8986 291f E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 8986      00
  70:TestUnitTest++.cpp **** {
 8987              		.loc 4 70 0
 8988 2924 BF000000 		movl	$_ZN12_GLOBAL__N_150testCheckThrowMacroFailsOnMissingExceptionInstanceE, %edi
 8988      00
 8989 2929 E80EE3FF 		call	_ZN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionC2Ev
 8989      FF
 8990 292e BA000000 		movl	$__dso_handle, %edx
 8990      00
 8991 2933 BE000000 		movl	$_ZN12_GLOBAL__N_150testCheckThrowMacroFailsOnMissingExceptionInstanceE, %esi
 8991      00
 8992 2938 BF000000 		movl	$_ZN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionD1Ev, %edi
 8992      00
 8993 293d E8000000 		call	__cxa_atexit
 8993      00
 8994 2942 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 8994      00
 8995 2947 BA000000 		movl	$_ZN12_GLOBAL__N_150testCheckThrowMacroFailsOnMissingExceptionInstanceE, %edx
 8995      00
 8996 294c 4889C6   		movq	%rax, %rsi
 8997 294f BF000000 		movl	$_ZN12_GLOBAL__N_143adderCheckThrowMacroFailsOnMissingExceptionE, %edi
 8997      00
 8998 2954 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 8998      00
  97:TestUnitTest++.cpp **** {
 8999              		.loc 4 97 0
 9000 2959 BF000000 		movl	$_ZN12_GLOBAL__N_148testCheckThrowMacroFailsOnWrongExceptionInstanceE, %edi
 9000      00
 9001 295e E855E5FF 		call	_ZN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionC2Ev
 9001      FF
 9002 2963 BA000000 		movl	$__dso_handle, %edx
 9002      00
 9003 2968 BE000000 		movl	$_ZN12_GLOBAL__N_148testCheckThrowMacroFailsOnWrongExceptionInstanceE, %esi
 9003      00
 9004 296d BF000000 		movl	$_ZN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionD1Ev, %edi
 9004      00
 9005 2972 E8000000 		call	__cxa_atexit
 9005      00
 9006 2977 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9006      00
 9007 297c BA000000 		movl	$_ZN12_GLOBAL__N_148testCheckThrowMacroFailsOnWrongExceptionInstanceE, %edx
 9007      00
 9008 2981 4889C6   		movq	%rax, %rsi
 9009 2984 BF000000 		movl	$_ZN12_GLOBAL__N_141adderCheckThrowMacroFailsOnWrongExceptionE, %edi
 9009      00
 9010 2989 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9010      00
 136:TestUnitTest++.cpp **** {
 9011              		.loc 4 136 0
 9012 298e BF000000 		movl	$_ZN12_GLOBAL__N_151testSimpleFixtureDefaultFixtureCtorIsCalledInstanceE, %edi
 9012      00
 9013 2993 E836E8FF 		call	_ZN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledC2Ev
 9013      FF
 9014 2998 BA000000 		movl	$__dso_handle, %edx
 9014      00
 9015 299d BE000000 		movl	$_ZN12_GLOBAL__N_151testSimpleFixtureDefaultFixtureCtorIsCalledInstanceE, %esi
 9015      00
 9016 29a2 BF000000 		movl	$_ZN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledD1Ev, %edi
 9016      00
 9017 29a7 E8000000 		call	__cxa_atexit
 9017      00
 9018 29ac E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9018      00
 9019 29b1 BA000000 		movl	$_ZN12_GLOBAL__N_151testSimpleFixtureDefaultFixtureCtorIsCalledInstanceE, %edx
 9019      00
 9020 29b6 4889C6   		movq	%rax, %rsi
 9021 29b9 BF000000 		movl	$_ZN12_GLOBAL__N_144adderSimpleFixtureDefaultFixtureCtorIsCalledE, %edi
 9021      00
 9022 29be E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9022      00
 141:TestUnitTest++.cpp **** {
 9023              		.loc 4 141 0
 9024 29c3 BF000000 		movl	$_ZN12_GLOBAL__N_151testSimpleFixtureOnlyOneFixtureAliveAtATimeInstanceE, %edi
 9024      00
 9025 29c8 E871ECFF 		call	_ZN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeC2Ev
 9025      FF
 9026 29cd BA000000 		movl	$__dso_handle, %edx
 9026      00
 9027 29d2 BE000000 		movl	$_ZN12_GLOBAL__N_151testSimpleFixtureOnlyOneFixtureAliveAtATimeInstanceE, %esi
 9027      00
 9028 29d7 BF000000 		movl	$_ZN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeD1Ev, %edi
 9028      00
 9029 29dc E8000000 		call	__cxa_atexit
 9029      00
 9030 29e1 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9030      00
 9031 29e6 BA000000 		movl	$_ZN12_GLOBAL__N_151testSimpleFixtureOnlyOneFixtureAliveAtATimeInstanceE, %edx
 9031      00
 9032 29eb 4889C6   		movq	%rax, %rsi
 9033 29ee BF000000 		movl	$_ZN12_GLOBAL__N_144adderSimpleFixtureOnlyOneFixtureAliveAtATimeE, %edi
 9033      00
 9034 29f3 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9034      00
 151:TestUnitTest++.cpp **** {
 9035              		.loc 4 151 0
 9036 29f8 BF000000 		movl	$_ZN12_GLOBAL__N_145testCanCallCHECKOutsideOfTestFunctionInstanceE, %edi
 9036      00
 9037 29fd E84EF1FF 		call	_ZN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionC2Ev
 9037      FF
 9038 2a02 BA000000 		movl	$__dso_handle, %edx
 9038      00
 9039 2a07 BE000000 		movl	$_ZN12_GLOBAL__N_145testCanCallCHECKOutsideOfTestFunctionInstanceE, %esi
 9039      00
 9040 2a0c BF000000 		movl	$_ZN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionD1Ev, %edi
 9040      00
 9041 2a11 E8000000 		call	__cxa_atexit
 9041      00
 9042 2a16 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9042      00
 9043 2a1b BA000000 		movl	$_ZN12_GLOBAL__N_145testCanCallCHECKOutsideOfTestFunctionInstanceE, %edx
 9043      00
 9044 2a20 4889C6   		movq	%rax, %rsi
 9045 2a23 BF000000 		movl	$_ZN12_GLOBAL__N_138adderCanCallCHECKOutsideOfTestFunctionE, %edi
 9045      00
 9046 2a28 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9046      00
 9047              	.L495:
 9048              		.loc 4 156 0
 9049 2a2d C9       		leave
 9050              		.cfi_def_cfa 7, 8
 9051 2a2e C3       		ret
 9052              		.cfi_endproc
 9053              	.LFE1648:
 9055              		.section	.rodata
 9056 0a08 00000000 		.align 16
 9056      00000000 
 9059              	_ZTIN12_GLOBAL__N_122TestValidCheckSucceedsE:
 9060 0a10 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9060      00000000 
 9061 0a18 00000000 		.quad	_ZTSN12_GLOBAL__N_122TestValidCheckSucceedsE
 9061      00000000 
 9062 0a20 00000000 		.quad	_ZTIN8UnitTest4TestE
 9062      00000000 
 9063 0a28 00000000 		.align 16
 9063      00000000 
 9066              	_ZTIN12_GLOBAL__N_126TestCheckWorksWithPointersE:
 9067 0a30 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9067      00000000 
 9068 0a38 00000000 		.quad	_ZTSN12_GLOBAL__N_126TestCheckWorksWithPointersE
 9068      00000000 
 9069 0a40 00000000 		.quad	_ZTIN8UnitTest4TestE
 9069      00000000 
 9070 0a48 00000000 		.align 16
 9070      00000000 
 9073              	_ZTIN12_GLOBAL__N_127TestValidCheckEqualSucceedsE:
 9074 0a50 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9074      00000000 
 9075 0a58 00000000 		.quad	_ZTSN12_GLOBAL__N_127TestValidCheckEqualSucceedsE
 9075      00000000 
 9076 0a60 00000000 		.quad	_ZTIN8UnitTest4TestE
 9076      00000000 
 9077 0a68 00000000 		.align 16
 9077      00000000 
 9080              	_ZTIN12_GLOBAL__N_131TestCheckEqualWorksWithPointersE:
 9081 0a70 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9081      00000000 
 9082 0a78 00000000 		.quad	_ZTSN12_GLOBAL__N_131TestCheckEqualWorksWithPointersE
 9082      00000000 
 9083 0a80 00000000 		.quad	_ZTIN8UnitTest4TestE
 9083      00000000 
 9084 0a88 00000000 		.align 16
 9084      00000000 
 9087              	_ZTIN12_GLOBAL__N_127TestValidCheckCloseSucceedsE:
 9088 0a90 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9088      00000000 
 9089 0a98 00000000 		.quad	_ZTSN12_GLOBAL__N_127TestValidCheckCloseSucceedsE
 9089      00000000 
 9090 0aa0 00000000 		.quad	_ZTIN8UnitTest4TestE
 9090      00000000 
 9091 0aa8 00000000 		.align 16
 9091      00000000 
 9094              	_ZTIN12_GLOBAL__N_122TestArrayCloseSucceedsE:
 9095 0ab0 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9095      00000000 
 9096 0ab8 00000000 		.quad	_ZTSN12_GLOBAL__N_122TestArrayCloseSucceedsE
 9096      00000000 
 9097 0ac0 00000000 		.quad	_ZTIN8UnitTest4TestE
 9097      00000000 
 9098 0ac8 00000000 		.align 16
 9098      00000000 
 9101              	_ZTIN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsE:
 9102 0ad0 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9102      00000000 
 9103 0ad8 00000000 		.quad	_ZTSN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsE
 9103      00000000 
 9104 0ae0 00000000 		.quad	_ZTIN8UnitTest4TestE
 9104      00000000 
 9105 0ae8 00000000 		.align 16
 9105      00000000 
 9108              	_ZTIN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionE:
 9109 0af0 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9109      00000000 
 9110 0af8 00000000 		.quad	_ZTSN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionE
 9110      00000000 
 9111 0b00 00000000 		.quad	_ZTIN8UnitTest4TestE
 9111      00000000 
 9112 0b08 00000000 		.align 16
 9112      00000000 
 9115              	_ZTIZNK12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectException7RunImplEvE13TestException:
 9116 0b10 00000000 		.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
 9116      00000000 
 9117 0b18 00000000 		.quad	_ZTSZNK12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectException7RunImplEvE13TestExcepti
 9117      00000000 
 9118              		.align 16
 9121              	_ZTIN12_GLOBAL__N_123TestCheckAssertSucceedsE:
 9122 0b20 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9122      00000000 
 9123 0b28 00000000 		.quad	_ZTSN12_GLOBAL__N_123TestCheckAssertSucceedsE
 9123      00000000 
 9124 0b30 00000000 		.quad	_ZTIN8UnitTest4TestE
 9124      00000000 
 9125 0b38 00000000 		.align 16
 9125      00000000 
 9128              	_ZTIN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionE:
 9129 0b40 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9129      00000000 
 9130 0b48 00000000 		.quad	_ZTSN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionE
 9130      00000000 
 9131 0b50 00000000 		.quad	_ZTIN8UnitTest4TestE
 9131      00000000 
 9132 0b58 00000000 		.align 16
 9132      00000000 
 9135              	_ZTIZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvE11NoThrowTest:
 9136 0b60 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9136      00000000 
 9137 0b68 00000000 		.quad	_ZTSZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvE11NoThrowTest
 9137      00000000 
 9138 0b70 00000000 		.quad	_ZTIN8UnitTest4TestE
 9138      00000000 
 9139 0b78 00000000 		.align 16
 9139      00000000 
 9142              	_ZTIN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionE:
 9143 0b80 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9143      00000000 
 9144 0b88 00000000 		.quad	_ZTSN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionE
 9144      00000000 
 9145 0b90 00000000 		.quad	_ZTIN8UnitTest4TestE
 9145      00000000 
 9146 0b98 00000000 		.align 16
 9146      00000000 
 9149              	_ZTIZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvE14WrongThrowTest:
 9150 0ba0 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9150      00000000 
 9151 0ba8 00000000 		.quad	_ZTSZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvE14WrongThrowTest
 9151      00000000 
 9152 0bb0 00000000 		.quad	_ZTIN8UnitTest4TestE
 9152      00000000 
 9153 0bb8 00000000 		.align 16
 9153      00000000 
 9156              	_ZTIN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledE:
 9157 0bc0 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9157      00000000 
 9158 0bc8 00000000 		.quad	_ZTSN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledE
 9158      00000000 
 9159 0bd0 00000000 		.quad	_ZTIN8UnitTest4TestE
 9159      00000000 
 9160 0bd8 00000000 		.align 16
 9160      00000000 
 9163              	_ZTIN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeE:
 9164 0be0 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9164      00000000 
 9165 0be8 00000000 		.quad	_ZTSN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeE
 9165      00000000 
 9166 0bf0 00000000 		.quad	_ZTIN8UnitTest4TestE
 9166      00000000 
 9167 0bf8 00000000 		.align 16
 9167      00000000 
 9170              	_ZTIN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionE:
 9171 0c00 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9171      00000000 
 9172 0c08 00000000 		.quad	_ZTSN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionE
 9172      00000000 
 9173 0c10 00000000 		.quad	_ZTIN8UnitTest4TestE
 9173      00000000 
 9174 0c18 00000000 		.align 32
 9174      00000000 
 9177              	_ZTSN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionE:
 9178 0c20 2A4E3132 		.string	"*N12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionE"
 9178      5F474C4F 
 9178      42414C5F 
 9178      5F4E5F31 
 9178      33375465 
 9179 0c59 00000000 		.align 32
 9179      000000
 9182              	_ZTSN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeE:
 9183 0c60 2A4E3132 		.string	"*N12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeE"
 9183      5F474C4F 
 9183      42414C5F 
 9183      5F4E5F31 
 9183      34335465 
 9184 0c9f 00       		.align 32
 9187              	_ZTSN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledE:
 9188 0ca0 2A4E3132 		.string	"*N12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledE"
 9188      5F474C4F 
 9188      42414C5F 
 9188      5F4E5F31 
 9188      34335465 
 9189 0cdf 00000000 		.align 64
 9189      00000000 
 9189      00000000 
 9189      00000000 
 9189      00000000 
 9192              	_ZTSZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvE14WrongThrowTest:
 9193 0d00 2A5A4E4B 		.string	"*ZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvE14WrongThrowTest"
 9193      31325F47 
 9193      4C4F4241 
 9193      4C5F5F4E 
 9193      5F313430 
 9194 0d58 00000000 		.align 32
 9194      00000000 
 9197              	_ZTSN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionE:
 9198 0d60 2A4E3132 		.string	"*N12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionE"
 9198      5F474C4F 
 9198      42414C5F 
 9198      5F4E5F31 
 9198      34305465 
 9199 0d9c 00000000 		.align 64
 9199      00000000 
 9199      00000000 
 9199      00000000 
 9199      00000000 
 9202              	_ZTSZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvE11NoThrowTest:
 9203 0dc0 2A5A4E4B 		.string	"*ZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvE11NoThrowTest"
 9203      31325F47 
 9203      4C4F4241 
 9203      4C5F5F4E 
 9203      5F313432 
 9204 0e17 00000000 		.align 32
 9204      00000000 
 9204      00
 9207              	_ZTSN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionE:
 9208 0e20 2A4E3132 		.string	"*N12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionE"
 9208      5F474C4F 
 9208      42414C5F 
 9208      5F4E5F31 
 9208      34325465 
 9209 0e5e 0000     		.align 32
 9212              	_ZTSN12_GLOBAL__N_123TestCheckAssertSucceedsE:
 9213 0e60 2A4E3132 		.string	"*N12_GLOBAL__N_123TestCheckAssertSucceedsE"
 9213      5F474C4F 
 9213      42414C5F 
 9213      5F4E5F31 
 9213      32335465 
 9214 0e8b 00000000 		.align 64
 9214      00000000 
 9214      00000000 
 9214      00000000 
 9214      00000000 
 9217              	_ZTSZNK12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectException7RunImplEvE13TestException:
 9218 0ec0 2A5A4E4B 		.string	"*ZNK12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectException7RunImplEvE13TestExcepti
 9218      31325F47 
 9218      4C4F4241 
 9218      4C5F5F4E 
 9218      5F313435 
 9219 0f1c 00000000 		.align 64
 9219      00000000 
 9219      00000000 
 9219      00000000 
 9219      00000000 
 9222              	_ZTSN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionE:
 9223 0f40 2A4E3132 		.string	"*N12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionE"
 9223      5F474C4F 
 9223      42414C5F 
 9223      5F4E5F31 
 9223      34355465 
 9224 0f81 00000000 		.align 32
 9224      00000000 
 9224      00000000 
 9224      00000000 
 9224      00000000 
 9227              	_ZTSN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsE:
 9228 0fa0 2A4E3132 		.string	"*N12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsE"
 9228      5F474C4F 
 9228      42414C5F 
 9228      5F4E5F31 
 9228      33355465 
 9229 0fd7 00000000 		.align 32
 9229      00000000 
 9229      00
 9232              	_ZTSN12_GLOBAL__N_122TestArrayCloseSucceedsE:
 9233 0fe0 2A4E3132 		.string	"*N12_GLOBAL__N_122TestArrayCloseSucceedsE"
 9233      5F474C4F 
 9233      42414C5F 
 9233      5F4E5F31 
 9233      32325465 
 9234 100a 00000000 		.align 32
 9234      00000000 
 9234      00000000 
 9234      00000000 
 9234      00000000 
 9237              	_ZTSN12_GLOBAL__N_127TestValidCheckCloseSucceedsE:
 9238 1020 2A4E3132 		.string	"*N12_GLOBAL__N_127TestValidCheckCloseSucceedsE"
 9238      5F474C4F 
 9238      42414C5F 
 9238      5F4E5F31 
 9238      32375465 
 9239 104f 00000000 		.align 32
 9239      00000000 
 9239      00000000 
 9239      00000000 
 9239      00
 9242              	_ZTSN12_GLOBAL__N_131TestCheckEqualWorksWithPointersE:
 9243 1060 2A4E3132 		.string	"*N12_GLOBAL__N_131TestCheckEqualWorksWithPointersE"
 9243      5F474C4F 
 9243      42414C5F 
 9243      5F4E5F31 
 9243      33315465 
 9244 1093 00000000 		.align 32
 9244      00000000 
 9244      00000000 
 9244      00
 9247              	_ZTSN12_GLOBAL__N_127TestValidCheckEqualSucceedsE:
 9248 10a0 2A4E3132 		.string	"*N12_GLOBAL__N_127TestValidCheckEqualSucceedsE"
 9248      5F474C4F 
 9248      42414C5F 
 9248      5F4E5F31 
 9248      32375465 
 9249 10cf 00000000 		.align 32
 9249      00000000 
 9249      00000000 
 9249      00000000 
 9249      00
 9252              	_ZTSN12_GLOBAL__N_126TestCheckWorksWithPointersE:
 9253 10e0 2A4E3132 		.string	"*N12_GLOBAL__N_126TestCheckWorksWithPointersE"
 9253      5F474C4F 
 9253      42414C5F 
 9253      5F4E5F31 
 9253      32365465 
 9254 110e 00000000 		.align 32
 9254      00000000 
 9254      00000000 
 9254      00000000 
 9254      0000
 9257              	_ZTSN12_GLOBAL__N_122TestValidCheckSucceedsE:
 9258 1120 2A4E3132 		.string	"*N12_GLOBAL__N_122TestValidCheckSucceedsE"
 9258      5F474C4F 
 9258      42414C5F 
 9258      5F4E5F31 
 9258      32325465 
 9259              		.text
 9261              	_GLOBAL__sub_I_TestUnitTest__.cpp:
 9262              	.LFB1649:
 9263              		.loc 4 156 0
 9264              		.cfi_startproc
 9265 2a2f 55       		pushq	%rbp
 9266              		.cfi_def_cfa_offset 16
 9267              		.cfi_offset 6, -16
 9268 2a30 4889E5   		movq	%rsp, %rbp
 9269              		.cfi_def_cfa_register 6
 9270              		.loc 4 156 0
 9271 2a33 BEFFFF00 		movl	$65535, %esi
 9271      00
 9272 2a38 BF010000 		movl	$1, %edi
 9272      00
 9273 2a3d E8E0FCFF 		call	_Z41__static_initialization_and_destruction_0ii
 9273      FF
 9274 2a42 5D       		popq	%rbp
 9275              		.cfi_def_cfa 7, 8
 9276 2a43 C3       		ret
 9277              		.cfi_endproc
 9278              	.LFE1649:
 9280              		.section	.init_array,"aw"
 9281              		.align 8
 9282 0000 00000000 		.quad	_GLOBAL__sub_I_TestUnitTest__.cpp
 9282      00000000 
 9283              		.section	.rodata
 9284 114a 00000000 		.align 8
 9284      0000
 9287              	_ZZL18__gthread_active_pvE20__gthread_active_ptr:
 9288 1150 00000000 		.quad	_ZL28__gthrw___pthread_key_createPjPFvPvE
 9288      00000000 
 9289              		.weakref	_ZL28__gthrw___pthread_key_createPjPFvPvE,__pthread_key_create
 9290              		.align 4
 9291              	.LC15:
 9292 1158 0AD7233C 		.long	1008981770
 9293              		.align 4
 9294              	.LC16:
 9295 115c 62100040 		.long	1073746018
 9296              		.align 4
 9297              	.LC17:
 9298 1160 00000040 		.long	1073741824
 9299              		.align 4
 9300              	.LC21:
 9301 1164 0000803F 		.long	1065353216
 9302              		.align 4
 9303              	.LC22:
 9304 1168 00004040 		.long	1077936128
 9305              		.align 4
 9306              	.LC23:
 9307 116c D7A30040 		.long	1073783767
 9308              		.align 4
 9309              	.LC24:
 9310 1170 CDCCCC3D 		.long	1036831949
 9311              		.align 4
 9312              	.LC27:
 9313 1174 00000000 		.long	0
 9314              		.align 4
 9315              	.LC28:
 9316 1178 17B7D138 		.long	953267991
 9317              		.text
 9318              	.Letext0:
 9319              		.file 15 "../TestDetails.h"
 9320              		.file 16 "../TestList.h"
 9321              		.file 17 "../TestResults.h"
 9322              		.file 18 "../PosixUtils/SignalTranslator.h"
 9323              		.file 19 "<built-in>"
 9324              		.file 20 "/usr/include/stdio.h"
 9325              		.file 21 "/usr/lib/gcc/x86_64-linux-gnu/4.9/include/stddef.h"
 9326              		.file 22 "/usr/include/wchar.h"
 9327              		.file 23 "/usr/include/c++/4.9/cwchar"
 9328              		.file 24 "/usr/include/c++/4.9/bits/cpp_type_traits.h"
 9329              		.file 25 "/usr/include/c++/4.9/bits/char_traits.h"
 9330              		.file 26 "/usr/include/x86_64-linux-gnu/c++/4.9/bits/c++config.h"
 9331              		.file 27 "/usr/include/c++/4.9/clocale"
 9332              		.file 28 "/usr/include/c++/4.9/bits/basic_string.h"
 9333              		.file 29 "/usr/include/c++/4.9/bits/basic_string.tcc"
 9334              		.file 30 "/usr/include/c++/4.9/bits/stringfwd.h"
 9335              		.file 31 "/usr/include/c++/4.9/cwctype"
 9336              		.file 32 "/usr/include/c++/4.9/bits/vector.tcc"
 9337              		.file 33 "/usr/include/time.h"
 9338              		.file 34 "/usr/include/c++/4.9/debug/debug.h"
 9339              		.file 35 "/usr/include/c++/4.9/bits/predefined_ops.h"
 9340              		.file 36 "/usr/include/c++/4.9/ext/numeric_traits.h"
 9341              		.file 37 "/usr/include/c++/4.9/ext/type_traits.h"
 9342              		.file 38 "/usr/include/locale.h"
 9343              		.file 39 "/usr/include/x86_64-linux-gnu/bits/types.h"
 9344              		.file 40 "/usr/include/x86_64-linux-gnu/bits/setjmp.h"
 9345              		.file 41 "/usr/include/x86_64-linux-gnu/c++/4.9/bits/atomic_word.h"
 9346              		.file 42 "/usr/include/wctype.h"
 9347              		.file 43 "/usr/include/x86_64-linux-gnu/bits/sigset.h"
 9348              		.file 44 "/usr/include/setjmp.h"
 9349              		.file 45 "/usr/include/x86_64-linux-gnu/bits/siginfo.h"
 9350              		.file 46 "/usr/include/signal.h"
 9351              		.file 47 "/usr/include/x86_64-linux-gnu/bits/sigaction.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 TestUnitTest++.cpp
     /tmp/cci89ash.s:10     .text._ZN13UnitTestSuite12GetSuiteNameEv:0000000000000000 _ZN13UnitTestSuite12GetSuiteNameEv
     /tmp/cci89ash.s:33     .text._ZN8UnitTest15MemoryOutStreamC1Ev:0000000000000000 _ZN8UnitTest15MemoryOutStreamC1Ev
     /tmp/cci89ash.s:8802   .rodata._ZTTN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTTN8UnitTest15MemoryOutStreamE
     /tmp/cci89ash.s:8603   .rodata._ZTVN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTVN8UnitTest15MemoryOutStreamE
     /tmp/cci89ash.s:146    .text._ZN17ScopedCurrentTestC2ERN8UnitTest11TestResultsEPKNS0_11TestDetailsE:0000000000000000 _ZN17ScopedCurrentTestC2ERN8UnitTest11TestResultsEPKNS0_11TestDetailsE
     /tmp/cci89ash.s:146    .text._ZN17ScopedCurrentTestC2ERN8UnitTest11TestResultsEPKNS0_11TestDetailsE:0000000000000000 _ZN17ScopedCurrentTestC1ERN8UnitTest11TestResultsEPKNS0_11TestDetailsE
     /tmp/cci89ash.s:199    .text._ZN17ScopedCurrentTestD2Ev:0000000000000000 _ZN17ScopedCurrentTestD2Ev
     /tmp/cci89ash.s:199    .text._ZN17ScopedCurrentTestD2Ev:0000000000000000 _ZN17ScopedCurrentTestD1Ev
     /tmp/cci89ash.s:241    .text:0000000000000000 _ZN12_GLOBAL__N_122TestValidCheckSucceedsC2Ev
     /tmp/cci89ash.s:8528   .rodata:00000000000009e0 _ZTVN12_GLOBAL__N_122TestValidCheckSucceedsE
     /tmp/cci89ash.s:273    .bss:0000000000000000 _ZN12_GLOBAL__N_130testValidCheckSucceedsInstanceE
     /tmp/cci89ash.s:273    .bss:0000000000000038 _ZN12_GLOBAL__N_123adderValidCheckSucceedsE
     /tmp/cci89ash.s:285    .text:000000000000003e _ZNK12_GLOBAL__N_122TestValidCheckSucceeds7RunImplEv
     /tmp/cci89ash.s:4282   .text._ZN8UnitTest5CheckIbEEbT_:0000000000000000 _ZN8UnitTest5CheckIbEEbT_
     /tmp/cci89ash.s:423    .text:0000000000000122 _ZN12_GLOBAL__N_126TestCheckWorksWithPointersC2Ev
     /tmp/cci89ash.s:8454   .rodata:00000000000009a0 _ZTVN12_GLOBAL__N_126TestCheckWorksWithPointersE
     /tmp/cci89ash.s:454    .bss:0000000000000040 _ZN12_GLOBAL__N_134testCheckWorksWithPointersInstanceE
     /tmp/cci89ash.s:454    .bss:0000000000000078 _ZN12_GLOBAL__N_127adderCheckWorksWithPointersE
     /tmp/cci89ash.s:471    .text:0000000000000160 _ZNK12_GLOBAL__N_126TestCheckWorksWithPointers7RunImplEv
     /tmp/cci89ash.s:4306   .text._ZN8UnitTest5CheckIPvEEbT_:0000000000000000 _ZN8UnitTest5CheckIPvEEbT_
     /tmp/cci89ash.s:688    .text:00000000000002fa _ZN12_GLOBAL__N_127TestValidCheckEqualSucceedsC2Ev
     /tmp/cci89ash.s:8380   .rodata:0000000000000960 _ZTVN12_GLOBAL__N_127TestValidCheckEqualSucceedsE
     /tmp/cci89ash.s:719    .bss:0000000000000080 _ZN12_GLOBAL__N_135testValidCheckEqualSucceedsInstanceE
     /tmp/cci89ash.s:719    .bss:00000000000000b8 _ZN12_GLOBAL__N_128adderValidCheckEqualSucceedsE
     /tmp/cci89ash.s:729    .text:0000000000000338 _ZNK12_GLOBAL__N_127TestValidCheckEqualSucceeds7RunImplEv
     /tmp/cci89ash.s:4334   .text._ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE:0000000000000000 _ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
     /tmp/cci89ash.s:865    .text:0000000000000410 _ZN12_GLOBAL__N_131TestCheckEqualWorksWithPointersC2Ev
     /tmp/cci89ash.s:8306   .rodata:0000000000000920 _ZTVN12_GLOBAL__N_131TestCheckEqualWorksWithPointersE
     /tmp/cci89ash.s:896    .bss:00000000000000c0 _ZN12_GLOBAL__N_139testCheckEqualWorksWithPointersInstanceE
     /tmp/cci89ash.s:896    .bss:00000000000000f8 _ZN12_GLOBAL__N_132adderCheckEqualWorksWithPointersE
     /tmp/cci89ash.s:906    .text:000000000000044e _ZNK12_GLOBAL__N_131TestCheckEqualWorksWithPointers7RunImplEv
     /tmp/cci89ash.s:4479   .text._ZN8UnitTest10CheckEqualIPvS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE:0000000000000000 _ZN8UnitTest10CheckEqualIPvS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
     /tmp/cci89ash.s:1041   .text:0000000000000528 _ZN12_GLOBAL__N_127TestValidCheckCloseSucceedsC2Ev
     /tmp/cci89ash.s:8232   .rodata:00000000000008e0 _ZTVN12_GLOBAL__N_127TestValidCheckCloseSucceedsE
     /tmp/cci89ash.s:1072   .bss:0000000000000100 _ZN12_GLOBAL__N_135testValidCheckCloseSucceedsInstanceE
     /tmp/cci89ash.s:1072   .bss:0000000000000138 _ZN12_GLOBAL__N_128adderValidCheckCloseSucceedsE
     /tmp/cci89ash.s:1085   .text:0000000000000566 _ZNK12_GLOBAL__N_127TestValidCheckCloseSucceeds7RunImplEv
     /tmp/cci89ash.s:4627   .text._ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE:0000000000000000 _ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE
     /tmp/cci89ash.s:1298   .text:000000000000070c _ZN12_GLOBAL__N_122TestArrayCloseSucceedsC2Ev
     /tmp/cci89ash.s:8158   .rodata:00000000000008a0 _ZTVN12_GLOBAL__N_122TestArrayCloseSucceedsE
     /tmp/cci89ash.s:1329   .bss:0000000000000140 _ZN12_GLOBAL__N_130testArrayCloseSucceedsInstanceE
     /tmp/cci89ash.s:1329   .bss:0000000000000178 _ZN12_GLOBAL__N_123adderArrayCloseSucceedsE
     /tmp/cci89ash.s:1339   .text:000000000000074a _ZNK12_GLOBAL__N_122TestArrayCloseSucceeds7RunImplEv
     /tmp/cci89ash.s:4803   .text._ZN8UnitTest15CheckArrayCloseIA3_fS1_fEEvRNS_11TestResultsERKT_RKT0_iRKT1_RKNS_11TestDetailsE:0000000000000000 _ZN8UnitTest15CheckArrayCloseIA3_fS1_fEEvRNS_11TestResultsERKT_RKT0_iRKT1_RKNS_11TestDetailsE
     /tmp/cci89ash.s:1492   .text:0000000000000862 _ZN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsC2Ev
     /tmp/cci89ash.s:8084   .rodata:0000000000000860 _ZTVN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsE
     /tmp/cci89ash.s:1523   .bss:0000000000000180 _ZN12_GLOBAL__N_143testCheckArrayCloseWorksWithVectorsInstanceE
     /tmp/cci89ash.s:1523   .bss:00000000000001b8 _ZN12_GLOBAL__N_136adderCheckArrayCloseWorksWithVectorsE
     /tmp/cci89ash.s:1533   .text:00000000000008a0 _ZNK12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectors7RunImplEv
     /tmp/cci89ash.s:5011   .text._ZNSaIfEC2Ev:0000000000000000 _ZNSaIfEC1Ev
     /tmp/cci89ash.s:5070   .text._ZNSt6vectorIfSaIfEEC2EmRKfRKS0_:0000000000000000 _ZNSt6vectorIfSaIfEEC1EmRKfRKS0_
     /tmp/cci89ash.s:5041   .text._ZNSaIfED2Ev:0000000000000000 _ZNSaIfED1Ev
     /tmp/cci89ash.s:5245   .text._ZNSt6vectorIfSaIfEEixEm:0000000000000000 _ZNSt6vectorIfSaIfEEixEm
     /tmp/cci89ash.s:5272   .text._ZNKSt6vectorIfSaIfEE4sizeEv:0000000000000000 _ZNKSt6vectorIfSaIfEE4sizeEv
     /tmp/cci89ash.s:5300   .text._ZN8UnitTest15CheckArrayCloseISt6vectorIfSaIfEES3_fEEvRNS_11TestResultsERKT_RKT0_iRKT1_RKNS_11TestDetailsE:0000000000000000 _ZN8UnitTest15CheckArrayCloseISt6vectorIfSaIfEES3_fEEvRNS_11TestResultsERKT_RKT0_iRKT1_RKNS_11TestDetailsE
     /tmp/cci89ash.s:5160   .text._ZNSt6vectorIfSaIfEED2Ev:0000000000000000 _ZNSt6vectorIfSaIfEED1Ev
     /tmp/cci89ash.s:1750   .text:0000000000000a44 _ZN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionC2Ev
     /tmp/cci89ash.s:8010   .rodata:0000000000000820 _ZTVN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionE
     /tmp/cci89ash.s:1781   .bss:00000000000001c0 _ZN12_GLOBAL__N_153testCheckThrowMacroSucceedsOnCorrectExceptionInstanceE
     /tmp/cci89ash.s:1781   .bss:00000000000001f8 _ZN12_GLOBAL__N_146adderCheckThrowMacroSucceedsOnCorrectExceptionE
     /tmp/cci89ash.s:1791   .text:0000000000000a82 _ZNK12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectException7RunImplEv
     /tmp/cci89ash.s:9115   .rodata:0000000000000b10 _ZTIZNK12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectException7RunImplEvE13TestException
     /tmp/cci89ash.s:1918   .text:0000000000000b44 _ZN12_GLOBAL__N_123TestCheckAssertSucceedsC2Ev
     /tmp/cci89ash.s:7936   .rodata:00000000000007e0 _ZTVN12_GLOBAL__N_123TestCheckAssertSucceedsE
     /tmp/cci89ash.s:1949   .bss:0000000000000200 _ZN12_GLOBAL__N_131testCheckAssertSucceedsInstanceE
     /tmp/cci89ash.s:1949   .bss:0000000000000238 _ZN12_GLOBAL__N_124adderCheckAssertSucceedsE
     /tmp/cci89ash.s:1963   .text:0000000000000b82 _ZNK12_GLOBAL__N_123TestCheckAssertSucceeds7RunImplEv
     /tmp/cci89ash.s:2089   .text:0000000000000c3c _ZN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionC2Ev
     /tmp/cci89ash.s:7788   .rodata:0000000000000760 _ZTVN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionE
     /tmp/cci89ash.s:2120   .bss:0000000000000240 _ZN12_GLOBAL__N_150testCheckThrowMacroFailsOnMissingExceptionInstanceE
     /tmp/cci89ash.s:2120   .bss:0000000000000278 _ZN12_GLOBAL__N_143adderCheckThrowMacroFailsOnMissingExceptionE
     /tmp/cci89ash.s:2131   .text:0000000000000c7a _ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestC2Ev
     /tmp/cci89ash.s:7862   .rodata:00000000000007a0 _ZTVZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvE11NoThrowTest
     /tmp/cci89ash.s:2162   .text:0000000000000cb4 _ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvENK11NoThrowTest9DontThrowEv
     /tmp/cci89ash.s:2186   .text:0000000000000cbe _ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvENK11NoThrowTest7RunImplEv
     /tmp/cci89ash.s:2249   .text:0000000000000d42 _ZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEv
     /tmp/cci89ash.s:7871   .text:0000000000002362 _ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestD2Ev
     /tmp/cci89ash.s:2473   .text:0000000000000eb8 _ZN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionC2Ev
     /tmp/cci89ash.s:7640   .rodata:00000000000006e0 _ZTVN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionE
     /tmp/cci89ash.s:2504   .bss:0000000000000280 _ZN12_GLOBAL__N_148testCheckThrowMacroFailsOnWrongExceptionInstanceE
     /tmp/cci89ash.s:2504   .bss:00000000000002b8 _ZN12_GLOBAL__N_141adderCheckThrowMacroFailsOnWrongExceptionE
     /tmp/cci89ash.s:2513   .text:0000000000000ef6 _ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestC2Ev
     /tmp/cci89ash.s:7714   .rodata:0000000000000720 _ZTVZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvE14WrongThrowTest
     /tmp/cci89ash.s:2548   .text:0000000000000f30 _ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvENK14WrongThrowTest7RunImplEv
     /tmp/cci89ash.s:2672   .text:0000000000000ffa _ZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEv
     /tmp/cci89ash.s:7723   .text:00000000000022a2 _ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestD2Ev
     /tmp/cci89ash.s:2891   .text:0000000000001170 _ZN12_GLOBAL__N_113SimpleFixtureC2Ev
     /tmp/cci89ash.s:2940   .bss:00000000000002bc _ZN12_GLOBAL__N_113SimpleFixture13instanceCountE
     /tmp/cci89ash.s:2916   .text:000000000000118a _ZN12_GLOBAL__N_113SimpleFixtureD2Ev
     /tmp/cci89ash.s:2943   .text:00000000000011a4 _ZN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelperC2ERKN8UnitTest11TestDetailsE
     /tmp/cci89ash.s:2976   .text:00000000000011ce _ZN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledC2Ev
     /tmp/cci89ash.s:7566   .rodata:00000000000006a0 _ZTVN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledE
     /tmp/cci89ash.s:3007   .bss:00000000000002c0 _ZN12_GLOBAL__N_151testSimpleFixtureDefaultFixtureCtorIsCalledInstanceE
     /tmp/cci89ash.s:3007   .bss:00000000000002f8 _ZN12_GLOBAL__N_144adderSimpleFixtureDefaultFixtureCtorIsCalledE
     /tmp/cci89ash.s:3012   .text:000000000000120c _ZN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelperD2Ev
     /tmp/cci89ash.s:3047   .text:0000000000001226 _ZNK12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalled7RunImplEv
     /tmp/cci89ash.s:5517   .text:0000000000001ba6 _ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/cci89ash.s:8618   .text._ZN8UnitTest15MemoryOutStreamD1Ev:0000000000000000 _ZN8UnitTest15MemoryOutStreamD1Ev
     /tmp/cci89ash.s:3391   .text:000000000000152a _ZN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelper7RunImplEv
     /tmp/cci89ash.s:3525   .text:0000000000001614 _ZN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelperC2ERKN8UnitTest11TestDetailsE
     /tmp/cci89ash.s:3558   .text:000000000000163e _ZN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeC2Ev
     /tmp/cci89ash.s:7492   .rodata:0000000000000660 _ZTVN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeE
     /tmp/cci89ash.s:3589   .bss:0000000000000300 _ZN12_GLOBAL__N_151testSimpleFixtureOnlyOneFixtureAliveAtATimeInstanceE
     /tmp/cci89ash.s:3589   .bss:0000000000000338 _ZN12_GLOBAL__N_144adderSimpleFixtureOnlyOneFixtureAliveAtATimeE
     /tmp/cci89ash.s:3594   .text:000000000000167c _ZN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelperD2Ev
     /tmp/cci89ash.s:3619   .text:0000000000001696 _ZNK12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATime7RunImplEv
     /tmp/cci89ash.s:5876   .text:0000000000001e64 _ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/cci89ash.s:3960   .text:000000000000199a _ZN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelper7RunImplEv
     /tmp/cci89ash.s:4085   .text:0000000000001a6f _ZN12_GLOBAL__N_19CheckBoolEb
     /tmp/cci89ash.s:4222   .text:0000000000001b50 _ZN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionC2Ev
     /tmp/cci89ash.s:7418   .rodata:0000000000000620 _ZTVN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionE
     /tmp/cci89ash.s:4253   .bss:0000000000000340 _ZN12_GLOBAL__N_145testCanCallCHECKOutsideOfTestFunctionInstanceE
     /tmp/cci89ash.s:4253   .bss:0000000000000378 _ZN12_GLOBAL__N_138adderCanCallCHECKOutsideOfTestFunctionE
     /tmp/cci89ash.s:4258   .text:0000000000001b8e _ZNK12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunction7RunImplEv
     /tmp/cci89ash.s:6236   .text._ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_:0000000000000000 _ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_
     /tmp/cci89ash.s:6285   .text._ZN8UnitTest13ArrayAreCloseIA3_fS1_fEEbRKT_RKT0_iRKT1_:0000000000000000 _ZN8UnitTest13ArrayAreCloseIA3_fS1_fEEbRKT_RKT0_iRKT1_
     /tmp/cci89ash.s:5011   .text._ZNSaIfEC2Ev:0000000000000000 _ZNSaIfEC2Ev
     /tmp/cci89ash.s:6350   .text._ZN9__gnu_cxx13new_allocatorIfEC2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIfEC2Ev
     /tmp/cci89ash.s:5041   .text._ZNSaIfED2Ev:0000000000000000 _ZNSaIfED2Ev
     /tmp/cci89ash.s:6374   .text._ZN9__gnu_cxx13new_allocatorIfED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIfED2Ev
     /tmp/cci89ash.s:5070   .text._ZNSt6vectorIfSaIfEEC2EmRKfRKS0_:0000000000000000 _ZNSt6vectorIfSaIfEEC2EmRKfRKS0_
     /tmp/cci89ash.s:6426   .text._ZNSt12_Vector_baseIfSaIfEEC2EmRKS0_:0000000000000000 _ZNSt12_Vector_baseIfSaIfEEC2EmRKS0_
     /tmp/cci89ash.s:6589   .text._ZNSt6vectorIfSaIfEE18_M_fill_initializeEmRKf:0000000000000000 _ZNSt6vectorIfSaIfEE18_M_fill_initializeEmRKf
     /tmp/cci89ash.s:6506   .text._ZNSt12_Vector_baseIfSaIfEED2Ev:0000000000000000 _ZNSt12_Vector_baseIfSaIfEED2Ev
     /tmp/cci89ash.s:5160   .text._ZNSt6vectorIfSaIfEED2Ev:0000000000000000 _ZNSt6vectorIfSaIfEED2Ev
     /tmp/cci89ash.s:6630   .text._ZNSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv:0000000000000000 _ZNSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv
     /tmp/cci89ash.s:6651   .text._ZSt8_DestroyIPffEvT_S1_RSaIT0_E:0000000000000000 _ZSt8_DestroyIPffEvT_S1_RSaIT0_E
     /tmp/cci89ash.s:6681   .text._ZN8UnitTest13ArrayAreCloseISt6vectorIfSaIfEES3_fEEbRKT_RKT0_iRKT1_:0000000000000000 _ZN8UnitTest13ArrayAreCloseISt6vectorIfSaIfEES3_fEEbRKT_RKT0_iRKT1_
     /tmp/cci89ash.s:6755   .text._ZNKSt6vectorIfSaIfEEixEm:0000000000000000 _ZNKSt6vectorIfSaIfEEixEm
     /tmp/cci89ash.s:6350   .text._ZN9__gnu_cxx13new_allocatorIfEC2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIfEC1Ev
     /tmp/cci89ash.s:6374   .text._ZN9__gnu_cxx13new_allocatorIfED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIfED1Ev
     /tmp/cci89ash.s:6397   .text._ZNSt12_Vector_baseIfSaIfEE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseIfSaIfEE12_Vector_implD2Ev
     /tmp/cci89ash.s:6397   .text._ZNSt12_Vector_baseIfSaIfEE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseIfSaIfEE12_Vector_implD1Ev
     /tmp/cci89ash.s:6782   .text._ZNSt12_Vector_baseIfSaIfEE12_Vector_implC2ERKS0_:0000000000000000 _ZNSt12_Vector_baseIfSaIfEE12_Vector_implC1ERKS0_
     /tmp/cci89ash.s:6821   .text._ZNSt12_Vector_baseIfSaIfEE17_M_create_storageEm:0000000000000000 _ZNSt12_Vector_baseIfSaIfEE17_M_create_storageEm
     /tmp/cci89ash.s:6426   .text._ZNSt12_Vector_baseIfSaIfEEC2EmRKS0_:0000000000000000 _ZNSt12_Vector_baseIfSaIfEEC1EmRKS0_
     /tmp/cci89ash.s:6866   .text._ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm:0000000000000000 _ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm
     /tmp/cci89ash.s:6506   .text._ZNSt12_Vector_baseIfSaIfEED2Ev:0000000000000000 _ZNSt12_Vector_baseIfSaIfEED1Ev
     /tmp/cci89ash.s:6902   .text._ZSt24__uninitialized_fill_n_aIPfmffEvT_T0_RKT1_RSaIT2_E:0000000000000000 _ZSt24__uninitialized_fill_n_aIPfmffEvT_T0_RKT1_RSaIT2_E
     /tmp/cci89ash.s:6933   .text._ZSt8_DestroyIPfEvT_S1_:0000000000000000 _ZSt8_DestroyIPfEvT_S1_
     /tmp/cci89ash.s:6782   .text._ZNSt12_Vector_baseIfSaIfEE12_Vector_implC2ERKS0_:0000000000000000 _ZNSt12_Vector_baseIfSaIfEE12_Vector_implC2ERKS0_
     /tmp/cci89ash.s:6964   .text._ZNSaIfEC2ERKS_:0000000000000000 _ZNSaIfEC2ERKS_
     /tmp/cci89ash.s:6996   .text._ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm:0000000000000000 _ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm
     /tmp/cci89ash.s:7034   .text._ZN9__gnu_cxx14__alloc_traitsISaIfEE10deallocateERS1_Pfm:0000000000000000 _ZN9__gnu_cxx14__alloc_traitsISaIfEE10deallocateERS1_Pfm
     /tmp/cci89ash.s:7064   .text._ZSt20uninitialized_fill_nIPfmfEvT_T0_RKT1_:0000000000000000 _ZSt20uninitialized_fill_nIPfmfEvT_T0_RKT1_
     /tmp/cci89ash.s:7098   .text._ZNSt12_Destroy_auxILb1EE9__destroyIPfEEvT_S3_:0000000000000000 _ZNSt12_Destroy_auxILb1EE9__destroyIPfEEvT_S3_
     /tmp/cci89ash.s:7120   .text._ZN9__gnu_cxx13new_allocatorIfEC2ERKS1_:0000000000000000 _ZN9__gnu_cxx13new_allocatorIfEC2ERKS1_
     /tmp/cci89ash.s:6964   .text._ZNSaIfEC2ERKS_:0000000000000000 _ZNSaIfEC1ERKS_
     /tmp/cci89ash.s:7143   .text._ZN9__gnu_cxx14__alloc_traitsISaIfEE8allocateERS1_m:0000000000000000 _ZN9__gnu_cxx14__alloc_traitsISaIfEE8allocateERS1_m
     /tmp/cci89ash.s:7172   .text._ZN9__gnu_cxx13new_allocatorIfE10deallocateEPfm:0000000000000000 _ZN9__gnu_cxx13new_allocatorIfE10deallocateEPfm
     /tmp/cci89ash.s:7198   .text._ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPfmfEEvT_T0_RKT1_:0000000000000000 _ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPfmfEEvT_T0_RKT1_
     /tmp/cci89ash.s:7120   .text._ZN9__gnu_cxx13new_allocatorIfEC2ERKS1_:0000000000000000 _ZN9__gnu_cxx13new_allocatorIfEC1ERKS1_
     /tmp/cci89ash.s:7228   .text._ZN9__gnu_cxx13new_allocatorIfE8allocateEmPKv:0000000000000000 _ZN9__gnu_cxx13new_allocatorIfE8allocateEmPKv
     /tmp/cci89ash.s:7267   .text._ZSt6fill_nIPfmfET_S1_T0_RKT1_:0000000000000000 _ZSt6fill_nIPfmfET_S1_T0_RKT1_
     /tmp/cci89ash.s:7302   .text._ZNK9__gnu_cxx13new_allocatorIfE8max_sizeEv:0000000000000000 _ZNK9__gnu_cxx13new_allocatorIfE8max_sizeEv
     /tmp/cci89ash.s:7323   .text._ZSt12__niter_baseIPfENSt11_Niter_baseIT_E13iterator_typeES2_:0000000000000000 _ZSt12__niter_baseIPfENSt11_Niter_baseIT_E13iterator_typeES2_
     /tmp/cci89ash.s:7347   .text._ZSt10__fill_n_aIPfmfEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT1_E7__valueET_E6__typeES6_T0_RKS4_:0000000000000000 _ZSt10__fill_n_aIPfmfEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT1_E7__valueET_E6__typeES6_T0_RKS4_
     /tmp/cci89ash.s:7395   .text._ZNSt10_Iter_baseIPfLb0EE7_S_baseES0_:0000000000000000 _ZNSt10_Iter_baseIPfLb0EE7_S_baseES0_
     /tmp/cci89ash.s:9170   .rodata:0000000000000c00 _ZTIN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionE
     /tmp/cci89ash.s:7427   .text:0000000000002122 _ZN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionD1Ev
     /tmp/cci89ash.s:7464   .text:000000000000215c _ZN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionD0Ev
     /tmp/cci89ash.s:7427   .text:0000000000002122 _ZN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionD2Ev
     /tmp/cci89ash.s:9163   .rodata:0000000000000be0 _ZTIN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeE
     /tmp/cci89ash.s:7501   .text:0000000000002182 _ZN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeD1Ev
     /tmp/cci89ash.s:7538   .text:00000000000021bc _ZN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeD0Ev
     /tmp/cci89ash.s:7501   .text:0000000000002182 _ZN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeD2Ev
     /tmp/cci89ash.s:9156   .rodata:0000000000000bc0 _ZTIN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledE
     /tmp/cci89ash.s:7575   .text:00000000000021e2 _ZN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledD1Ev
     /tmp/cci89ash.s:7612   .text:000000000000221c _ZN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledD0Ev
     /tmp/cci89ash.s:7575   .text:00000000000021e2 _ZN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledD2Ev
     /tmp/cci89ash.s:9142   .rodata:0000000000000b80 _ZTIN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionE
     /tmp/cci89ash.s:7649   .text:0000000000002242 _ZN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionD1Ev
     /tmp/cci89ash.s:7686   .text:000000000000227c _ZN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionD0Ev
     /tmp/cci89ash.s:7649   .text:0000000000002242 _ZN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionD2Ev
     /tmp/cci89ash.s:9149   .rodata:0000000000000ba0 _ZTIZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvE14WrongThrowTest
     /tmp/cci89ash.s:7723   .text:00000000000022a2 _ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestD1Ev
     /tmp/cci89ash.s:7760   .text:00000000000022dc _ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestD0Ev
     /tmp/cci89ash.s:9128   .rodata:0000000000000b40 _ZTIN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionE
     /tmp/cci89ash.s:7797   .text:0000000000002302 _ZN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionD1Ev
     /tmp/cci89ash.s:7834   .text:000000000000233c _ZN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionD0Ev
     /tmp/cci89ash.s:7797   .text:0000000000002302 _ZN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionD2Ev
     /tmp/cci89ash.s:9135   .rodata:0000000000000b60 _ZTIZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvE11NoThrowTest
     /tmp/cci89ash.s:7871   .text:0000000000002362 _ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestD1Ev
     /tmp/cci89ash.s:7908   .text:000000000000239c _ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestD0Ev
     /tmp/cci89ash.s:9121   .rodata:0000000000000b20 _ZTIN12_GLOBAL__N_123TestCheckAssertSucceedsE
     /tmp/cci89ash.s:7945   .text:00000000000023c2 _ZN12_GLOBAL__N_123TestCheckAssertSucceedsD1Ev
     /tmp/cci89ash.s:7982   .text:00000000000023fc _ZN12_GLOBAL__N_123TestCheckAssertSucceedsD0Ev
     /tmp/cci89ash.s:7945   .text:00000000000023c2 _ZN12_GLOBAL__N_123TestCheckAssertSucceedsD2Ev
     /tmp/cci89ash.s:9108   .rodata:0000000000000af0 _ZTIN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionE
     /tmp/cci89ash.s:8019   .text:0000000000002422 _ZN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionD1Ev
     /tmp/cci89ash.s:8056   .text:000000000000245c _ZN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionD0Ev
     /tmp/cci89ash.s:8019   .text:0000000000002422 _ZN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionD2Ev
     /tmp/cci89ash.s:9101   .rodata:0000000000000ad0 _ZTIN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsE
     /tmp/cci89ash.s:8093   .text:0000000000002482 _ZN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsD1Ev
     /tmp/cci89ash.s:8130   .text:00000000000024bc _ZN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsD0Ev
     /tmp/cci89ash.s:8093   .text:0000000000002482 _ZN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsD2Ev
     /tmp/cci89ash.s:9094   .rodata:0000000000000ab0 _ZTIN12_GLOBAL__N_122TestArrayCloseSucceedsE
     /tmp/cci89ash.s:8167   .text:00000000000024e2 _ZN12_GLOBAL__N_122TestArrayCloseSucceedsD1Ev
     /tmp/cci89ash.s:8204   .text:000000000000251c _ZN12_GLOBAL__N_122TestArrayCloseSucceedsD0Ev
     /tmp/cci89ash.s:8167   .text:00000000000024e2 _ZN12_GLOBAL__N_122TestArrayCloseSucceedsD2Ev
     /tmp/cci89ash.s:9087   .rodata:0000000000000a90 _ZTIN12_GLOBAL__N_127TestValidCheckCloseSucceedsE
     /tmp/cci89ash.s:8241   .text:0000000000002542 _ZN12_GLOBAL__N_127TestValidCheckCloseSucceedsD1Ev
     /tmp/cci89ash.s:8278   .text:000000000000257c _ZN12_GLOBAL__N_127TestValidCheckCloseSucceedsD0Ev
     /tmp/cci89ash.s:8241   .text:0000000000002542 _ZN12_GLOBAL__N_127TestValidCheckCloseSucceedsD2Ev
     /tmp/cci89ash.s:9080   .rodata:0000000000000a70 _ZTIN12_GLOBAL__N_131TestCheckEqualWorksWithPointersE
     /tmp/cci89ash.s:8315   .text:00000000000025a2 _ZN12_GLOBAL__N_131TestCheckEqualWorksWithPointersD1Ev
     /tmp/cci89ash.s:8352   .text:00000000000025dc _ZN12_GLOBAL__N_131TestCheckEqualWorksWithPointersD0Ev
     /tmp/cci89ash.s:8315   .text:00000000000025a2 _ZN12_GLOBAL__N_131TestCheckEqualWorksWithPointersD2Ev
     /tmp/cci89ash.s:9073   .rodata:0000000000000a50 _ZTIN12_GLOBAL__N_127TestValidCheckEqualSucceedsE
     /tmp/cci89ash.s:8389   .text:0000000000002602 _ZN12_GLOBAL__N_127TestValidCheckEqualSucceedsD1Ev
     /tmp/cci89ash.s:8426   .text:000000000000263c _ZN12_GLOBAL__N_127TestValidCheckEqualSucceedsD0Ev
     /tmp/cci89ash.s:8389   .text:0000000000002602 _ZN12_GLOBAL__N_127TestValidCheckEqualSucceedsD2Ev
     /tmp/cci89ash.s:9066   .rodata:0000000000000a30 _ZTIN12_GLOBAL__N_126TestCheckWorksWithPointersE
     /tmp/cci89ash.s:8463   .text:0000000000002662 _ZN12_GLOBAL__N_126TestCheckWorksWithPointersD1Ev
     /tmp/cci89ash.s:8500   .text:000000000000269c _ZN12_GLOBAL__N_126TestCheckWorksWithPointersD0Ev
     /tmp/cci89ash.s:8463   .text:0000000000002662 _ZN12_GLOBAL__N_126TestCheckWorksWithPointersD2Ev
     /tmp/cci89ash.s:9059   .rodata:0000000000000a10 _ZTIN12_GLOBAL__N_122TestValidCheckSucceedsE
     /tmp/cci89ash.s:8537   .text:00000000000026c2 _ZN12_GLOBAL__N_122TestValidCheckSucceedsD1Ev
     /tmp/cci89ash.s:8574   .text:00000000000026fc _ZN12_GLOBAL__N_122TestValidCheckSucceedsD0Ev
     /tmp/cci89ash.s:8537   .text:00000000000026c2 _ZN12_GLOBAL__N_122TestValidCheckSucceedsD2Ev
     /tmp/cci89ash.s:8855   .rodata._ZTIN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTIN8UnitTest15MemoryOutStreamE
     /tmp/cci89ash.s:8760   .text._ZN8UnitTest15MemoryOutStreamD0Ev:0000000000000000 _ZN8UnitTest15MemoryOutStreamD0Ev
     /tmp/cci89ash.s:8746   .text._ZN8UnitTest15MemoryOutStreamD1Ev:00000000000000c8 _ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev
     /tmp/cci89ash.s:8787   .text._ZN8UnitTest15MemoryOutStreamD0Ev:0000000000000026 _ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev
     /tmp/cci89ash.s:8815   .rodata._ZTCN8UnitTest15MemoryOutStreamE0_St19basic_ostringstreamIcSt11char_traitsIcESaIcEE:0000000000000000 _ZTCN8UnitTest15MemoryOutStreamE0_St19basic_ostringstreamIcSt11char_traitsIcESaIcEE
     /tmp/cci89ash.s:8832   .rodata._ZTCN8UnitTest15MemoryOutStreamE0_So:0000000000000000 _ZTCN8UnitTest15MemoryOutStreamE0_So
     /tmp/cci89ash.s:8848   .rodata._ZTSN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTSN8UnitTest15MemoryOutStreamE
     /tmp/cci89ash.s:8861   .text:0000000000002722 _Z41__static_initialization_and_destruction_0ii
     /tmp/cci89ash.s:9257   .rodata:0000000000001120 _ZTSN12_GLOBAL__N_122TestValidCheckSucceedsE
     /tmp/cci89ash.s:9252   .rodata:00000000000010e0 _ZTSN12_GLOBAL__N_126TestCheckWorksWithPointersE
     /tmp/cci89ash.s:9247   .rodata:00000000000010a0 _ZTSN12_GLOBAL__N_127TestValidCheckEqualSucceedsE
     /tmp/cci89ash.s:9242   .rodata:0000000000001060 _ZTSN12_GLOBAL__N_131TestCheckEqualWorksWithPointersE
     /tmp/cci89ash.s:9237   .rodata:0000000000001020 _ZTSN12_GLOBAL__N_127TestValidCheckCloseSucceedsE
     /tmp/cci89ash.s:9232   .rodata:0000000000000fe0 _ZTSN12_GLOBAL__N_122TestArrayCloseSucceedsE
     /tmp/cci89ash.s:9227   .rodata:0000000000000fa0 _ZTSN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsE
     /tmp/cci89ash.s:9222   .rodata:0000000000000f40 _ZTSN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionE
     /tmp/cci89ash.s:9217   .rodata:0000000000000ec0 _ZTSZNK12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectException7RunImplEvE13TestException
     /tmp/cci89ash.s:9212   .rodata:0000000000000e60 _ZTSN12_GLOBAL__N_123TestCheckAssertSucceedsE
     /tmp/cci89ash.s:9207   .rodata:0000000000000e20 _ZTSN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionE
     /tmp/cci89ash.s:9202   .rodata:0000000000000dc0 _ZTSZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvE11NoThrowTest
     /tmp/cci89ash.s:9197   .rodata:0000000000000d60 _ZTSN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionE
     /tmp/cci89ash.s:9192   .rodata:0000000000000d00 _ZTSZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvE14WrongThrowTest
     /tmp/cci89ash.s:9187   .rodata:0000000000000ca0 _ZTSN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledE
     /tmp/cci89ash.s:9182   .rodata:0000000000000c60 _ZTSN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeE
     /tmp/cci89ash.s:9177   .rodata:0000000000000c20 _ZTSN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionE
     /tmp/cci89ash.s:9261   .text:0000000000002a2f _GLOBAL__sub_I_TestUnitTest__.cpp
     /tmp/cci89ash.s:9287   .rodata:0000000000001150 _ZZL18__gthread_active_pvE20__gthread_active_ptr
                           .group:0000000000000000 _ZN17ScopedCurrentTestC5ERN8UnitTest11TestResultsEPKNS0_11TestDetailsE
                           .group:0000000000000000 _ZN17ScopedCurrentTestD5Ev
                           .group:0000000000000000 _ZNSaIfEC5Ev
                           .group:0000000000000000 _ZNSaIfED5Ev
                           .group:0000000000000000 _ZNSt6vectorIfSaIfEEC5EmRKfRKS0_
                           .group:0000000000000000 _ZNSt6vectorIfSaIfEED5Ev
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorIfEC5Ev
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorIfED5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIfSaIfEE12_Vector_implD5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIfSaIfEEC5EmRKS0_
                           .group:0000000000000000 _ZNSt12_Vector_baseIfSaIfEED5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIfSaIfEE12_Vector_implC5ERKS0_
                           .group:0000000000000000 _ZNSaIfEC5ERKS_
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorIfEC5ERKS1_

UNDEFINED SYMBOLS
__gxx_personality_v0
_ZNSt9basic_iosIcSt11char_traitsIcEEC2Ev
_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEEC2ESt13_Ios_Openmode
_ZNSsC1Ev
_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev
_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev
_Unwind_Resume
_ZN8UnitTest11CurrentTest7ResultsEv
_ZN8UnitTest11CurrentTest7DetailsEv
_ZN8UnitTest4TestC2EPKcS2_S2_i
_ZN8UnitTest11TestDetailsC1ERKS0_i
_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
__cxa_end_catch
__cxa_begin_catch
__stack_chk_fail
__cxa_allocate_exception
__cxa_throw
_ZN8UnitTest12ReportAssertEPKcS1_i
_ZTIN8UnitTest15AssertExceptionE
_ZN8UnitTest11TestResultsC1EPNS_12TestReporterE
_ZN8UnitTest4Test3RunEv
_ZNK8UnitTest11TestResults15GetFailureCountEv
_ZTIPKc
_ZTIi
_ZNK8UnitTest15AssertException10LineNumberEv
_ZNK8UnitTest15AssertException8FilenameEv
_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
_ZNK8UnitTest15MemoryOutStream7GetTextEv
_ZTISt9exception
_ZNSolsEi
_ZNSolsEPKv
_ZNSolsEf
_ZN8UnitTest16SignalTranslatorC1Ev
_ZN8UnitTest16SignalTranslator12s_jumpTargetE
__sigsetjmp
_ZN8UnitTest16SignalTranslatorD1Ev
_ZdlPv
_ZSt17__throw_bad_allocv
_Znwm
_ZN8UnitTest4TestD2Ev
_ZNSsD1Ev
_ZTISt19basic_ostringstreamIcSt11char_traitsIcESaIcEE
_ZTISo
_ZTVN10__cxxabiv120__si_class_type_infoE
__dso_handle
__cxa_atexit
_ZN8UnitTest4Test11GetTestListEv
_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
_ZTIN8UnitTest4TestE
_ZTVN10__cxxabiv117__class_type_infoE
__pthread_key_create
