   1              		.file	"TestDeferredTestReporter.cpp"
   2              		.text
   3              	.Ltext0:
   4              		.section	.rodata
   5              	.LC0:
   6 0000 44656661 		.string	"DefaultSuite"
   6      756C7453 
   6      75697465 
   6      00
   7              		.section	.text._ZN13UnitTestSuite12GetSuiteNameEv,"axG",@progbits,_ZN13UnitTestSuite12GetSuiteName
   8              		.weak	_ZN13UnitTestSuite12GetSuiteNameEv
  10              	_ZN13UnitTestSuite12GetSuiteNameEv:
  11              	.LFB0:
  12              		.file 1 "../TestSuite.h"
   1:../TestSuite.h **** #ifndef UNITTEST_TESTSUITE_H
   2:../TestSuite.h **** #define UNITTEST_TESTSUITE_H
   3:../TestSuite.h **** 
   4:../TestSuite.h **** namespace UnitTestSuite {
   5:../TestSuite.h **** 
   6:../TestSuite.h ****     inline char const* GetSuiteName ()
   7:../TestSuite.h ****     {
  13              		.loc 1 7 0
  14              		.cfi_startproc
  15 0000 55       		pushq	%rbp
  16              		.cfi_def_cfa_offset 16
  17              		.cfi_offset 6, -16
  18 0001 4889E5   		movq	%rsp, %rbp
  19              		.cfi_def_cfa_register 6
   8:../TestSuite.h ****         return "DefaultSuite";
  20              		.loc 1 8 0
  21 0004 B8000000 		movl	$.LC0, %eax
  21      00
   9:../TestSuite.h ****     }
  22              		.loc 1 9 0
  23 0009 5D       		popq	%rbp
  24              		.cfi_def_cfa 7, 8
  25 000a C3       		ret
  26              		.cfi_endproc
  27              	.LFE0:
  29              		.section	.text._ZN8UnitTest15MemoryOutStreamC1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamC1Ev
  30              		.align 2
  31              		.weak	_ZN8UnitTest15MemoryOutStreamC1Ev
  33              	_ZN8UnitTest15MemoryOutStreamC1Ev:
  34              	.LFB1053:
  35              		.file 2 "../MemoryOutStream.h"
   1:../MemoryOutStream.h **** #ifndef UNITTEST_MEMORYOUTSTREAM_H
   2:../MemoryOutStream.h **** #define UNITTEST_MEMORYOUTSTREAM_H
   3:../MemoryOutStream.h **** 
   4:../MemoryOutStream.h **** #include "Config.h"
   5:../MemoryOutStream.h **** 
   6:../MemoryOutStream.h **** #ifndef UNITTEST_USE_CUSTOM_STREAMS
   7:../MemoryOutStream.h **** 
   8:../MemoryOutStream.h **** #include <sstream>
   9:../MemoryOutStream.h **** 
  10:../MemoryOutStream.h **** namespace UnitTest
  11:../MemoryOutStream.h **** {
  12:../MemoryOutStream.h **** 
  13:../MemoryOutStream.h **** class MemoryOutStream : public std::ostringstream
  14:../MemoryOutStream.h **** {
  15:../MemoryOutStream.h **** public:
  16:../MemoryOutStream.h ****     MemoryOutStream() {}
  36              		.loc 2 16 0
  37              		.cfi_startproc
  38              		.cfi_personality 0x3,__gxx_personality_v0
  39              		.cfi_lsda 0x3,.LLSDA1053
  40 0000 55       		pushq	%rbp
  41              		.cfi_def_cfa_offset 16
  42              		.cfi_offset 6, -16
  43 0001 4889E5   		movq	%rsp, %rbp
  44              		.cfi_def_cfa_register 6
  45 0004 53       		pushq	%rbx
  46 0005 4883EC18 		subq	$24, %rsp
  47              		.cfi_offset 3, -24
  48 0009 48897DE8 		movq	%rdi, -24(%rbp)
  49              	.LBB2:
  50              		.loc 2 16 0
  51 000d 488B45E8 		movq	-24(%rbp), %rax
  52 0011 4883C060 		addq	$96, %rax
  53 0015 4889C7   		movq	%rax, %rdi
  54              	.LEHB0:
  55 0018 E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEEC2Ev
  55      00
  56              	.LEHE0:
  57 001d B9000000 		movl	$_ZTTN8UnitTest15MemoryOutStreamE+8, %ecx
  57      00
  58 0022 488B45E8 		movq	-24(%rbp), %rax
  59 0026 BA100000 		movl	$16, %edx
  59      00
  60 002b 4889CE   		movq	%rcx, %rsi
  61 002e 4889C7   		movq	%rax, %rdi
  62              	.LEHB1:
  63 0031 E8000000 		call	_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEEC2ESt13_Ios_Openmode
  63      00
  64              	.LEHE1:
  65              		.loc 2 16 0 is_stmt 0 discriminator 9
  66 0036 BA000000 		movl	$_ZTVN8UnitTest15MemoryOutStreamE+24, %edx
  66      00
  67 003b 488B45E8 		movq	-24(%rbp), %rax
  68 003f 488910   		movq	%rdx, (%rax)
  69 0042 BA600000 		movl	$96, %edx
  69      00
  70 0047 488B45E8 		movq	-24(%rbp), %rax
  71 004b 4801D0   		addq	%rdx, %rax
  72 004e BA000000 		movl	$_ZTVN8UnitTest15MemoryOutStreamE+64, %edx
  72      00
  73 0053 488910   		movq	%rdx, (%rax)
  74 0056 488B45E8 		movq	-24(%rbp), %rax
  75 005a 4883C058 		addq	$88, %rax
  76 005e 4889C7   		movq	%rax, %rdi
  77              	.LEHB2:
  78 0061 E8000000 		call	_ZNSsC1Ev
  78      00
  79              	.LEHE2:
  80              	.LBE2:
  81              		.loc 2 16 0
  82 0066 EB37     		jmp	.L8
  83              	.L6:
  84 0068 4889C3   		movq	%rax, %rbx
  85              	.LBB3:
  86 006b BA000000 		movl	$_ZTTN8UnitTest15MemoryOutStreamE+8, %edx
  86      00
  87 0070 488B45E8 		movq	-24(%rbp), %rax
  88 0074 4889D6   		movq	%rdx, %rsi
  89 0077 4889C7   		movq	%rax, %rdi
  90 007a E8000000 		call	_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev
  90      00
  91 007f EB03     		jmp	.L5
  92              	.L7:
  93 0081 4889C3   		movq	%rax, %rbx
  94              	.L5:
  95              		.loc 2 16 0 discriminator 28
  96 0084 488B45E8 		movq	-24(%rbp), %rax
  97 0088 4883C060 		addq	$96, %rax
  98 008c 4889C7   		movq	%rax, %rdi
  99 008f E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev
  99      00
 100 0094 4889D8   		movq	%rbx, %rax
 101 0097 4889C7   		movq	%rax, %rdi
 102              	.LEHB3:
 103 009a E8000000 		call	_Unwind_Resume
 103      00
 104              	.LEHE3:
 105              	.L8:
 106              	.LBE3:
 107              		.loc 2 16 0
 108 009f 4883C418 		addq	$24, %rsp
 109 00a3 5B       		popq	%rbx
 110 00a4 5D       		popq	%rbp
 111              		.cfi_def_cfa 7, 8
 112 00a5 C3       		ret
 113              		.cfi_endproc
 114              	.LFE1053:
 115              		.globl	__gxx_personality_v0
 116              		.section	.gcc_except_table._ZN8UnitTest15MemoryOutStreamC1Ev,"aG",@progbits,_ZN8UnitTest15MemoryOu
 117              	.LLSDA1053:
 118 0000 FF       		.byte	0xff
 119 0001 FF       		.byte	0xff
 120 0002 01       		.byte	0x1
 121 0003 12       		.uleb128 .LLSDACSE1053-.LLSDACSB1053
 122              	.LLSDACSB1053:
 123 0004 18       		.uleb128 .LEHB0-.LFB1053
 124 0005 05       		.uleb128 .LEHE0-.LEHB0
 125 0006 00       		.uleb128 0
 126 0007 00       		.uleb128 0
 127 0008 31       		.uleb128 .LEHB1-.LFB1053
 128 0009 05       		.uleb128 .LEHE1-.LEHB1
 129 000a 8101     		.uleb128 .L7-.LFB1053
 130 000c 00       		.uleb128 0
 131 000d 61       		.uleb128 .LEHB2-.LFB1053
 132 000e 05       		.uleb128 .LEHE2-.LEHB2
 133 000f 68       		.uleb128 .L6-.LFB1053
 134 0010 00       		.uleb128 0
 135 0011 9A01     		.uleb128 .LEHB3-.LFB1053
 136 0013 05       		.uleb128 .LEHE3-.LEHB3
 137 0014 00       		.uleb128 0
 138 0015 00       		.uleb128 0
 139              	.LLSDACSE1053:
 140              		.section	.text._ZN8UnitTest15MemoryOutStreamC1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamC1Ev
 142              		.text
 143              		.align 2
 145              	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporter13ReportSummaryEiiif:
 146              	.LFB1333:
 147              		.file 3 "TestDeferredTestReporter.cpp"
   1:TestDeferredTestReporter.cpp **** #include "../UnitTest++.h"
   2:TestDeferredTestReporter.cpp **** #include "../DeferredTestReporter.h"
   3:TestDeferredTestReporter.cpp **** #include "../Config.h"
   4:TestDeferredTestReporter.cpp **** #include <cstring>
   5:TestDeferredTestReporter.cpp **** 
   6:TestDeferredTestReporter.cpp **** namespace UnitTest
   7:TestDeferredTestReporter.cpp **** {
   8:TestDeferredTestReporter.cpp **** 
   9:TestDeferredTestReporter.cpp **** namespace 
  10:TestDeferredTestReporter.cpp **** {
  11:TestDeferredTestReporter.cpp **** 
  12:TestDeferredTestReporter.cpp **** #ifdef UNITTEST_USE_CUSTOM_STREAMS
  13:TestDeferredTestReporter.cpp **** 	MemoryOutStream& operator <<(MemoryOutStream& lhs, const std::string& rhs)
  14:TestDeferredTestReporter.cpp **** 	{
  15:TestDeferredTestReporter.cpp **** 		lhs << rhs.c_str();
  16:TestDeferredTestReporter.cpp **** 		return lhs;
  17:TestDeferredTestReporter.cpp **** 	}
  18:TestDeferredTestReporter.cpp **** #endif
  19:TestDeferredTestReporter.cpp **** 
  20:TestDeferredTestReporter.cpp **** struct MockDeferredTestReporter : public DeferredTestReporter
  21:TestDeferredTestReporter.cpp **** {
  22:TestDeferredTestReporter.cpp ****     virtual void ReportSummary(int, int, int, float) 
 148              		.loc 3 22 0 is_stmt 1
 149              		.cfi_startproc
 150 0000 55       		pushq	%rbp
 151              		.cfi_def_cfa_offset 16
 152              		.cfi_offset 6, -16
 153 0001 4889E5   		movq	%rsp, %rbp
 154              		.cfi_def_cfa_register 6
 155 0004 48897DF8 		movq	%rdi, -8(%rbp)
 156 0008 8975F4   		movl	%esi, -12(%rbp)
 157 000b 8955F0   		movl	%edx, -16(%rbp)
 158 000e 894DEC   		movl	%ecx, -20(%rbp)
 159 0011 F30F1145 		movss	%xmm0, -24(%rbp)
 159      E8
  23:TestDeferredTestReporter.cpp ****     {
  24:TestDeferredTestReporter.cpp ****     }
 160              		.loc 3 24 0
 161 0016 5D       		popq	%rbp
 162              		.cfi_def_cfa 7, 8
 163 0017 C3       		ret
 164              		.cfi_endproc
 165              	.LFE1333:
 167              		.section	.text._ZN8UnitTest12TestReporterC2Ev,"axG",@progbits,_ZN8UnitTest12TestReporterC5Ev,comda
 168              		.align 2
 169              		.weak	_ZN8UnitTest12TestReporterC2Ev
 171              	_ZN8UnitTest12TestReporterC2Ev:
 172              	.LFB1338:
 173              		.file 4 "../TestReporter.h"
   1:../TestReporter.h **** #ifndef UNITTEST_TESTREPORTER_H
   2:../TestReporter.h **** #define UNITTEST_TESTREPORTER_H
   3:../TestReporter.h **** 
   4:../TestReporter.h **** namespace UnitTest {
   5:../TestReporter.h **** 
   6:../TestReporter.h **** class TestDetails;
   7:../TestReporter.h **** 
   8:../TestReporter.h **** class TestReporter
 174              		.loc 4 8 0
 175              		.cfi_startproc
 176 0000 55       		pushq	%rbp
 177              		.cfi_def_cfa_offset 16
 178              		.cfi_offset 6, -16
 179 0001 4889E5   		movq	%rsp, %rbp
 180              		.cfi_def_cfa_register 6
 181 0004 48897DF8 		movq	%rdi, -8(%rbp)
 182              	.LBB4:
 183              		.loc 4 8 0
 184 0008 488B45F8 		movq	-8(%rbp), %rax
 185 000c 48C70000 		movq	$_ZTVN8UnitTest12TestReporterE+16, (%rax)
 185      000000
 186              	.LBE4:
 187 0013 5D       		popq	%rbp
 188              		.cfi_def_cfa 7, 8
 189 0014 C3       		ret
 190              		.cfi_endproc
 191              	.LFE1338:
 193              		.weak	_ZN8UnitTest12TestReporterC1Ev
 194              		.set	_ZN8UnitTest12TestReporterC1Ev,_ZN8UnitTest12TestReporterC2Ev
 195              		.section	.text._ZN8UnitTest20DeferredTestReporterC2Ev,"axG",@progbits,_ZN8UnitTest20DeferredTestRe
 196              		.align 2
 197              		.weak	_ZN8UnitTest20DeferredTestReporterC2Ev
 199              	_ZN8UnitTest20DeferredTestReporterC2Ev:
 200              	.LFB1340:
 201              		.file 5 "../DeferredTestReporter.h"
   1:../DeferredTestReporter.h **** #ifndef UNITTEST_DEFERREDTESTREPORTER_H
   2:../DeferredTestReporter.h **** #define UNITTEST_DEFERREDTESTREPORTER_H
   3:../DeferredTestReporter.h **** 
   4:../DeferredTestReporter.h **** #include "TestReporter.h"
   5:../DeferredTestReporter.h **** #include "DeferredTestResult.h"
   6:../DeferredTestReporter.h **** 
   7:../DeferredTestReporter.h **** #include <vector>
   8:../DeferredTestReporter.h **** 
   9:../DeferredTestReporter.h **** namespace UnitTest
  10:../DeferredTestReporter.h **** {
  11:../DeferredTestReporter.h **** 
  12:../DeferredTestReporter.h **** class DeferredTestReporter : public TestReporter
 202              		.loc 5 12 0
 203              		.cfi_startproc
 204              		.cfi_personality 0x3,__gxx_personality_v0
 205              		.cfi_lsda 0x3,.LLSDA1340
 206 0000 55       		pushq	%rbp
 207              		.cfi_def_cfa_offset 16
 208              		.cfi_offset 6, -16
 209 0001 4889E5   		movq	%rsp, %rbp
 210              		.cfi_def_cfa_register 6
 211 0004 53       		pushq	%rbx
 212 0005 4883EC18 		subq	$24, %rsp
 213              		.cfi_offset 3, -24
 214 0009 48897DE8 		movq	%rdi, -24(%rbp)
 215              	.LBB5:
 216              		.loc 5 12 0
 217 000d 488B45E8 		movq	-24(%rbp), %rax
 218 0011 4889C7   		movq	%rax, %rdi
 219 0014 E8000000 		call	_ZN8UnitTest12TestReporterC2Ev
 219      00
 220 0019 488B45E8 		movq	-24(%rbp), %rax
 221 001d 48C70000 		movq	$_ZTVN8UnitTest20DeferredTestReporterE+16, (%rax)
 221      000000
 222 0024 488B45E8 		movq	-24(%rbp), %rax
 223 0028 4883C008 		addq	$8, %rax
 224 002c 4889C7   		movq	%rax, %rdi
 225              	.LEHB4:
 226 002f E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC1Ev
 226      00
 227              	.LEHE4:
 228              	.LBE5:
 229 0034 EB1A     		jmp	.L14
 230              	.L13:
 231 0036 4889C3   		movq	%rax, %rbx
 232              	.LBB6:
 233 0039 488B45E8 		movq	-24(%rbp), %rax
 234 003d 4889C7   		movq	%rax, %rdi
 235 0040 E8000000 		call	_ZN8UnitTest12TestReporterD2Ev
 235      00
 236 0045 4889D8   		movq	%rbx, %rax
 237 0048 4889C7   		movq	%rax, %rdi
 238              	.LEHB5:
 239 004b E8000000 		call	_Unwind_Resume
 239      00
 240              	.LEHE5:
 241              	.L14:
 242              	.LBE6:
 243 0050 4883C418 		addq	$24, %rsp
 244 0054 5B       		popq	%rbx
 245 0055 5D       		popq	%rbp
 246              		.cfi_def_cfa 7, 8
 247 0056 C3       		ret
 248              		.cfi_endproc
 249              	.LFE1340:
 250              		.section	.gcc_except_table._ZN8UnitTest20DeferredTestReporterC2Ev,"aG",@progbits,_ZN8UnitTest20Def
 251              	.LLSDA1340:
 252 0000 FF       		.byte	0xff
 253 0001 FF       		.byte	0xff
 254 0002 01       		.byte	0x1
 255 0003 08       		.uleb128 .LLSDACSE1340-.LLSDACSB1340
 256              	.LLSDACSB1340:
 257 0004 2F       		.uleb128 .LEHB4-.LFB1340
 258 0005 05       		.uleb128 .LEHE4-.LEHB4
 259 0006 36       		.uleb128 .L13-.LFB1340
 260 0007 00       		.uleb128 0
 261 0008 4B       		.uleb128 .LEHB5-.LFB1340
 262 0009 05       		.uleb128 .LEHE5-.LEHB5
 263 000a 00       		.uleb128 0
 264 000b 00       		.uleb128 0
 265              	.LLSDACSE1340:
 266              		.section	.text._ZN8UnitTest20DeferredTestReporterC2Ev,"axG",@progbits,_ZN8UnitTest20DeferredTestRe
 268              		.weak	_ZN8UnitTest20DeferredTestReporterC1Ev
 269              		.set	_ZN8UnitTest20DeferredTestReporterC1Ev,_ZN8UnitTest20DeferredTestReporterC2Ev
 270              		.section	.text._ZN8UnitTest20DeferredTestReporterD2Ev,"axG",@progbits,_ZN8UnitTest20DeferredTestRe
 271              		.align 2
 272              		.weak	_ZN8UnitTest20DeferredTestReporterD2Ev
 274              	_ZN8UnitTest20DeferredTestReporterD2Ev:
 275              	.LFB1343:
 276              		.loc 5 12 0
 277              		.cfi_startproc
 278              		.cfi_personality 0x3,__gxx_personality_v0
 279              		.cfi_lsda 0x3,.LLSDA1343
 280 0000 55       		pushq	%rbp
 281              		.cfi_def_cfa_offset 16
 282              		.cfi_offset 6, -16
 283 0001 4889E5   		movq	%rsp, %rbp
 284              		.cfi_def_cfa_register 6
 285 0004 53       		pushq	%rbx
 286 0005 4883EC18 		subq	$24, %rsp
 287              		.cfi_offset 3, -24
 288 0009 48897DE8 		movq	%rdi, -24(%rbp)
 289              	.LBB7:
 290              		.loc 5 12 0
 291 000d 488B45E8 		movq	-24(%rbp), %rax
 292 0011 48C70000 		movq	$_ZTVN8UnitTest20DeferredTestReporterE+16, (%rax)
 292      000000
 293 0018 488B45E8 		movq	-24(%rbp), %rax
 294 001c 4883C008 		addq	$8, %rax
 295 0020 4889C7   		movq	%rax, %rdi
 296              	.LEHB6:
 297 0023 E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
 297      00
 298              	.LEHE6:
 299              		.loc 5 12 0 is_stmt 0 discriminator 2
 300 0028 488B45E8 		movq	-24(%rbp), %rax
 301 002c 4889C7   		movq	%rax, %rdi
 302              	.LEHB7:
 303 002f E8000000 		call	_ZN8UnitTest12TestReporterD2Ev
 303      00
 304              	.LEHE7:
 305              	.LBE7:
 306 0034 B8000000 		movl	$0, %eax
 306      00
 307 0039 85C0     		testl	%eax, %eax
 308 003b 7428     		je	.L20
 309              		.loc 5 12 0 discriminator 6
 310 003d 488B45E8 		movq	-24(%rbp), %rax
 311 0041 4889C7   		movq	%rax, %rdi
 312 0044 E8000000 		call	_ZdlPv
 312      00
 313 0049 EB1A     		jmp	.L20
 314              	.L19:
 315 004b 4889C3   		movq	%rax, %rbx
 316              	.LBB8:
 317              		.loc 5 12 0
 318 004e 488B45E8 		movq	-24(%rbp), %rax
 319 0052 4889C7   		movq	%rax, %rdi
 320 0055 E8000000 		call	_ZN8UnitTest12TestReporterD2Ev
 320      00
 321 005a 4889D8   		movq	%rbx, %rax
 322 005d 4889C7   		movq	%rax, %rdi
 323              	.LEHB8:
 324 0060 E8000000 		call	_Unwind_Resume
 324      00
 325              	.LEHE8:
 326              	.L20:
 327              	.LBE8:
 328 0065 4883C418 		addq	$24, %rsp
 329 0069 5B       		popq	%rbx
 330 006a 5D       		popq	%rbp
 331              		.cfi_def_cfa 7, 8
 332 006b C3       		ret
 333              		.cfi_endproc
 334              	.LFE1343:
 335              		.section	.gcc_except_table._ZN8UnitTest20DeferredTestReporterD2Ev,"aG",@progbits,_ZN8UnitTest20Def
 336              	.LLSDA1343:
 337 0000 FF       		.byte	0xff
 338 0001 FF       		.byte	0xff
 339 0002 01       		.byte	0x1
 340 0003 0C       		.uleb128 .LLSDACSE1343-.LLSDACSB1343
 341              	.LLSDACSB1343:
 342 0004 23       		.uleb128 .LEHB6-.LFB1343
 343 0005 05       		.uleb128 .LEHE6-.LEHB6
 344 0006 4B       		.uleb128 .L19-.LFB1343
 345 0007 00       		.uleb128 0
 346 0008 2F       		.uleb128 .LEHB7-.LFB1343
 347 0009 05       		.uleb128 .LEHE7-.LEHB7
 348 000a 00       		.uleb128 0
 349 000b 00       		.uleb128 0
 350 000c 60       		.uleb128 .LEHB8-.LFB1343
 351 000d 05       		.uleb128 .LEHE8-.LEHB8
 352 000e 00       		.uleb128 0
 353 000f 00       		.uleb128 0
 354              	.LLSDACSE1343:
 355              		.section	.text._ZN8UnitTest20DeferredTestReporterD2Ev,"axG",@progbits,_ZN8UnitTest20DeferredTestRe
 357              		.weak	_ZN8UnitTest20DeferredTestReporterD1Ev
 358              		.set	_ZN8UnitTest20DeferredTestReporterD1Ev,_ZN8UnitTest20DeferredTestReporterD2Ev
 359              		.section	.text._ZN8UnitTest20DeferredTestReporterD0Ev,"axG",@progbits,_ZN8UnitTest20DeferredTestRe
 360              		.align 2
 361              		.weak	_ZN8UnitTest20DeferredTestReporterD0Ev
 363              	_ZN8UnitTest20DeferredTestReporterD0Ev:
 364              	.LFB1345:
 365              		.loc 5 12 0 is_stmt 1
 366              		.cfi_startproc
 367 0000 55       		pushq	%rbp
 368              		.cfi_def_cfa_offset 16
 369              		.cfi_offset 6, -16
 370 0001 4889E5   		movq	%rsp, %rbp
 371              		.cfi_def_cfa_register 6
 372 0004 4883EC10 		subq	$16, %rsp
 373 0008 48897DF8 		movq	%rdi, -8(%rbp)
 374              		.loc 5 12 0
 375 000c 488B45F8 		movq	-8(%rbp), %rax
 376 0010 4889C7   		movq	%rax, %rdi
 377 0013 E8000000 		call	_ZN8UnitTest20DeferredTestReporterD1Ev
 377      00
 378 0018 488B45F8 		movq	-8(%rbp), %rax
 379 001c 4889C7   		movq	%rax, %rdi
 380 001f E8000000 		call	_ZdlPv
 380      00
 381 0024 C9       		leave
 382              		.cfi_def_cfa 7, 8
 383 0025 C3       		ret
 384              		.cfi_endproc
 385              	.LFE1345:
 387              		.text
 388              		.align 2
 390              	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterC2Ev:
 391              	.LFB1346:
  20:TestDeferredTestReporter.cpp **** {
 392              		.loc 3 20 0
 393              		.cfi_startproc
 394 0018 55       		pushq	%rbp
 395              		.cfi_def_cfa_offset 16
 396              		.cfi_offset 6, -16
 397 0019 4889E5   		movq	%rsp, %rbp
 398              		.cfi_def_cfa_register 6
 399 001c 4883EC10 		subq	$16, %rsp
 400 0020 48897DF8 		movq	%rdi, -8(%rbp)
 401              	.LBB9:
  20:TestDeferredTestReporter.cpp **** {
 402              		.loc 3 20 0
 403 0024 488B45F8 		movq	-8(%rbp), %rax
 404 0028 4889C7   		movq	%rax, %rdi
 405 002b E8000000 		call	_ZN8UnitTest20DeferredTestReporterC2Ev
 405      00
 406 0030 488B45F8 		movq	-8(%rbp), %rax
 407 0034 48C70000 		movq	$_ZTVN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE+16, (%rax)
 407      000000
 408              	.LBE9:
 409 003b C9       		leave
 410              		.cfi_def_cfa 7, 8
 411 003c C3       		ret
 412              		.cfi_endproc
 413              	.LFE1346:
 415              		.section	.rodata
 416              	.LC1:
 417 000d 556E6971 		.string	"UniqueTestName"
 417      75655465 
 417      73744E61 
 417      6D6500
 418              	.LC2:
 419 001c 556E6971 		.string	"UniqueTestSuite"
 419      75655465 
 419      73745375 
 419      69746500 
 420              	.LC3:
 421 002c 66696C65 		.string	"filename.h"
 421      6E616D65 
 421      2E6800
 422              		.text
 423 003d 90       		.align 2
 425              	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureC2Ev:
 426              	.LFB1348:
  25:TestDeferredTestReporter.cpp **** };
  26:TestDeferredTestReporter.cpp **** 
  27:TestDeferredTestReporter.cpp **** struct DeferredTestReporterFixture
  28:TestDeferredTestReporter.cpp **** {
  29:TestDeferredTestReporter.cpp ****     DeferredTestReporterFixture()
 427              		.loc 3 29 0
 428              		.cfi_startproc
 429              		.cfi_personality 0x3,__gxx_personality_v0
 430              		.cfi_lsda 0x3,.LLSDA1348
 431 003e 55       		pushq	%rbp
 432              		.cfi_def_cfa_offset 16
 433              		.cfi_offset 6, -16
 434 003f 4889E5   		movq	%rsp, %rbp
 435              		.cfi_def_cfa_register 6
 436 0042 4155     		pushq	%r13
 437 0044 4154     		pushq	%r12
 438 0046 53       		pushq	%rbx
 439 0047 4883EC28 		subq	$40, %rsp
 440              		.cfi_offset 13, -24
 441              		.cfi_offset 12, -32
 442              		.cfi_offset 3, -40
 443 004b 48897DC8 		movq	%rdi, -56(%rbp)
 444              		.loc 3 29 0
 445 004f 64488B04 		movq	%fs:40, %rax
 445      25280000 
 445      00
 446 0058 488945D8 		movq	%rax, -40(%rbp)
 447 005c 31C0     		xorl	%eax, %eax
 448              	.LBB10:
  30:TestDeferredTestReporter.cpp ****         : testName("UniqueTestName")
  31:TestDeferredTestReporter.cpp ****         , testSuite("UniqueTestSuite")
  32:TestDeferredTestReporter.cpp ****         , fileName("filename.h")
  33:TestDeferredTestReporter.cpp ****         , lineNumber(12)
  34:TestDeferredTestReporter.cpp ****         , details(testName.c_str(), testSuite.c_str(), fileName.c_str(), lineNumber)
 449              		.loc 3 34 0
 450 005e 488B45C8 		movq	-56(%rbp), %rax
 451 0062 4889C7   		movq	%rax, %rdi
 452              	.LEHB9:
 453 0065 E8AEFFFF 		call	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterC2Ev
 453      FF
 454              	.LEHE9:
 455 006a 488D45D7 		leaq	-41(%rbp), %rax
 456 006e 4889C7   		movq	%rax, %rdi
 457 0071 E8000000 		call	_ZNSaIcEC1Ev
 457      00
 458 0076 488B45C8 		movq	-56(%rbp), %rax
 459 007a 488D4820 		leaq	32(%rax), %rcx
 460 007e 488D45D7 		leaq	-41(%rbp), %rax
 461 0082 4889C2   		movq	%rax, %rdx
 462 0085 BE000000 		movl	$.LC1, %esi
 462      00
 463 008a 4889CF   		movq	%rcx, %rdi
 464              	.LEHB10:
 465 008d E8000000 		call	_ZNSsC1EPKcRKSaIcE
 465      00
 466              	.LEHE10:
 467              		.loc 3 34 0 is_stmt 0 discriminator 2
 468 0092 488D45D7 		leaq	-41(%rbp), %rax
 469 0096 4889C7   		movq	%rax, %rdi
 470 0099 E8000000 		call	_ZNSaIcED1Ev
 470      00
 471 009e 488D45D7 		leaq	-41(%rbp), %rax
 472 00a2 4889C7   		movq	%rax, %rdi
 473 00a5 E8000000 		call	_ZNSaIcEC1Ev
 473      00
 474 00aa 488B45C8 		movq	-56(%rbp), %rax
 475 00ae 488D4828 		leaq	40(%rax), %rcx
 476 00b2 488D45D7 		leaq	-41(%rbp), %rax
 477 00b6 4889C2   		movq	%rax, %rdx
 478 00b9 BE000000 		movl	$.LC2, %esi
 478      00
 479 00be 4889CF   		movq	%rcx, %rdi
 480              	.LEHB11:
 481 00c1 E8000000 		call	_ZNSsC1EPKcRKSaIcE
 481      00
 482              	.LEHE11:
 483              		.loc 3 34 0 discriminator 4
 484 00c6 488D45D7 		leaq	-41(%rbp), %rax
 485 00ca 4889C7   		movq	%rax, %rdi
 486 00cd E8000000 		call	_ZNSaIcED1Ev
 486      00
 487 00d2 488D45D7 		leaq	-41(%rbp), %rax
 488 00d6 4889C7   		movq	%rax, %rdi
 489 00d9 E8000000 		call	_ZNSaIcEC1Ev
 489      00
 490 00de 488B45C8 		movq	-56(%rbp), %rax
 491 00e2 488D4830 		leaq	48(%rax), %rcx
 492 00e6 488D45D7 		leaq	-41(%rbp), %rax
 493 00ea 4889C2   		movq	%rax, %rdx
 494 00ed BE000000 		movl	$.LC3, %esi
 494      00
 495 00f2 4889CF   		movq	%rcx, %rdi
 496              	.LEHB12:
 497 00f5 E8000000 		call	_ZNSsC1EPKcRKSaIcE
 497      00
 498              	.LEHE12:
 499              		.loc 3 34 0 discriminator 6
 500 00fa 488D45D7 		leaq	-41(%rbp), %rax
 501 00fe 4889C7   		movq	%rax, %rdi
 502 0101 E8000000 		call	_ZNSaIcED1Ev
 502      00
 503 0106 488B45C8 		movq	-56(%rbp), %rax
 504 010a C740380C 		movl	$12, 56(%rax)
 504      000000
 505 0111 488B45C8 		movq	-56(%rbp), %rax
 506 0115 8B5838   		movl	56(%rax), %ebx
 507 0118 488B45C8 		movq	-56(%rbp), %rax
 508 011c 4883C030 		addq	$48, %rax
 509 0120 4889C7   		movq	%rax, %rdi
 510              	.LEHB13:
 511 0123 E8000000 		call	_ZNKSs5c_strEv
 511      00
 512 0128 4989C5   		movq	%rax, %r13
 513 012b 488B45C8 		movq	-56(%rbp), %rax
 514 012f 4883C028 		addq	$40, %rax
 515 0133 4889C7   		movq	%rax, %rdi
 516 0136 E8000000 		call	_ZNKSs5c_strEv
 516      00
 517              		.loc 3 34 0 discriminator 8
 518 013b 4989C4   		movq	%rax, %r12
 519 013e 488B45C8 		movq	-56(%rbp), %rax
 520 0142 4883C020 		addq	$32, %rax
 521 0146 4889C7   		movq	%rax, %rdi
 522 0149 E8000000 		call	_ZNKSs5c_strEv
 522      00
 523              		.loc 3 34 0 discriminator 10
 524 014e 4889C6   		movq	%rax, %rsi
 525 0151 488B45C8 		movq	-56(%rbp), %rax
 526 0155 4883C040 		addq	$64, %rax
 527 0159 4189D8   		movl	%ebx, %r8d
 528 015c 4C89E9   		movq	%r13, %rcx
 529 015f 4C89E2   		movq	%r12, %rdx
 530 0162 4889C7   		movq	%rax, %rdi
 531 0165 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 531      00
 532              	.LEHE13:
 533              	.LBE10:
  35:TestDeferredTestReporter.cpp ****     {
  36:TestDeferredTestReporter.cpp ****     }
 534              		.loc 3 36 0 is_stmt 1
 535 016a EB7D     		jmp	.L37
 536              	.L33:
 537 016c 4889C3   		movq	%rax, %rbx
 538              	.LBB11:
  34:TestDeferredTestReporter.cpp ****     {
 539              		.loc 3 34 0
 540 016f 488D45D7 		leaq	-41(%rbp), %rax
 541 0173 4889C7   		movq	%rax, %rdi
 542 0176 E8000000 		call	_ZNSaIcED1Ev
 542      00
 543 017b EB55     		jmp	.L26
 544              	.L34:
 545 017d 4889C3   		movq	%rax, %rbx
 546 0180 488D45D7 		leaq	-41(%rbp), %rax
 547 0184 4889C7   		movq	%rax, %rdi
 548 0187 E8000000 		call	_ZNSaIcED1Ev
 548      00
 549 018c EB34     		jmp	.L28
 550              	.L35:
 551 018e 4889C3   		movq	%rax, %rbx
 552 0191 488D45D7 		leaq	-41(%rbp), %rax
 553 0195 4889C7   		movq	%rax, %rdi
 554 0198 E8000000 		call	_ZNSaIcED1Ev
 554      00
 555 019d EB13     		jmp	.L30
 556              	.L36:
 557 019f 4889C3   		movq	%rax, %rbx
 558 01a2 488B45C8 		movq	-56(%rbp), %rax
 559 01a6 4883C030 		addq	$48, %rax
 560 01aa 4889C7   		movq	%rax, %rdi
 561 01ad E8000000 		call	_ZNSsD1Ev
 561      00
 562              	.L30:
 563 01b2 488B45C8 		movq	-56(%rbp), %rax
 564 01b6 4883C028 		addq	$40, %rax
 565 01ba 4889C7   		movq	%rax, %rdi
 566 01bd E8000000 		call	_ZNSsD1Ev
 566      00
 567              	.L28:
 568 01c2 488B45C8 		movq	-56(%rbp), %rax
 569 01c6 4883C020 		addq	$32, %rax
 570 01ca 4889C7   		movq	%rax, %rdi
 571 01cd E8000000 		call	_ZNSsD1Ev
 571      00
 572              	.L26:
 573 01d2 488B45C8 		movq	-56(%rbp), %rax
 574 01d6 4889C7   		movq	%rax, %rdi
 575 01d9 E81E3300 		call	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD2Ev
 575      00
 576 01de 4889D8   		movq	%rbx, %rax
 577 01e1 4889C7   		movq	%rax, %rdi
 578              	.LEHB14:
 579 01e4 E8000000 		call	_Unwind_Resume
 579      00
 580              	.LEHE14:
 581              	.L37:
 582              	.LBE11:
 583              		.loc 3 36 0
 584 01e9 488B45D8 		movq	-40(%rbp), %rax
 585 01ed 64483304 		xorq	%fs:40, %rax
 585      25280000 
 585      00
 586 01f6 7405     		je	.L32
 587 01f8 E8000000 		call	__stack_chk_fail
 587      00
 588              	.L32:
 589 01fd 4883C428 		addq	$40, %rsp
 590 0201 5B       		popq	%rbx
 591 0202 415C     		popq	%r12
 592 0204 415D     		popq	%r13
 593 0206 5D       		popq	%rbp
 594              		.cfi_def_cfa 7, 8
 595 0207 C3       		ret
 596              		.cfi_endproc
 597              	.LFE1348:
 598              		.section	.gcc_except_table,"a",@progbits
 599              	.LLSDA1348:
 600 0000 FF       		.byte	0xff
 601 0001 FF       		.byte	0xff
 602 0002 01       		.byte	0x1
 603 0003 20       		.uleb128 .LLSDACSE1348-.LLSDACSB1348
 604              	.LLSDACSB1348:
 605 0004 27       		.uleb128 .LEHB9-.LFB1348
 606 0005 05       		.uleb128 .LEHE9-.LEHB9
 607 0006 00       		.uleb128 0
 608 0007 00       		.uleb128 0
 609 0008 4F       		.uleb128 .LEHB10-.LFB1348
 610 0009 05       		.uleb128 .LEHE10-.LEHB10
 611 000a AE02     		.uleb128 .L33-.LFB1348
 612 000c 00       		.uleb128 0
 613 000d 8301     		.uleb128 .LEHB11-.LFB1348
 614 000f 05       		.uleb128 .LEHE11-.LEHB11
 615 0010 BF02     		.uleb128 .L34-.LFB1348
 616 0012 00       		.uleb128 0
 617 0013 B701     		.uleb128 .LEHB12-.LFB1348
 618 0015 05       		.uleb128 .LEHE12-.LEHB12
 619 0016 D002     		.uleb128 .L35-.LFB1348
 620 0018 00       		.uleb128 0
 621 0019 E501     		.uleb128 .LEHB13-.LFB1348
 622 001b 47       		.uleb128 .LEHE13-.LEHB13
 623 001c E102     		.uleb128 .L36-.LFB1348
 624 001e 00       		.uleb128 0
 625 001f A603     		.uleb128 .LEHB14-.LFB1348
 626 0021 05       		.uleb128 .LEHE14-.LEHB14
 627 0022 00       		.uleb128 0
 628 0023 00       		.uleb128 0
 629              	.LLSDACSE1348:
 630              		.text
 632              		.align 2
 634              	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureD2Ev:
 635              	.LFB1352:
  27:TestDeferredTestReporter.cpp **** {
 636              		.loc 3 27 0
 637              		.cfi_startproc
 638              		.cfi_personality 0x3,__gxx_personality_v0
 639              		.cfi_lsda 0x3,.LLSDA1352
 640 0208 55       		pushq	%rbp
 641              		.cfi_def_cfa_offset 16
 642              		.cfi_offset 6, -16
 643 0209 4889E5   		movq	%rsp, %rbp
 644              		.cfi_def_cfa_register 6
 645 020c 53       		pushq	%rbx
 646 020d 4883EC18 		subq	$24, %rsp
 647              		.cfi_offset 3, -24
 648 0211 48897DE8 		movq	%rdi, -24(%rbp)
 649              	.LBB12:
  27:TestDeferredTestReporter.cpp **** {
 650              		.loc 3 27 0
 651 0215 488B45E8 		movq	-24(%rbp), %rax
 652 0219 4883C030 		addq	$48, %rax
 653 021d 4889C7   		movq	%rax, %rdi
 654              	.LEHB15:
 655 0220 E8000000 		call	_ZNSsD1Ev
 655      00
 656              	.LEHE15:
  27:TestDeferredTestReporter.cpp **** {
 657              		.loc 3 27 0 is_stmt 0 discriminator 2
 658 0225 488B45E8 		movq	-24(%rbp), %rax
 659 0229 4883C028 		addq	$40, %rax
 660 022d 4889C7   		movq	%rax, %rdi
 661              	.LEHB16:
 662 0230 E8000000 		call	_ZNSsD1Ev
 662      00
 663              	.LEHE16:
  27:TestDeferredTestReporter.cpp **** {
 664              		.loc 3 27 0 discriminator 4
 665 0235 488B45E8 		movq	-24(%rbp), %rax
 666 0239 4883C020 		addq	$32, %rax
 667 023d 4889C7   		movq	%rax, %rdi
 668              	.LEHB17:
 669 0240 E8000000 		call	_ZNSsD1Ev
 669      00
 670              	.LEHE17:
  27:TestDeferredTestReporter.cpp **** {
 671              		.loc 3 27 0 discriminator 6
 672 0245 488B45E8 		movq	-24(%rbp), %rax
 673 0249 4889C7   		movq	%rax, %rdi
 674              	.LEHB18:
 675 024c E8AB3200 		call	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD2Ev
 675      00
 676              	.LEHE18:
 677 0251 EB44     		jmp	.L46
 678              	.L43:
 679 0253 4889C3   		movq	%rax, %rbx
  27:TestDeferredTestReporter.cpp **** {
 680              		.loc 3 27 0
 681 0256 488B45E8 		movq	-24(%rbp), %rax
 682 025a 4883C028 		addq	$40, %rax
 683 025e 4889C7   		movq	%rax, %rdi
 684 0261 E8000000 		call	_ZNSsD1Ev
 684      00
 685 0266 EB03     		jmp	.L41
 686              	.L44:
 687 0268 4889C3   		movq	%rax, %rbx
 688              	.L41:
  27:TestDeferredTestReporter.cpp **** {
 689              		.loc 3 27 0 discriminator 3
 690 026b 488B45E8 		movq	-24(%rbp), %rax
 691 026f 4883C020 		addq	$32, %rax
 692 0273 4889C7   		movq	%rax, %rdi
 693 0276 E8000000 		call	_ZNSsD1Ev
 693      00
 694 027b EB03     		jmp	.L42
 695              	.L45:
 696 027d 4889C3   		movq	%rax, %rbx
 697              	.L42:
  27:TestDeferredTestReporter.cpp **** {
 698              		.loc 3 27 0 discriminator 5
 699 0280 488B45E8 		movq	-24(%rbp), %rax
 700 0284 4889C7   		movq	%rax, %rdi
 701 0287 E8703200 		call	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD2Ev
 701      00
 702 028c 4889D8   		movq	%rbx, %rax
 703 028f 4889C7   		movq	%rax, %rdi
 704              	.LEHB19:
 705 0292 E8000000 		call	_Unwind_Resume
 705      00
 706              	.LEHE19:
 707              	.L46:
 708              	.LBE12:
  27:TestDeferredTestReporter.cpp **** {
 709              		.loc 3 27 0
 710 0297 4883C418 		addq	$24, %rsp
 711 029b 5B       		popq	%rbx
 712 029c 5D       		popq	%rbp
 713              		.cfi_def_cfa 7, 8
 714 029d C3       		ret
 715              		.cfi_endproc
 716              	.LFE1352:
 717              		.section	.gcc_except_table
 718              	.LLSDA1352:
 719 0024 FF       		.byte	0xff
 720 0025 FF       		.byte	0xff
 721 0026 01       		.byte	0x1
 722 0027 15       		.uleb128 .LLSDACSE1352-.LLSDACSB1352
 723              	.LLSDACSB1352:
 724 0028 18       		.uleb128 .LEHB15-.LFB1352
 725 0029 05       		.uleb128 .LEHE15-.LEHB15
 726 002a 4B       		.uleb128 .L43-.LFB1352
 727 002b 00       		.uleb128 0
 728 002c 28       		.uleb128 .LEHB16-.LFB1352
 729 002d 05       		.uleb128 .LEHE16-.LEHB16
 730 002e 60       		.uleb128 .L44-.LFB1352
 731 002f 00       		.uleb128 0
 732 0030 38       		.uleb128 .LEHB17-.LFB1352
 733 0031 05       		.uleb128 .LEHE17-.LEHB17
 734 0032 75       		.uleb128 .L45-.LFB1352
 735 0033 00       		.uleb128 0
 736 0034 44       		.uleb128 .LEHB18-.LFB1352
 737 0035 05       		.uleb128 .LEHE18-.LEHB18
 738 0036 00       		.uleb128 0
 739 0037 00       		.uleb128 0
 740 0038 8A01     		.uleb128 .LEHB19-.LFB1352
 741 003a 05       		.uleb128 .LEHE19-.LEHB19
 742 003b 00       		.uleb128 0
 743 003c 00       		.uleb128 0
 744              	.LLSDACSE1352:
 745              		.text
 747              		.align 2
 749              	_ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestHelper
 750              	.LFB1354:
  37:TestDeferredTestReporter.cpp **** 
  38:TestDeferredTestReporter.cpp ****     MockDeferredTestReporter reporter;
  39:TestDeferredTestReporter.cpp ****     std::string const testName;
  40:TestDeferredTestReporter.cpp ****     std::string const testSuite;
  41:TestDeferredTestReporter.cpp ****     std::string const fileName;
  42:TestDeferredTestReporter.cpp ****     int const lineNumber;
  43:TestDeferredTestReporter.cpp ****     TestDetails const details;
  44:TestDeferredTestReporter.cpp **** };
  45:TestDeferredTestReporter.cpp **** 
  46:TestDeferredTestReporter.cpp **** TEST_FIXTURE(DeferredTestReporterFixture, ReportTestStartCreatesANewDeferredTest)
 751              		.loc 3 46 0 is_stmt 1
 752              		.cfi_startproc
 753 029e 55       		pushq	%rbp
 754              		.cfi_def_cfa_offset 16
 755              		.cfi_offset 6, -16
 756 029f 4889E5   		movq	%rsp, %rbp
 757              		.cfi_def_cfa_register 6
 758 02a2 4883EC10 		subq	$16, %rsp
 759 02a6 48897DF8 		movq	%rdi, -8(%rbp)
 760 02aa 488975F0 		movq	%rsi, -16(%rbp)
 761              	.LBB13:
 762              		.loc 3 46 0
 763 02ae 488B45F8 		movq	-8(%rbp), %rax
 764 02b2 4889C7   		movq	%rax, %rdi
 765 02b5 E884FDFF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureC2Ev
 765      FF
 766 02ba 488B45F8 		movq	-8(%rbp), %rax
 767 02be 488B55F0 		movq	-16(%rbp), %rdx
 768 02c2 48895060 		movq	%rdx, 96(%rax)
 769              	.LBE13:
 770 02c6 C9       		leave
 771              		.cfi_def_cfa 7, 8
 772 02c7 C3       		ret
 773              		.cfi_endproc
 774              	.LFE1354:
 776              		.section	.rodata
 777              	.LC4:
 778 0037 54657374 		.string	"TestDeferredTestReporter.cpp"
 778      44656665 
 778      72726564 
 778      54657374 
 778      5265706F 
 779 0054 00000000 		.align 8
 780              	.LC5:
 781 0058 5265706F 		.string	"ReportTestStartCreatesANewDeferredTest"
 781      72745465 
 781      73745374 
 781      61727443 
 781      72656174 
 782              		.text
 783              		.align 2
 785              	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestC2
 786              	.LFB1357:
 787              		.loc 3 46 0
 788              		.cfi_startproc
 789 02c8 55       		pushq	%rbp
 790              		.cfi_def_cfa_offset 16
 791              		.cfi_offset 6, -16
 792 02c9 4889E5   		movq	%rsp, %rbp
 793              		.cfi_def_cfa_register 6
 794 02cc 4883EC10 		subq	$16, %rsp
 795 02d0 48897DF8 		movq	%rdi, -8(%rbp)
 796              	.LBB14:
 797              		.loc 3 46 0
 798 02d4 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 798      00
 799 02d9 4889C2   		movq	%rax, %rdx
 800 02dc 488B45F8 		movq	-8(%rbp), %rax
 801 02e0 41B82E00 		movl	$46, %r8d
 801      0000
 802 02e6 B9000000 		movl	$.LC4, %ecx
 802      00
 803 02eb BE000000 		movl	$.LC5, %esi
 803      00
 804 02f0 4889C7   		movq	%rax, %rdi
 805 02f3 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 805      00
 806 02f8 488B45F8 		movq	-8(%rbp), %rax
 807 02fc 48C70000 		movq	$_ZTVN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDefer
 807      000000
 808              	.LBE14:
 809 0303 C9       		leave
 810              		.cfi_def_cfa 7, 8
 811 0304 C3       		ret
 812              		.cfi_endproc
 813              	.LFE1357:
 815              		.local	_ZN8UnitTest12_GLOBAL__N_177testDeferredTestReporterFixtureReportTestStartCreatesANewDeferr
 816              		.comm	_ZN8UnitTest12_GLOBAL__N_177testDeferredTestReporterFixtureReportTestStartCreatesANewDeferre
 817              		.local	_ZN8UnitTest12_GLOBAL__N_170adderDeferredTestReporterFixtureReportTestStartCreatesANewDefer
 818              		.comm	_ZN8UnitTest12_GLOBAL__N_170adderDeferredTestReporterFixtureReportTestStartCreatesANewDeferr
 819 0305 90       		.align 2
 821              	_ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestHelper
 822              	.LFB1361:
 823              		.loc 3 46 0
 824              		.cfi_startproc
 825 0306 55       		pushq	%rbp
 826              		.cfi_def_cfa_offset 16
 827              		.cfi_offset 6, -16
 828 0307 4889E5   		movq	%rsp, %rbp
 829              		.cfi_def_cfa_register 6
 830 030a 4883EC10 		subq	$16, %rsp
 831 030e 48897DF8 		movq	%rdi, -8(%rbp)
 832              	.LBB15:
 833              		.loc 3 46 0
 834 0312 488B45F8 		movq	-8(%rbp), %rax
 835 0316 4889C7   		movq	%rax, %rdi
 836 0319 E8EAFEFF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureD2Ev
 836      FF
 837              	.LBE15:
 838 031e C9       		leave
 839              		.cfi_def_cfa 7, 8
 840 031f C3       		ret
 841              		.cfi_endproc
 842              	.LFE1361:
 844              		.section	.rodata
 845              	.LC6:
 846 007f 556E6861 		.string	"Unhandled exception: "
 846      6E646C65 
 846      64206578 
 846      63657074 
 846      696F6E3A 
 847 0095 000000   		.align 8
 848              	.LC7:
 849 0098 556E6861 		.string	"Unhandled exception while destroying fixture DeferredTestReporterFixture"
 849      6E646C65 
 849      64206578 
 849      63657074 
 849      696F6E20 
 850 00e1 00000000 		.align 8
 850      000000
 851              	.LC8:
 852 00e8 556E6861 		.string	"Unhandled exception while constructing fixture DeferredTestReporterFixture"
 852      6E646C65 
 852      64206578 
 852      63657074 
 852      696F6E20 
 853              		.text
 854              		.align 2
 856              	_ZNK8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest7
 857              	.LFB1359:
 858              		.loc 3 46 0
 859              		.cfi_startproc
 860              		.cfi_personality 0x3,__gxx_personality_v0
 861              		.cfi_lsda 0x3,.LLSDA1359
 862 0320 55       		pushq	%rbp
 863              		.cfi_def_cfa_offset 16
 864              		.cfi_offset 6, -16
 865 0321 4889E5   		movq	%rsp, %rbp
 866              		.cfi_def_cfa_register 6
 867 0324 4154     		pushq	%r12
 868 0326 53       		pushq	%rbx
 869 0327 4881EC10 		subq	$528, %rsp
 869      020000
 870              		.cfi_offset 12, -24
 871              		.cfi_offset 3, -32
 872 032e 4889BDE8 		movq	%rdi, -536(%rbp)
 872      FDFFFF
 873              		.loc 3 46 0
 874 0335 64488B04 		movq	%fs:40, %rax
 874      25280000 
 874      00
 875 033e 488945E8 		movq	%rax, -24(%rbp)
 876 0342 31C0     		xorl	%eax, %eax
 877              	.LBB16:
 878 0344 C685FFFD 		movb	$0, -513(%rbp)
 878      FFFF00
 879              	.LBB17:
 880 034b 488B85E8 		movq	-536(%rbp), %rax
 880      FDFFFF
 881 0352 488D5008 		leaq	8(%rax), %rdx
 882 0356 488D8510 		leaq	-496(%rbp), %rax
 882      FEFFFF
 883 035d 4889D6   		movq	%rdx, %rsi
 884 0360 4889C7   		movq	%rax, %rdi
 885              	.LEHB20:
 886 0363 E836FFFF 		call	_ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest
 886      FF
 887              	.LEHE20:
 888              		.loc 3 46 0 is_stmt 0 discriminator 1
 889 0368 C685FFFD 		movb	$1, -513(%rbp)
 889      FFFF01
 890 036f 488B85E8 		movq	-536(%rbp), %rax
 890      FDFFFF
 891 0376 488D5008 		leaq	8(%rax), %rdx
 892 037a 488D8510 		leaq	-496(%rbp), %rax
 892      FEFFFF
 893 0381 4889D6   		movq	%rdx, %rsi
 894 0384 4889C7   		movq	%rax, %rdi
 895              	.LEHB21:
 896 0387 E8BC1E00 		call	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreate
 896      00
 897              	.LEHE21:
 898              		.loc 3 46 0 discriminator 3
 899 038c 488D8510 		leaq	-496(%rbp), %rax
 899      FEFFFF
 900 0393 4889C7   		movq	%rax, %rdi
 901              	.LEHB22:
 902 0396 E86BFFFF 		call	_ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest
 902      FF
 903              	.LEHE22:
 904              	.LBE17:
 905              	.LBE16:
 906              		.loc 3 46 0
 907 039b E9640200 		jmp	.L72
 907      00
 908              	.L66:
 909 03a0 4989C4   		movq	%rax, %r12
 910 03a3 4889D3   		movq	%rdx, %rbx
 911              	.LBB25:
 912              	.LBB18:
 913 03a6 488D8510 		leaq	-496(%rbp), %rax
 913      FEFFFF
 914 03ad 4889C7   		movq	%rax, %rdi
 915 03b0 E851FFFF 		call	_ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest
 915      FF
 916 03b5 4C89E0   		movq	%r12, %rax
 917 03b8 4889DA   		movq	%rbx, %rdx
 918 03bb EB00     		jmp	.L53
 919              	.L65:
 920              	.L53:
 921 03bd 4883FA01 		cmpq	$1, %rdx
 922 03c1 745C     		je	.L55
 923 03c3 4883FA02 		cmpq	$2, %rdx
 924 03c7 0F84F400 		je	.L56
 924      0000
 925 03cd E9980100 		jmp	.L71
 925      00
 926              	.L67:
 927 03d2 4889C3   		movq	%rax, %rbx
 928              	.LBE18:
 929              	.LBB19:
 930 03d5 E8000000 		call	__cxa_end_catch
 930      00
 931 03da 4889D8   		movq	%rbx, %rax
 932 03dd 4889C7   		movq	%rax, %rdi
 933              	.LEHB23:
 934 03e0 E8000000 		call	_Unwind_Resume
 934      00
 935              	.LEHE23:
 936              	.L68:
 937 03e5 4889C3   		movq	%rax, %rbx
 938              	.LBE19:
 939              	.LBB20:
 940              	.LBB21:
 941 03e8 488D8580 		leaq	-384(%rbp), %rax
 941      FEFFFF
 942 03ef 4889C7   		movq	%rax, %rdi
 943 03f2 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 943      00
 944 03f7 EB03     		jmp	.L59
 945              	.L69:
 946 03f9 4889C3   		movq	%rax, %rbx
 947              	.L59:
 948              	.LBE21:
 949 03fc E8000000 		call	__cxa_end_catch
 949      00
 950 0401 4889D8   		movq	%rbx, %rax
 951 0404 4889C7   		movq	%rax, %rdi
 952              	.LEHB24:
 953 0407 E8000000 		call	_Unwind_Resume
 953      00
 954              	.LEHE24:
 955              	.L70:
 956 040c 4889C3   		movq	%rax, %rbx
 957              	.LBE20:
 958 040f E8000000 		call	__cxa_end_catch
 958      00
 959 0414 4889D8   		movq	%rbx, %rax
 960 0417 4889C7   		movq	%rax, %rdi
 961              	.LEHB25:
 962 041a E8000000 		call	_Unwind_Resume
 962      00
 963              	.LEHE25:
 964              	.L55:
 965              	.LBB23:
 966 041f 4889C7   		movq	%rax, %rdi
 967 0422 E8000000 		call	__cxa_begin_catch
 967      00
 968 0427 48898500 		movq	%rax, -512(%rbp)
 968      FEFFFF
 969 042e 488B8500 		movq	-512(%rbp), %rax
 969      FEFFFF
 970 0435 488B00   		movq	(%rax), %rax
 971 0438 4883C010 		addq	$16, %rax
 972 043c 488B00   		movq	(%rax), %rax
 973 043f 488B9500 		movq	-512(%rbp), %rdx
 973      FEFFFF
 974 0446 4889D7   		movq	%rdx, %rdi
 975 0449 FFD0     		call	*%rax
 976 044b 4889C3   		movq	%rax, %rbx
 977 044e 488B8500 		movq	-512(%rbp), %rax
 977      FEFFFF
 978 0455 4889C7   		movq	%rax, %rdi
 979              	.LEHB26:
 980 0458 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 980      00
 981 045d 4189C4   		movl	%eax, %r12d
 982 0460 488B8500 		movq	-512(%rbp), %rax
 982      FEFFFF
 983 0467 4889C7   		movq	%rax, %rdi
 984 046a E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 984      00
 985              		.loc 3 46 0 discriminator 5
 986 046f 4889C1   		movq	%rax, %rcx
 987 0472 488B85E8 		movq	-536(%rbp), %rax
 987      FDFFFF
 988 0479 488B5008 		movq	8(%rax), %rdx
 989 047d 488B85E8 		movq	-536(%rbp), %rax
 989      FDFFFF
 990 0484 488B7010 		movq	16(%rax), %rsi
 991 0488 488D8510 		leaq	-496(%rbp), %rax
 991      FEFFFF
 992 048f 4589E0   		movl	%r12d, %r8d
 993 0492 4889C7   		movq	%rax, %rdi
 994 0495 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 994      00
 995              		.loc 3 46 0 discriminator 9
 996 049a E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 996      00
 997 049f 488B00   		movq	(%rax), %rax
 998 04a2 488D8D10 		leaq	-496(%rbp), %rcx
 998      FEFFFF
 999 04a9 4889DA   		movq	%rbx, %rdx
 1000 04ac 4889CE   		movq	%rcx, %rsi
 1001 04af 4889C7   		movq	%rax, %rdi
 1002 04b2 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1002      00
 1003              	.LEHE26:
 1004              		.loc 3 46 0 discriminator 13
 1005 04b7 E8000000 		call	__cxa_end_catch
 1005      00
 1006              	.LBE23:
 1007              	.LBE25:
 1008 04bc E9430100 		jmp	.L72
 1008      00
 1009              	.L56:
 1010              	.LBB26:
 1011              	.LBB24:
 1012              		.loc 3 46 0
 1013 04c1 4889C7   		movq	%rax, %rdi
 1014 04c4 E8000000 		call	__cxa_begin_catch
 1014      00
 1015 04c9 48898508 		movq	%rax, -504(%rbp)
 1015      FEFFFF
 1016              	.LBB22:
 1017 04d0 488D8580 		leaq	-384(%rbp), %rax
 1017      FEFFFF
 1018 04d7 4889C7   		movq	%rax, %rdi
 1019              	.LEHB27:
 1020 04da E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 1020      00
 1021              	.LEHE27:
 1022              		.loc 3 46 0 discriminator 15
 1023 04df 488B8508 		movq	-504(%rbp), %rax
 1023      FEFFFF
 1024 04e6 488B00   		movq	(%rax), %rax
 1025 04e9 4883C010 		addq	$16, %rax
 1026 04ed 488B00   		movq	(%rax), %rax
 1027 04f0 488B9508 		movq	-504(%rbp), %rdx
 1027      FEFFFF
 1028 04f7 4889D7   		movq	%rdx, %rdi
 1029 04fa FFD0     		call	*%rax
 1030 04fc 4889C3   		movq	%rax, %rbx
 1031 04ff 488D8580 		leaq	-384(%rbp), %rax
 1031      FEFFFF
 1032 0506 BE000000 		movl	$.LC6, %esi
 1032      00
 1033 050b 4889C7   		movq	%rax, %rdi
 1034              	.LEHB28:
 1035 050e E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 1035      00
 1036 0513 4889DE   		movq	%rbx, %rsi
 1037 0516 4889C7   		movq	%rax, %rdi
 1038 0519 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 1038      00
 1039              		.loc 3 46 0 discriminator 19
 1040 051e 488D8580 		leaq	-384(%rbp), %rax
 1040      FEFFFF
 1041 0525 4889C7   		movq	%rax, %rdi
 1042 0528 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 1042      00
 1043 052d 4989C4   		movq	%rax, %r12
 1044 0530 488B85E8 		movq	-536(%rbp), %rax
 1044      FDFFFF
 1045 0537 488D5808 		leaq	8(%rax), %rbx
 1046 053b E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1046      00
 1047              		.loc 3 46 0 discriminator 21
 1048 0540 488B00   		movq	(%rax), %rax
 1049 0543 4C89E2   		movq	%r12, %rdx
 1050 0546 4889DE   		movq	%rbx, %rsi
 1051 0549 4889C7   		movq	%rax, %rdi
 1052 054c E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1052      00
 1053              	.LEHE28:
 1054              		.loc 3 46 0 discriminator 25
 1055 0551 488D8580 		leaq	-384(%rbp), %rax
 1055      FEFFFF
 1056 0558 4889C7   		movq	%rax, %rdi
 1057              	.LEHB29:
 1058 055b E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 1058      00
 1059              	.LEHE29:
 1060              	.LBE22:
 1061              		.loc 3 46 0 discriminator 26
 1062 0560 E8000000 		call	__cxa_end_catch
 1062      00
 1063              	.LBE24:
 1064              	.LBE26:
 1065 0565 E99A0000 		jmp	.L72
 1065      00
 1066              	.L71:
 1067              	.LBB27:
 1068              		.loc 3 46 0
 1069 056a 4889C7   		movq	%rax, %rdi
 1070 056d E8000000 		call	__cxa_begin_catch
 1070      00
 1071 0572 80BDFFFD 		cmpb	$0, -513(%rbp)
 1071      FFFF00
 1072 0579 7443     		je	.L62
 1073              		.loc 3 46 0 discriminator 28
 1074 057b 488B85E8 		movq	-536(%rbp), %rax
 1074      FDFFFF
 1075 0582 488D4808 		leaq	8(%rax), %rcx
 1076 0586 488D8510 		leaq	-496(%rbp), %rax
 1076      FEFFFF
 1077 058d BA2E0000 		movl	$46, %edx
 1077      00
 1078 0592 4889CE   		movq	%rcx, %rsi
 1079 0595 4889C7   		movq	%rax, %rdi
 1080              	.LEHB30:
 1081 0598 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1081      00
 1082              		.loc 3 46 0 discriminator 31
 1083 059d E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1083      00
 1084 05a2 488B00   		movq	(%rax), %rax
 1085 05a5 488D8D10 		leaq	-496(%rbp), %rcx
 1085      FEFFFF
 1086 05ac BA000000 		movl	$.LC7, %edx
 1086      00
 1087 05b1 4889CE   		movq	%rcx, %rsi
 1088 05b4 4889C7   		movq	%rax, %rdi
 1089 05b7 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1089      00
 1090 05bc EB41     		jmp	.L63
 1091              	.L62:
 1092              		.loc 3 46 0 discriminator 29
 1093 05be 488B85E8 		movq	-536(%rbp), %rax
 1093      FDFFFF
 1094 05c5 488D4808 		leaq	8(%rax), %rcx
 1095 05c9 488D8510 		leaq	-496(%rbp), %rax
 1095      FEFFFF
 1096 05d0 BA2E0000 		movl	$46, %edx
 1096      00
 1097 05d5 4889CE   		movq	%rcx, %rsi
 1098 05d8 4889C7   		movq	%rax, %rdi
 1099 05db E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1099      00
 1100              		.loc 3 46 0 discriminator 38
 1101 05e0 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1101      00
 1102 05e5 488B00   		movq	(%rax), %rax
 1103 05e8 488D8D10 		leaq	-496(%rbp), %rcx
 1103      FEFFFF
 1104 05ef BA000000 		movl	$.LC8, %edx
 1104      00
 1105 05f4 4889CE   		movq	%rcx, %rsi
 1106 05f7 4889C7   		movq	%rax, %rdi
 1107 05fa E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1107      00
 1108              	.LEHE30:
 1109              	.L63:
 1110              	.LEHB31:
 1111              		.loc 3 46 0 discriminator 43
 1112 05ff E8000000 		call	__cxa_end_catch
 1112      00
 1113              	.LEHE31:
 1114              	.L72:
 1115              	.LBE27:
 1116              		.loc 3 46 0
 1117 0604 90       		nop
 1118 0605 488B45E8 		movq	-24(%rbp), %rax
 1119 0609 64483304 		xorq	%fs:40, %rax
 1119      25280000 
 1119      00
 1120 0612 7405     		je	.L64
 1121 0614 E8000000 		call	__stack_chk_fail
 1121      00
 1122              	.L64:
 1123 0619 4881C410 		addq	$528, %rsp
 1123      020000
 1124 0620 5B       		popq	%rbx
 1125 0621 415C     		popq	%r12
 1126 0623 5D       		popq	%rbp
 1127              		.cfi_def_cfa 7, 8
 1128 0624 C3       		ret
 1129              		.cfi_endproc
 1130              	.LFE1359:
 1131              		.section	.gcc_except_table
 1132 003d 000000   		.align 4
 1133              	.LLSDA1359:
 1134 0040 FF       		.byte	0xff
 1135 0041 03       		.byte	0x3
 1136 0042 59       		.uleb128 .LLSDATT1359-.LLSDATTD1359
 1137              	.LLSDATTD1359:
 1138 0043 01       		.byte	0x1
 1139 0044 41       		.uleb128 .LLSDACSE1359-.LLSDACSB1359
 1140              	.LLSDACSB1359:
 1141 0045 43       		.uleb128 .LEHB20-.LFB1359
 1142 0046 05       		.uleb128 .LEHE20-.LEHB20
 1143 0047 9D01     		.uleb128 .L65-.LFB1359
 1144 0049 05       		.uleb128 0x5
 1145 004a 67       		.uleb128 .LEHB21-.LFB1359
 1146 004b 05       		.uleb128 .LEHE21-.LEHB21
 1147 004c 8001     		.uleb128 .L66-.LFB1359
 1148 004e 07       		.uleb128 0x7
 1149 004f 76       		.uleb128 .LEHB22-.LFB1359
 1150 0050 05       		.uleb128 .LEHE22-.LEHB22
 1151 0051 9D01     		.uleb128 .L65-.LFB1359
 1152 0053 05       		.uleb128 0x5
 1153 0054 C001     		.uleb128 .LEHB23-.LFB1359
 1154 0056 05       		.uleb128 .LEHE23-.LEHB23
 1155 0057 00       		.uleb128 0
 1156 0058 00       		.uleb128 0
 1157 0059 E701     		.uleb128 .LEHB24-.LFB1359
 1158 005b 05       		.uleb128 .LEHE24-.LEHB24
 1159 005c 00       		.uleb128 0
 1160 005d 00       		.uleb128 0
 1161 005e FA01     		.uleb128 .LEHB25-.LFB1359
 1162 0060 05       		.uleb128 .LEHE25-.LEHB25
 1163 0061 00       		.uleb128 0
 1164 0062 00       		.uleb128 0
 1165 0063 B802     		.uleb128 .LEHB26-.LFB1359
 1166 0065 5F       		.uleb128 .LEHE26-.LEHB26
 1167 0066 B201     		.uleb128 .L67-.LFB1359
 1168 0068 00       		.uleb128 0
 1169 0069 BA03     		.uleb128 .LEHB27-.LFB1359
 1170 006b 05       		.uleb128 .LEHE27-.LEHB27
 1171 006c D901     		.uleb128 .L69-.LFB1359
 1172 006e 00       		.uleb128 0
 1173 006f EE03     		.uleb128 .LEHB28-.LFB1359
 1174 0071 43       		.uleb128 .LEHE28-.LEHB28
 1175 0072 C501     		.uleb128 .L68-.LFB1359
 1176 0074 00       		.uleb128 0
 1177 0075 BB04     		.uleb128 .LEHB29-.LFB1359
 1178 0077 05       		.uleb128 .LEHE29-.LEHB29
 1179 0078 D901     		.uleb128 .L69-.LFB1359
 1180 007a 00       		.uleb128 0
 1181 007b F804     		.uleb128 .LEHB30-.LFB1359
 1182 007d 67       		.uleb128 .LEHE30-.LEHB30
 1183 007e EC01     		.uleb128 .L70-.LFB1359
 1184 0080 00       		.uleb128 0
 1185 0081 DF05     		.uleb128 .LEHB31-.LFB1359
 1186 0083 05       		.uleb128 .LEHE31-.LEHB31
 1187 0084 00       		.uleb128 0
 1188 0085 00       		.uleb128 0
 1189              	.LLSDACSE1359:
 1190 0086 03       		.byte	0x3
 1191 0087 00       		.byte	0
 1192 0088 02       		.byte	0x2
 1193 0089 7D       		.byte	0x7d
 1194 008a 01       		.byte	0x1
 1195 008b 7D       		.byte	0x7d
 1196 008c 00       		.byte	0
 1197 008d 7D       		.byte	0x7d
 1198 008e 0000     		.align 4
 1199 0090 00000000 		.long	0
 1200              	
 1201 0094 00000000 		.long	_ZTISt9exception
 1202 0098 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 1203              	.LLSDATT1359:
 1204              		.text
 1206              		.section	.rodata
 1207 0133 00000000 		.align 8
 1207      00
 1208              	.LC9:
 1209 0138 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(1, (int)reporter.GetResults().size())"
 1209      6E646C65 
 1209      64206578 
 1209      63657074 
 1209      696F6E20 
 1210              		.text
 1211 0625 90       		.align 2
 1213              	_ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestHelper
 1214              	.LFB1363:
  47:TestDeferredTestReporter.cpp **** {
 1215              		.loc 3 47 0 is_stmt 1
 1216              		.cfi_startproc
 1217              		.cfi_personality 0x3,__gxx_personality_v0
 1218              		.cfi_lsda 0x3,.LLSDA1363
 1219 0626 55       		pushq	%rbp
 1220              		.cfi_def_cfa_offset 16
 1221              		.cfi_offset 6, -16
 1222 0627 4889E5   		movq	%rsp, %rbp
 1223              		.cfi_def_cfa_register 6
 1224 062a 53       		pushq	%rbx
 1225 062b 4883EC58 		subq	$88, %rsp
 1226              		.cfi_offset 3, -24
 1227 062f 48897DA8 		movq	%rdi, -88(%rbp)
 1228              		.loc 3 47 0
 1229 0633 64488B04 		movq	%fs:40, %rax
 1229      25280000 
 1229      00
 1230 063c 488945E8 		movq	%rax, -24(%rbp)
 1231 0640 31C0     		xorl	%eax, %eax
  48:TestDeferredTestReporter.cpp ****     reporter.ReportTestStart(details);
 1232              		.loc 3 48 0
 1233 0642 488B45A8 		movq	-88(%rbp), %rax
 1234 0646 488D5040 		leaq	64(%rax), %rdx
 1235 064a 488B45A8 		movq	-88(%rbp), %rax
 1236 064e 4889D6   		movq	%rdx, %rsi
 1237 0651 4889C7   		movq	%rax, %rdi
 1238              	.LEHB32:
 1239 0654 E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
 1239      00
 1240              	.LEHE32:
 1241              	.LEHB33:
  49:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(1, (int)reporter.GetResults().size());
 1242              		.loc 3 49 0
 1243 0659 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1243      00
 1244 065e 488B08   		movq	(%rax), %rcx
 1245 0661 488D45C0 		leaq	-64(%rbp), %rax
 1246 0665 BA310000 		movl	$49, %edx
 1246      00
 1247 066a 4889CE   		movq	%rcx, %rsi
 1248 066d 4889C7   		movq	%rax, %rdi
 1249 0670 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1249      00
 1250              		.loc 3 49 0 is_stmt 0 discriminator 2
 1251 0675 488B45A8 		movq	-88(%rbp), %rax
 1252 0679 4889C7   		movq	%rax, %rdi
 1253 067c E8000000 		call	_ZN8UnitTest20DeferredTestReporter10GetResultsEv
 1253      00
 1254 0681 4889C7   		movq	%rax, %rdi
 1255 0684 E8000000 		call	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv
 1255      00
 1256 0689 8945BC   		movl	%eax, -68(%rbp)
 1257 068c C745B801 		movl	$1, -72(%rbp)
 1257      000000
 1258 0693 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1258      00
 1259              		.loc 3 49 0 discriminator 4
 1260 0698 488B00   		movq	(%rax), %rax
 1261 069b 488D4DC0 		leaq	-64(%rbp), %rcx
 1262 069f 488D55BC 		leaq	-68(%rbp), %rdx
 1263 06a3 488D75B8 		leaq	-72(%rbp), %rsi
 1264 06a7 4889C7   		movq	%rax, %rdi
 1265 06aa E8000000 		call	_ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 1265      00
 1266              	.LEHE33:
  50:TestDeferredTestReporter.cpp **** }
 1267              		.loc 3 50 0 is_stmt 1
 1268 06af EB58     		jmp	.L80
 1269              	.L79:
 1270 06b1 4889C3   		movq	%rax, %rbx
  49:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(1, (int)reporter.GetResults().size());
 1271              		.loc 3 49 0
 1272 06b4 E8000000 		call	__cxa_end_catch
 1272      00
 1273 06b9 4889D8   		movq	%rbx, %rax
 1274 06bc 4889C7   		movq	%rax, %rdi
 1275              	.LEHB34:
 1276 06bf E8000000 		call	_Unwind_Resume
 1276      00
 1277              	.LEHE34:
 1278              	.L78:
 1279 06c4 4889C7   		movq	%rax, %rdi
 1280 06c7 E8000000 		call	__cxa_begin_catch
 1280      00
 1281              	.LEHB35:
 1282 06cc E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1282      00
 1283 06d1 488B08   		movq	(%rax), %rcx
 1284 06d4 488D45C0 		leaq	-64(%rbp), %rax
 1285 06d8 BA310000 		movl	$49, %edx
 1285      00
 1286 06dd 4889CE   		movq	%rcx, %rsi
 1287 06e0 4889C7   		movq	%rax, %rdi
 1288 06e3 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1288      00
  49:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(1, (int)reporter.GetResults().size());
 1289              		.loc 3 49 0 is_stmt 0 discriminator 12
 1290 06e8 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1290      00
 1291 06ed 488B00   		movq	(%rax), %rax
 1292 06f0 488D4DC0 		leaq	-64(%rbp), %rcx
 1293 06f4 BA000000 		movl	$.LC9, %edx
 1293      00
 1294 06f9 4889CE   		movq	%rcx, %rsi
 1295 06fc 4889C7   		movq	%rax, %rdi
 1296 06ff E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1296      00
 1297              	.LEHE35:
 1298              	.LEHB36:
  49:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(1, (int)reporter.GetResults().size());
 1299              		.loc 3 49 0 discriminator 16
 1300 0704 E8000000 		call	__cxa_end_catch
 1300      00
 1301              	.LEHE36:
 1302              	.L80:
 1303              		.loc 3 50 0 is_stmt 1
 1304 0709 90       		nop
 1305 070a 488B45E8 		movq	-24(%rbp), %rax
 1306 070e 64483304 		xorq	%fs:40, %rax
 1306      25280000 
 1306      00
 1307 0717 7405     		je	.L77
 1308 0719 E8000000 		call	__stack_chk_fail
 1308      00
 1309              	.L77:
 1310 071e 4883C458 		addq	$88, %rsp
 1311 0722 5B       		popq	%rbx
 1312 0723 5D       		popq	%rbp
 1313              		.cfi_def_cfa 7, 8
 1314 0724 C3       		ret
 1315              		.cfi_endproc
 1316              	.LFE1363:
 1317              		.section	.gcc_except_table
 1318              		.align 4
 1319              	.LLSDA1363:
 1320 009c FF       		.byte	0xff
 1321 009d 03       		.byte	0x3
 1322 009e 21       		.uleb128 .LLSDATT1363-.LLSDATTD1363
 1323              	.LLSDATTD1363:
 1324 009f 01       		.byte	0x1
 1325 00a0 19       		.uleb128 .LLSDACSE1363-.LLSDACSB1363
 1326              	.LLSDACSB1363:
 1327 00a1 2E       		.uleb128 .LEHB32-.LFB1363
 1328 00a2 05       		.uleb128 .LEHE32-.LEHB32
 1329 00a3 00       		.uleb128 0
 1330 00a4 00       		.uleb128 0
 1331 00a5 33       		.uleb128 .LEHB33-.LFB1363
 1332 00a6 56       		.uleb128 .LEHE33-.LEHB33
 1333 00a7 9E01     		.uleb128 .L78-.LFB1363
 1334 00a9 01       		.uleb128 0x1
 1335 00aa 9901     		.uleb128 .LEHB34-.LFB1363
 1336 00ac 05       		.uleb128 .LEHE34-.LEHB34
 1337 00ad 00       		.uleb128 0
 1338 00ae 00       		.uleb128 0
 1339 00af A601     		.uleb128 .LEHB35-.LFB1363
 1340 00b1 38       		.uleb128 .LEHE35-.LEHB35
 1341 00b2 8B01     		.uleb128 .L79-.LFB1363
 1342 00b4 00       		.uleb128 0
 1343 00b5 DE01     		.uleb128 .LEHB36-.LFB1363
 1344 00b7 05       		.uleb128 .LEHE36-.LEHB36
 1345 00b8 00       		.uleb128 0
 1346 00b9 00       		.uleb128 0
 1347              	.LLSDACSE1363:
 1348 00ba 01       		.byte	0x1
 1349 00bb 00       		.byte	0
 1350              		.align 4
 1351 00bc 00000000 		.long	0
 1352              	
 1353              	.LLSDATT1363:
 1354              		.text
 1356 0725 90       		.align 2
 1358              	_ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteHelpe
 1359              	.LFB1365:
  51:TestDeferredTestReporter.cpp **** 
  52:TestDeferredTestReporter.cpp **** TEST_FIXTURE(DeferredTestReporterFixture, ReportTestStartCapturesTestNameAndSuite)
 1360              		.loc 3 52 0
 1361              		.cfi_startproc
 1362 0726 55       		pushq	%rbp
 1363              		.cfi_def_cfa_offset 16
 1364              		.cfi_offset 6, -16
 1365 0727 4889E5   		movq	%rsp, %rbp
 1366              		.cfi_def_cfa_register 6
 1367 072a 4883EC10 		subq	$16, %rsp
 1368 072e 48897DF8 		movq	%rdi, -8(%rbp)
 1369 0732 488975F0 		movq	%rsi, -16(%rbp)
 1370              	.LBB28:
 1371              		.loc 3 52 0
 1372 0736 488B45F8 		movq	-8(%rbp), %rax
 1373 073a 4889C7   		movq	%rax, %rdi
 1374 073d E8FCF8FF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureC2Ev
 1374      FF
 1375 0742 488B45F8 		movq	-8(%rbp), %rax
 1376 0746 488B55F0 		movq	-16(%rbp), %rdx
 1377 074a 48895060 		movq	%rdx, 96(%rax)
 1378              	.LBE28:
 1379 074e C9       		leave
 1380              		.cfi_def_cfa 7, 8
 1381 074f C3       		ret
 1382              		.cfi_endproc
 1383              	.LFE1365:
 1385              		.section	.rodata
 1386 0181 00000000 		.align 8
 1386      000000
 1387              	.LC10:
 1388 0188 5265706F 		.string	"ReportTestStartCapturesTestNameAndSuite"
 1388      72745465 
 1388      73745374 
 1388      61727443 
 1388      61707475 
 1389              		.text
 1390              		.align 2
 1392              	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteC
 1393              	.LFB1368:
 1394              		.loc 3 52 0
 1395              		.cfi_startproc
 1396 0750 55       		pushq	%rbp
 1397              		.cfi_def_cfa_offset 16
 1398              		.cfi_offset 6, -16
 1399 0751 4889E5   		movq	%rsp, %rbp
 1400              		.cfi_def_cfa_register 6
 1401 0754 4883EC10 		subq	$16, %rsp
 1402 0758 48897DF8 		movq	%rdi, -8(%rbp)
 1403              	.LBB29:
 1404              		.loc 3 52 0
 1405 075c E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 1405      00
 1406 0761 4889C2   		movq	%rax, %rdx
 1407 0764 488B45F8 		movq	-8(%rbp), %rax
 1408 0768 41B83400 		movl	$52, %r8d
 1408      0000
 1409 076e B9000000 		movl	$.LC4, %ecx
 1409      00
 1410 0773 BE000000 		movl	$.LC10, %esi
 1410      00
 1411 0778 4889C7   		movq	%rax, %rdi
 1412 077b E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 1412      00
 1413 0780 488B45F8 		movq	-8(%rbp), %rax
 1414 0784 48C70000 		movq	$_ZTVN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestName
 1414      000000
 1415              	.LBE29:
 1416 078b C9       		leave
 1417              		.cfi_def_cfa 7, 8
 1418 078c C3       		ret
 1419              		.cfi_endproc
 1420              	.LFE1368:
 1422              		.local	_ZN8UnitTest12_GLOBAL__N_178testDeferredTestReporterFixtureReportTestStartCapturesTestNameA
 1423              		.comm	_ZN8UnitTest12_GLOBAL__N_178testDeferredTestReporterFixtureReportTestStartCapturesTestNameAn
 1424              		.local	_ZN8UnitTest12_GLOBAL__N_171adderDeferredTestReporterFixtureReportTestStartCapturesTestName
 1425              		.comm	_ZN8UnitTest12_GLOBAL__N_171adderDeferredTestReporterFixtureReportTestStartCapturesTestNameA
 1426 078d 90       		.align 2
 1428              	_ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteHelpe
 1429              	.LFB1372:
 1430              		.loc 3 52 0
 1431              		.cfi_startproc
 1432 078e 55       		pushq	%rbp
 1433              		.cfi_def_cfa_offset 16
 1434              		.cfi_offset 6, -16
 1435 078f 4889E5   		movq	%rsp, %rbp
 1436              		.cfi_def_cfa_register 6
 1437 0792 4883EC10 		subq	$16, %rsp
 1438 0796 48897DF8 		movq	%rdi, -8(%rbp)
 1439              	.LBB30:
 1440              		.loc 3 52 0
 1441 079a 488B45F8 		movq	-8(%rbp), %rax
 1442 079e 4889C7   		movq	%rax, %rdi
 1443 07a1 E862FAFF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureD2Ev
 1443      FF
 1444              	.LBE30:
 1445 07a6 C9       		leave
 1446              		.cfi_def_cfa 7, 8
 1447 07a7 C3       		ret
 1448              		.cfi_endproc
 1449              	.LFE1372:
 1451              		.align 2
 1453              	_ZNK8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuite
 1454              	.LFB1370:
 1455              		.loc 3 52 0
 1456              		.cfi_startproc
 1457              		.cfi_personality 0x3,__gxx_personality_v0
 1458              		.cfi_lsda 0x3,.LLSDA1370
 1459 07a8 55       		pushq	%rbp
 1460              		.cfi_def_cfa_offset 16
 1461              		.cfi_offset 6, -16
 1462 07a9 4889E5   		movq	%rsp, %rbp
 1463              		.cfi_def_cfa_register 6
 1464 07ac 4154     		pushq	%r12
 1465 07ae 53       		pushq	%rbx
 1466 07af 4881EC10 		subq	$528, %rsp
 1466      020000
 1467              		.cfi_offset 12, -24
 1468              		.cfi_offset 3, -32
 1469 07b6 4889BDE8 		movq	%rdi, -536(%rbp)
 1469      FDFFFF
 1470              		.loc 3 52 0
 1471 07bd 64488B04 		movq	%fs:40, %rax
 1471      25280000 
 1471      00
 1472 07c6 488945E8 		movq	%rax, -24(%rbp)
 1473 07ca 31C0     		xorl	%eax, %eax
 1474              	.LBB31:
 1475 07cc C685FFFD 		movb	$0, -513(%rbp)
 1475      FFFF00
 1476              	.LBB32:
 1477 07d3 488B85E8 		movq	-536(%rbp), %rax
 1477      FDFFFF
 1478 07da 488D5008 		leaq	8(%rax), %rdx
 1479 07de 488D8510 		leaq	-496(%rbp), %rax
 1479      FEFFFF
 1480 07e5 4889D6   		movq	%rdx, %rsi
 1481 07e8 4889C7   		movq	%rax, %rdi
 1482              	.LEHB37:
 1483 07eb E836FFFF 		call	_ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuit
 1483      FF
 1484              	.LEHE37:
 1485              		.loc 3 52 0 is_stmt 0 discriminator 1
 1486 07f0 C685FFFD 		movb	$1, -513(%rbp)
 1486      FFFF01
 1487 07f7 488B85E8 		movq	-536(%rbp), %rax
 1487      FDFFFF
 1488 07fe 488D5008 		leaq	8(%rax), %rdx
 1489 0802 488D8510 		leaq	-496(%rbp), %rax
 1489      FEFFFF
 1490 0809 4889D6   		movq	%rdx, %rsi
 1491 080c 4889C7   		movq	%rax, %rdi
 1492              	.LEHB38:
 1493 080f E8F21C00 		call	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCaptur
 1493      00
 1494              	.LEHE38:
 1495              		.loc 3 52 0 discriminator 3
 1496 0814 488D8510 		leaq	-496(%rbp), %rax
 1496      FEFFFF
 1497 081b 4889C7   		movq	%rax, %rdi
 1498              	.LEHB39:
 1499 081e E86BFFFF 		call	_ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuit
 1499      FF
 1500              	.LEHE39:
 1501              	.LBE32:
 1502              	.LBE31:
 1503              		.loc 3 52 0
 1504 0823 E9640200 		jmp	.L106
 1504      00
 1505              	.L100:
 1506 0828 4989C4   		movq	%rax, %r12
 1507 082b 4889D3   		movq	%rdx, %rbx
 1508              	.LBB40:
 1509              	.LBB33:
 1510 082e 488D8510 		leaq	-496(%rbp), %rax
 1510      FEFFFF
 1511 0835 4889C7   		movq	%rax, %rdi
 1512 0838 E851FFFF 		call	_ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuit
 1512      FF
 1513 083d 4C89E0   		movq	%r12, %rax
 1514 0840 4889DA   		movq	%rbx, %rdx
 1515 0843 EB00     		jmp	.L87
 1516              	.L99:
 1517              	.L87:
 1518 0845 4883FA01 		cmpq	$1, %rdx
 1519 0849 745C     		je	.L89
 1520 084b 4883FA02 		cmpq	$2, %rdx
 1521 084f 0F84F400 		je	.L90
 1521      0000
 1522 0855 E9980100 		jmp	.L105
 1522      00
 1523              	.L101:
 1524 085a 4889C3   		movq	%rax, %rbx
 1525              	.LBE33:
 1526              	.LBB34:
 1527 085d E8000000 		call	__cxa_end_catch
 1527      00
 1528 0862 4889D8   		movq	%rbx, %rax
 1529 0865 4889C7   		movq	%rax, %rdi
 1530              	.LEHB40:
 1531 0868 E8000000 		call	_Unwind_Resume
 1531      00
 1532              	.LEHE40:
 1533              	.L102:
 1534 086d 4889C3   		movq	%rax, %rbx
 1535              	.LBE34:
 1536              	.LBB35:
 1537              	.LBB36:
 1538 0870 488D8580 		leaq	-384(%rbp), %rax
 1538      FEFFFF
 1539 0877 4889C7   		movq	%rax, %rdi
 1540 087a E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 1540      00
 1541 087f EB03     		jmp	.L93
 1542              	.L103:
 1543 0881 4889C3   		movq	%rax, %rbx
 1544              	.L93:
 1545              	.LBE36:
 1546 0884 E8000000 		call	__cxa_end_catch
 1546      00
 1547 0889 4889D8   		movq	%rbx, %rax
 1548 088c 4889C7   		movq	%rax, %rdi
 1549              	.LEHB41:
 1550 088f E8000000 		call	_Unwind_Resume
 1550      00
 1551              	.LEHE41:
 1552              	.L104:
 1553 0894 4889C3   		movq	%rax, %rbx
 1554              	.LBE35:
 1555 0897 E8000000 		call	__cxa_end_catch
 1555      00
 1556 089c 4889D8   		movq	%rbx, %rax
 1557 089f 4889C7   		movq	%rax, %rdi
 1558              	.LEHB42:
 1559 08a2 E8000000 		call	_Unwind_Resume
 1559      00
 1560              	.LEHE42:
 1561              	.L89:
 1562              	.LBB38:
 1563 08a7 4889C7   		movq	%rax, %rdi
 1564 08aa E8000000 		call	__cxa_begin_catch
 1564      00
 1565 08af 48898500 		movq	%rax, -512(%rbp)
 1565      FEFFFF
 1566 08b6 488B8500 		movq	-512(%rbp), %rax
 1566      FEFFFF
 1567 08bd 488B00   		movq	(%rax), %rax
 1568 08c0 4883C010 		addq	$16, %rax
 1569 08c4 488B00   		movq	(%rax), %rax
 1570 08c7 488B9500 		movq	-512(%rbp), %rdx
 1570      FEFFFF
 1571 08ce 4889D7   		movq	%rdx, %rdi
 1572 08d1 FFD0     		call	*%rax
 1573 08d3 4889C3   		movq	%rax, %rbx
 1574 08d6 488B8500 		movq	-512(%rbp), %rax
 1574      FEFFFF
 1575 08dd 4889C7   		movq	%rax, %rdi
 1576              	.LEHB43:
 1577 08e0 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 1577      00
 1578 08e5 4189C4   		movl	%eax, %r12d
 1579 08e8 488B8500 		movq	-512(%rbp), %rax
 1579      FEFFFF
 1580 08ef 4889C7   		movq	%rax, %rdi
 1581 08f2 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 1581      00
 1582              		.loc 3 52 0 discriminator 5
 1583 08f7 4889C1   		movq	%rax, %rcx
 1584 08fa 488B85E8 		movq	-536(%rbp), %rax
 1584      FDFFFF
 1585 0901 488B5008 		movq	8(%rax), %rdx
 1586 0905 488B85E8 		movq	-536(%rbp), %rax
 1586      FDFFFF
 1587 090c 488B7010 		movq	16(%rax), %rsi
 1588 0910 488D8510 		leaq	-496(%rbp), %rax
 1588      FEFFFF
 1589 0917 4589E0   		movl	%r12d, %r8d
 1590 091a 4889C7   		movq	%rax, %rdi
 1591 091d E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 1591      00
 1592              		.loc 3 52 0 discriminator 9
 1593 0922 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1593      00
 1594 0927 488B00   		movq	(%rax), %rax
 1595 092a 488D8D10 		leaq	-496(%rbp), %rcx
 1595      FEFFFF
 1596 0931 4889DA   		movq	%rbx, %rdx
 1597 0934 4889CE   		movq	%rcx, %rsi
 1598 0937 4889C7   		movq	%rax, %rdi
 1599 093a E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1599      00
 1600              	.LEHE43:
 1601              		.loc 3 52 0 discriminator 13
 1602 093f E8000000 		call	__cxa_end_catch
 1602      00
 1603              	.LBE38:
 1604              	.LBE40:
 1605 0944 E9430100 		jmp	.L106
 1605      00
 1606              	.L90:
 1607              	.LBB41:
 1608              	.LBB39:
 1609              		.loc 3 52 0
 1610 0949 4889C7   		movq	%rax, %rdi
 1611 094c E8000000 		call	__cxa_begin_catch
 1611      00
 1612 0951 48898508 		movq	%rax, -504(%rbp)
 1612      FEFFFF
 1613              	.LBB37:
 1614 0958 488D8580 		leaq	-384(%rbp), %rax
 1614      FEFFFF
 1615 095f 4889C7   		movq	%rax, %rdi
 1616              	.LEHB44:
 1617 0962 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 1617      00
 1618              	.LEHE44:
 1619              		.loc 3 52 0 discriminator 15
 1620 0967 488B8508 		movq	-504(%rbp), %rax
 1620      FEFFFF
 1621 096e 488B00   		movq	(%rax), %rax
 1622 0971 4883C010 		addq	$16, %rax
 1623 0975 488B00   		movq	(%rax), %rax
 1624 0978 488B9508 		movq	-504(%rbp), %rdx
 1624      FEFFFF
 1625 097f 4889D7   		movq	%rdx, %rdi
 1626 0982 FFD0     		call	*%rax
 1627 0984 4889C3   		movq	%rax, %rbx
 1628 0987 488D8580 		leaq	-384(%rbp), %rax
 1628      FEFFFF
 1629 098e BE000000 		movl	$.LC6, %esi
 1629      00
 1630 0993 4889C7   		movq	%rax, %rdi
 1631              	.LEHB45:
 1632 0996 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 1632      00
 1633 099b 4889DE   		movq	%rbx, %rsi
 1634 099e 4889C7   		movq	%rax, %rdi
 1635 09a1 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 1635      00
 1636              		.loc 3 52 0 discriminator 19
 1637 09a6 488D8580 		leaq	-384(%rbp), %rax
 1637      FEFFFF
 1638 09ad 4889C7   		movq	%rax, %rdi
 1639 09b0 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 1639      00
 1640 09b5 4989C4   		movq	%rax, %r12
 1641 09b8 488B85E8 		movq	-536(%rbp), %rax
 1641      FDFFFF
 1642 09bf 488D5808 		leaq	8(%rax), %rbx
 1643 09c3 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1643      00
 1644              		.loc 3 52 0 discriminator 21
 1645 09c8 488B00   		movq	(%rax), %rax
 1646 09cb 4C89E2   		movq	%r12, %rdx
 1647 09ce 4889DE   		movq	%rbx, %rsi
 1648 09d1 4889C7   		movq	%rax, %rdi
 1649 09d4 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1649      00
 1650              	.LEHE45:
 1651              		.loc 3 52 0 discriminator 25
 1652 09d9 488D8580 		leaq	-384(%rbp), %rax
 1652      FEFFFF
 1653 09e0 4889C7   		movq	%rax, %rdi
 1654              	.LEHB46:
 1655 09e3 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 1655      00
 1656              	.LEHE46:
 1657              	.LBE37:
 1658              		.loc 3 52 0 discriminator 26
 1659 09e8 E8000000 		call	__cxa_end_catch
 1659      00
 1660              	.LBE39:
 1661              	.LBE41:
 1662 09ed E99A0000 		jmp	.L106
 1662      00
 1663              	.L105:
 1664              	.LBB42:
 1665              		.loc 3 52 0
 1666 09f2 4889C7   		movq	%rax, %rdi
 1667 09f5 E8000000 		call	__cxa_begin_catch
 1667      00
 1668 09fa 80BDFFFD 		cmpb	$0, -513(%rbp)
 1668      FFFF00
 1669 0a01 7443     		je	.L96
 1670              		.loc 3 52 0 discriminator 28
 1671 0a03 488B85E8 		movq	-536(%rbp), %rax
 1671      FDFFFF
 1672 0a0a 488D4808 		leaq	8(%rax), %rcx
 1673 0a0e 488D8510 		leaq	-496(%rbp), %rax
 1673      FEFFFF
 1674 0a15 BA340000 		movl	$52, %edx
 1674      00
 1675 0a1a 4889CE   		movq	%rcx, %rsi
 1676 0a1d 4889C7   		movq	%rax, %rdi
 1677              	.LEHB47:
 1678 0a20 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1678      00
 1679              		.loc 3 52 0 discriminator 31
 1680 0a25 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1680      00
 1681 0a2a 488B00   		movq	(%rax), %rax
 1682 0a2d 488D8D10 		leaq	-496(%rbp), %rcx
 1682      FEFFFF
 1683 0a34 BA000000 		movl	$.LC7, %edx
 1683      00
 1684 0a39 4889CE   		movq	%rcx, %rsi
 1685 0a3c 4889C7   		movq	%rax, %rdi
 1686 0a3f E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1686      00
 1687 0a44 EB41     		jmp	.L97
 1688              	.L96:
 1689              		.loc 3 52 0 discriminator 29
 1690 0a46 488B85E8 		movq	-536(%rbp), %rax
 1690      FDFFFF
 1691 0a4d 488D4808 		leaq	8(%rax), %rcx
 1692 0a51 488D8510 		leaq	-496(%rbp), %rax
 1692      FEFFFF
 1693 0a58 BA340000 		movl	$52, %edx
 1693      00
 1694 0a5d 4889CE   		movq	%rcx, %rsi
 1695 0a60 4889C7   		movq	%rax, %rdi
 1696 0a63 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1696      00
 1697              		.loc 3 52 0 discriminator 38
 1698 0a68 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1698      00
 1699 0a6d 488B00   		movq	(%rax), %rax
 1700 0a70 488D8D10 		leaq	-496(%rbp), %rcx
 1700      FEFFFF
 1701 0a77 BA000000 		movl	$.LC8, %edx
 1701      00
 1702 0a7c 4889CE   		movq	%rcx, %rsi
 1703 0a7f 4889C7   		movq	%rax, %rdi
 1704 0a82 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1704      00
 1705              	.LEHE47:
 1706              	.L97:
 1707              	.LEHB48:
 1708              		.loc 3 52 0 discriminator 43
 1709 0a87 E8000000 		call	__cxa_end_catch
 1709      00
 1710              	.LEHE48:
 1711              	.L106:
 1712              	.LBE42:
 1713              		.loc 3 52 0
 1714 0a8c 90       		nop
 1715 0a8d 488B45E8 		movq	-24(%rbp), %rax
 1716 0a91 64483304 		xorq	%fs:40, %rax
 1716      25280000 
 1716      00
 1717 0a9a 7405     		je	.L98
 1718 0a9c E8000000 		call	__stack_chk_fail
 1718      00
 1719              	.L98:
 1720 0aa1 4881C410 		addq	$528, %rsp
 1720      020000
 1721 0aa8 5B       		popq	%rbx
 1722 0aa9 415C     		popq	%r12
 1723 0aab 5D       		popq	%rbp
 1724              		.cfi_def_cfa 7, 8
 1725 0aac C3       		ret
 1726              		.cfi_endproc
 1727              	.LFE1370:
 1728              		.section	.gcc_except_table
 1729              		.align 4
 1730              	.LLSDA1370:
 1731 00c0 FF       		.byte	0xff
 1732 00c1 03       		.byte	0x3
 1733 00c2 59       		.uleb128 .LLSDATT1370-.LLSDATTD1370
 1734              	.LLSDATTD1370:
 1735 00c3 01       		.byte	0x1
 1736 00c4 41       		.uleb128 .LLSDACSE1370-.LLSDACSB1370
 1737              	.LLSDACSB1370:
 1738 00c5 43       		.uleb128 .LEHB37-.LFB1370
 1739 00c6 05       		.uleb128 .LEHE37-.LEHB37
 1740 00c7 9D01     		.uleb128 .L99-.LFB1370
 1741 00c9 05       		.uleb128 0x5
 1742 00ca 67       		.uleb128 .LEHB38-.LFB1370
 1743 00cb 05       		.uleb128 .LEHE38-.LEHB38
 1744 00cc 8001     		.uleb128 .L100-.LFB1370
 1745 00ce 07       		.uleb128 0x7
 1746 00cf 76       		.uleb128 .LEHB39-.LFB1370
 1747 00d0 05       		.uleb128 .LEHE39-.LEHB39
 1748 00d1 9D01     		.uleb128 .L99-.LFB1370
 1749 00d3 05       		.uleb128 0x5
 1750 00d4 C001     		.uleb128 .LEHB40-.LFB1370
 1751 00d6 05       		.uleb128 .LEHE40-.LEHB40
 1752 00d7 00       		.uleb128 0
 1753 00d8 00       		.uleb128 0
 1754 00d9 E701     		.uleb128 .LEHB41-.LFB1370
 1755 00db 05       		.uleb128 .LEHE41-.LEHB41
 1756 00dc 00       		.uleb128 0
 1757 00dd 00       		.uleb128 0
 1758 00de FA01     		.uleb128 .LEHB42-.LFB1370
 1759 00e0 05       		.uleb128 .LEHE42-.LEHB42
 1760 00e1 00       		.uleb128 0
 1761 00e2 00       		.uleb128 0
 1762 00e3 B802     		.uleb128 .LEHB43-.LFB1370
 1763 00e5 5F       		.uleb128 .LEHE43-.LEHB43
 1764 00e6 B201     		.uleb128 .L101-.LFB1370
 1765 00e8 00       		.uleb128 0
 1766 00e9 BA03     		.uleb128 .LEHB44-.LFB1370
 1767 00eb 05       		.uleb128 .LEHE44-.LEHB44
 1768 00ec D901     		.uleb128 .L103-.LFB1370
 1769 00ee 00       		.uleb128 0
 1770 00ef EE03     		.uleb128 .LEHB45-.LFB1370
 1771 00f1 43       		.uleb128 .LEHE45-.LEHB45
 1772 00f2 C501     		.uleb128 .L102-.LFB1370
 1773 00f4 00       		.uleb128 0
 1774 00f5 BB04     		.uleb128 .LEHB46-.LFB1370
 1775 00f7 05       		.uleb128 .LEHE46-.LEHB46
 1776 00f8 D901     		.uleb128 .L103-.LFB1370
 1777 00fa 00       		.uleb128 0
 1778 00fb F804     		.uleb128 .LEHB47-.LFB1370
 1779 00fd 67       		.uleb128 .LEHE47-.LEHB47
 1780 00fe EC01     		.uleb128 .L104-.LFB1370
 1781 0100 00       		.uleb128 0
 1782 0101 DF05     		.uleb128 .LEHB48-.LFB1370
 1783 0103 05       		.uleb128 .LEHE48-.LEHB48
 1784 0104 00       		.uleb128 0
 1785 0105 00       		.uleb128 0
 1786              	.LLSDACSE1370:
 1787 0106 03       		.byte	0x3
 1788 0107 00       		.byte	0
 1789 0108 02       		.byte	0x2
 1790 0109 7D       		.byte	0x7d
 1791 010a 01       		.byte	0x1
 1792 010b 7D       		.byte	0x7d
 1793 010c 00       		.byte	0
 1794 010d 7D       		.byte	0x7d
 1795 010e 0000     		.align 4
 1796 0110 00000000 		.long	0
 1797              	
 1798 0114 00000000 		.long	_ZTISt9exception
 1799 0118 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 1800              	.LLSDATT1370:
 1801              		.text
 1803              		.section	.rodata
 1804              		.align 8
 1805              	.LC11:
 1806 01b0 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(testName.c_str(), result.testName)"
 1806      6E646C65 
 1806      64206578 
 1806      63657074 
 1806      696F6E20 
 1807 01f6 0000     		.align 8
 1808              	.LC12:
 1809 01f8 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(testSuite.c_str(), result.suiteName)"
 1809      6E646C65 
 1809      64206578 
 1809      63657074 
 1809      696F6E20 
 1810              		.text
 1811 0aad 90       		.align 2
 1813              	_ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteHelpe
 1814              	.LFB1374:
  53:TestDeferredTestReporter.cpp **** {
 1815              		.loc 3 53 0 is_stmt 1
 1816              		.cfi_startproc
 1817              		.cfi_personality 0x3,__gxx_personality_v0
 1818              		.cfi_lsda 0x3,.LLSDA1374
 1819 0aae 55       		pushq	%rbp
 1820              		.cfi_def_cfa_offset 16
 1821              		.cfi_offset 6, -16
 1822 0aaf 4889E5   		movq	%rsp, %rbp
 1823              		.cfi_def_cfa_register 6
 1824 0ab2 53       		pushq	%rbx
 1825 0ab3 4883EC58 		subq	$88, %rsp
 1826              		.cfi_offset 3, -24
 1827 0ab7 48897DA8 		movq	%rdi, -88(%rbp)
 1828              		.loc 3 53 0
 1829 0abb 64488B04 		movq	%fs:40, %rax
 1829      25280000 
 1829      00
 1830 0ac4 488945E8 		movq	%rax, -24(%rbp)
 1831 0ac8 31C0     		xorl	%eax, %eax
 1832              	.LBB43:
  54:TestDeferredTestReporter.cpp ****     reporter.ReportTestStart(details);
 1833              		.loc 3 54 0
 1834 0aca 488B45A8 		movq	-88(%rbp), %rax
 1835 0ace 488D5040 		leaq	64(%rax), %rdx
 1836 0ad2 488B45A8 		movq	-88(%rbp), %rax
 1837 0ad6 4889D6   		movq	%rdx, %rsi
 1838 0ad9 4889C7   		movq	%rax, %rdi
 1839              	.LEHB49:
 1840 0adc E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
 1840      00
  55:TestDeferredTestReporter.cpp **** 
  56:TestDeferredTestReporter.cpp ****     DeferredTestResult const& result = reporter.GetResults().at(0);
 1841              		.loc 3 56 0
 1842 0ae1 488B45A8 		movq	-88(%rbp), %rax
 1843 0ae5 4889C7   		movq	%rax, %rdi
 1844 0ae8 E8000000 		call	_ZN8UnitTest20DeferredTestReporter10GetResultsEv
 1844      00
 1845 0aed BE000000 		movl	$0, %esi
 1845      00
 1846 0af2 4889C7   		movq	%rax, %rdi
 1847 0af5 E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm
 1847      00
 1848              	.LEHE49:
 1849 0afa 488945B8 		movq	%rax, -72(%rbp)
 1850              	.LEHB50:
  57:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testName.c_str(), result.testName);
 1851              		.loc 3 57 0
 1852 0afe E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1852      00
 1853 0b03 488B08   		movq	(%rax), %rcx
 1854 0b06 488D45C0 		leaq	-64(%rbp), %rax
 1855 0b0a BA390000 		movl	$57, %edx
 1855      00
 1856 0b0f 4889CE   		movq	%rcx, %rsi
 1857 0b12 4889C7   		movq	%rax, %rdi
 1858 0b15 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1858      00
 1859              		.loc 3 57 0 is_stmt 0 discriminator 2
 1860 0b1a 488B45B8 		movq	-72(%rbp), %rax
 1861 0b1e 488D5808 		leaq	8(%rax), %rbx
 1862 0b22 488B45A8 		movq	-88(%rbp), %rax
 1863 0b26 4883C020 		addq	$32, %rax
 1864 0b2a 4889C7   		movq	%rax, %rdi
 1865 0b2d E8000000 		call	_ZNKSs5c_strEv
 1865      00
 1866 0b32 488945B0 		movq	%rax, -80(%rbp)
 1867 0b36 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1867      00
 1868              		.loc 3 57 0 discriminator 4
 1869 0b3b 488B00   		movq	(%rax), %rax
 1870 0b3e 488D55C0 		leaq	-64(%rbp), %rdx
 1871 0b42 488D75B0 		leaq	-80(%rbp), %rsi
 1872 0b46 4889D1   		movq	%rdx, %rcx
 1873 0b49 4889DA   		movq	%rbx, %rdx
 1874 0b4c 4889C7   		movq	%rax, %rdi
 1875 0b4f E8000000 		call	_ZN8UnitTest10CheckEqualIPKcSsEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 1875      00
 1876              	.LEHE50:
 1877              	.L110:
 1878              	.LEHB51:
  58:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testSuite.c_str(), result.suiteName);
 1879              		.loc 3 58 0 is_stmt 1
 1880 0b54 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1880      00
 1881 0b59 488B08   		movq	(%rax), %rcx
 1882 0b5c 488D45C0 		leaq	-64(%rbp), %rax
 1883 0b60 BA3A0000 		movl	$58, %edx
 1883      00
 1884 0b65 4889CE   		movq	%rcx, %rsi
 1885 0b68 4889C7   		movq	%rax, %rdi
 1886 0b6b E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1886      00
 1887              		.loc 3 58 0 is_stmt 0 discriminator 2
 1888 0b70 488B5DB8 		movq	-72(%rbp), %rbx
 1889 0b74 488B45A8 		movq	-88(%rbp), %rax
 1890 0b78 4883C028 		addq	$40, %rax
 1891 0b7c 4889C7   		movq	%rax, %rdi
 1892 0b7f E8000000 		call	_ZNKSs5c_strEv
 1892      00
 1893 0b84 488945B0 		movq	%rax, -80(%rbp)
 1894 0b88 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1894      00
 1895              		.loc 3 58 0 discriminator 4
 1896 0b8d 488B00   		movq	(%rax), %rax
 1897 0b90 488D55C0 		leaq	-64(%rbp), %rdx
 1898 0b94 488D75B0 		leaq	-80(%rbp), %rsi
 1899 0b98 4889D1   		movq	%rdx, %rcx
 1900 0b9b 4889DA   		movq	%rbx, %rdx
 1901 0b9e 4889C7   		movq	%rax, %rdi
 1902 0ba1 E8000000 		call	_ZN8UnitTest10CheckEqualIPKcSsEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 1902      00
 1903              	.LEHE51:
 1904              	.LBE43:
  59:TestDeferredTestReporter.cpp **** }
 1905              		.loc 3 59 0 is_stmt 1
 1906 0ba6 E9B50000 		jmp	.L119
 1906      00
 1907              	.L116:
 1908 0bab 4889C3   		movq	%rax, %rbx
 1909              	.LBB44:
  57:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testName.c_str(), result.testName);
 1910              		.loc 3 57 0
 1911 0bae E8000000 		call	__cxa_end_catch
 1911      00
 1912 0bb3 4889D8   		movq	%rbx, %rax
 1913 0bb6 4889C7   		movq	%rax, %rdi
 1914              	.LEHB52:
 1915 0bb9 E8000000 		call	_Unwind_Resume
 1915      00
 1916              	.LEHE52:
 1917              	.L115:
 1918 0bbe 4889C7   		movq	%rax, %rdi
 1919 0bc1 E8000000 		call	__cxa_begin_catch
 1919      00
 1920              	.LEHB53:
 1921 0bc6 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1921      00
 1922 0bcb 488B08   		movq	(%rax), %rcx
 1923 0bce 488D45C0 		leaq	-64(%rbp), %rax
 1924 0bd2 BA390000 		movl	$57, %edx
 1924      00
 1925 0bd7 4889CE   		movq	%rcx, %rsi
 1926 0bda 4889C7   		movq	%rax, %rdi
 1927 0bdd E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1927      00
  57:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testName.c_str(), result.testName);
 1928              		.loc 3 57 0 is_stmt 0 discriminator 12
 1929 0be2 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1929      00
 1930 0be7 488B00   		movq	(%rax), %rax
 1931 0bea 488D4DC0 		leaq	-64(%rbp), %rcx
 1932 0bee BA000000 		movl	$.LC11, %edx
 1932      00
 1933 0bf3 4889CE   		movq	%rcx, %rsi
 1934 0bf6 4889C7   		movq	%rax, %rdi
 1935 0bf9 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1935      00
 1936              	.LEHE53:
 1937              	.LEHB54:
  57:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testName.c_str(), result.testName);
 1938              		.loc 3 57 0 discriminator 16
 1939 0bfe E8000000 		call	__cxa_end_catch
 1939      00
 1940              	.LEHE54:
 1941 0c03 E94CFFFF 		jmp	.L110
 1941      FF
 1942              	.L118:
 1943 0c08 4889C3   		movq	%rax, %rbx
  58:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testSuite.c_str(), result.suiteName);
 1944              		.loc 3 58 0 is_stmt 1
 1945 0c0b E8000000 		call	__cxa_end_catch
 1945      00
 1946 0c10 4889D8   		movq	%rbx, %rax
 1947 0c13 4889C7   		movq	%rax, %rdi
 1948              	.LEHB55:
 1949 0c16 E8000000 		call	_Unwind_Resume
 1949      00
 1950              	.LEHE55:
 1951              	.L117:
 1952 0c1b 4889C7   		movq	%rax, %rdi
 1953 0c1e E8000000 		call	__cxa_begin_catch
 1953      00
 1954              	.LEHB56:
 1955 0c23 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1955      00
 1956 0c28 488B08   		movq	(%rax), %rcx
 1957 0c2b 488D45C0 		leaq	-64(%rbp), %rax
 1958 0c2f BA3A0000 		movl	$58, %edx
 1958      00
 1959 0c34 4889CE   		movq	%rcx, %rsi
 1960 0c37 4889C7   		movq	%rax, %rdi
 1961 0c3a E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1961      00
  58:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testSuite.c_str(), result.suiteName);
 1962              		.loc 3 58 0 is_stmt 0 discriminator 12
 1963 0c3f E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1963      00
 1964 0c44 488B00   		movq	(%rax), %rax
 1965 0c47 488D4DC0 		leaq	-64(%rbp), %rcx
 1966 0c4b BA000000 		movl	$.LC12, %edx
 1966      00
 1967 0c50 4889CE   		movq	%rcx, %rsi
 1968 0c53 4889C7   		movq	%rax, %rdi
 1969 0c56 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1969      00
 1970              	.LEHE56:
 1971              	.LEHB57:
  58:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testSuite.c_str(), result.suiteName);
 1972              		.loc 3 58 0 discriminator 16
 1973 0c5b E8000000 		call	__cxa_end_catch
 1973      00
 1974              	.LEHE57:
 1975              	.L119:
 1976              	.LBE44:
 1977              		.loc 3 59 0 is_stmt 1
 1978 0c60 90       		nop
 1979 0c61 488B45E8 		movq	-24(%rbp), %rax
 1980 0c65 64483304 		xorq	%fs:40, %rax
 1980      25280000 
 1980      00
 1981 0c6e 7405     		je	.L114
 1982 0c70 E8000000 		call	__stack_chk_fail
 1982      00
 1983              	.L114:
 1984 0c75 4883C458 		addq	$88, %rsp
 1985 0c79 5B       		popq	%rbx
 1986 0c7a 5D       		popq	%rbp
 1987              		.cfi_def_cfa 7, 8
 1988 0c7b C3       		ret
 1989              		.cfi_endproc
 1990              	.LFE1374:
 1991              		.section	.gcc_except_table
 1992              		.align 4
 1993              	.LLSDA1374:
 1994 011c FF       		.byte	0xff
 1995 011d 03       		.byte	0x3
 1996 011e 39       		.uleb128 .LLSDATT1374-.LLSDATTD1374
 1997              	.LLSDATTD1374:
 1998 011f 01       		.byte	0x1
 1999 0120 2F       		.uleb128 .LLSDACSE1374-.LLSDACSB1374
 2000              	.LLSDACSB1374:
 2001 0121 2E       		.uleb128 .LEHB49-.LFB1374
 2002 0122 1E       		.uleb128 .LEHE49-.LEHB49
 2003 0123 00       		.uleb128 0
 2004 0124 00       		.uleb128 0
 2005 0125 50       		.uleb128 .LEHB50-.LFB1374
 2006 0126 56       		.uleb128 .LEHE50-.LEHB50
 2007 0127 9002     		.uleb128 .L115-.LFB1374
 2008 0129 01       		.uleb128 0x1
 2009 012a A601     		.uleb128 .LEHB51-.LFB1374
 2010 012c 52       		.uleb128 .LEHE51-.LEHB51
 2011 012d ED02     		.uleb128 .L117-.LFB1374
 2012 012f 01       		.uleb128 0x1
 2013 0130 8B02     		.uleb128 .LEHB52-.LFB1374
 2014 0132 05       		.uleb128 .LEHE52-.LEHB52
 2015 0133 00       		.uleb128 0
 2016 0134 00       		.uleb128 0
 2017 0135 9802     		.uleb128 .LEHB53-.LFB1374
 2018 0137 38       		.uleb128 .LEHE53-.LEHB53
 2019 0138 FD01     		.uleb128 .L116-.LFB1374
 2020 013a 00       		.uleb128 0
 2021 013b D002     		.uleb128 .LEHB54-.LFB1374
 2022 013d 05       		.uleb128 .LEHE54-.LEHB54
 2023 013e 00       		.uleb128 0
 2024 013f 00       		.uleb128 0
 2025 0140 E802     		.uleb128 .LEHB55-.LFB1374
 2026 0142 05       		.uleb128 .LEHE55-.LEHB55
 2027 0143 00       		.uleb128 0
 2028 0144 00       		.uleb128 0
 2029 0145 F502     		.uleb128 .LEHB56-.LFB1374
 2030 0147 38       		.uleb128 .LEHE56-.LEHB56
 2031 0148 DA02     		.uleb128 .L118-.LFB1374
 2032 014a 00       		.uleb128 0
 2033 014b AD03     		.uleb128 .LEHB57-.LFB1374
 2034 014d 05       		.uleb128 .LEHE57-.LEHB57
 2035 014e 00       		.uleb128 0
 2036 014f 00       		.uleb128 0
 2037              	.LLSDACSE1374:
 2038 0150 01       		.byte	0x1
 2039 0151 00       		.byte	0
 2040 0152 0000     		.align 4
 2041 0154 00000000 		.long	0
 2042              	
 2043              	.LLSDATT1374:
 2044              		.text
 2046              		.align 2
 2048              	_ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperC2ERKNS_1
 2049              	.LFB1376:
  60:TestDeferredTestReporter.cpp **** 
  61:TestDeferredTestReporter.cpp **** TEST_FIXTURE(DeferredTestReporterFixture, ReportTestEndCapturesTestTime)
 2050              		.loc 3 61 0
 2051              		.cfi_startproc
 2052 0c7c 55       		pushq	%rbp
 2053              		.cfi_def_cfa_offset 16
 2054              		.cfi_offset 6, -16
 2055 0c7d 4889E5   		movq	%rsp, %rbp
 2056              		.cfi_def_cfa_register 6
 2057 0c80 4883EC10 		subq	$16, %rsp
 2058 0c84 48897DF8 		movq	%rdi, -8(%rbp)
 2059 0c88 488975F0 		movq	%rsi, -16(%rbp)
 2060              	.LBB45:
 2061              		.loc 3 61 0
 2062 0c8c 488B45F8 		movq	-8(%rbp), %rax
 2063 0c90 4889C7   		movq	%rax, %rdi
 2064 0c93 E8A6F3FF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureC2Ev
 2064      FF
 2065 0c98 488B45F8 		movq	-8(%rbp), %rax
 2066 0c9c 488B55F0 		movq	-16(%rbp), %rdx
 2067 0ca0 48895060 		movq	%rdx, 96(%rax)
 2068              	.LBE45:
 2069 0ca4 C9       		leave
 2070              		.cfi_def_cfa 7, 8
 2071 0ca5 C3       		ret
 2072              		.cfi_endproc
 2073              	.LFE1376:
 2075              		.section	.rodata
 2076              	.LC13:
 2077 0240 5265706F 		.string	"ReportTestEndCapturesTestTime"
 2077      72745465 
 2077      7374456E 
 2077      64436170 
 2077      74757265 
 2078              		.text
 2079              		.align 2
 2081              	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeC2Ev:
 2082              	.LFB1379:
 2083              		.loc 3 61 0
 2084              		.cfi_startproc
 2085 0ca6 55       		pushq	%rbp
 2086              		.cfi_def_cfa_offset 16
 2087              		.cfi_offset 6, -16
 2088 0ca7 4889E5   		movq	%rsp, %rbp
 2089              		.cfi_def_cfa_register 6
 2090 0caa 4883EC10 		subq	$16, %rsp
 2091 0cae 48897DF8 		movq	%rdi, -8(%rbp)
 2092              	.LBB46:
 2093              		.loc 3 61 0
 2094 0cb2 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 2094      00
 2095 0cb7 4889C2   		movq	%rax, %rdx
 2096 0cba 488B45F8 		movq	-8(%rbp), %rax
 2097 0cbe 41B83D00 		movl	$61, %r8d
 2097      0000
 2098 0cc4 B9000000 		movl	$.LC4, %ecx
 2098      00
 2099 0cc9 BE000000 		movl	$.LC13, %esi
 2099      00
 2100 0cce 4889C7   		movq	%rax, %rdi
 2101 0cd1 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 2101      00
 2102 0cd6 488B45F8 		movq	-8(%rbp), %rax
 2103 0cda 48C70000 		movq	$_ZTVN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE+
 2103      000000
 2104              	.LBE46:
 2105 0ce1 C9       		leave
 2106              		.cfi_def_cfa 7, 8
 2107 0ce2 C3       		ret
 2108              		.cfi_endproc
 2109              	.LFE1379:
 2111              		.local	_ZN8UnitTest12_GLOBAL__N_168testDeferredTestReporterFixtureReportTestEndCapturesTestTimeIns
 2112              		.comm	_ZN8UnitTest12_GLOBAL__N_168testDeferredTestReporterFixtureReportTestEndCapturesTestTimeInst
 2113              		.local	_ZN8UnitTest12_GLOBAL__N_161adderDeferredTestReporterFixtureReportTestEndCapturesTestTimeE
 2114              		.comm	_ZN8UnitTest12_GLOBAL__N_161adderDeferredTestReporterFixtureReportTestEndCapturesTestTimeE,1
 2115 0ce3 90       		.align 2
 2117              	_ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperD2Ev:
 2118              	.LFB1383:
 2119              		.loc 3 61 0
 2120              		.cfi_startproc
 2121 0ce4 55       		pushq	%rbp
 2122              		.cfi_def_cfa_offset 16
 2123              		.cfi_offset 6, -16
 2124 0ce5 4889E5   		movq	%rsp, %rbp
 2125              		.cfi_def_cfa_register 6
 2126 0ce8 4883EC10 		subq	$16, %rsp
 2127 0cec 48897DF8 		movq	%rdi, -8(%rbp)
 2128              	.LBB47:
 2129              		.loc 3 61 0
 2130 0cf0 488B45F8 		movq	-8(%rbp), %rax
 2131 0cf4 4889C7   		movq	%rax, %rdi
 2132 0cf7 E80CF5FF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureD2Ev
 2132      FF
 2133              	.LBE47:
 2134 0cfc C9       		leave
 2135              		.cfi_def_cfa 7, 8
 2136 0cfd C3       		ret
 2137              		.cfi_endproc
 2138              	.LFE1383:
 2140              		.align 2
 2142              	_ZNK8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTime7RunImplEv
 2143              	.LFB1381:
 2144              		.loc 3 61 0
 2145              		.cfi_startproc
 2146              		.cfi_personality 0x3,__gxx_personality_v0
 2147              		.cfi_lsda 0x3,.LLSDA1381
 2148 0cfe 55       		pushq	%rbp
 2149              		.cfi_def_cfa_offset 16
 2150              		.cfi_offset 6, -16
 2151 0cff 4889E5   		movq	%rsp, %rbp
 2152              		.cfi_def_cfa_register 6
 2153 0d02 4154     		pushq	%r12
 2154 0d04 53       		pushq	%rbx
 2155 0d05 4881EC10 		subq	$528, %rsp
 2155      020000
 2156              		.cfi_offset 12, -24
 2157              		.cfi_offset 3, -32
 2158 0d0c 4889BDE8 		movq	%rdi, -536(%rbp)
 2158      FDFFFF
 2159              		.loc 3 61 0
 2160 0d13 64488B04 		movq	%fs:40, %rax
 2160      25280000 
 2160      00
 2161 0d1c 488945E8 		movq	%rax, -24(%rbp)
 2162 0d20 31C0     		xorl	%eax, %eax
 2163              	.LBB48:
 2164 0d22 C685FFFD 		movb	$0, -513(%rbp)
 2164      FFFF00
 2165              	.LBB49:
 2166 0d29 488B85E8 		movq	-536(%rbp), %rax
 2166      FDFFFF
 2167 0d30 488D5008 		leaq	8(%rax), %rdx
 2168 0d34 488D8510 		leaq	-496(%rbp), %rax
 2168      FEFFFF
 2169 0d3b 4889D6   		movq	%rdx, %rsi
 2170 0d3e 4889C7   		movq	%rax, %rdi
 2171              	.LEHB58:
 2172 0d41 E836FFFF 		call	_ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperC2E
 2172      FF
 2173              	.LEHE58:
 2174              		.loc 3 61 0 is_stmt 0 discriminator 1
 2175 0d46 C685FFFD 		movb	$1, -513(%rbp)
 2175      FFFF01
 2176 0d4d 488B85E8 		movq	-536(%rbp), %rax
 2176      FDFFFF
 2177 0d54 488D5008 		leaq	8(%rax), %rdx
 2178 0d58 488D8510 		leaq	-496(%rbp), %rax
 2178      FEFFFF
 2179 0d5f 4889D6   		movq	%rdx, %rsi
 2180 0d62 4889C7   		movq	%rax, %rdi
 2181              	.LEHB59:
 2182 0d65 E85A1A00 		call	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCaptures
 2182      00
 2183              	.LEHE59:
 2184              		.loc 3 61 0 discriminator 3
 2185 0d6a 488D8510 		leaq	-496(%rbp), %rax
 2185      FEFFFF
 2186 0d71 4889C7   		movq	%rax, %rdi
 2187              	.LEHB60:
 2188 0d74 E86BFFFF 		call	_ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperD2E
 2188      FF
 2189              	.LEHE60:
 2190              	.LBE49:
 2191              	.LBE48:
 2192              		.loc 3 61 0
 2193 0d79 E9640200 		jmp	.L145
 2193      00
 2194              	.L139:
 2195 0d7e 4989C4   		movq	%rax, %r12
 2196 0d81 4889D3   		movq	%rdx, %rbx
 2197              	.LBB57:
 2198              	.LBB50:
 2199 0d84 488D8510 		leaq	-496(%rbp), %rax
 2199      FEFFFF
 2200 0d8b 4889C7   		movq	%rax, %rdi
 2201 0d8e E851FFFF 		call	_ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperD2E
 2201      FF
 2202 0d93 4C89E0   		movq	%r12, %rax
 2203 0d96 4889DA   		movq	%rbx, %rdx
 2204 0d99 EB00     		jmp	.L126
 2205              	.L138:
 2206              	.L126:
 2207 0d9b 4883FA01 		cmpq	$1, %rdx
 2208 0d9f 745C     		je	.L128
 2209 0da1 4883FA02 		cmpq	$2, %rdx
 2210 0da5 0F84F400 		je	.L129
 2210      0000
 2211 0dab E9980100 		jmp	.L144
 2211      00
 2212              	.L140:
 2213 0db0 4889C3   		movq	%rax, %rbx
 2214              	.LBE50:
 2215              	.LBB51:
 2216 0db3 E8000000 		call	__cxa_end_catch
 2216      00
 2217 0db8 4889D8   		movq	%rbx, %rax
 2218 0dbb 4889C7   		movq	%rax, %rdi
 2219              	.LEHB61:
 2220 0dbe E8000000 		call	_Unwind_Resume
 2220      00
 2221              	.LEHE61:
 2222              	.L141:
 2223 0dc3 4889C3   		movq	%rax, %rbx
 2224              	.LBE51:
 2225              	.LBB52:
 2226              	.LBB53:
 2227 0dc6 488D8580 		leaq	-384(%rbp), %rax
 2227      FEFFFF
 2228 0dcd 4889C7   		movq	%rax, %rdi
 2229 0dd0 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 2229      00
 2230 0dd5 EB03     		jmp	.L132
 2231              	.L142:
 2232 0dd7 4889C3   		movq	%rax, %rbx
 2233              	.L132:
 2234              	.LBE53:
 2235 0dda E8000000 		call	__cxa_end_catch
 2235      00
 2236 0ddf 4889D8   		movq	%rbx, %rax
 2237 0de2 4889C7   		movq	%rax, %rdi
 2238              	.LEHB62:
 2239 0de5 E8000000 		call	_Unwind_Resume
 2239      00
 2240              	.LEHE62:
 2241              	.L143:
 2242 0dea 4889C3   		movq	%rax, %rbx
 2243              	.LBE52:
 2244 0ded E8000000 		call	__cxa_end_catch
 2244      00
 2245 0df2 4889D8   		movq	%rbx, %rax
 2246 0df5 4889C7   		movq	%rax, %rdi
 2247              	.LEHB63:
 2248 0df8 E8000000 		call	_Unwind_Resume
 2248      00
 2249              	.LEHE63:
 2250              	.L128:
 2251              	.LBB55:
 2252 0dfd 4889C7   		movq	%rax, %rdi
 2253 0e00 E8000000 		call	__cxa_begin_catch
 2253      00
 2254 0e05 48898500 		movq	%rax, -512(%rbp)
 2254      FEFFFF
 2255 0e0c 488B8500 		movq	-512(%rbp), %rax
 2255      FEFFFF
 2256 0e13 488B00   		movq	(%rax), %rax
 2257 0e16 4883C010 		addq	$16, %rax
 2258 0e1a 488B00   		movq	(%rax), %rax
 2259 0e1d 488B9500 		movq	-512(%rbp), %rdx
 2259      FEFFFF
 2260 0e24 4889D7   		movq	%rdx, %rdi
 2261 0e27 FFD0     		call	*%rax
 2262 0e29 4889C3   		movq	%rax, %rbx
 2263 0e2c 488B8500 		movq	-512(%rbp), %rax
 2263      FEFFFF
 2264 0e33 4889C7   		movq	%rax, %rdi
 2265              	.LEHB64:
 2266 0e36 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 2266      00
 2267 0e3b 4189C4   		movl	%eax, %r12d
 2268 0e3e 488B8500 		movq	-512(%rbp), %rax
 2268      FEFFFF
 2269 0e45 4889C7   		movq	%rax, %rdi
 2270 0e48 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 2270      00
 2271              		.loc 3 61 0 discriminator 5
 2272 0e4d 4889C1   		movq	%rax, %rcx
 2273 0e50 488B85E8 		movq	-536(%rbp), %rax
 2273      FDFFFF
 2274 0e57 488B5008 		movq	8(%rax), %rdx
 2275 0e5b 488B85E8 		movq	-536(%rbp), %rax
 2275      FDFFFF
 2276 0e62 488B7010 		movq	16(%rax), %rsi
 2277 0e66 488D8510 		leaq	-496(%rbp), %rax
 2277      FEFFFF
 2278 0e6d 4589E0   		movl	%r12d, %r8d
 2279 0e70 4889C7   		movq	%rax, %rdi
 2280 0e73 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 2280      00
 2281              		.loc 3 61 0 discriminator 9
 2282 0e78 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2282      00
 2283 0e7d 488B00   		movq	(%rax), %rax
 2284 0e80 488D8D10 		leaq	-496(%rbp), %rcx
 2284      FEFFFF
 2285 0e87 4889DA   		movq	%rbx, %rdx
 2286 0e8a 4889CE   		movq	%rcx, %rsi
 2287 0e8d 4889C7   		movq	%rax, %rdi
 2288 0e90 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2288      00
 2289              	.LEHE64:
 2290              		.loc 3 61 0 discriminator 13
 2291 0e95 E8000000 		call	__cxa_end_catch
 2291      00
 2292              	.LBE55:
 2293              	.LBE57:
 2294 0e9a E9430100 		jmp	.L145
 2294      00
 2295              	.L129:
 2296              	.LBB58:
 2297              	.LBB56:
 2298              		.loc 3 61 0
 2299 0e9f 4889C7   		movq	%rax, %rdi
 2300 0ea2 E8000000 		call	__cxa_begin_catch
 2300      00
 2301 0ea7 48898508 		movq	%rax, -504(%rbp)
 2301      FEFFFF
 2302              	.LBB54:
 2303 0eae 488D8580 		leaq	-384(%rbp), %rax
 2303      FEFFFF
 2304 0eb5 4889C7   		movq	%rax, %rdi
 2305              	.LEHB65:
 2306 0eb8 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 2306      00
 2307              	.LEHE65:
 2308              		.loc 3 61 0 discriminator 15
 2309 0ebd 488B8508 		movq	-504(%rbp), %rax
 2309      FEFFFF
 2310 0ec4 488B00   		movq	(%rax), %rax
 2311 0ec7 4883C010 		addq	$16, %rax
 2312 0ecb 488B00   		movq	(%rax), %rax
 2313 0ece 488B9508 		movq	-504(%rbp), %rdx
 2313      FEFFFF
 2314 0ed5 4889D7   		movq	%rdx, %rdi
 2315 0ed8 FFD0     		call	*%rax
 2316 0eda 4889C3   		movq	%rax, %rbx
 2317 0edd 488D8580 		leaq	-384(%rbp), %rax
 2317      FEFFFF
 2318 0ee4 BE000000 		movl	$.LC6, %esi
 2318      00
 2319 0ee9 4889C7   		movq	%rax, %rdi
 2320              	.LEHB66:
 2321 0eec E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 2321      00
 2322 0ef1 4889DE   		movq	%rbx, %rsi
 2323 0ef4 4889C7   		movq	%rax, %rdi
 2324 0ef7 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 2324      00
 2325              		.loc 3 61 0 discriminator 19
 2326 0efc 488D8580 		leaq	-384(%rbp), %rax
 2326      FEFFFF
 2327 0f03 4889C7   		movq	%rax, %rdi
 2328 0f06 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 2328      00
 2329 0f0b 4989C4   		movq	%rax, %r12
 2330 0f0e 488B85E8 		movq	-536(%rbp), %rax
 2330      FDFFFF
 2331 0f15 488D5808 		leaq	8(%rax), %rbx
 2332 0f19 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2332      00
 2333              		.loc 3 61 0 discriminator 21
 2334 0f1e 488B00   		movq	(%rax), %rax
 2335 0f21 4C89E2   		movq	%r12, %rdx
 2336 0f24 4889DE   		movq	%rbx, %rsi
 2337 0f27 4889C7   		movq	%rax, %rdi
 2338 0f2a E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2338      00
 2339              	.LEHE66:
 2340              		.loc 3 61 0 discriminator 25
 2341 0f2f 488D8580 		leaq	-384(%rbp), %rax
 2341      FEFFFF
 2342 0f36 4889C7   		movq	%rax, %rdi
 2343              	.LEHB67:
 2344 0f39 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 2344      00
 2345              	.LEHE67:
 2346              	.LBE54:
 2347              		.loc 3 61 0 discriminator 26
 2348 0f3e E8000000 		call	__cxa_end_catch
 2348      00
 2349              	.LBE56:
 2350              	.LBE58:
 2351 0f43 E99A0000 		jmp	.L145
 2351      00
 2352              	.L144:
 2353              	.LBB59:
 2354              		.loc 3 61 0
 2355 0f48 4889C7   		movq	%rax, %rdi
 2356 0f4b E8000000 		call	__cxa_begin_catch
 2356      00
 2357 0f50 80BDFFFD 		cmpb	$0, -513(%rbp)
 2357      FFFF00
 2358 0f57 7443     		je	.L135
 2359              		.loc 3 61 0 discriminator 28
 2360 0f59 488B85E8 		movq	-536(%rbp), %rax
 2360      FDFFFF
 2361 0f60 488D4808 		leaq	8(%rax), %rcx
 2362 0f64 488D8510 		leaq	-496(%rbp), %rax
 2362      FEFFFF
 2363 0f6b BA3D0000 		movl	$61, %edx
 2363      00
 2364 0f70 4889CE   		movq	%rcx, %rsi
 2365 0f73 4889C7   		movq	%rax, %rdi
 2366              	.LEHB68:
 2367 0f76 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2367      00
 2368              		.loc 3 61 0 discriminator 31
 2369 0f7b E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2369      00
 2370 0f80 488B00   		movq	(%rax), %rax
 2371 0f83 488D8D10 		leaq	-496(%rbp), %rcx
 2371      FEFFFF
 2372 0f8a BA000000 		movl	$.LC7, %edx
 2372      00
 2373 0f8f 4889CE   		movq	%rcx, %rsi
 2374 0f92 4889C7   		movq	%rax, %rdi
 2375 0f95 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2375      00
 2376 0f9a EB41     		jmp	.L136
 2377              	.L135:
 2378              		.loc 3 61 0 discriminator 29
 2379 0f9c 488B85E8 		movq	-536(%rbp), %rax
 2379      FDFFFF
 2380 0fa3 488D4808 		leaq	8(%rax), %rcx
 2381 0fa7 488D8510 		leaq	-496(%rbp), %rax
 2381      FEFFFF
 2382 0fae BA3D0000 		movl	$61, %edx
 2382      00
 2383 0fb3 4889CE   		movq	%rcx, %rsi
 2384 0fb6 4889C7   		movq	%rax, %rdi
 2385 0fb9 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2385      00
 2386              		.loc 3 61 0 discriminator 38
 2387 0fbe E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2387      00
 2388 0fc3 488B00   		movq	(%rax), %rax
 2389 0fc6 488D8D10 		leaq	-496(%rbp), %rcx
 2389      FEFFFF
 2390 0fcd BA000000 		movl	$.LC8, %edx
 2390      00
 2391 0fd2 4889CE   		movq	%rcx, %rsi
 2392 0fd5 4889C7   		movq	%rax, %rdi
 2393 0fd8 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2393      00
 2394              	.LEHE68:
 2395              	.L136:
 2396              	.LEHB69:
 2397              		.loc 3 61 0 discriminator 43
 2398 0fdd E8000000 		call	__cxa_end_catch
 2398      00
 2399              	.LEHE69:
 2400              	.L145:
 2401              	.LBE59:
 2402              		.loc 3 61 0
 2403 0fe2 90       		nop
 2404 0fe3 488B45E8 		movq	-24(%rbp), %rax
 2405 0fe7 64483304 		xorq	%fs:40, %rax
 2405      25280000 
 2405      00
 2406 0ff0 7405     		je	.L137
 2407 0ff2 E8000000 		call	__stack_chk_fail
 2407      00
 2408              	.L137:
 2409 0ff7 4881C410 		addq	$528, %rsp
 2409      020000
 2410 0ffe 5B       		popq	%rbx
 2411 0fff 415C     		popq	%r12
 2412 1001 5D       		popq	%rbp
 2413              		.cfi_def_cfa 7, 8
 2414 1002 C3       		ret
 2415              		.cfi_endproc
 2416              	.LFE1381:
 2417              		.section	.gcc_except_table
 2418              		.align 4
 2419              	.LLSDA1381:
 2420 0158 FF       		.byte	0xff
 2421 0159 03       		.byte	0x3
 2422 015a 59       		.uleb128 .LLSDATT1381-.LLSDATTD1381
 2423              	.LLSDATTD1381:
 2424 015b 01       		.byte	0x1
 2425 015c 41       		.uleb128 .LLSDACSE1381-.LLSDACSB1381
 2426              	.LLSDACSB1381:
 2427 015d 43       		.uleb128 .LEHB58-.LFB1381
 2428 015e 05       		.uleb128 .LEHE58-.LEHB58
 2429 015f 9D01     		.uleb128 .L138-.LFB1381
 2430 0161 05       		.uleb128 0x5
 2431 0162 67       		.uleb128 .LEHB59-.LFB1381
 2432 0163 05       		.uleb128 .LEHE59-.LEHB59
 2433 0164 8001     		.uleb128 .L139-.LFB1381
 2434 0166 07       		.uleb128 0x7
 2435 0167 76       		.uleb128 .LEHB60-.LFB1381
 2436 0168 05       		.uleb128 .LEHE60-.LEHB60
 2437 0169 9D01     		.uleb128 .L138-.LFB1381
 2438 016b 05       		.uleb128 0x5
 2439 016c C001     		.uleb128 .LEHB61-.LFB1381
 2440 016e 05       		.uleb128 .LEHE61-.LEHB61
 2441 016f 00       		.uleb128 0
 2442 0170 00       		.uleb128 0
 2443 0171 E701     		.uleb128 .LEHB62-.LFB1381
 2444 0173 05       		.uleb128 .LEHE62-.LEHB62
 2445 0174 00       		.uleb128 0
 2446 0175 00       		.uleb128 0
 2447 0176 FA01     		.uleb128 .LEHB63-.LFB1381
 2448 0178 05       		.uleb128 .LEHE63-.LEHB63
 2449 0179 00       		.uleb128 0
 2450 017a 00       		.uleb128 0
 2451 017b B802     		.uleb128 .LEHB64-.LFB1381
 2452 017d 5F       		.uleb128 .LEHE64-.LEHB64
 2453 017e B201     		.uleb128 .L140-.LFB1381
 2454 0180 00       		.uleb128 0
 2455 0181 BA03     		.uleb128 .LEHB65-.LFB1381
 2456 0183 05       		.uleb128 .LEHE65-.LEHB65
 2457 0184 D901     		.uleb128 .L142-.LFB1381
 2458 0186 00       		.uleb128 0
 2459 0187 EE03     		.uleb128 .LEHB66-.LFB1381
 2460 0189 43       		.uleb128 .LEHE66-.LEHB66
 2461 018a C501     		.uleb128 .L141-.LFB1381
 2462 018c 00       		.uleb128 0
 2463 018d BB04     		.uleb128 .LEHB67-.LFB1381
 2464 018f 05       		.uleb128 .LEHE67-.LEHB67
 2465 0190 D901     		.uleb128 .L142-.LFB1381
 2466 0192 00       		.uleb128 0
 2467 0193 F804     		.uleb128 .LEHB68-.LFB1381
 2468 0195 67       		.uleb128 .LEHE68-.LEHB68
 2469 0196 EC01     		.uleb128 .L143-.LFB1381
 2470 0198 00       		.uleb128 0
 2471 0199 DF05     		.uleb128 .LEHB69-.LFB1381
 2472 019b 05       		.uleb128 .LEHE69-.LEHB69
 2473 019c 00       		.uleb128 0
 2474 019d 00       		.uleb128 0
 2475              	.LLSDACSE1381:
 2476 019e 03       		.byte	0x3
 2477 019f 00       		.byte	0
 2478 01a0 02       		.byte	0x2
 2479 01a1 7D       		.byte	0x7d
 2480 01a2 01       		.byte	0x1
 2481 01a3 7D       		.byte	0x7d
 2482 01a4 00       		.byte	0
 2483 01a5 7D       		.byte	0x7d
 2484 01a6 0000     		.align 4
 2485 01a8 00000000 		.long	0
 2486              	
 2487 01ac 00000000 		.long	_ZTISt9exception
 2488 01b0 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 2489              	.LLSDATT1381:
 2490              		.text
 2492              		.section	.rodata
 2493 025e 0000     		.align 8
 2494              	.LC16:
 2495 0260 556E6861 		.string	"Unhandled exception in CHECK_CLOSE(elapsed, result.timeElapsed)"
 2495      6E646C65 
 2495      64206578 
 2495      63657074 
 2495      696F6E20 
 2496              		.text
 2497 1003 90       		.align 2
 2499              	_ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelper7RunImplE
 2500              	.LFB1385:
  62:TestDeferredTestReporter.cpp **** {
 2501              		.loc 3 62 0 is_stmt 1
 2502              		.cfi_startproc
 2503              		.cfi_personality 0x3,__gxx_personality_v0
 2504              		.cfi_lsda 0x3,.LLSDA1385
 2505 1004 55       		pushq	%rbp
 2506              		.cfi_def_cfa_offset 16
 2507              		.cfi_offset 6, -16
 2508 1005 4889E5   		movq	%rsp, %rbp
 2509              		.cfi_def_cfa_register 6
 2510 1008 53       		pushq	%rbx
 2511 1009 4883EC58 		subq	$88, %rsp
 2512              		.cfi_offset 3, -24
 2513 100d 48897DA8 		movq	%rdi, -88(%rbp)
 2514              		.loc 3 62 0
 2515 1011 64488B04 		movq	%fs:40, %rax
 2515      25280000 
 2515      00
 2516 101a 488945E8 		movq	%rax, -24(%rbp)
 2517 101e 31C0     		xorl	%eax, %eax
 2518              	.LBB60:
  63:TestDeferredTestReporter.cpp ****     float const elapsed = 123.45f;
 2519              		.loc 3 63 0
 2520 1020 8B050000 		movl	.LC14(%rip), %eax
 2520      0000
 2521 1026 8945B0   		movl	%eax, -80(%rbp)
  64:TestDeferredTestReporter.cpp ****     reporter.ReportTestStart(details);
 2522              		.loc 3 64 0
 2523 1029 488B45A8 		movq	-88(%rbp), %rax
 2524 102d 488D5040 		leaq	64(%rax), %rdx
 2525 1031 488B45A8 		movq	-88(%rbp), %rax
 2526 1035 4889D6   		movq	%rdx, %rsi
 2527 1038 4889C7   		movq	%rax, %rdi
 2528              	.LEHB70:
 2529 103b E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
 2529      00
  65:TestDeferredTestReporter.cpp ****     reporter.ReportTestFinish(details, elapsed);
 2530              		.loc 3 65 0
 2531 1040 488B45A8 		movq	-88(%rbp), %rax
 2532 1044 488D5040 		leaq	64(%rax), %rdx
 2533 1048 488B45A8 		movq	-88(%rbp), %rax
 2534 104c F30F1005 		movss	.LC14(%rip), %xmm0
 2534      00000000 
 2535 1054 4889D6   		movq	%rdx, %rsi
 2536 1057 4889C7   		movq	%rax, %rdi
 2537 105a E8000000 		call	_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf
 2537      00
  66:TestDeferredTestReporter.cpp **** 
  67:TestDeferredTestReporter.cpp ****     DeferredTestResult const& result = reporter.GetResults().at(0);
 2538              		.loc 3 67 0
 2539 105f 488B45A8 		movq	-88(%rbp), %rax
 2540 1063 4889C7   		movq	%rax, %rdi
 2541 1066 E8000000 		call	_ZN8UnitTest20DeferredTestReporter10GetResultsEv
 2541      00
 2542 106b BE000000 		movl	$0, %esi
 2542      00
 2543 1070 4889C7   		movq	%rax, %rdi
 2544 1073 E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm
 2544      00
 2545              	.LEHE70:
 2546 1078 488945B8 		movq	%rax, -72(%rbp)
 2547              	.LEHB71:
  68:TestDeferredTestReporter.cpp ****     CHECK_CLOSE(elapsed, result.timeElapsed, 0.0001f);
 2548              		.loc 3 68 0
 2549 107c E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 2549      00
 2550 1081 488B08   		movq	(%rax), %rcx
 2551 1084 488D45C0 		leaq	-64(%rbp), %rax
 2552 1088 BA440000 		movl	$68, %edx
 2552      00
 2553 108d 4889CE   		movq	%rcx, %rsi
 2554 1090 4889C7   		movq	%rax, %rdi
 2555 1093 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2555      00
 2556              		.loc 3 68 0 is_stmt 0 discriminator 2
 2557 1098 8B050000 		movl	.LC15(%rip), %eax
 2557      0000
 2558 109e 8945B4   		movl	%eax, -76(%rbp)
 2559 10a1 488B45B8 		movq	-72(%rbp), %rax
 2560 10a5 488D5830 		leaq	48(%rax), %rbx
 2561 10a9 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2561      00
 2562 10ae 488B00   		movq	(%rax), %rax
 2563 10b1 488D4DC0 		leaq	-64(%rbp), %rcx
 2564 10b5 488D55B4 		leaq	-76(%rbp), %rdx
 2565 10b9 488D75B0 		leaq	-80(%rbp), %rsi
 2566 10bd 4989C8   		movq	%rcx, %r8
 2567 10c0 4889D1   		movq	%rdx, %rcx
 2568 10c3 4889DA   		movq	%rbx, %rdx
 2569 10c6 4889C7   		movq	%rax, %rdi
 2570 10c9 E8000000 		call	_ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE
 2570      00
 2571              	.LEHE71:
 2572              	.LBE60:
  69:TestDeferredTestReporter.cpp **** }
 2573              		.loc 3 69 0 is_stmt 1
 2574 10ce EB58     		jmp	.L153
 2575              	.L152:
 2576 10d0 4889C3   		movq	%rax, %rbx
 2577              	.LBB61:
  68:TestDeferredTestReporter.cpp ****     CHECK_CLOSE(elapsed, result.timeElapsed, 0.0001f);
 2578              		.loc 3 68 0
 2579 10d3 E8000000 		call	__cxa_end_catch
 2579      00
 2580 10d8 4889D8   		movq	%rbx, %rax
 2581 10db 4889C7   		movq	%rax, %rdi
 2582              	.LEHB72:
 2583 10de E8000000 		call	_Unwind_Resume
 2583      00
 2584              	.LEHE72:
 2585              	.L151:
 2586 10e3 4889C7   		movq	%rax, %rdi
 2587 10e6 E8000000 		call	__cxa_begin_catch
 2587      00
 2588              	.LEHB73:
 2589 10eb E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 2589      00
 2590 10f0 488B08   		movq	(%rax), %rcx
 2591 10f3 488D45C0 		leaq	-64(%rbp), %rax
 2592 10f7 BA440000 		movl	$68, %edx
 2592      00
 2593 10fc 4889CE   		movq	%rcx, %rsi
 2594 10ff 4889C7   		movq	%rax, %rdi
 2595 1102 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2595      00
  68:TestDeferredTestReporter.cpp ****     CHECK_CLOSE(elapsed, result.timeElapsed, 0.0001f);
 2596              		.loc 3 68 0 is_stmt 0 discriminator 10
 2597 1107 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2597      00
 2598 110c 488B00   		movq	(%rax), %rax
 2599 110f 488D4DC0 		leaq	-64(%rbp), %rcx
 2600 1113 BA000000 		movl	$.LC16, %edx
 2600      00
 2601 1118 4889CE   		movq	%rcx, %rsi
 2602 111b 4889C7   		movq	%rax, %rdi
 2603 111e E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2603      00
 2604              	.LEHE73:
 2605              	.LEHB74:
  68:TestDeferredTestReporter.cpp ****     CHECK_CLOSE(elapsed, result.timeElapsed, 0.0001f);
 2606              		.loc 3 68 0 discriminator 14
 2607 1123 E8000000 		call	__cxa_end_catch
 2607      00
 2608              	.LEHE74:
 2609              	.L153:
 2610              	.LBE61:
 2611              		.loc 3 69 0 is_stmt 1
 2612 1128 90       		nop
 2613 1129 488B45E8 		movq	-24(%rbp), %rax
 2614 112d 64483304 		xorq	%fs:40, %rax
 2614      25280000 
 2614      00
 2615 1136 7405     		je	.L150
 2616 1138 E8000000 		call	__stack_chk_fail
 2616      00
 2617              	.L150:
 2618 113d 4883C458 		addq	$88, %rsp
 2619 1141 5B       		popq	%rbx
 2620 1142 5D       		popq	%rbp
 2621              		.cfi_def_cfa 7, 8
 2622 1143 C3       		ret
 2623              		.cfi_endproc
 2624              	.LFE1385:
 2625              		.section	.gcc_except_table
 2626              		.align 4
 2627              	.LLSDA1385:
 2628 01b4 FF       		.byte	0xff
 2629 01b5 03       		.byte	0x3
 2630 01b6 21       		.uleb128 .LLSDATT1385-.LLSDATTD1385
 2631              	.LLSDATTD1385:
 2632 01b7 01       		.byte	0x1
 2633 01b8 19       		.uleb128 .LLSDACSE1385-.LLSDACSB1385
 2634              	.LLSDACSB1385:
 2635 01b9 37       		.uleb128 .LEHB70-.LFB1385
 2636 01ba 3D       		.uleb128 .LEHE70-.LEHB70
 2637 01bb 00       		.uleb128 0
 2638 01bc 00       		.uleb128 0
 2639 01bd 78       		.uleb128 .LEHB71-.LFB1385
 2640 01be 52       		.uleb128 .LEHE71-.LEHB71
 2641 01bf DF01     		.uleb128 .L151-.LFB1385
 2642 01c1 01       		.uleb128 0x1
 2643 01c2 DA01     		.uleb128 .LEHB72-.LFB1385
 2644 01c4 05       		.uleb128 .LEHE72-.LEHB72
 2645 01c5 00       		.uleb128 0
 2646 01c6 00       		.uleb128 0
 2647 01c7 E701     		.uleb128 .LEHB73-.LFB1385
 2648 01c9 38       		.uleb128 .LEHE73-.LEHB73
 2649 01ca CC01     		.uleb128 .L152-.LFB1385
 2650 01cc 00       		.uleb128 0
 2651 01cd 9F02     		.uleb128 .LEHB74-.LFB1385
 2652 01cf 05       		.uleb128 .LEHE74-.LEHB74
 2653 01d0 00       		.uleb128 0
 2654 01d1 00       		.uleb128 0
 2655              	.LLSDACSE1385:
 2656 01d2 01       		.byte	0x1
 2657 01d3 00       		.byte	0
 2658              		.align 4
 2659 01d4 00000000 		.long	0
 2660              	
 2661              	.LLSDATT1385:
 2662              		.text
 2664              		.align 2
 2666              	_ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelperC2ERKN
 2667              	.LFB1387:
  70:TestDeferredTestReporter.cpp **** 
  71:TestDeferredTestReporter.cpp **** TEST_FIXTURE(DeferredTestReporterFixture, ReportFailureSavesFailureDetails)
 2668              		.loc 3 71 0
 2669              		.cfi_startproc
 2670 1144 55       		pushq	%rbp
 2671              		.cfi_def_cfa_offset 16
 2672              		.cfi_offset 6, -16
 2673 1145 4889E5   		movq	%rsp, %rbp
 2674              		.cfi_def_cfa_register 6
 2675 1148 4883EC10 		subq	$16, %rsp
 2676 114c 48897DF8 		movq	%rdi, -8(%rbp)
 2677 1150 488975F0 		movq	%rsi, -16(%rbp)
 2678              	.LBB62:
 2679              		.loc 3 71 0
 2680 1154 488B45F8 		movq	-8(%rbp), %rax
 2681 1158 4889C7   		movq	%rax, %rdi
 2682 115b E8DEEEFF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureC2Ev
 2682      FF
 2683 1160 488B45F8 		movq	-8(%rbp), %rax
 2684 1164 488B55F0 		movq	-16(%rbp), %rdx
 2685 1168 48895060 		movq	%rdx, 96(%rax)
 2686              	.LBE62:
 2687 116c C9       		leave
 2688              		.cfi_def_cfa 7, 8
 2689 116d C3       		ret
 2690              		.cfi_endproc
 2691              	.LFE1387:
 2693              		.section	.rodata
 2694              		.align 8
 2695              	.LC17:
 2696 02a0 5265706F 		.string	"ReportFailureSavesFailureDetails"
 2696      72744661 
 2696      696C7572 
 2696      65536176 
 2696      65734661 
 2697              		.text
 2698              		.align 2
 2700              	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsC2Ev:
 2701              	.LFB1390:
 2702              		.loc 3 71 0
 2703              		.cfi_startproc
 2704 116e 55       		pushq	%rbp
 2705              		.cfi_def_cfa_offset 16
 2706              		.cfi_offset 6, -16
 2707 116f 4889E5   		movq	%rsp, %rbp
 2708              		.cfi_def_cfa_register 6
 2709 1172 4883EC10 		subq	$16, %rsp
 2710 1176 48897DF8 		movq	%rdi, -8(%rbp)
 2711              	.LBB63:
 2712              		.loc 3 71 0
 2713 117a E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 2713      00
 2714 117f 4889C2   		movq	%rax, %rdx
 2715 1182 488B45F8 		movq	-8(%rbp), %rax
 2716 1186 41B84700 		movl	$71, %r8d
 2716      0000
 2717 118c B9000000 		movl	$.LC4, %ecx
 2717      00
 2718 1191 BE000000 		movl	$.LC17, %esi
 2718      00
 2719 1196 4889C7   		movq	%rax, %rdi
 2720 1199 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 2720      00
 2721 119e 488B45F8 		movq	-8(%rbp), %rax
 2722 11a2 48C70000 		movq	$_ZTVN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetail
 2722      000000
 2723              	.LBE63:
 2724 11a9 C9       		leave
 2725              		.cfi_def_cfa 7, 8
 2726 11aa C3       		ret
 2727              		.cfi_endproc
 2728              	.LFE1390:
 2730              		.local	_ZN8UnitTest12_GLOBAL__N_171testDeferredTestReporterFixtureReportFailureSavesFailureDetails
 2731              		.comm	_ZN8UnitTest12_GLOBAL__N_171testDeferredTestReporterFixtureReportFailureSavesFailureDetailsI
 2732              		.local	_ZN8UnitTest12_GLOBAL__N_164adderDeferredTestReporterFixtureReportFailureSavesFailureDetail
 2733              		.comm	_ZN8UnitTest12_GLOBAL__N_164adderDeferredTestReporterFixtureReportFailureSavesFailureDetails
 2734 11ab 90       		.align 2
 2736              	_ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelperD2Ev:
 2737              	.LFB1394:
 2738              		.loc 3 71 0
 2739              		.cfi_startproc
 2740 11ac 55       		pushq	%rbp
 2741              		.cfi_def_cfa_offset 16
 2742              		.cfi_offset 6, -16
 2743 11ad 4889E5   		movq	%rsp, %rbp
 2744              		.cfi_def_cfa_register 6
 2745 11b0 4883EC10 		subq	$16, %rsp
 2746 11b4 48897DF8 		movq	%rdi, -8(%rbp)
 2747              	.LBB64:
 2748              		.loc 3 71 0
 2749 11b8 488B45F8 		movq	-8(%rbp), %rax
 2750 11bc 4889C7   		movq	%rax, %rdi
 2751 11bf E844F0FF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureD2Ev
 2751      FF
 2752              	.LBE64:
 2753 11c4 C9       		leave
 2754              		.cfi_def_cfa 7, 8
 2755 11c5 C3       		ret
 2756              		.cfi_endproc
 2757              	.LFE1394:
 2759              		.align 2
 2761              	_ZNK8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetails7RunImp
 2762              	.LFB1392:
 2763              		.loc 3 71 0
 2764              		.cfi_startproc
 2765              		.cfi_personality 0x3,__gxx_personality_v0
 2766              		.cfi_lsda 0x3,.LLSDA1392
 2767 11c6 55       		pushq	%rbp
 2768              		.cfi_def_cfa_offset 16
 2769              		.cfi_offset 6, -16
 2770 11c7 4889E5   		movq	%rsp, %rbp
 2771              		.cfi_def_cfa_register 6
 2772 11ca 4154     		pushq	%r12
 2773 11cc 53       		pushq	%rbx
 2774 11cd 4881EC10 		subq	$528, %rsp
 2774      020000
 2775              		.cfi_offset 12, -24
 2776              		.cfi_offset 3, -32
 2777 11d4 4889BDE8 		movq	%rdi, -536(%rbp)
 2777      FDFFFF
 2778              		.loc 3 71 0
 2779 11db 64488B04 		movq	%fs:40, %rax
 2779      25280000 
 2779      00
 2780 11e4 488945E8 		movq	%rax, -24(%rbp)
 2781 11e8 31C0     		xorl	%eax, %eax
 2782              	.LBB65:
 2783 11ea C685FFFD 		movb	$0, -513(%rbp)
 2783      FFFF00
 2784              	.LBB66:
 2785 11f1 488B85E8 		movq	-536(%rbp), %rax
 2785      FDFFFF
 2786 11f8 488D5008 		leaq	8(%rax), %rdx
 2787 11fc 488D8510 		leaq	-496(%rbp), %rax
 2787      FEFFFF
 2788 1203 4889D6   		movq	%rdx, %rsi
 2789 1206 4889C7   		movq	%rax, %rdi
 2790              	.LEHB75:
 2791 1209 E836FFFF 		call	_ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelper
 2791      FF
 2792              	.LEHE75:
 2793              		.loc 3 71 0 is_stmt 0 discriminator 1
 2794 120e C685FFFD 		movb	$1, -513(%rbp)
 2794      FFFF01
 2795 1215 488B85E8 		movq	-536(%rbp), %rax
 2795      FDFFFF
 2796 121c 488D5008 		leaq	8(%rax), %rdx
 2797 1220 488D8510 		leaq	-496(%rbp), %rax
 2797      FEFFFF
 2798 1227 4889D6   		movq	%rdx, %rsi
 2799 122a 4889C7   		movq	%rax, %rdi
 2800              	.LEHB76:
 2801 122d E8501800 		call	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFai
 2801      00
 2802              	.LEHE76:
 2803              		.loc 3 71 0 discriminator 3
 2804 1232 488D8510 		leaq	-496(%rbp), %rax
 2804      FEFFFF
 2805 1239 4889C7   		movq	%rax, %rdi
 2806              	.LEHB77:
 2807 123c E86BFFFF 		call	_ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelper
 2807      FF
 2808              	.LEHE77:
 2809              	.LBE66:
 2810              	.LBE65:
 2811              		.loc 3 71 0
 2812 1241 E9640200 		jmp	.L179
 2812      00
 2813              	.L173:
 2814 1246 4989C4   		movq	%rax, %r12
 2815 1249 4889D3   		movq	%rdx, %rbx
 2816              	.LBB74:
 2817              	.LBB67:
 2818 124c 488D8510 		leaq	-496(%rbp), %rax
 2818      FEFFFF
 2819 1253 4889C7   		movq	%rax, %rdi
 2820 1256 E851FFFF 		call	_ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelper
 2820      FF
 2821 125b 4C89E0   		movq	%r12, %rax
 2822 125e 4889DA   		movq	%rbx, %rdx
 2823 1261 EB00     		jmp	.L160
 2824              	.L172:
 2825              	.L160:
 2826 1263 4883FA01 		cmpq	$1, %rdx
 2827 1267 745C     		je	.L162
 2828 1269 4883FA02 		cmpq	$2, %rdx
 2829 126d 0F84F400 		je	.L163
 2829      0000
 2830 1273 E9980100 		jmp	.L178
 2830      00
 2831              	.L174:
 2832 1278 4889C3   		movq	%rax, %rbx
 2833              	.LBE67:
 2834              	.LBB68:
 2835 127b E8000000 		call	__cxa_end_catch
 2835      00
 2836 1280 4889D8   		movq	%rbx, %rax
 2837 1283 4889C7   		movq	%rax, %rdi
 2838              	.LEHB78:
 2839 1286 E8000000 		call	_Unwind_Resume
 2839      00
 2840              	.LEHE78:
 2841              	.L175:
 2842 128b 4889C3   		movq	%rax, %rbx
 2843              	.LBE68:
 2844              	.LBB69:
 2845              	.LBB70:
 2846 128e 488D8580 		leaq	-384(%rbp), %rax
 2846      FEFFFF
 2847 1295 4889C7   		movq	%rax, %rdi
 2848 1298 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 2848      00
 2849 129d EB03     		jmp	.L166
 2850              	.L176:
 2851 129f 4889C3   		movq	%rax, %rbx
 2852              	.L166:
 2853              	.LBE70:
 2854 12a2 E8000000 		call	__cxa_end_catch
 2854      00
 2855 12a7 4889D8   		movq	%rbx, %rax
 2856 12aa 4889C7   		movq	%rax, %rdi
 2857              	.LEHB79:
 2858 12ad E8000000 		call	_Unwind_Resume
 2858      00
 2859              	.LEHE79:
 2860              	.L177:
 2861 12b2 4889C3   		movq	%rax, %rbx
 2862              	.LBE69:
 2863 12b5 E8000000 		call	__cxa_end_catch
 2863      00
 2864 12ba 4889D8   		movq	%rbx, %rax
 2865 12bd 4889C7   		movq	%rax, %rdi
 2866              	.LEHB80:
 2867 12c0 E8000000 		call	_Unwind_Resume
 2867      00
 2868              	.LEHE80:
 2869              	.L162:
 2870              	.LBB72:
 2871 12c5 4889C7   		movq	%rax, %rdi
 2872 12c8 E8000000 		call	__cxa_begin_catch
 2872      00
 2873 12cd 48898500 		movq	%rax, -512(%rbp)
 2873      FEFFFF
 2874 12d4 488B8500 		movq	-512(%rbp), %rax
 2874      FEFFFF
 2875 12db 488B00   		movq	(%rax), %rax
 2876 12de 4883C010 		addq	$16, %rax
 2877 12e2 488B00   		movq	(%rax), %rax
 2878 12e5 488B9500 		movq	-512(%rbp), %rdx
 2878      FEFFFF
 2879 12ec 4889D7   		movq	%rdx, %rdi
 2880 12ef FFD0     		call	*%rax
 2881 12f1 4889C3   		movq	%rax, %rbx
 2882 12f4 488B8500 		movq	-512(%rbp), %rax
 2882      FEFFFF
 2883 12fb 4889C7   		movq	%rax, %rdi
 2884              	.LEHB81:
 2885 12fe E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 2885      00
 2886 1303 4189C4   		movl	%eax, %r12d
 2887 1306 488B8500 		movq	-512(%rbp), %rax
 2887      FEFFFF
 2888 130d 4889C7   		movq	%rax, %rdi
 2889 1310 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 2889      00
 2890              		.loc 3 71 0 discriminator 5
 2891 1315 4889C1   		movq	%rax, %rcx
 2892 1318 488B85E8 		movq	-536(%rbp), %rax
 2892      FDFFFF
 2893 131f 488B5008 		movq	8(%rax), %rdx
 2894 1323 488B85E8 		movq	-536(%rbp), %rax
 2894      FDFFFF
 2895 132a 488B7010 		movq	16(%rax), %rsi
 2896 132e 488D8510 		leaq	-496(%rbp), %rax
 2896      FEFFFF
 2897 1335 4589E0   		movl	%r12d, %r8d
 2898 1338 4889C7   		movq	%rax, %rdi
 2899 133b E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 2899      00
 2900              		.loc 3 71 0 discriminator 9
 2901 1340 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2901      00
 2902 1345 488B00   		movq	(%rax), %rax
 2903 1348 488D8D10 		leaq	-496(%rbp), %rcx
 2903      FEFFFF
 2904 134f 4889DA   		movq	%rbx, %rdx
 2905 1352 4889CE   		movq	%rcx, %rsi
 2906 1355 4889C7   		movq	%rax, %rdi
 2907 1358 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2907      00
 2908              	.LEHE81:
 2909              		.loc 3 71 0 discriminator 13
 2910 135d E8000000 		call	__cxa_end_catch
 2910      00
 2911              	.LBE72:
 2912              	.LBE74:
 2913 1362 E9430100 		jmp	.L179
 2913      00
 2914              	.L163:
 2915              	.LBB75:
 2916              	.LBB73:
 2917              		.loc 3 71 0
 2918 1367 4889C7   		movq	%rax, %rdi
 2919 136a E8000000 		call	__cxa_begin_catch
 2919      00
 2920 136f 48898508 		movq	%rax, -504(%rbp)
 2920      FEFFFF
 2921              	.LBB71:
 2922 1376 488D8580 		leaq	-384(%rbp), %rax
 2922      FEFFFF
 2923 137d 4889C7   		movq	%rax, %rdi
 2924              	.LEHB82:
 2925 1380 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 2925      00
 2926              	.LEHE82:
 2927              		.loc 3 71 0 discriminator 15
 2928 1385 488B8508 		movq	-504(%rbp), %rax
 2928      FEFFFF
 2929 138c 488B00   		movq	(%rax), %rax
 2930 138f 4883C010 		addq	$16, %rax
 2931 1393 488B00   		movq	(%rax), %rax
 2932 1396 488B9508 		movq	-504(%rbp), %rdx
 2932      FEFFFF
 2933 139d 4889D7   		movq	%rdx, %rdi
 2934 13a0 FFD0     		call	*%rax
 2935 13a2 4889C3   		movq	%rax, %rbx
 2936 13a5 488D8580 		leaq	-384(%rbp), %rax
 2936      FEFFFF
 2937 13ac BE000000 		movl	$.LC6, %esi
 2937      00
 2938 13b1 4889C7   		movq	%rax, %rdi
 2939              	.LEHB83:
 2940 13b4 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 2940      00
 2941 13b9 4889DE   		movq	%rbx, %rsi
 2942 13bc 4889C7   		movq	%rax, %rdi
 2943 13bf E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 2943      00
 2944              		.loc 3 71 0 discriminator 19
 2945 13c4 488D8580 		leaq	-384(%rbp), %rax
 2945      FEFFFF
 2946 13cb 4889C7   		movq	%rax, %rdi
 2947 13ce E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 2947      00
 2948 13d3 4989C4   		movq	%rax, %r12
 2949 13d6 488B85E8 		movq	-536(%rbp), %rax
 2949      FDFFFF
 2950 13dd 488D5808 		leaq	8(%rax), %rbx
 2951 13e1 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2951      00
 2952              		.loc 3 71 0 discriminator 21
 2953 13e6 488B00   		movq	(%rax), %rax
 2954 13e9 4C89E2   		movq	%r12, %rdx
 2955 13ec 4889DE   		movq	%rbx, %rsi
 2956 13ef 4889C7   		movq	%rax, %rdi
 2957 13f2 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2957      00
 2958              	.LEHE83:
 2959              		.loc 3 71 0 discriminator 25
 2960 13f7 488D8580 		leaq	-384(%rbp), %rax
 2960      FEFFFF
 2961 13fe 4889C7   		movq	%rax, %rdi
 2962              	.LEHB84:
 2963 1401 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 2963      00
 2964              	.LEHE84:
 2965              	.LBE71:
 2966              		.loc 3 71 0 discriminator 26
 2967 1406 E8000000 		call	__cxa_end_catch
 2967      00
 2968              	.LBE73:
 2969              	.LBE75:
 2970 140b E99A0000 		jmp	.L179
 2970      00
 2971              	.L178:
 2972              	.LBB76:
 2973              		.loc 3 71 0
 2974 1410 4889C7   		movq	%rax, %rdi
 2975 1413 E8000000 		call	__cxa_begin_catch
 2975      00
 2976 1418 80BDFFFD 		cmpb	$0, -513(%rbp)
 2976      FFFF00
 2977 141f 7443     		je	.L169
 2978              		.loc 3 71 0 discriminator 28
 2979 1421 488B85E8 		movq	-536(%rbp), %rax
 2979      FDFFFF
 2980 1428 488D4808 		leaq	8(%rax), %rcx
 2981 142c 488D8510 		leaq	-496(%rbp), %rax
 2981      FEFFFF
 2982 1433 BA470000 		movl	$71, %edx
 2982      00
 2983 1438 4889CE   		movq	%rcx, %rsi
 2984 143b 4889C7   		movq	%rax, %rdi
 2985              	.LEHB85:
 2986 143e E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2986      00
 2987              		.loc 3 71 0 discriminator 31
 2988 1443 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2988      00
 2989 1448 488B00   		movq	(%rax), %rax
 2990 144b 488D8D10 		leaq	-496(%rbp), %rcx
 2990      FEFFFF
 2991 1452 BA000000 		movl	$.LC7, %edx
 2991      00
 2992 1457 4889CE   		movq	%rcx, %rsi
 2993 145a 4889C7   		movq	%rax, %rdi
 2994 145d E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2994      00
 2995 1462 EB41     		jmp	.L170
 2996              	.L169:
 2997              		.loc 3 71 0 discriminator 29
 2998 1464 488B85E8 		movq	-536(%rbp), %rax
 2998      FDFFFF
 2999 146b 488D4808 		leaq	8(%rax), %rcx
 3000 146f 488D8510 		leaq	-496(%rbp), %rax
 3000      FEFFFF
 3001 1476 BA470000 		movl	$71, %edx
 3001      00
 3002 147b 4889CE   		movq	%rcx, %rsi
 3003 147e 4889C7   		movq	%rax, %rdi
 3004 1481 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3004      00
 3005              		.loc 3 71 0 discriminator 38
 3006 1486 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3006      00
 3007 148b 488B00   		movq	(%rax), %rax
 3008 148e 488D8D10 		leaq	-496(%rbp), %rcx
 3008      FEFFFF
 3009 1495 BA000000 		movl	$.LC8, %edx
 3009      00
 3010 149a 4889CE   		movq	%rcx, %rsi
 3011 149d 4889C7   		movq	%rax, %rdi
 3012 14a0 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3012      00
 3013              	.LEHE85:
 3014              	.L170:
 3015              	.LEHB86:
 3016              		.loc 3 71 0 discriminator 43
 3017 14a5 E8000000 		call	__cxa_end_catch
 3017      00
 3018              	.LEHE86:
 3019              	.L179:
 3020              	.LBE76:
 3021              		.loc 3 71 0
 3022 14aa 90       		nop
 3023 14ab 488B45E8 		movq	-24(%rbp), %rax
 3024 14af 64483304 		xorq	%fs:40, %rax
 3024      25280000 
 3024      00
 3025 14b8 7405     		je	.L171
 3026 14ba E8000000 		call	__stack_chk_fail
 3026      00
 3027              	.L171:
 3028 14bf 4881C410 		addq	$528, %rsp
 3028      020000
 3029 14c6 5B       		popq	%rbx
 3030 14c7 415C     		popq	%r12
 3031 14c9 5D       		popq	%rbp
 3032              		.cfi_def_cfa 7, 8
 3033 14ca C3       		ret
 3034              		.cfi_endproc
 3035              	.LFE1392:
 3036              		.section	.gcc_except_table
 3037              		.align 4
 3038              	.LLSDA1392:
 3039 01d8 FF       		.byte	0xff
 3040 01d9 03       		.byte	0x3
 3041 01da 59       		.uleb128 .LLSDATT1392-.LLSDATTD1392
 3042              	.LLSDATTD1392:
 3043 01db 01       		.byte	0x1
 3044 01dc 41       		.uleb128 .LLSDACSE1392-.LLSDACSB1392
 3045              	.LLSDACSB1392:
 3046 01dd 43       		.uleb128 .LEHB75-.LFB1392
 3047 01de 05       		.uleb128 .LEHE75-.LEHB75
 3048 01df 9D01     		.uleb128 .L172-.LFB1392
 3049 01e1 05       		.uleb128 0x5
 3050 01e2 67       		.uleb128 .LEHB76-.LFB1392
 3051 01e3 05       		.uleb128 .LEHE76-.LEHB76
 3052 01e4 8001     		.uleb128 .L173-.LFB1392
 3053 01e6 07       		.uleb128 0x7
 3054 01e7 76       		.uleb128 .LEHB77-.LFB1392
 3055 01e8 05       		.uleb128 .LEHE77-.LEHB77
 3056 01e9 9D01     		.uleb128 .L172-.LFB1392
 3057 01eb 05       		.uleb128 0x5
 3058 01ec C001     		.uleb128 .LEHB78-.LFB1392
 3059 01ee 05       		.uleb128 .LEHE78-.LEHB78
 3060 01ef 00       		.uleb128 0
 3061 01f0 00       		.uleb128 0
 3062 01f1 E701     		.uleb128 .LEHB79-.LFB1392
 3063 01f3 05       		.uleb128 .LEHE79-.LEHB79
 3064 01f4 00       		.uleb128 0
 3065 01f5 00       		.uleb128 0
 3066 01f6 FA01     		.uleb128 .LEHB80-.LFB1392
 3067 01f8 05       		.uleb128 .LEHE80-.LEHB80
 3068 01f9 00       		.uleb128 0
 3069 01fa 00       		.uleb128 0
 3070 01fb B802     		.uleb128 .LEHB81-.LFB1392
 3071 01fd 5F       		.uleb128 .LEHE81-.LEHB81
 3072 01fe B201     		.uleb128 .L174-.LFB1392
 3073 0200 00       		.uleb128 0
 3074 0201 BA03     		.uleb128 .LEHB82-.LFB1392
 3075 0203 05       		.uleb128 .LEHE82-.LEHB82
 3076 0204 D901     		.uleb128 .L176-.LFB1392
 3077 0206 00       		.uleb128 0
 3078 0207 EE03     		.uleb128 .LEHB83-.LFB1392
 3079 0209 43       		.uleb128 .LEHE83-.LEHB83
 3080 020a C501     		.uleb128 .L175-.LFB1392
 3081 020c 00       		.uleb128 0
 3082 020d BB04     		.uleb128 .LEHB84-.LFB1392
 3083 020f 05       		.uleb128 .LEHE84-.LEHB84
 3084 0210 D901     		.uleb128 .L176-.LFB1392
 3085 0212 00       		.uleb128 0
 3086 0213 F804     		.uleb128 .LEHB85-.LFB1392
 3087 0215 67       		.uleb128 .LEHE85-.LEHB85
 3088 0216 EC01     		.uleb128 .L177-.LFB1392
 3089 0218 00       		.uleb128 0
 3090 0219 DF05     		.uleb128 .LEHB86-.LFB1392
 3091 021b 05       		.uleb128 .LEHE86-.LEHB86
 3092 021c 00       		.uleb128 0
 3093 021d 00       		.uleb128 0
 3094              	.LLSDACSE1392:
 3095 021e 03       		.byte	0x3
 3096 021f 00       		.byte	0
 3097 0220 02       		.byte	0x2
 3098 0221 7D       		.byte	0x7d
 3099 0222 01       		.byte	0x1
 3100 0223 7D       		.byte	0x7d
 3101 0224 00       		.byte	0
 3102 0225 7D       		.byte	0x7d
 3103 0226 0000     		.align 4
 3104 0228 00000000 		.long	0
 3105              	
 3106 022c 00000000 		.long	_ZTISt9exception
 3107 0230 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 3108              	.LLSDATT1392:
 3109              		.text
 3111              		.section	.rodata
 3112              	.LC18:
 3113 02c1 6661696C 		.string	"failure"
 3113      75726500 
 3114              	.LC19:
 3115 02c9 72657375 		.string	"result.failed == true"
 3115      6C742E66 
 3115      61696C65 
 3115      64203D3D 
 3115      20747275 
 3116 02df 00       		.align 8
 3117              	.LC20:
 3118 02e0 556E6861 		.string	"Unhandled exception in CHECK(result.failed == true)"
 3118      6E646C65 
 3118      64206578 
 3118      63657074 
 3118      696F6E20 
 3119 0314 00000000 		.align 8
 3120              	.LC21:
 3121 0318 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(fileName.c_str(), result.failureFile)"
 3121      6E646C65 
 3121      64206578 
 3121      63657074 
 3121      696F6E20 
 3122              		.text
 3123 14cb 90       		.align 2
 3125              	_ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelper7RunIm
 3126              	.LFB1396:
  72:TestDeferredTestReporter.cpp **** {
 3127              		.loc 3 72 0 is_stmt 1
 3128              		.cfi_startproc
 3129              		.cfi_personality 0x3,__gxx_personality_v0
 3130              		.cfi_lsda 0x3,.LLSDA1396
 3131 14cc 55       		pushq	%rbp
 3132              		.cfi_def_cfa_offset 16
 3133              		.cfi_offset 6, -16
 3134 14cd 4889E5   		movq	%rsp, %rbp
 3135              		.cfi_def_cfa_register 6
 3136 14d0 53       		pushq	%rbx
 3137 14d1 4883EC68 		subq	$104, %rsp
 3138              		.cfi_offset 3, -24
 3139 14d5 48897D98 		movq	%rdi, -104(%rbp)
 3140              		.loc 3 72 0
 3141 14d9 64488B04 		movq	%fs:40, %rax
 3141      25280000 
 3141      00
 3142 14e2 488945E8 		movq	%rax, -24(%rbp)
 3143 14e6 31C0     		xorl	%eax, %eax
 3144              	.LBB77:
  73:TestDeferredTestReporter.cpp ****     char const* failure = "failure";
 3145              		.loc 3 73 0
 3146 14e8 48C745B0 		movq	$.LC18, -80(%rbp)
 3146      00000000 
  74:TestDeferredTestReporter.cpp **** 
  75:TestDeferredTestReporter.cpp ****     reporter.ReportTestStart(details);
 3147              		.loc 3 75 0
 3148 14f0 488B4598 		movq	-104(%rbp), %rax
 3149 14f4 488D5040 		leaq	64(%rax), %rdx
 3150 14f8 488B4598 		movq	-104(%rbp), %rax
 3151 14fc 4889D6   		movq	%rdx, %rsi
 3152 14ff 4889C7   		movq	%rax, %rdi
 3153              	.LEHB87:
 3154 1502 E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
 3154      00
  76:TestDeferredTestReporter.cpp ****     reporter.ReportFailure(details, failure);
 3155              		.loc 3 76 0
 3156 1507 488B4598 		movq	-104(%rbp), %rax
 3157 150b 488D4840 		leaq	64(%rax), %rcx
 3158 150f 488B4598 		movq	-104(%rbp), %rax
 3159 1513 488B55B0 		movq	-80(%rbp), %rdx
 3160 1517 4889CE   		movq	%rcx, %rsi
 3161 151a 4889C7   		movq	%rax, %rdi
 3162 151d E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc
 3162      00
  77:TestDeferredTestReporter.cpp **** 
  78:TestDeferredTestReporter.cpp ****     DeferredTestResult const& result = reporter.GetResults().at(0);
 3163              		.loc 3 78 0
 3164 1522 488B4598 		movq	-104(%rbp), %rax
 3165 1526 4889C7   		movq	%rax, %rdi
 3166 1529 E8000000 		call	_ZN8UnitTest20DeferredTestReporter10GetResultsEv
 3166      00
 3167 152e BE000000 		movl	$0, %esi
 3167      00
 3168 1533 4889C7   		movq	%rax, %rdi
 3169 1536 E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm
 3169      00
 3170              	.LEHE87:
 3171 153b 488945B8 		movq	%rax, -72(%rbp)
  79:TestDeferredTestReporter.cpp ****     CHECK(result.failed == true);
 3172              		.loc 3 79 0
 3173 153f 488B45B8 		movq	-72(%rbp), %rax
 3174 1543 0FB64034 		movzbl	52(%rax), %eax
 3175 1547 0FB6C0   		movzbl	%al, %eax
 3176 154a 89C7     		movl	%eax, %edi
 3177 154c E8000000 		call	_ZN8UnitTest5CheckIbEEbT_
 3177      00
 3178 1551 83F001   		xorl	$1, %eax
 3179 1554 84C0     		testb	%al, %al
 3180 1556 7438     		je	.L181
 3181              	.LEHB88:
 3182              		.loc 3 79 0 is_stmt 0 discriminator 1
 3183 1558 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3183      00
 3184 155d 488B08   		movq	(%rax), %rcx
 3185 1560 488D45C0 		leaq	-64(%rbp), %rax
 3186 1564 BA4F0000 		movl	$79, %edx
 3186      00
 3187 1569 4889CE   		movq	%rcx, %rsi
 3188 156c 4889C7   		movq	%rax, %rdi
 3189 156f E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3189      00
 3190              		.loc 3 79 0 discriminator 3
 3191 1574 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3191      00
 3192 1579 488B00   		movq	(%rax), %rax
 3193 157c 488D4DC0 		leaq	-64(%rbp), %rcx
 3194 1580 BA000000 		movl	$.LC19, %edx
 3194      00
 3195 1585 4889CE   		movq	%rcx, %rsi
 3196 1588 4889C7   		movq	%rax, %rdi
 3197 158b E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3197      00
 3198              	.LEHE88:
 3199              	.L181:
 3200              	.LEHB89:
  80:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(fileName.c_str(), result.failureFile);
 3201              		.loc 3 80 0 is_stmt 1
 3202 1590 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3202      00
 3203 1595 488B08   		movq	(%rax), %rcx
 3204 1598 488D45C0 		leaq	-64(%rbp), %rax
 3205 159c BA500000 		movl	$80, %edx
 3205      00
 3206 15a1 4889CE   		movq	%rcx, %rsi
 3207 15a4 4889C7   		movq	%rax, %rdi
 3208 15a7 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3208      00
 3209              		.loc 3 80 0 is_stmt 0 discriminator 2
 3210 15ac 488B45B8 		movq	-72(%rbp), %rax
 3211 15b0 488D5810 		leaq	16(%rax), %rbx
 3212 15b4 488B4598 		movq	-104(%rbp), %rax
 3213 15b8 4883C030 		addq	$48, %rax
 3214 15bc 4889C7   		movq	%rax, %rdi
 3215 15bf E8000000 		call	_ZNKSs5c_strEv
 3215      00
 3216 15c4 488945A8 		movq	%rax, -88(%rbp)
 3217 15c8 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3217      00
 3218              		.loc 3 80 0 discriminator 4
 3219 15cd 488B00   		movq	(%rax), %rax
 3220 15d0 488D55C0 		leaq	-64(%rbp), %rdx
 3221 15d4 488D75A8 		leaq	-88(%rbp), %rsi
 3222 15d8 4889D1   		movq	%rdx, %rcx
 3223 15db 4889DA   		movq	%rbx, %rdx
 3224 15de 4889C7   		movq	%rax, %rdi
 3225 15e1 E8000000 		call	_ZN8UnitTest10CheckEqualIPKcSsEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 3225      00
 3226              	.LEHE89:
 3227              	.LBE77:
  81:TestDeferredTestReporter.cpp **** }
 3228              		.loc 3 81 0 is_stmt 1
 3229 15e6 E9B50000 		jmp	.L192
 3229      00
 3230              	.L189:
 3231 15eb 4889C3   		movq	%rax, %rbx
 3232              	.LBB78:
  79:TestDeferredTestReporter.cpp ****     CHECK(result.failed == true);
 3233              		.loc 3 79 0
 3234 15ee E8000000 		call	__cxa_end_catch
 3234      00
 3235 15f3 4889D8   		movq	%rbx, %rax
 3236 15f6 4889C7   		movq	%rax, %rdi
 3237              	.LEHB90:
 3238 15f9 E8000000 		call	_Unwind_Resume
 3238      00
 3239              	.LEHE90:
 3240              	.L188:
 3241 15fe 4889C7   		movq	%rax, %rdi
 3242 1601 E8000000 		call	__cxa_begin_catch
 3242      00
 3243              	.LEHB91:
 3244 1606 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3244      00
 3245 160b 488B08   		movq	(%rax), %rcx
 3246 160e 488D45C0 		leaq	-64(%rbp), %rax
 3247 1612 BA4F0000 		movl	$79, %edx
 3247      00
 3248 1617 4889CE   		movq	%rcx, %rsi
 3249 161a 4889C7   		movq	%rax, %rdi
 3250 161d E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3250      00
  79:TestDeferredTestReporter.cpp ****     CHECK(result.failed == true);
 3251              		.loc 3 79 0 is_stmt 0 discriminator 11
 3252 1622 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3252      00
 3253 1627 488B00   		movq	(%rax), %rax
 3254 162a 488D4DC0 		leaq	-64(%rbp), %rcx
 3255 162e BA000000 		movl	$.LC20, %edx
 3255      00
 3256 1633 4889CE   		movq	%rcx, %rsi
 3257 1636 4889C7   		movq	%rax, %rdi
 3258 1639 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3258      00
 3259              	.LEHE91:
 3260              	.LEHB92:
  79:TestDeferredTestReporter.cpp ****     CHECK(result.failed == true);
 3261              		.loc 3 79 0 discriminator 15
 3262 163e E8000000 		call	__cxa_end_catch
 3262      00
 3263              	.LEHE92:
 3264 1643 E948FFFF 		jmp	.L181
 3264      FF
 3265              	.L191:
 3266 1648 4889C3   		movq	%rax, %rbx
  80:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(fileName.c_str(), result.failureFile);
 3267              		.loc 3 80 0 is_stmt 1
 3268 164b E8000000 		call	__cxa_end_catch
 3268      00
 3269 1650 4889D8   		movq	%rbx, %rax
 3270 1653 4889C7   		movq	%rax, %rdi
 3271              	.LEHB93:
 3272 1656 E8000000 		call	_Unwind_Resume
 3272      00
 3273              	.LEHE93:
 3274              	.L190:
 3275 165b 4889C7   		movq	%rax, %rdi
 3276 165e E8000000 		call	__cxa_begin_catch
 3276      00
 3277              	.LEHB94:
 3278 1663 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3278      00
 3279 1668 488B08   		movq	(%rax), %rcx
 3280 166b 488D45C0 		leaq	-64(%rbp), %rax
 3281 166f BA500000 		movl	$80, %edx
 3281      00
 3282 1674 4889CE   		movq	%rcx, %rsi
 3283 1677 4889C7   		movq	%rax, %rdi
 3284 167a E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3284      00
  80:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(fileName.c_str(), result.failureFile);
 3285              		.loc 3 80 0 is_stmt 0 discriminator 12
 3286 167f E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3286      00
 3287 1684 488B00   		movq	(%rax), %rax
 3288 1687 488D4DC0 		leaq	-64(%rbp), %rcx
 3289 168b BA000000 		movl	$.LC21, %edx
 3289      00
 3290 1690 4889CE   		movq	%rcx, %rsi
 3291 1693 4889C7   		movq	%rax, %rdi
 3292 1696 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3292      00
 3293              	.LEHE94:
 3294              	.LEHB95:
  80:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(fileName.c_str(), result.failureFile);
 3295              		.loc 3 80 0 discriminator 16
 3296 169b E8000000 		call	__cxa_end_catch
 3296      00
 3297              	.LEHE95:
 3298              	.L192:
 3299              	.LBE78:
 3300              		.loc 3 81 0 is_stmt 1
 3301 16a0 90       		nop
 3302 16a1 488B45E8 		movq	-24(%rbp), %rax
 3303 16a5 64483304 		xorq	%fs:40, %rax
 3303      25280000 
 3303      00
 3304 16ae 7405     		je	.L187
 3305 16b0 E8000000 		call	__stack_chk_fail
 3305      00
 3306              	.L187:
 3307 16b5 4883C468 		addq	$104, %rsp
 3308 16b9 5B       		popq	%rbx
 3309 16ba 5D       		popq	%rbp
 3310              		.cfi_def_cfa 7, 8
 3311 16bb C3       		ret
 3312              		.cfi_endproc
 3313              	.LFE1396:
 3314              		.section	.gcc_except_table
 3315              		.align 4
 3316              	.LLSDA1396:
 3317 0234 FF       		.byte	0xff
 3318 0235 03       		.byte	0x3
 3319 0236 39       		.uleb128 .LLSDATT1396-.LLSDATTD1396
 3320              	.LLSDATTD1396:
 3321 0237 01       		.byte	0x1
 3322 0238 30       		.uleb128 .LLSDACSE1396-.LLSDACSB1396
 3323              	.LLSDACSB1396:
 3324 0239 36       		.uleb128 .LEHB87-.LFB1396
 3325 023a 39       		.uleb128 .LEHE87-.LEHB87
 3326 023b 00       		.uleb128 0
 3327 023c 00       		.uleb128 0
 3328 023d 8C01     		.uleb128 .LEHB88-.LFB1396
 3329 023f 38       		.uleb128 .LEHE88-.LEHB88
 3330 0240 B202     		.uleb128 .L188-.LFB1396
 3331 0242 01       		.uleb128 0x1
 3332 0243 C401     		.uleb128 .LEHB89-.LFB1396
 3333 0245 56       		.uleb128 .LEHE89-.LEHB89
 3334 0246 8F03     		.uleb128 .L190-.LFB1396
 3335 0248 01       		.uleb128 0x1
 3336 0249 AD02     		.uleb128 .LEHB90-.LFB1396
 3337 024b 05       		.uleb128 .LEHE90-.LEHB90
 3338 024c 00       		.uleb128 0
 3339 024d 00       		.uleb128 0
 3340 024e BA02     		.uleb128 .LEHB91-.LFB1396
 3341 0250 38       		.uleb128 .LEHE91-.LEHB91
 3342 0251 9F02     		.uleb128 .L189-.LFB1396
 3343 0253 00       		.uleb128 0
 3344 0254 F202     		.uleb128 .LEHB92-.LFB1396
 3345 0256 05       		.uleb128 .LEHE92-.LEHB92
 3346 0257 00       		.uleb128 0
 3347 0258 00       		.uleb128 0
 3348 0259 8A03     		.uleb128 .LEHB93-.LFB1396
 3349 025b 05       		.uleb128 .LEHE93-.LEHB93
 3350 025c 00       		.uleb128 0
 3351 025d 00       		.uleb128 0
 3352 025e 9703     		.uleb128 .LEHB94-.LFB1396
 3353 0260 38       		.uleb128 .LEHE94-.LEHB94
 3354 0261 FC02     		.uleb128 .L191-.LFB1396
 3355 0263 00       		.uleb128 0
 3356 0264 CF03     		.uleb128 .LEHB95-.LFB1396
 3357 0266 05       		.uleb128 .LEHE95-.LEHB95
 3358 0267 00       		.uleb128 0
 3359 0268 00       		.uleb128 0
 3360              	.LLSDACSE1396:
 3361 0269 01       		.byte	0x1
 3362 026a 00       		.byte	0
 3363 026b 00       		.align 4
 3364 026c 00000000 		.long	0
 3365              	
 3366              	.LLSDATT1396:
 3367              		.text
 3369              		.align 2
 3371              	_ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleF
 3372              	.LFB1398:
  82:TestDeferredTestReporter.cpp **** 
  83:TestDeferredTestReporter.cpp **** TEST_FIXTURE(DeferredTestReporterFixture, ReportFailureSavesFailureDetailsForMultipleFailures)
 3373              		.loc 3 83 0
 3374              		.cfi_startproc
 3375 16bc 55       		pushq	%rbp
 3376              		.cfi_def_cfa_offset 16
 3377              		.cfi_offset 6, -16
 3378 16bd 4889E5   		movq	%rsp, %rbp
 3379              		.cfi_def_cfa_register 6
 3380 16c0 4883EC10 		subq	$16, %rsp
 3381 16c4 48897DF8 		movq	%rdi, -8(%rbp)
 3382 16c8 488975F0 		movq	%rsi, -16(%rbp)
 3383              	.LBB79:
 3384              		.loc 3 83 0
 3385 16cc 488B45F8 		movq	-8(%rbp), %rax
 3386 16d0 4889C7   		movq	%rax, %rdi
 3387 16d3 E866E9FF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureC2Ev
 3387      FF
 3388 16d8 488B45F8 		movq	-8(%rbp), %rax
 3389 16dc 488B55F0 		movq	-16(%rbp), %rdx
 3390 16e0 48895060 		movq	%rdx, 96(%rax)
 3391              	.LBE79:
 3392 16e4 C9       		leave
 3393              		.cfi_def_cfa 7, 8
 3394 16e5 C3       		ret
 3395              		.cfi_endproc
 3396              	.LFE1398:
 3398              		.section	.rodata
 3399 0361 00000000 		.align 8
 3399      000000
 3400              	.LC22:
 3401 0368 5265706F 		.string	"ReportFailureSavesFailureDetailsForMultipleFailures"
 3401      72744661 
 3401      696C7572 
 3401      65536176 
 3401      65734661 
 3402              		.text
 3403              		.align 2
 3405              	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMulti
 3406              	.LFB1401:
 3407              		.loc 3 83 0
 3408              		.cfi_startproc
 3409 16e6 55       		pushq	%rbp
 3410              		.cfi_def_cfa_offset 16
 3411              		.cfi_offset 6, -16
 3412 16e7 4889E5   		movq	%rsp, %rbp
 3413              		.cfi_def_cfa_register 6
 3414 16ea 4883EC10 		subq	$16, %rsp
 3415 16ee 48897DF8 		movq	%rdi, -8(%rbp)
 3416              	.LBB80:
 3417              		.loc 3 83 0
 3418 16f2 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 3418      00
 3419 16f7 4889C2   		movq	%rax, %rdx
 3420 16fa 488B45F8 		movq	-8(%rbp), %rax
 3421 16fe 41B85300 		movl	$83, %r8d
 3421      0000
 3422 1704 B9000000 		movl	$.LC4, %ecx
 3422      00
 3423 1709 BE000000 		movl	$.LC22, %esi
 3423      00
 3424 170e 4889C7   		movq	%rax, %rdi
 3425 1711 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 3425      00
 3426 1716 488B45F8 		movq	-8(%rbp), %rax
 3427 171a 48C70000 		movq	$_ZTVN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetail
 3427      000000
 3428              	.LBE80:
 3429 1721 C9       		leave
 3430              		.cfi_def_cfa 7, 8
 3431 1722 C3       		ret
 3432              		.cfi_endproc
 3433              	.LFE1401:
 3435              		.local	_ZN8UnitTest12_GLOBAL__N_190testDeferredTestReporterFixtureReportFailureSavesFailureDetails
 3436              		.comm	_ZN8UnitTest12_GLOBAL__N_190testDeferredTestReporterFixtureReportFailureSavesFailureDetailsF
 3437              		.local	_ZN8UnitTest12_GLOBAL__N_183adderDeferredTestReporterFixtureReportFailureSavesFailureDetail
 3438              		.comm	_ZN8UnitTest12_GLOBAL__N_183adderDeferredTestReporterFixtureReportFailureSavesFailureDetails
 3439 1723 90       		.align 2
 3441              	_ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleF
 3442              	.LFB1405:
 3443              		.loc 3 83 0
 3444              		.cfi_startproc
 3445 1724 55       		pushq	%rbp
 3446              		.cfi_def_cfa_offset 16
 3447              		.cfi_offset 6, -16
 3448 1725 4889E5   		movq	%rsp, %rbp
 3449              		.cfi_def_cfa_register 6
 3450 1728 4883EC10 		subq	$16, %rsp
 3451 172c 48897DF8 		movq	%rdi, -8(%rbp)
 3452              	.LBB81:
 3453              		.loc 3 83 0
 3454 1730 488B45F8 		movq	-8(%rbp), %rax
 3455 1734 4889C7   		movq	%rax, %rdi
 3456 1737 E8CCEAFF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureD2Ev
 3456      FF
 3457              	.LBE81:
 3458 173c C9       		leave
 3459              		.cfi_def_cfa 7, 8
 3460 173d C3       		ret
 3461              		.cfi_endproc
 3462              	.LFE1405:
 3464              		.align 2
 3466              	_ZNK8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMult
 3467              	.LFB1403:
 3468              		.loc 3 83 0
 3469              		.cfi_startproc
 3470              		.cfi_personality 0x3,__gxx_personality_v0
 3471              		.cfi_lsda 0x3,.LLSDA1403
 3472 173e 55       		pushq	%rbp
 3473              		.cfi_def_cfa_offset 16
 3474              		.cfi_offset 6, -16
 3475 173f 4889E5   		movq	%rsp, %rbp
 3476              		.cfi_def_cfa_register 6
 3477 1742 4154     		pushq	%r12
 3478 1744 53       		pushq	%rbx
 3479 1745 4881EC10 		subq	$528, %rsp
 3479      020000
 3480              		.cfi_offset 12, -24
 3481              		.cfi_offset 3, -32
 3482 174c 4889BDE8 		movq	%rdi, -536(%rbp)
 3482      FDFFFF
 3483              		.loc 3 83 0
 3484 1753 64488B04 		movq	%fs:40, %rax
 3484      25280000 
 3484      00
 3485 175c 488945E8 		movq	%rax, -24(%rbp)
 3486 1760 31C0     		xorl	%eax, %eax
 3487              	.LBB82:
 3488 1762 C685FFFD 		movb	$0, -513(%rbp)
 3488      FFFF00
 3489              	.LBB83:
 3490 1769 488B85E8 		movq	-536(%rbp), %rax
 3490      FDFFFF
 3491 1770 488D5008 		leaq	8(%rax), %rdx
 3492 1774 488D8510 		leaq	-496(%rbp), %rax
 3492      FEFFFF
 3493 177b 4889D6   		movq	%rdx, %rsi
 3494 177e 4889C7   		movq	%rax, %rdi
 3495              	.LEHB96:
 3496 1781 E836FFFF 		call	_ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMul
 3496      FF
 3497              	.LEHE96:
 3498              		.loc 3 83 0 is_stmt 0 discriminator 1
 3499 1786 C685FFFD 		movb	$1, -513(%rbp)
 3499      FFFF01
 3500 178d 488B85E8 		movq	-536(%rbp), %rax
 3500      FDFFFF
 3501 1794 488D5008 		leaq	8(%rax), %rdx
 3502 1798 488D8510 		leaq	-496(%rbp), %rax
 3502      FEFFFF
 3503 179f 4889D6   		movq	%rdx, %rsi
 3504 17a2 4889C7   		movq	%rax, %rdi
 3505              	.LEHB97:
 3506 17a5 E8961500 		call	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFai
 3506      00
 3507              	.LEHE97:
 3508              		.loc 3 83 0 discriminator 3
 3509 17aa 488D8510 		leaq	-496(%rbp), %rax
 3509      FEFFFF
 3510 17b1 4889C7   		movq	%rax, %rdi
 3511              	.LEHB98:
 3512 17b4 E86BFFFF 		call	_ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMul
 3512      FF
 3513              	.LEHE98:
 3514              	.LBE83:
 3515              	.LBE82:
 3516              		.loc 3 83 0
 3517 17b9 E9640200 		jmp	.L218
 3517      00
 3518              	.L212:
 3519 17be 4989C4   		movq	%rax, %r12
 3520 17c1 4889D3   		movq	%rdx, %rbx
 3521              	.LBB91:
 3522              	.LBB84:
 3523 17c4 488D8510 		leaq	-496(%rbp), %rax
 3523      FEFFFF
 3524 17cb 4889C7   		movq	%rax, %rdi
 3525 17ce E851FFFF 		call	_ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMul
 3525      FF
 3526 17d3 4C89E0   		movq	%r12, %rax
 3527 17d6 4889DA   		movq	%rbx, %rdx
 3528 17d9 EB00     		jmp	.L199
 3529              	.L211:
 3530              	.L199:
 3531 17db 4883FA01 		cmpq	$1, %rdx
 3532 17df 745C     		je	.L201
 3533 17e1 4883FA02 		cmpq	$2, %rdx
 3534 17e5 0F84F400 		je	.L202
 3534      0000
 3535 17eb E9980100 		jmp	.L217
 3535      00
 3536              	.L213:
 3537 17f0 4889C3   		movq	%rax, %rbx
 3538              	.LBE84:
 3539              	.LBB85:
 3540 17f3 E8000000 		call	__cxa_end_catch
 3540      00
 3541 17f8 4889D8   		movq	%rbx, %rax
 3542 17fb 4889C7   		movq	%rax, %rdi
 3543              	.LEHB99:
 3544 17fe E8000000 		call	_Unwind_Resume
 3544      00
 3545              	.LEHE99:
 3546              	.L214:
 3547 1803 4889C3   		movq	%rax, %rbx
 3548              	.LBE85:
 3549              	.LBB86:
 3550              	.LBB87:
 3551 1806 488D8580 		leaq	-384(%rbp), %rax
 3551      FEFFFF
 3552 180d 4889C7   		movq	%rax, %rdi
 3553 1810 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 3553      00
 3554 1815 EB03     		jmp	.L205
 3555              	.L215:
 3556 1817 4889C3   		movq	%rax, %rbx
 3557              	.L205:
 3558              	.LBE87:
 3559 181a E8000000 		call	__cxa_end_catch
 3559      00
 3560 181f 4889D8   		movq	%rbx, %rax
 3561 1822 4889C7   		movq	%rax, %rdi
 3562              	.LEHB100:
 3563 1825 E8000000 		call	_Unwind_Resume
 3563      00
 3564              	.LEHE100:
 3565              	.L216:
 3566 182a 4889C3   		movq	%rax, %rbx
 3567              	.LBE86:
 3568 182d E8000000 		call	__cxa_end_catch
 3568      00
 3569 1832 4889D8   		movq	%rbx, %rax
 3570 1835 4889C7   		movq	%rax, %rdi
 3571              	.LEHB101:
 3572 1838 E8000000 		call	_Unwind_Resume
 3572      00
 3573              	.LEHE101:
 3574              	.L201:
 3575              	.LBB89:
 3576 183d 4889C7   		movq	%rax, %rdi
 3577 1840 E8000000 		call	__cxa_begin_catch
 3577      00
 3578 1845 48898500 		movq	%rax, -512(%rbp)
 3578      FEFFFF
 3579 184c 488B8500 		movq	-512(%rbp), %rax
 3579      FEFFFF
 3580 1853 488B00   		movq	(%rax), %rax
 3581 1856 4883C010 		addq	$16, %rax
 3582 185a 488B00   		movq	(%rax), %rax
 3583 185d 488B9500 		movq	-512(%rbp), %rdx
 3583      FEFFFF
 3584 1864 4889D7   		movq	%rdx, %rdi
 3585 1867 FFD0     		call	*%rax
 3586 1869 4889C3   		movq	%rax, %rbx
 3587 186c 488B8500 		movq	-512(%rbp), %rax
 3587      FEFFFF
 3588 1873 4889C7   		movq	%rax, %rdi
 3589              	.LEHB102:
 3590 1876 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 3590      00
 3591 187b 4189C4   		movl	%eax, %r12d
 3592 187e 488B8500 		movq	-512(%rbp), %rax
 3592      FEFFFF
 3593 1885 4889C7   		movq	%rax, %rdi
 3594 1888 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 3594      00
 3595              		.loc 3 83 0 discriminator 5
 3596 188d 4889C1   		movq	%rax, %rcx
 3597 1890 488B85E8 		movq	-536(%rbp), %rax
 3597      FDFFFF
 3598 1897 488B5008 		movq	8(%rax), %rdx
 3599 189b 488B85E8 		movq	-536(%rbp), %rax
 3599      FDFFFF
 3600 18a2 488B7010 		movq	16(%rax), %rsi
 3601 18a6 488D8510 		leaq	-496(%rbp), %rax
 3601      FEFFFF
 3602 18ad 4589E0   		movl	%r12d, %r8d
 3603 18b0 4889C7   		movq	%rax, %rdi
 3604 18b3 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 3604      00
 3605              		.loc 3 83 0 discriminator 9
 3606 18b8 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3606      00
 3607 18bd 488B00   		movq	(%rax), %rax
 3608 18c0 488D8D10 		leaq	-496(%rbp), %rcx
 3608      FEFFFF
 3609 18c7 4889DA   		movq	%rbx, %rdx
 3610 18ca 4889CE   		movq	%rcx, %rsi
 3611 18cd 4889C7   		movq	%rax, %rdi
 3612 18d0 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3612      00
 3613              	.LEHE102:
 3614              		.loc 3 83 0 discriminator 13
 3615 18d5 E8000000 		call	__cxa_end_catch
 3615      00
 3616              	.LBE89:
 3617              	.LBE91:
 3618 18da E9430100 		jmp	.L218
 3618      00
 3619              	.L202:
 3620              	.LBB92:
 3621              	.LBB90:
 3622              		.loc 3 83 0
 3623 18df 4889C7   		movq	%rax, %rdi
 3624 18e2 E8000000 		call	__cxa_begin_catch
 3624      00
 3625 18e7 48898508 		movq	%rax, -504(%rbp)
 3625      FEFFFF
 3626              	.LBB88:
 3627 18ee 488D8580 		leaq	-384(%rbp), %rax
 3627      FEFFFF
 3628 18f5 4889C7   		movq	%rax, %rdi
 3629              	.LEHB103:
 3630 18f8 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 3630      00
 3631              	.LEHE103:
 3632              		.loc 3 83 0 discriminator 15
 3633 18fd 488B8508 		movq	-504(%rbp), %rax
 3633      FEFFFF
 3634 1904 488B00   		movq	(%rax), %rax
 3635 1907 4883C010 		addq	$16, %rax
 3636 190b 488B00   		movq	(%rax), %rax
 3637 190e 488B9508 		movq	-504(%rbp), %rdx
 3637      FEFFFF
 3638 1915 4889D7   		movq	%rdx, %rdi
 3639 1918 FFD0     		call	*%rax
 3640 191a 4889C3   		movq	%rax, %rbx
 3641 191d 488D8580 		leaq	-384(%rbp), %rax
 3641      FEFFFF
 3642 1924 BE000000 		movl	$.LC6, %esi
 3642      00
 3643 1929 4889C7   		movq	%rax, %rdi
 3644              	.LEHB104:
 3645 192c E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 3645      00
 3646 1931 4889DE   		movq	%rbx, %rsi
 3647 1934 4889C7   		movq	%rax, %rdi
 3648 1937 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 3648      00
 3649              		.loc 3 83 0 discriminator 19
 3650 193c 488D8580 		leaq	-384(%rbp), %rax
 3650      FEFFFF
 3651 1943 4889C7   		movq	%rax, %rdi
 3652 1946 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 3652      00
 3653 194b 4989C4   		movq	%rax, %r12
 3654 194e 488B85E8 		movq	-536(%rbp), %rax
 3654      FDFFFF
 3655 1955 488D5808 		leaq	8(%rax), %rbx
 3656 1959 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3656      00
 3657              		.loc 3 83 0 discriminator 21
 3658 195e 488B00   		movq	(%rax), %rax
 3659 1961 4C89E2   		movq	%r12, %rdx
 3660 1964 4889DE   		movq	%rbx, %rsi
 3661 1967 4889C7   		movq	%rax, %rdi
 3662 196a E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3662      00
 3663              	.LEHE104:
 3664              		.loc 3 83 0 discriminator 25
 3665 196f 488D8580 		leaq	-384(%rbp), %rax
 3665      FEFFFF
 3666 1976 4889C7   		movq	%rax, %rdi
 3667              	.LEHB105:
 3668 1979 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 3668      00
 3669              	.LEHE105:
 3670              	.LBE88:
 3671              		.loc 3 83 0 discriminator 26
 3672 197e E8000000 		call	__cxa_end_catch
 3672      00
 3673              	.LBE90:
 3674              	.LBE92:
 3675 1983 E99A0000 		jmp	.L218
 3675      00
 3676              	.L217:
 3677              	.LBB93:
 3678              		.loc 3 83 0
 3679 1988 4889C7   		movq	%rax, %rdi
 3680 198b E8000000 		call	__cxa_begin_catch
 3680      00
 3681 1990 80BDFFFD 		cmpb	$0, -513(%rbp)
 3681      FFFF00
 3682 1997 7443     		je	.L208
 3683              		.loc 3 83 0 discriminator 28
 3684 1999 488B85E8 		movq	-536(%rbp), %rax
 3684      FDFFFF
 3685 19a0 488D4808 		leaq	8(%rax), %rcx
 3686 19a4 488D8510 		leaq	-496(%rbp), %rax
 3686      FEFFFF
 3687 19ab BA530000 		movl	$83, %edx
 3687      00
 3688 19b0 4889CE   		movq	%rcx, %rsi
 3689 19b3 4889C7   		movq	%rax, %rdi
 3690              	.LEHB106:
 3691 19b6 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3691      00
 3692              		.loc 3 83 0 discriminator 31
 3693 19bb E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3693      00
 3694 19c0 488B00   		movq	(%rax), %rax
 3695 19c3 488D8D10 		leaq	-496(%rbp), %rcx
 3695      FEFFFF
 3696 19ca BA000000 		movl	$.LC7, %edx
 3696      00
 3697 19cf 4889CE   		movq	%rcx, %rsi
 3698 19d2 4889C7   		movq	%rax, %rdi
 3699 19d5 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3699      00
 3700 19da EB41     		jmp	.L209
 3701              	.L208:
 3702              		.loc 3 83 0 discriminator 29
 3703 19dc 488B85E8 		movq	-536(%rbp), %rax
 3703      FDFFFF
 3704 19e3 488D4808 		leaq	8(%rax), %rcx
 3705 19e7 488D8510 		leaq	-496(%rbp), %rax
 3705      FEFFFF
 3706 19ee BA530000 		movl	$83, %edx
 3706      00
 3707 19f3 4889CE   		movq	%rcx, %rsi
 3708 19f6 4889C7   		movq	%rax, %rdi
 3709 19f9 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3709      00
 3710              		.loc 3 83 0 discriminator 38
 3711 19fe E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3711      00
 3712 1a03 488B00   		movq	(%rax), %rax
 3713 1a06 488D8D10 		leaq	-496(%rbp), %rcx
 3713      FEFFFF
 3714 1a0d BA000000 		movl	$.LC8, %edx
 3714      00
 3715 1a12 4889CE   		movq	%rcx, %rsi
 3716 1a15 4889C7   		movq	%rax, %rdi
 3717 1a18 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3717      00
 3718              	.LEHE106:
 3719              	.L209:
 3720              	.LEHB107:
 3721              		.loc 3 83 0 discriminator 43
 3722 1a1d E8000000 		call	__cxa_end_catch
 3722      00
 3723              	.LEHE107:
 3724              	.L218:
 3725              	.LBE93:
 3726              		.loc 3 83 0
 3727 1a22 90       		nop
 3728 1a23 488B45E8 		movq	-24(%rbp), %rax
 3729 1a27 64483304 		xorq	%fs:40, %rax
 3729      25280000 
 3729      00
 3730 1a30 7405     		je	.L210
 3731 1a32 E8000000 		call	__stack_chk_fail
 3731      00
 3732              	.L210:
 3733 1a37 4881C410 		addq	$528, %rsp
 3733      020000
 3734 1a3e 5B       		popq	%rbx
 3735 1a3f 415C     		popq	%r12
 3736 1a41 5D       		popq	%rbp
 3737              		.cfi_def_cfa 7, 8
 3738 1a42 C3       		ret
 3739              		.cfi_endproc
 3740              	.LFE1403:
 3741              		.section	.gcc_except_table
 3742              		.align 4
 3743              	.LLSDA1403:
 3744 0270 FF       		.byte	0xff
 3745 0271 03       		.byte	0x3
 3746 0272 59       		.uleb128 .LLSDATT1403-.LLSDATTD1403
 3747              	.LLSDATTD1403:
 3748 0273 01       		.byte	0x1
 3749 0274 41       		.uleb128 .LLSDACSE1403-.LLSDACSB1403
 3750              	.LLSDACSB1403:
 3751 0275 43       		.uleb128 .LEHB96-.LFB1403
 3752 0276 05       		.uleb128 .LEHE96-.LEHB96
 3753 0277 9D01     		.uleb128 .L211-.LFB1403
 3754 0279 05       		.uleb128 0x5
 3755 027a 67       		.uleb128 .LEHB97-.LFB1403
 3756 027b 05       		.uleb128 .LEHE97-.LEHB97
 3757 027c 8001     		.uleb128 .L212-.LFB1403
 3758 027e 07       		.uleb128 0x7
 3759 027f 76       		.uleb128 .LEHB98-.LFB1403
 3760 0280 05       		.uleb128 .LEHE98-.LEHB98
 3761 0281 9D01     		.uleb128 .L211-.LFB1403
 3762 0283 05       		.uleb128 0x5
 3763 0284 C001     		.uleb128 .LEHB99-.LFB1403
 3764 0286 05       		.uleb128 .LEHE99-.LEHB99
 3765 0287 00       		.uleb128 0
 3766 0288 00       		.uleb128 0
 3767 0289 E701     		.uleb128 .LEHB100-.LFB1403
 3768 028b 05       		.uleb128 .LEHE100-.LEHB100
 3769 028c 00       		.uleb128 0
 3770 028d 00       		.uleb128 0
 3771 028e FA01     		.uleb128 .LEHB101-.LFB1403
 3772 0290 05       		.uleb128 .LEHE101-.LEHB101
 3773 0291 00       		.uleb128 0
 3774 0292 00       		.uleb128 0
 3775 0293 B802     		.uleb128 .LEHB102-.LFB1403
 3776 0295 5F       		.uleb128 .LEHE102-.LEHB102
 3777 0296 B201     		.uleb128 .L213-.LFB1403
 3778 0298 00       		.uleb128 0
 3779 0299 BA03     		.uleb128 .LEHB103-.LFB1403
 3780 029b 05       		.uleb128 .LEHE103-.LEHB103
 3781 029c D901     		.uleb128 .L215-.LFB1403
 3782 029e 00       		.uleb128 0
 3783 029f EE03     		.uleb128 .LEHB104-.LFB1403
 3784 02a1 43       		.uleb128 .LEHE104-.LEHB104
 3785 02a2 C501     		.uleb128 .L214-.LFB1403
 3786 02a4 00       		.uleb128 0
 3787 02a5 BB04     		.uleb128 .LEHB105-.LFB1403
 3788 02a7 05       		.uleb128 .LEHE105-.LEHB105
 3789 02a8 D901     		.uleb128 .L215-.LFB1403
 3790 02aa 00       		.uleb128 0
 3791 02ab F804     		.uleb128 .LEHB106-.LFB1403
 3792 02ad 67       		.uleb128 .LEHE106-.LEHB106
 3793 02ae EC01     		.uleb128 .L216-.LFB1403
 3794 02b0 00       		.uleb128 0
 3795 02b1 DF05     		.uleb128 .LEHB107-.LFB1403
 3796 02b3 05       		.uleb128 .LEHE107-.LEHB107
 3797 02b4 00       		.uleb128 0
 3798 02b5 00       		.uleb128 0
 3799              	.LLSDACSE1403:
 3800 02b6 03       		.byte	0x3
 3801 02b7 00       		.byte	0
 3802 02b8 02       		.byte	0x2
 3803 02b9 7D       		.byte	0x7d
 3804 02ba 01       		.byte	0x1
 3805 02bb 7D       		.byte	0x7d
 3806 02bc 00       		.byte	0
 3807 02bd 7D       		.byte	0x7d
 3808 02be 0000     		.align 4
 3809 02c0 00000000 		.long	0
 3810              	
 3811 02c4 00000000 		.long	_ZTISt9exception
 3812 02c8 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 3813              	.LLSDATT1403:
 3814              		.text
 3816              		.section	.rodata
 3817              	.LC23:
 3818 039c 6661696C 		.string	"failure 1"
 3818      75726520 
 3818      3100
 3819              	.LC24:
 3820 03a6 6661696C 		.string	"failure 2"
 3820      75726520 
 3820      3200
 3821              		.align 8
 3822              	.LC25:
 3823 03b0 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(2, (int)result.failures.size())"
 3823      6E646C65 
 3823      64206578 
 3823      63657074 
 3823      696F6E20 
 3824 03f3 00000000 		.align 8
 3824      00
 3825              	.LC26:
 3826 03f8 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(failure1, result.failures[0].second)"
 3826      6E646C65 
 3826      64206578 
 3826      63657074 
 3826      696F6E20 
 3827              		.align 8
 3828              	.LC27:
 3829 0440 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(failure2, result.failures[1].second)"
 3829      6E646C65 
 3829      64206578 
 3829      63657074 
 3829      696F6E20 
 3830              		.text
 3831 1a43 90       		.align 2
 3833              	_ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleF
 3834              	.LFB1407:
  84:TestDeferredTestReporter.cpp **** {
 3835              		.loc 3 84 0 is_stmt 1
 3836              		.cfi_startproc
 3837              		.cfi_personality 0x3,__gxx_personality_v0
 3838              		.cfi_lsda 0x3,.LLSDA1407
 3839 1a44 55       		pushq	%rbp
 3840              		.cfi_def_cfa_offset 16
 3841              		.cfi_offset 6, -16
 3842 1a45 4889E5   		movq	%rsp, %rbp
 3843              		.cfi_def_cfa_register 6
 3844 1a48 53       		pushq	%rbx
 3845 1a49 4883EC68 		subq	$104, %rsp
 3846              		.cfi_offset 3, -24
 3847 1a4d 48897D98 		movq	%rdi, -104(%rbp)
 3848              		.loc 3 84 0
 3849 1a51 64488B04 		movq	%fs:40, %rax
 3849      25280000 
 3849      00
 3850 1a5a 488945E8 		movq	%rax, -24(%rbp)
 3851 1a5e 31C0     		xorl	%eax, %eax
 3852              	.LBB94:
  85:TestDeferredTestReporter.cpp ****     char const* failure1 = "failure 1";
 3853              		.loc 3 85 0
 3854 1a60 48C745A8 		movq	$.LC23, -88(%rbp)
 3854      00000000 
  86:TestDeferredTestReporter.cpp ****     char const* failure2 = "failure 2";
 3855              		.loc 3 86 0
 3856 1a68 48C745B0 		movq	$.LC24, -80(%rbp)
 3856      00000000 
  87:TestDeferredTestReporter.cpp **** 
  88:TestDeferredTestReporter.cpp ****     reporter.ReportTestStart(details);
 3857              		.loc 3 88 0
 3858 1a70 488B4598 		movq	-104(%rbp), %rax
 3859 1a74 488D5040 		leaq	64(%rax), %rdx
 3860 1a78 488B4598 		movq	-104(%rbp), %rax
 3861 1a7c 4889D6   		movq	%rdx, %rsi
 3862 1a7f 4889C7   		movq	%rax, %rdi
 3863              	.LEHB108:
 3864 1a82 E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
 3864      00
  89:TestDeferredTestReporter.cpp ****     reporter.ReportFailure(details, failure1);
 3865              		.loc 3 89 0
 3866 1a87 488B55A8 		movq	-88(%rbp), %rdx
 3867 1a8b 488B4598 		movq	-104(%rbp), %rax
 3868 1a8f 488D4840 		leaq	64(%rax), %rcx
 3869 1a93 488B4598 		movq	-104(%rbp), %rax
 3870 1a97 4889CE   		movq	%rcx, %rsi
 3871 1a9a 4889C7   		movq	%rax, %rdi
 3872 1a9d E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc
 3872      00
  90:TestDeferredTestReporter.cpp ****     reporter.ReportFailure(details, failure2);
 3873              		.loc 3 90 0
 3874 1aa2 488B55B0 		movq	-80(%rbp), %rdx
 3875 1aa6 488B4598 		movq	-104(%rbp), %rax
 3876 1aaa 488D4840 		leaq	64(%rax), %rcx
 3877 1aae 488B4598 		movq	-104(%rbp), %rax
 3878 1ab2 4889CE   		movq	%rcx, %rsi
 3879 1ab5 4889C7   		movq	%rax, %rdi
 3880 1ab8 E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc
 3880      00
  91:TestDeferredTestReporter.cpp **** 
  92:TestDeferredTestReporter.cpp ****     DeferredTestResult const& result = reporter.GetResults().at(0);
 3881              		.loc 3 92 0
 3882 1abd 488B4598 		movq	-104(%rbp), %rax
 3883 1ac1 4889C7   		movq	%rax, %rdi
 3884 1ac4 E8000000 		call	_ZN8UnitTest20DeferredTestReporter10GetResultsEv
 3884      00
 3885 1ac9 BE000000 		movl	$0, %esi
 3885      00
 3886 1ace 4889C7   		movq	%rax, %rdi
 3887 1ad1 E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm
 3887      00
 3888              	.LEHE108:
 3889 1ad6 488945B8 		movq	%rax, -72(%rbp)
 3890              	.LEHB109:
  93:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(2, (int)result.failures.size());
 3891              		.loc 3 93 0
 3892 1ada E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3892      00
 3893 1adf 488B08   		movq	(%rax), %rcx
 3894 1ae2 488D45C0 		leaq	-64(%rbp), %rax
 3895 1ae6 BA5D0000 		movl	$93, %edx
 3895      00
 3896 1aeb 4889CE   		movq	%rcx, %rsi
 3897 1aee 4889C7   		movq	%rax, %rdi
 3898 1af1 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3898      00
 3899              		.loc 3 93 0 is_stmt 0 discriminator 2
 3900 1af6 488B45B8 		movq	-72(%rbp), %rax
 3901 1afa 4883C018 		addq	$24, %rax
 3902 1afe 4889C7   		movq	%rax, %rdi
 3903 1b01 E8000000 		call	_ZNKSt6vectorISt4pairIiSsESaIS1_EE4sizeEv
 3903      00
 3904 1b06 8945A4   		movl	%eax, -92(%rbp)
 3905 1b09 C745A002 		movl	$2, -96(%rbp)
 3905      000000
 3906 1b10 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3906      00
 3907 1b15 488B00   		movq	(%rax), %rax
 3908 1b18 488D4DC0 		leaq	-64(%rbp), %rcx
 3909 1b1c 488D55A4 		leaq	-92(%rbp), %rdx
 3910 1b20 488D75A0 		leaq	-96(%rbp), %rsi
 3911 1b24 4889C7   		movq	%rax, %rdi
 3912 1b27 E8000000 		call	_ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 3912      00
 3913              	.LEHE109:
 3914              	.L222:
 3915              	.LEHB110:
  94:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure1, result.failures[0].second);
 3916              		.loc 3 94 0 is_stmt 1
 3917 1b2c E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3917      00
 3918 1b31 488B08   		movq	(%rax), %rcx
 3919 1b34 488D45C0 		leaq	-64(%rbp), %rax
 3920 1b38 BA5E0000 		movl	$94, %edx
 3920      00
 3921 1b3d 4889CE   		movq	%rcx, %rsi
 3922 1b40 4889C7   		movq	%rax, %rdi
 3923 1b43 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3923      00
 3924              		.loc 3 94 0 is_stmt 0 discriminator 2
 3925 1b48 488B45B8 		movq	-72(%rbp), %rax
 3926 1b4c 4883C018 		addq	$24, %rax
 3927 1b50 BE000000 		movl	$0, %esi
 3927      00
 3928 1b55 4889C7   		movq	%rax, %rdi
 3929 1b58 E8000000 		call	_ZNKSt6vectorISt4pairIiSsESaIS1_EEixEm
 3929      00
 3930 1b5d 488D5808 		leaq	8(%rax), %rbx
 3931 1b61 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3931      00
 3932 1b66 488B00   		movq	(%rax), %rax
 3933 1b69 488D55C0 		leaq	-64(%rbp), %rdx
 3934 1b6d 488D75A8 		leaq	-88(%rbp), %rsi
 3935 1b71 4889D1   		movq	%rdx, %rcx
 3936 1b74 4889DA   		movq	%rbx, %rdx
 3937 1b77 4889C7   		movq	%rax, %rdi
 3938 1b7a E8000000 		call	_ZN8UnitTest10CheckEqualIPKcSsEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 3938      00
 3939              	.LEHE110:
 3940              	.L225:
 3941              	.LEHB111:
  95:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure2, result.failures[1].second);
 3942              		.loc 3 95 0 is_stmt 1
 3943 1b7f E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3943      00
 3944 1b84 488B08   		movq	(%rax), %rcx
 3945 1b87 488D45C0 		leaq	-64(%rbp), %rax
 3946 1b8b BA5F0000 		movl	$95, %edx
 3946      00
 3947 1b90 4889CE   		movq	%rcx, %rsi
 3948 1b93 4889C7   		movq	%rax, %rdi
 3949 1b96 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3949      00
 3950              		.loc 3 95 0 is_stmt 0 discriminator 2
 3951 1b9b 488B45B8 		movq	-72(%rbp), %rax
 3952 1b9f 4883C018 		addq	$24, %rax
 3953 1ba3 BE010000 		movl	$1, %esi
 3953      00
 3954 1ba8 4889C7   		movq	%rax, %rdi
 3955 1bab E8000000 		call	_ZNKSt6vectorISt4pairIiSsESaIS1_EEixEm
 3955      00
 3956 1bb0 488D5808 		leaq	8(%rax), %rbx
 3957 1bb4 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3957      00
 3958 1bb9 488B00   		movq	(%rax), %rax
 3959 1bbc 488D55C0 		leaq	-64(%rbp), %rdx
 3960 1bc0 488D75B0 		leaq	-80(%rbp), %rsi
 3961 1bc4 4889D1   		movq	%rdx, %rcx
 3962 1bc7 4889DA   		movq	%rbx, %rdx
 3963 1bca 4889C7   		movq	%rax, %rdi
 3964 1bcd E8000000 		call	_ZN8UnitTest10CheckEqualIPKcSsEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 3964      00
 3965              	.LEHE111:
 3966              	.LBE94:
  96:TestDeferredTestReporter.cpp **** }
 3967              		.loc 3 96 0 is_stmt 1
 3968 1bd2 E9120100 		jmp	.L236
 3968      00
 3969              	.L231:
 3970 1bd7 4889C3   		movq	%rax, %rbx
 3971              	.LBB95:
  93:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure1, result.failures[0].second);
 3972              		.loc 3 93 0
 3973 1bda E8000000 		call	__cxa_end_catch
 3973      00
 3974 1bdf 4889D8   		movq	%rbx, %rax
 3975 1be2 4889C7   		movq	%rax, %rdi
 3976              	.LEHB112:
 3977 1be5 E8000000 		call	_Unwind_Resume
 3977      00
 3978              	.LEHE112:
 3979              	.L230:
 3980 1bea 4889C7   		movq	%rax, %rdi
 3981 1bed E8000000 		call	__cxa_begin_catch
 3981      00
 3982              	.LEHB113:
 3983 1bf2 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3983      00
 3984 1bf7 488B08   		movq	(%rax), %rcx
 3985 1bfa 488D45C0 		leaq	-64(%rbp), %rax
 3986 1bfe BA5D0000 		movl	$93, %edx
 3986      00
 3987 1c03 4889CE   		movq	%rcx, %rsi
 3988 1c06 4889C7   		movq	%rax, %rdi
 3989 1c09 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3989      00
  93:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure1, result.failures[0].second);
 3990              		.loc 3 93 0 is_stmt 0 discriminator 10
 3991 1c0e E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3991      00
 3992 1c13 488B00   		movq	(%rax), %rax
 3993 1c16 488D4DC0 		leaq	-64(%rbp), %rcx
 3994 1c1a BA000000 		movl	$.LC25, %edx
 3994      00
 3995 1c1f 4889CE   		movq	%rcx, %rsi
 3996 1c22 4889C7   		movq	%rax, %rdi
 3997 1c25 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3997      00
 3998              	.LEHE113:
 3999              	.LEHB114:
  93:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure1, result.failures[0].second);
 4000              		.loc 3 93 0 discriminator 14
 4001 1c2a E8000000 		call	__cxa_end_catch
 4001      00
 4002              	.LEHE114:
 4003 1c2f E9F8FEFF 		jmp	.L222
 4003      FF
 4004              	.L233:
 4005 1c34 4889C3   		movq	%rax, %rbx
  94:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure2, result.failures[1].second);
 4006              		.loc 3 94 0 is_stmt 1
 4007 1c37 E8000000 		call	__cxa_end_catch
 4007      00
 4008 1c3c 4889D8   		movq	%rbx, %rax
 4009 1c3f 4889C7   		movq	%rax, %rdi
 4010              	.LEHB115:
 4011 1c42 E8000000 		call	_Unwind_Resume
 4011      00
 4012              	.LEHE115:
 4013              	.L232:
 4014 1c47 4889C7   		movq	%rax, %rdi
 4015 1c4a E8000000 		call	__cxa_begin_catch
 4015      00
 4016              	.LEHB116:
 4017 1c4f E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4017      00
 4018 1c54 488B08   		movq	(%rax), %rcx
 4019 1c57 488D45C0 		leaq	-64(%rbp), %rax
 4020 1c5b BA5E0000 		movl	$94, %edx
 4020      00
 4021 1c60 4889CE   		movq	%rcx, %rsi
 4022 1c63 4889C7   		movq	%rax, %rdi
 4023 1c66 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4023      00
  94:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure2, result.failures[1].second);
 4024              		.loc 3 94 0 is_stmt 0 discriminator 10
 4025 1c6b E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4025      00
 4026 1c70 488B00   		movq	(%rax), %rax
 4027 1c73 488D4DC0 		leaq	-64(%rbp), %rcx
 4028 1c77 BA000000 		movl	$.LC26, %edx
 4028      00
 4029 1c7c 4889CE   		movq	%rcx, %rsi
 4030 1c7f 4889C7   		movq	%rax, %rdi
 4031 1c82 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4031      00
 4032              	.LEHE116:
 4033              	.LEHB117:
  94:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure2, result.failures[1].second);
 4034              		.loc 3 94 0 discriminator 14
 4035 1c87 E8000000 		call	__cxa_end_catch
 4035      00
 4036              	.LEHE117:
 4037 1c8c E9EEFEFF 		jmp	.L225
 4037      FF
 4038              	.L235:
 4039 1c91 4889C3   		movq	%rax, %rbx
  95:TestDeferredTestReporter.cpp **** }
 4040              		.loc 3 95 0 is_stmt 1
 4041 1c94 E8000000 		call	__cxa_end_catch
 4041      00
 4042 1c99 4889D8   		movq	%rbx, %rax
 4043 1c9c 4889C7   		movq	%rax, %rdi
 4044              	.LEHB118:
 4045 1c9f E8000000 		call	_Unwind_Resume
 4045      00
 4046              	.LEHE118:
 4047              	.L234:
 4048 1ca4 4889C7   		movq	%rax, %rdi
 4049 1ca7 E8000000 		call	__cxa_begin_catch
 4049      00
 4050              	.LEHB119:
 4051 1cac E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4051      00
 4052 1cb1 488B08   		movq	(%rax), %rcx
 4053 1cb4 488D45C0 		leaq	-64(%rbp), %rax
 4054 1cb8 BA5F0000 		movl	$95, %edx
 4054      00
 4055 1cbd 4889CE   		movq	%rcx, %rsi
 4056 1cc0 4889C7   		movq	%rax, %rdi
 4057 1cc3 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4057      00
  95:TestDeferredTestReporter.cpp **** }
 4058              		.loc 3 95 0 is_stmt 0 discriminator 10
 4059 1cc8 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4059      00
 4060 1ccd 488B00   		movq	(%rax), %rax
 4061 1cd0 488D4DC0 		leaq	-64(%rbp), %rcx
 4062 1cd4 BA000000 		movl	$.LC27, %edx
 4062      00
 4063 1cd9 4889CE   		movq	%rcx, %rsi
 4064 1cdc 4889C7   		movq	%rax, %rdi
 4065 1cdf E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4065      00
 4066              	.LEHE119:
 4067              	.LEHB120:
  95:TestDeferredTestReporter.cpp **** }
 4068              		.loc 3 95 0 discriminator 14
 4069 1ce4 E8000000 		call	__cxa_end_catch
 4069      00
 4070              	.LEHE120:
 4071              	.L236:
 4072              	.LBE95:
 4073              		.loc 3 96 0 is_stmt 1
 4074 1ce9 90       		nop
 4075 1cea 488B45E8 		movq	-24(%rbp), %rax
 4076 1cee 64483304 		xorq	%fs:40, %rax
 4076      25280000 
 4076      00
 4077 1cf7 7405     		je	.L229
 4078 1cf9 E8000000 		call	__stack_chk_fail
 4078      00
 4079              	.L229:
 4080 1cfe 4883C468 		addq	$104, %rsp
 4081 1d02 5B       		popq	%rbx
 4082 1d03 5D       		popq	%rbp
 4083              		.cfi_def_cfa 7, 8
 4084 1d04 C3       		ret
 4085              		.cfi_endproc
 4086              	.LFE1407:
 4087              		.section	.gcc_except_table
 4088              		.align 4
 4089              	.LLSDA1407:
 4090 02cc FF       		.byte	0xff
 4091 02cd 03       		.byte	0x3
 4092 02ce 51       		.uleb128 .LLSDATT1407-.LLSDATTD1407
 4093              	.LLSDATTD1407:
 4094 02cf 01       		.byte	0x1
 4095 02d0 46       		.uleb128 .LLSDACSE1407-.LLSDACSB1407
 4096              	.LLSDACSB1407:
 4097 02d1 3E       		.uleb128 .LEHB108-.LFB1407
 4098 02d2 54       		.uleb128 .LEHE108-.LEHB108
 4099 02d3 00       		.uleb128 0
 4100 02d4 00       		.uleb128 0
 4101 02d5 9601     		.uleb128 .LEHB109-.LFB1407
 4102 02d7 52       		.uleb128 .LEHE109-.LEHB109
 4103 02d8 A603     		.uleb128 .L230-.LFB1407
 4104 02da 01       		.uleb128 0x1
 4105 02db E801     		.uleb128 .LEHB110-.LFB1407
 4106 02dd 53       		.uleb128 .LEHE110-.LEHB110
 4107 02de 8304     		.uleb128 .L232-.LFB1407
 4108 02e0 01       		.uleb128 0x1
 4109 02e1 BB02     		.uleb128 .LEHB111-.LFB1407
 4110 02e3 53       		.uleb128 .LEHE111-.LEHB111
 4111 02e4 E004     		.uleb128 .L234-.LFB1407
 4112 02e6 01       		.uleb128 0x1
 4113 02e7 A103     		.uleb128 .LEHB112-.LFB1407
 4114 02e9 05       		.uleb128 .LEHE112-.LEHB112
 4115 02ea 00       		.uleb128 0
 4116 02eb 00       		.uleb128 0
 4117 02ec AE03     		.uleb128 .LEHB113-.LFB1407
 4118 02ee 38       		.uleb128 .LEHE113-.LEHB113
 4119 02ef 9303     		.uleb128 .L231-.LFB1407
 4120 02f1 00       		.uleb128 0
 4121 02f2 E603     		.uleb128 .LEHB114-.LFB1407
 4122 02f4 05       		.uleb128 .LEHE114-.LEHB114
 4123 02f5 00       		.uleb128 0
 4124 02f6 00       		.uleb128 0
 4125 02f7 FE03     		.uleb128 .LEHB115-.LFB1407
 4126 02f9 05       		.uleb128 .LEHE115-.LEHB115
 4127 02fa 00       		.uleb128 0
 4128 02fb 00       		.uleb128 0
 4129 02fc 8B04     		.uleb128 .LEHB116-.LFB1407
 4130 02fe 38       		.uleb128 .LEHE116-.LEHB116
 4131 02ff F003     		.uleb128 .L233-.LFB1407
 4132 0301 00       		.uleb128 0
 4133 0302 C304     		.uleb128 .LEHB117-.LFB1407
 4134 0304 05       		.uleb128 .LEHE117-.LEHB117
 4135 0305 00       		.uleb128 0
 4136 0306 00       		.uleb128 0
 4137 0307 DB04     		.uleb128 .LEHB118-.LFB1407
 4138 0309 05       		.uleb128 .LEHE118-.LEHB118
 4139 030a 00       		.uleb128 0
 4140 030b 00       		.uleb128 0
 4141 030c E804     		.uleb128 .LEHB119-.LFB1407
 4142 030e 38       		.uleb128 .LEHE119-.LEHB119
 4143 030f CD04     		.uleb128 .L235-.LFB1407
 4144 0311 00       		.uleb128 0
 4145 0312 A005     		.uleb128 .LEHB120-.LFB1407
 4146 0314 05       		.uleb128 .LEHE120-.LEHB120
 4147 0315 00       		.uleb128 0
 4148 0316 00       		.uleb128 0
 4149              	.LLSDACSE1407:
 4150 0317 01       		.byte	0x1
 4151 0318 00       		.byte	0
 4152 0319 000000   		.align 4
 4153 031c 00000000 		.long	0
 4154              	
 4155              	.LLSDATT1407:
 4156              		.text
 4158 1d05 90       		.align 2
 4160              	_ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessag
 4161              	.LFB1409:
  97:TestDeferredTestReporter.cpp **** 
  98:TestDeferredTestReporter.cpp **** TEST_FIXTURE(DeferredTestReporterFixture, DeferredTestReporterTakesCopyOfFailureMessage)
 4162              		.loc 3 98 0
 4163              		.cfi_startproc
 4164 1d06 55       		pushq	%rbp
 4165              		.cfi_def_cfa_offset 16
 4166              		.cfi_offset 6, -16
 4167 1d07 4889E5   		movq	%rsp, %rbp
 4168              		.cfi_def_cfa_register 6
 4169 1d0a 4883EC10 		subq	$16, %rsp
 4170 1d0e 48897DF8 		movq	%rdi, -8(%rbp)
 4171 1d12 488975F0 		movq	%rsi, -16(%rbp)
 4172              	.LBB96:
 4173              		.loc 3 98 0
 4174 1d16 488B45F8 		movq	-8(%rbp), %rax
 4175 1d1a 4889C7   		movq	%rax, %rdi
 4176 1d1d E81CE3FF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureC2Ev
 4176      FF
 4177 1d22 488B45F8 		movq	-8(%rbp), %rax
 4178 1d26 488B55F0 		movq	-16(%rbp), %rdx
 4179 1d2a 48895060 		movq	%rdx, 96(%rax)
 4180              	.LBE96:
 4181 1d2e C9       		leave
 4182              		.cfi_def_cfa 7, 8
 4183 1d2f C3       		ret
 4184              		.cfi_endproc
 4185              	.LFE1409:
 4187              		.section	.rodata
 4188              		.align 8
 4189              	.LC28:
 4190 0488 44656665 		.string	"DeferredTestReporterTakesCopyOfFailureMessage"
 4190      72726564 
 4190      54657374 
 4190      5265706F 
 4190      72746572 
 4191              		.text
 4192              		.align 2
 4194              	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMe
 4195              	.LFB1412:
 4196              		.loc 3 98 0
 4197              		.cfi_startproc
 4198 1d30 55       		pushq	%rbp
 4199              		.cfi_def_cfa_offset 16
 4200              		.cfi_offset 6, -16
 4201 1d31 4889E5   		movq	%rsp, %rbp
 4202              		.cfi_def_cfa_register 6
 4203 1d34 4883EC10 		subq	$16, %rsp
 4204 1d38 48897DF8 		movq	%rdi, -8(%rbp)
 4205              	.LBB97:
 4206              		.loc 3 98 0
 4207 1d3c E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 4207      00
 4208 1d41 4889C2   		movq	%rax, %rdx
 4209 1d44 488B45F8 		movq	-8(%rbp), %rax
 4210 1d48 41B86200 		movl	$98, %r8d
 4210      0000
 4211 1d4e B9000000 		movl	$.LC4, %ecx
 4211      00
 4212 1d53 BE000000 		movl	$.LC28, %esi
 4212      00
 4213 1d58 4889C7   		movq	%rax, %rdi
 4214 1d5b E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 4214      00
 4215 1d60 488B45F8 		movq	-8(%rbp), %rax
 4216 1d64 48C70000 		movq	$_ZTVN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOf
 4216      000000
 4217              	.LBE97:
 4218 1d6b C9       		leave
 4219              		.cfi_def_cfa 7, 8
 4220 1d6c C3       		ret
 4221              		.cfi_endproc
 4222              	.LFE1412:
 4224              		.local	_ZN8UnitTest12_GLOBAL__N_184testDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfF
 4225              		.comm	_ZN8UnitTest12_GLOBAL__N_184testDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFa
 4226              		.local	_ZN8UnitTest12_GLOBAL__N_177adderDeferredTestReporterFixtureDeferredTestReporterTakesCopyOf
 4227              		.comm	_ZN8UnitTest12_GLOBAL__N_177adderDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfF
 4228 1d6d 90       		.align 2
 4230              	_ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessag
 4231              	.LFB1416:
 4232              		.loc 3 98 0
 4233              		.cfi_startproc
 4234 1d6e 55       		pushq	%rbp
 4235              		.cfi_def_cfa_offset 16
 4236              		.cfi_offset 6, -16
 4237 1d6f 4889E5   		movq	%rsp, %rbp
 4238              		.cfi_def_cfa_register 6
 4239 1d72 4883EC10 		subq	$16, %rsp
 4240 1d76 48897DF8 		movq	%rdi, -8(%rbp)
 4241              	.LBB98:
 4242              		.loc 3 98 0
 4243 1d7a 488B45F8 		movq	-8(%rbp), %rax
 4244 1d7e 4889C7   		movq	%rax, %rdi
 4245 1d81 E882E4FF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureD2Ev
 4245      FF
 4246              	.LBE98:
 4247 1d86 C9       		leave
 4248              		.cfi_def_cfa 7, 8
 4249 1d87 C3       		ret
 4250              		.cfi_endproc
 4251              	.LFE1416:
 4253              		.align 2
 4255              	_ZNK8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureM
 4256              	.LFB1414:
 4257              		.loc 3 98 0
 4258              		.cfi_startproc
 4259              		.cfi_personality 0x3,__gxx_personality_v0
 4260              		.cfi_lsda 0x3,.LLSDA1414
 4261 1d88 55       		pushq	%rbp
 4262              		.cfi_def_cfa_offset 16
 4263              		.cfi_offset 6, -16
 4264 1d89 4889E5   		movq	%rsp, %rbp
 4265              		.cfi_def_cfa_register 6
 4266 1d8c 4154     		pushq	%r12
 4267 1d8e 53       		pushq	%rbx
 4268 1d8f 4881EC10 		subq	$528, %rsp
 4268      020000
 4269              		.cfi_offset 12, -24
 4270              		.cfi_offset 3, -32
 4271 1d96 4889BDE8 		movq	%rdi, -536(%rbp)
 4271      FDFFFF
 4272              		.loc 3 98 0
 4273 1d9d 64488B04 		movq	%fs:40, %rax
 4273      25280000 
 4273      00
 4274 1da6 488945E8 		movq	%rax, -24(%rbp)
 4275 1daa 31C0     		xorl	%eax, %eax
 4276              	.LBB99:
 4277 1dac C685FFFD 		movb	$0, -513(%rbp)
 4277      FFFF00
 4278              	.LBB100:
 4279 1db3 488B85E8 		movq	-536(%rbp), %rax
 4279      FDFFFF
 4280 1dba 488D5008 		leaq	8(%rax), %rdx
 4281 1dbe 488D8510 		leaq	-496(%rbp), %rax
 4281      FEFFFF
 4282 1dc5 4889D6   		movq	%rdx, %rsi
 4283 1dc8 4889C7   		movq	%rax, %rdi
 4284              	.LEHB121:
 4285 1dcb E836FFFF 		call	_ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailure
 4285      FF
 4286              	.LEHE121:
 4287              		.loc 3 98 0 is_stmt 0 discriminator 1
 4288 1dd0 C685FFFD 		movb	$1, -513(%rbp)
 4288      FFFF01
 4289 1dd7 488B85E8 		movq	-536(%rbp), %rax
 4289      FDFFFF
 4290 1dde 488D5008 		leaq	8(%rax), %rdx
 4291 1de2 488D8510 		leaq	-496(%rbp), %rax
 4291      FEFFFF
 4292 1de9 4889D6   		movq	%rdx, %rsi
 4293 1dec 4889C7   		movq	%rax, %rdi
 4294              	.LEHB122:
 4295 1def E80A1200 		call	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterT
 4295      00
 4296              	.LEHE122:
 4297              		.loc 3 98 0 discriminator 3
 4298 1df4 488D8510 		leaq	-496(%rbp), %rax
 4298      FEFFFF
 4299 1dfb 4889C7   		movq	%rax, %rdi
 4300              	.LEHB123:
 4301 1dfe E86BFFFF 		call	_ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailure
 4301      FF
 4302              	.LEHE123:
 4303              	.LBE100:
 4304              	.LBE99:
 4305              		.loc 3 98 0
 4306 1e03 E9640200 		jmp	.L262
 4306      00
 4307              	.L256:
 4308 1e08 4989C4   		movq	%rax, %r12
 4309 1e0b 4889D3   		movq	%rdx, %rbx
 4310              	.LBB108:
 4311              	.LBB101:
 4312 1e0e 488D8510 		leaq	-496(%rbp), %rax
 4312      FEFFFF
 4313 1e15 4889C7   		movq	%rax, %rdi
 4314 1e18 E851FFFF 		call	_ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailure
 4314      FF
 4315 1e1d 4C89E0   		movq	%r12, %rax
 4316 1e20 4889DA   		movq	%rbx, %rdx
 4317 1e23 EB00     		jmp	.L243
 4318              	.L255:
 4319              	.L243:
 4320 1e25 4883FA01 		cmpq	$1, %rdx
 4321 1e29 745C     		je	.L245
 4322 1e2b 4883FA02 		cmpq	$2, %rdx
 4323 1e2f 0F84F400 		je	.L246
 4323      0000
 4324 1e35 E9980100 		jmp	.L261
 4324      00
 4325              	.L257:
 4326 1e3a 4889C3   		movq	%rax, %rbx
 4327              	.LBE101:
 4328              	.LBB102:
 4329 1e3d E8000000 		call	__cxa_end_catch
 4329      00
 4330 1e42 4889D8   		movq	%rbx, %rax
 4331 1e45 4889C7   		movq	%rax, %rdi
 4332              	.LEHB124:
 4333 1e48 E8000000 		call	_Unwind_Resume
 4333      00
 4334              	.LEHE124:
 4335              	.L258:
 4336 1e4d 4889C3   		movq	%rax, %rbx
 4337              	.LBE102:
 4338              	.LBB103:
 4339              	.LBB104:
 4340 1e50 488D8580 		leaq	-384(%rbp), %rax
 4340      FEFFFF
 4341 1e57 4889C7   		movq	%rax, %rdi
 4342 1e5a E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 4342      00
 4343 1e5f EB03     		jmp	.L249
 4344              	.L259:
 4345 1e61 4889C3   		movq	%rax, %rbx
 4346              	.L249:
 4347              	.LBE104:
 4348 1e64 E8000000 		call	__cxa_end_catch
 4348      00
 4349 1e69 4889D8   		movq	%rbx, %rax
 4350 1e6c 4889C7   		movq	%rax, %rdi
 4351              	.LEHB125:
 4352 1e6f E8000000 		call	_Unwind_Resume
 4352      00
 4353              	.LEHE125:
 4354              	.L260:
 4355 1e74 4889C3   		movq	%rax, %rbx
 4356              	.LBE103:
 4357 1e77 E8000000 		call	__cxa_end_catch
 4357      00
 4358 1e7c 4889D8   		movq	%rbx, %rax
 4359 1e7f 4889C7   		movq	%rax, %rdi
 4360              	.LEHB126:
 4361 1e82 E8000000 		call	_Unwind_Resume
 4361      00
 4362              	.LEHE126:
 4363              	.L245:
 4364              	.LBB106:
 4365 1e87 4889C7   		movq	%rax, %rdi
 4366 1e8a E8000000 		call	__cxa_begin_catch
 4366      00
 4367 1e8f 48898500 		movq	%rax, -512(%rbp)
 4367      FEFFFF
 4368 1e96 488B8500 		movq	-512(%rbp), %rax
 4368      FEFFFF
 4369 1e9d 488B00   		movq	(%rax), %rax
 4370 1ea0 4883C010 		addq	$16, %rax
 4371 1ea4 488B00   		movq	(%rax), %rax
 4372 1ea7 488B9500 		movq	-512(%rbp), %rdx
 4372      FEFFFF
 4373 1eae 4889D7   		movq	%rdx, %rdi
 4374 1eb1 FFD0     		call	*%rax
 4375 1eb3 4889C3   		movq	%rax, %rbx
 4376 1eb6 488B8500 		movq	-512(%rbp), %rax
 4376      FEFFFF
 4377 1ebd 4889C7   		movq	%rax, %rdi
 4378              	.LEHB127:
 4379 1ec0 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 4379      00
 4380 1ec5 4189C4   		movl	%eax, %r12d
 4381 1ec8 488B8500 		movq	-512(%rbp), %rax
 4381      FEFFFF
 4382 1ecf 4889C7   		movq	%rax, %rdi
 4383 1ed2 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 4383      00
 4384              		.loc 3 98 0 discriminator 5
 4385 1ed7 4889C1   		movq	%rax, %rcx
 4386 1eda 488B85E8 		movq	-536(%rbp), %rax
 4386      FDFFFF
 4387 1ee1 488B5008 		movq	8(%rax), %rdx
 4388 1ee5 488B85E8 		movq	-536(%rbp), %rax
 4388      FDFFFF
 4389 1eec 488B7010 		movq	16(%rax), %rsi
 4390 1ef0 488D8510 		leaq	-496(%rbp), %rax
 4390      FEFFFF
 4391 1ef7 4589E0   		movl	%r12d, %r8d
 4392 1efa 4889C7   		movq	%rax, %rdi
 4393 1efd E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 4393      00
 4394              		.loc 3 98 0 discriminator 9
 4395 1f02 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4395      00
 4396 1f07 488B00   		movq	(%rax), %rax
 4397 1f0a 488D8D10 		leaq	-496(%rbp), %rcx
 4397      FEFFFF
 4398 1f11 4889DA   		movq	%rbx, %rdx
 4399 1f14 4889CE   		movq	%rcx, %rsi
 4400 1f17 4889C7   		movq	%rax, %rdi
 4401 1f1a E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4401      00
 4402              	.LEHE127:
 4403              		.loc 3 98 0 discriminator 13
 4404 1f1f E8000000 		call	__cxa_end_catch
 4404      00
 4405              	.LBE106:
 4406              	.LBE108:
 4407 1f24 E9430100 		jmp	.L262
 4407      00
 4408              	.L246:
 4409              	.LBB109:
 4410              	.LBB107:
 4411              		.loc 3 98 0
 4412 1f29 4889C7   		movq	%rax, %rdi
 4413 1f2c E8000000 		call	__cxa_begin_catch
 4413      00
 4414 1f31 48898508 		movq	%rax, -504(%rbp)
 4414      FEFFFF
 4415              	.LBB105:
 4416 1f38 488D8580 		leaq	-384(%rbp), %rax
 4416      FEFFFF
 4417 1f3f 4889C7   		movq	%rax, %rdi
 4418              	.LEHB128:
 4419 1f42 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 4419      00
 4420              	.LEHE128:
 4421              		.loc 3 98 0 discriminator 15
 4422 1f47 488B8508 		movq	-504(%rbp), %rax
 4422      FEFFFF
 4423 1f4e 488B00   		movq	(%rax), %rax
 4424 1f51 4883C010 		addq	$16, %rax
 4425 1f55 488B00   		movq	(%rax), %rax
 4426 1f58 488B9508 		movq	-504(%rbp), %rdx
 4426      FEFFFF
 4427 1f5f 4889D7   		movq	%rdx, %rdi
 4428 1f62 FFD0     		call	*%rax
 4429 1f64 4889C3   		movq	%rax, %rbx
 4430 1f67 488D8580 		leaq	-384(%rbp), %rax
 4430      FEFFFF
 4431 1f6e BE000000 		movl	$.LC6, %esi
 4431      00
 4432 1f73 4889C7   		movq	%rax, %rdi
 4433              	.LEHB129:
 4434 1f76 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 4434      00
 4435 1f7b 4889DE   		movq	%rbx, %rsi
 4436 1f7e 4889C7   		movq	%rax, %rdi
 4437 1f81 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 4437      00
 4438              		.loc 3 98 0 discriminator 19
 4439 1f86 488D8580 		leaq	-384(%rbp), %rax
 4439      FEFFFF
 4440 1f8d 4889C7   		movq	%rax, %rdi
 4441 1f90 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 4441      00
 4442 1f95 4989C4   		movq	%rax, %r12
 4443 1f98 488B85E8 		movq	-536(%rbp), %rax
 4443      FDFFFF
 4444 1f9f 488D5808 		leaq	8(%rax), %rbx
 4445 1fa3 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4445      00
 4446              		.loc 3 98 0 discriminator 21
 4447 1fa8 488B00   		movq	(%rax), %rax
 4448 1fab 4C89E2   		movq	%r12, %rdx
 4449 1fae 4889DE   		movq	%rbx, %rsi
 4450 1fb1 4889C7   		movq	%rax, %rdi
 4451 1fb4 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4451      00
 4452              	.LEHE129:
 4453              		.loc 3 98 0 discriminator 25
 4454 1fb9 488D8580 		leaq	-384(%rbp), %rax
 4454      FEFFFF
 4455 1fc0 4889C7   		movq	%rax, %rdi
 4456              	.LEHB130:
 4457 1fc3 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 4457      00
 4458              	.LEHE130:
 4459              	.LBE105:
 4460              		.loc 3 98 0 discriminator 26
 4461 1fc8 E8000000 		call	__cxa_end_catch
 4461      00
 4462              	.LBE107:
 4463              	.LBE109:
 4464 1fcd E99A0000 		jmp	.L262
 4464      00
 4465              	.L261:
 4466              	.LBB110:
 4467              		.loc 3 98 0
 4468 1fd2 4889C7   		movq	%rax, %rdi
 4469 1fd5 E8000000 		call	__cxa_begin_catch
 4469      00
 4470 1fda 80BDFFFD 		cmpb	$0, -513(%rbp)
 4470      FFFF00
 4471 1fe1 7443     		je	.L252
 4472              		.loc 3 98 0 discriminator 28
 4473 1fe3 488B85E8 		movq	-536(%rbp), %rax
 4473      FDFFFF
 4474 1fea 488D4808 		leaq	8(%rax), %rcx
 4475 1fee 488D8510 		leaq	-496(%rbp), %rax
 4475      FEFFFF
 4476 1ff5 BA620000 		movl	$98, %edx
 4476      00
 4477 1ffa 4889CE   		movq	%rcx, %rsi
 4478 1ffd 4889C7   		movq	%rax, %rdi
 4479              	.LEHB131:
 4480 2000 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4480      00
 4481              		.loc 3 98 0 discriminator 31
 4482 2005 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4482      00
 4483 200a 488B00   		movq	(%rax), %rax
 4484 200d 488D8D10 		leaq	-496(%rbp), %rcx
 4484      FEFFFF
 4485 2014 BA000000 		movl	$.LC7, %edx
 4485      00
 4486 2019 4889CE   		movq	%rcx, %rsi
 4487 201c 4889C7   		movq	%rax, %rdi
 4488 201f E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4488      00
 4489 2024 EB41     		jmp	.L253
 4490              	.L252:
 4491              		.loc 3 98 0 discriminator 29
 4492 2026 488B85E8 		movq	-536(%rbp), %rax
 4492      FDFFFF
 4493 202d 488D4808 		leaq	8(%rax), %rcx
 4494 2031 488D8510 		leaq	-496(%rbp), %rax
 4494      FEFFFF
 4495 2038 BA620000 		movl	$98, %edx
 4495      00
 4496 203d 4889CE   		movq	%rcx, %rsi
 4497 2040 4889C7   		movq	%rax, %rdi
 4498 2043 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4498      00
 4499              		.loc 3 98 0 discriminator 38
 4500 2048 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4500      00
 4501 204d 488B00   		movq	(%rax), %rax
 4502 2050 488D8D10 		leaq	-496(%rbp), %rcx
 4502      FEFFFF
 4503 2057 BA000000 		movl	$.LC8, %edx
 4503      00
 4504 205c 4889CE   		movq	%rcx, %rsi
 4505 205f 4889C7   		movq	%rax, %rdi
 4506 2062 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4506      00
 4507              	.LEHE131:
 4508              	.L253:
 4509              	.LEHB132:
 4510              		.loc 3 98 0 discriminator 43
 4511 2067 E8000000 		call	__cxa_end_catch
 4511      00
 4512              	.LEHE132:
 4513              	.L262:
 4514              	.LBE110:
 4515              		.loc 3 98 0
 4516 206c 90       		nop
 4517 206d 488B45E8 		movq	-24(%rbp), %rax
 4518 2071 64483304 		xorq	%fs:40, %rax
 4518      25280000 
 4518      00
 4519 207a 7405     		je	.L254
 4520 207c E8000000 		call	__stack_chk_fail
 4520      00
 4521              	.L254:
 4522 2081 4881C410 		addq	$528, %rsp
 4522      020000
 4523 2088 5B       		popq	%rbx
 4524 2089 415C     		popq	%r12
 4525 208b 5D       		popq	%rbp
 4526              		.cfi_def_cfa 7, 8
 4527 208c C3       		ret
 4528              		.cfi_endproc
 4529              	.LFE1414:
 4530              		.section	.gcc_except_table
 4531              		.align 4
 4532              	.LLSDA1414:
 4533 0320 FF       		.byte	0xff
 4534 0321 03       		.byte	0x3
 4535 0322 59       		.uleb128 .LLSDATT1414-.LLSDATTD1414
 4536              	.LLSDATTD1414:
 4537 0323 01       		.byte	0x1
 4538 0324 41       		.uleb128 .LLSDACSE1414-.LLSDACSB1414
 4539              	.LLSDACSB1414:
 4540 0325 43       		.uleb128 .LEHB121-.LFB1414
 4541 0326 05       		.uleb128 .LEHE121-.LEHB121
 4542 0327 9D01     		.uleb128 .L255-.LFB1414
 4543 0329 05       		.uleb128 0x5
 4544 032a 67       		.uleb128 .LEHB122-.LFB1414
 4545 032b 05       		.uleb128 .LEHE122-.LEHB122
 4546 032c 8001     		.uleb128 .L256-.LFB1414
 4547 032e 07       		.uleb128 0x7
 4548 032f 76       		.uleb128 .LEHB123-.LFB1414
 4549 0330 05       		.uleb128 .LEHE123-.LEHB123
 4550 0331 9D01     		.uleb128 .L255-.LFB1414
 4551 0333 05       		.uleb128 0x5
 4552 0334 C001     		.uleb128 .LEHB124-.LFB1414
 4553 0336 05       		.uleb128 .LEHE124-.LEHB124
 4554 0337 00       		.uleb128 0
 4555 0338 00       		.uleb128 0
 4556 0339 E701     		.uleb128 .LEHB125-.LFB1414
 4557 033b 05       		.uleb128 .LEHE125-.LEHB125
 4558 033c 00       		.uleb128 0
 4559 033d 00       		.uleb128 0
 4560 033e FA01     		.uleb128 .LEHB126-.LFB1414
 4561 0340 05       		.uleb128 .LEHE126-.LEHB126
 4562 0341 00       		.uleb128 0
 4563 0342 00       		.uleb128 0
 4564 0343 B802     		.uleb128 .LEHB127-.LFB1414
 4565 0345 5F       		.uleb128 .LEHE127-.LEHB127
 4566 0346 B201     		.uleb128 .L257-.LFB1414
 4567 0348 00       		.uleb128 0
 4568 0349 BA03     		.uleb128 .LEHB128-.LFB1414
 4569 034b 05       		.uleb128 .LEHE128-.LEHB128
 4570 034c D901     		.uleb128 .L259-.LFB1414
 4571 034e 00       		.uleb128 0
 4572 034f EE03     		.uleb128 .LEHB129-.LFB1414
 4573 0351 43       		.uleb128 .LEHE129-.LEHB129
 4574 0352 C501     		.uleb128 .L258-.LFB1414
 4575 0354 00       		.uleb128 0
 4576 0355 BB04     		.uleb128 .LEHB130-.LFB1414
 4577 0357 05       		.uleb128 .LEHE130-.LEHB130
 4578 0358 D901     		.uleb128 .L259-.LFB1414
 4579 035a 00       		.uleb128 0
 4580 035b F804     		.uleb128 .LEHB131-.LFB1414
 4581 035d 67       		.uleb128 .LEHE131-.LEHB131
 4582 035e EC01     		.uleb128 .L260-.LFB1414
 4583 0360 00       		.uleb128 0
 4584 0361 DF05     		.uleb128 .LEHB132-.LFB1414
 4585 0363 05       		.uleb128 .LEHE132-.LEHB132
 4586 0364 00       		.uleb128 0
 4587 0365 00       		.uleb128 0
 4588              	.LLSDACSE1414:
 4589 0366 03       		.byte	0x3
 4590 0367 00       		.byte	0
 4591 0368 02       		.byte	0x2
 4592 0369 7D       		.byte	0x7d
 4593 036a 01       		.byte	0x1
 4594 036b 7D       		.byte	0x7d
 4595 036c 00       		.byte	0
 4596 036d 7D       		.byte	0x7d
 4597 036e 0000     		.align 4
 4598 0370 00000000 		.long	0
 4599              	
 4600 0374 00000000 		.long	_ZTISt9exception
 4601 0378 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 4602              	.LLSDATT1414:
 4603              		.text
 4605              		.section	.rodata
 4606              	.LC29:
 4607 04b6 5265616C 		.string	"Real failure message"
 4607      20666169 
 4607      6C757265 
 4607      206D6573 
 4607      73616765 
 4608              	.LC30:
 4609 04cb 426F6775 		.string	"Bogus failure message"
 4609      73206661 
 4609      696C7572 
 4609      65206D65 
 4609      73736167 
 4610 04e1 00000000 		.align 8
 4610      000000
 4611              	.LC31:
 4612 04e8 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(goodStr, failure.second)"
 4612      6E646C65 
 4612      64206578 
 4612      63657074 
 4612      696F6E20 
 4613              		.text
 4614 208d 90       		.align 2
 4616              	_ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessag
 4617              	.LFB1418:
  99:TestDeferredTestReporter.cpp **** {
 4618              		.loc 3 99 0 is_stmt 1
 4619              		.cfi_startproc
 4620              		.cfi_personality 0x3,__gxx_personality_v0
 4621              		.cfi_lsda 0x3,.LLSDA1418
 4622 208e 55       		pushq	%rbp
 4623              		.cfi_def_cfa_offset 16
 4624              		.cfi_offset 6, -16
 4625 208f 4889E5   		movq	%rsp, %rbp
 4626              		.cfi_def_cfa_register 6
 4627 2092 53       		pushq	%rbx
 4628 2093 4881ECE8 		subq	$232, %rsp
 4628      000000
 4629              		.cfi_offset 3, -24
 4630 209a 4889BD18 		movq	%rdi, -232(%rbp)
 4630      FFFFFF
 4631              		.loc 3 99 0
 4632 20a1 64488B04 		movq	%fs:40, %rax
 4632      25280000 
 4632      00
 4633 20aa 488945E8 		movq	%rax, -24(%rbp)
 4634 20ae 31C0     		xorl	%eax, %eax
 4635              	.LBB111:
 100:TestDeferredTestReporter.cpp ****     reporter.ReportTestStart(details);
 4636              		.loc 3 100 0
 4637 20b0 488B8518 		movq	-232(%rbp), %rax
 4637      FFFFFF
 4638 20b7 488D5040 		leaq	64(%rax), %rdx
 4639 20bb 488B8518 		movq	-232(%rbp), %rax
 4639      FFFFFF
 4640 20c2 4889D6   		movq	%rdx, %rsi
 4641 20c5 4889C7   		movq	%rax, %rdi
 4642              	.LEHB133:
 4643 20c8 E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
 4643      00
 101:TestDeferredTestReporter.cpp **** 
 102:TestDeferredTestReporter.cpp ****     char failureMessage[128];
 103:TestDeferredTestReporter.cpp ****     char const* goodStr = "Real failure message";
 4644              		.loc 3 103 0
 4645 20cd 48C78520 		movq	$.LC29, -224(%rbp)
 4645      FFFFFF00 
 4645      000000
 104:TestDeferredTestReporter.cpp ****     char const* badStr = "Bogus failure message";
 4646              		.loc 3 104 0
 4647 20d8 48C78528 		movq	$.LC30, -216(%rbp)
 4647      FFFFFF00 
 4647      000000
 105:TestDeferredTestReporter.cpp ****     
 106:TestDeferredTestReporter.cpp **** 	using namespace std;
 107:TestDeferredTestReporter.cpp **** 
 108:TestDeferredTestReporter.cpp ****     strcpy(failureMessage, goodStr);
 4648              		.loc 3 108 0
 4649 20e3 488B9520 		movq	-224(%rbp), %rdx
 4649      FFFFFF
 4650 20ea 488D8560 		leaq	-160(%rbp), %rax
 4650      FFFFFF
 4651 20f1 4889D6   		movq	%rdx, %rsi
 4652 20f4 4889C7   		movq	%rax, %rdi
 4653 20f7 E8000000 		call	strcpy
 4653      00
 109:TestDeferredTestReporter.cpp ****     reporter.ReportFailure(details, failureMessage);
 4654              		.loc 3 109 0
 4655 20fc 488B8518 		movq	-232(%rbp), %rax
 4655      FFFFFF
 4656 2103 488D4840 		leaq	64(%rax), %rcx
 4657 2107 488B8518 		movq	-232(%rbp), %rax
 4657      FFFFFF
 4658 210e 488D9560 		leaq	-160(%rbp), %rdx
 4658      FFFFFF
 4659 2115 4889CE   		movq	%rcx, %rsi
 4660 2118 4889C7   		movq	%rax, %rdi
 4661 211b E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc
 4661      00
 110:TestDeferredTestReporter.cpp ****     strcpy(failureMessage, badStr);
 4662              		.loc 3 110 0
 4663 2120 488B9528 		movq	-216(%rbp), %rdx
 4663      FFFFFF
 4664 2127 488D8560 		leaq	-160(%rbp), %rax
 4664      FFFFFF
 4665 212e 4889D6   		movq	%rdx, %rsi
 4666 2131 4889C7   		movq	%rax, %rdi
 4667 2134 E8000000 		call	strcpy
 4667      00
 111:TestDeferredTestReporter.cpp **** 
 112:TestDeferredTestReporter.cpp ****     DeferredTestResult const& result = reporter.GetResults().at(0);
 4668              		.loc 3 112 0
 4669 2139 488B8518 		movq	-232(%rbp), %rax
 4669      FFFFFF
 4670 2140 4889C7   		movq	%rax, %rdi
 4671 2143 E8000000 		call	_ZN8UnitTest20DeferredTestReporter10GetResultsEv
 4671      00
 4672 2148 BE000000 		movl	$0, %esi
 4672      00
 4673 214d 4889C7   		movq	%rax, %rdi
 4674 2150 E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm
 4674      00
 4675 2155 48898530 		movq	%rax, -208(%rbp)
 4675      FFFFFF
 113:TestDeferredTestReporter.cpp ****     DeferredTestResult::Failure const& failure = result.failures.at(0);
 4676              		.loc 3 113 0
 4677 215c 488B8530 		movq	-208(%rbp), %rax
 4677      FFFFFF
 4678 2163 4883C018 		addq	$24, %rax
 4679 2167 BE000000 		movl	$0, %esi
 4679      00
 4680 216c 4889C7   		movq	%rax, %rdi
 4681 216f E8000000 		call	_ZNKSt6vectorISt4pairIiSsESaIS1_EE2atEm
 4681      00
 4682              	.LEHE133:
 4683 2174 48898538 		movq	%rax, -200(%rbp)
 4683      FFFFFF
 4684              	.LEHB134:
 114:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(goodStr, failure.second);
 4685              		.loc 3 114 0
 4686 217b E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4686      00
 4687 2180 488B08   		movq	(%rax), %rcx
 4688 2183 488D8540 		leaq	-192(%rbp), %rax
 4688      FFFFFF
 4689 218a BA720000 		movl	$114, %edx
 4689      00
 4690 218f 4889CE   		movq	%rcx, %rsi
 4691 2192 4889C7   		movq	%rax, %rdi
 4692 2195 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4692      00
 4693              		.loc 3 114 0 is_stmt 0 discriminator 2
 4694 219a 488B8538 		movq	-200(%rbp), %rax
 4694      FFFFFF
 4695 21a1 488D5808 		leaq	8(%rax), %rbx
 4696 21a5 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4696      00
 4697 21aa 488B00   		movq	(%rax), %rax
 4698 21ad 488D9540 		leaq	-192(%rbp), %rdx
 4698      FFFFFF
 4699 21b4 488DB520 		leaq	-224(%rbp), %rsi
 4699      FFFFFF
 4700 21bb 4889D1   		movq	%rdx, %rcx
 4701 21be 4889DA   		movq	%rbx, %rdx
 4702 21c1 4889C7   		movq	%rax, %rdi
 4703 21c4 E8000000 		call	_ZN8UnitTest10CheckEqualIPKcSsEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 4703      00
 4704              	.LEHE134:
 4705              	.LBE111:
 115:TestDeferredTestReporter.cpp **** }
 4706              		.loc 3 115 0 is_stmt 1
 4707 21c9 EB5E     		jmp	.L270
 4708              	.L269:
 4709 21cb 4889C3   		movq	%rax, %rbx
 4710              	.LBB112:
 114:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(goodStr, failure.second);
 4711              		.loc 3 114 0
 4712 21ce E8000000 		call	__cxa_end_catch
 4712      00
 4713 21d3 4889D8   		movq	%rbx, %rax
 4714 21d6 4889C7   		movq	%rax, %rdi
 4715              	.LEHB135:
 4716 21d9 E8000000 		call	_Unwind_Resume
 4716      00
 4717              	.LEHE135:
 4718              	.L268:
 4719 21de 4889C7   		movq	%rax, %rdi
 4720 21e1 E8000000 		call	__cxa_begin_catch
 4720      00
 4721              	.LEHB136:
 4722 21e6 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4722      00
 4723 21eb 488B08   		movq	(%rax), %rcx
 4724 21ee 488D8540 		leaq	-192(%rbp), %rax
 4724      FFFFFF
 4725 21f5 BA720000 		movl	$114, %edx
 4725      00
 4726 21fa 4889CE   		movq	%rcx, %rsi
 4727 21fd 4889C7   		movq	%rax, %rdi
 4728 2200 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4728      00
 114:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(goodStr, failure.second);
 4729              		.loc 3 114 0 is_stmt 0 discriminator 10
 4730 2205 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4730      00
 4731 220a 488B00   		movq	(%rax), %rax
 4732 220d 488D8D40 		leaq	-192(%rbp), %rcx
 4732      FFFFFF
 4733 2214 BA000000 		movl	$.LC31, %edx
 4733      00
 4734 2219 4889CE   		movq	%rcx, %rsi
 4735 221c 4889C7   		movq	%rax, %rdi
 4736 221f E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4736      00
 4737              	.LEHE136:
 4738              	.LEHB137:
 114:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(goodStr, failure.second);
 4739              		.loc 3 114 0 discriminator 14
 4740 2224 E8000000 		call	__cxa_end_catch
 4740      00
 4741              	.LEHE137:
 4742              	.L270:
 4743              	.LBE112:
 4744              		.loc 3 115 0 is_stmt 1
 4745 2229 90       		nop
 4746 222a 488B45E8 		movq	-24(%rbp), %rax
 4747 222e 64483304 		xorq	%fs:40, %rax
 4747      25280000 
 4747      00
 4748 2237 7405     		je	.L267
 4749 2239 E8000000 		call	__stack_chk_fail
 4749      00
 4750              	.L267:
 4751 223e 4881C4E8 		addq	$232, %rsp
 4751      000000
 4752 2245 5B       		popq	%rbx
 4753 2246 5D       		popq	%rbp
 4754              		.cfi_def_cfa 7, 8
 4755 2247 C3       		ret
 4756              		.cfi_endproc
 4757              	.LFE1418:
 4758              		.section	.gcc_except_table
 4759              		.align 4
 4760              	.LLSDA1418:
 4761 037c FF       		.byte	0xff
 4762 037d 03       		.byte	0x3
 4763 037e 25       		.uleb128 .LLSDATT1418-.LLSDATTD1418
 4764              	.LLSDATTD1418:
 4765 037f 01       		.byte	0x1
 4766 0380 1B       		.uleb128 .LLSDACSE1418-.LLSDACSB1418
 4767              	.LLSDACSB1418:
 4768 0381 3A       		.uleb128 .LEHB133-.LFB1418
 4769 0382 AC01     		.uleb128 .LEHE133-.LEHB133
 4770 0384 00       		.uleb128 0
 4771 0385 00       		.uleb128 0
 4772 0386 ED01     		.uleb128 .LEHB134-.LFB1418
 4773 0388 4E       		.uleb128 .LEHE134-.LEHB134
 4774 0389 D002     		.uleb128 .L268-.LFB1418
 4775 038b 01       		.uleb128 0x1
 4776 038c CB02     		.uleb128 .LEHB135-.LFB1418
 4777 038e 05       		.uleb128 .LEHE135-.LEHB135
 4778 038f 00       		.uleb128 0
 4779 0390 00       		.uleb128 0
 4780 0391 D802     		.uleb128 .LEHB136-.LFB1418
 4781 0393 3E       		.uleb128 .LEHE136-.LEHB136
 4782 0394 BD02     		.uleb128 .L269-.LFB1418
 4783 0396 00       		.uleb128 0
 4784 0397 9603     		.uleb128 .LEHB137-.LFB1418
 4785 0399 05       		.uleb128 .LEHE137-.LEHB137
 4786 039a 00       		.uleb128 0
 4787 039b 00       		.uleb128 0
 4788              	.LLSDACSE1418:
 4789 039c 01       		.byte	0x1
 4790 039d 00       		.byte	0
 4791 039e 0000     		.align 4
 4792 03a0 00000000 		.long	0
 4793              	
 4794              	.LLSDATT1418:
 4795              		.text
 4797              		.section	.text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev,"axG",@progbits,_ZNSt6vect
 4798              		.align 2
 4799              		.weak	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev
 4801              	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev:
 4802              	.LFB1449:
 4803              		.file 6 "/usr/include/c++/4.9/bits/stl_vector.h"
   1:/usr/include/c++/4.9/bits/stl_vector.h **** // Vector implementation -*- C++ -*-
   2:/usr/include/c++/4.9/bits/stl_vector.h **** 
   3:/usr/include/c++/4.9/bits/stl_vector.h **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   4:/usr/include/c++/4.9/bits/stl_vector.h **** //
   5:/usr/include/c++/4.9/bits/stl_vector.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/4.9/bits/stl_vector.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/4.9/bits/stl_vector.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/4.9/bits/stl_vector.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/4.9/bits/stl_vector.h **** // any later version.
  10:/usr/include/c++/4.9/bits/stl_vector.h **** 
  11:/usr/include/c++/4.9/bits/stl_vector.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/4.9/bits/stl_vector.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/4.9/bits/stl_vector.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/4.9/bits/stl_vector.h **** // GNU General Public License for more details.
  15:/usr/include/c++/4.9/bits/stl_vector.h **** 
  16:/usr/include/c++/4.9/bits/stl_vector.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/4.9/bits/stl_vector.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/4.9/bits/stl_vector.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/4.9/bits/stl_vector.h **** 
  20:/usr/include/c++/4.9/bits/stl_vector.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/4.9/bits/stl_vector.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/4.9/bits/stl_vector.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/4.9/bits/stl_vector.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/4.9/bits/stl_vector.h **** 
  25:/usr/include/c++/4.9/bits/stl_vector.h **** /*
  26:/usr/include/c++/4.9/bits/stl_vector.h ****  *
  27:/usr/include/c++/4.9/bits/stl_vector.h ****  * Copyright (c) 1994
  28:/usr/include/c++/4.9/bits/stl_vector.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/4.9/bits/stl_vector.h ****  *
  30:/usr/include/c++/4.9/bits/stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/4.9/bits/stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/4.9/bits/stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/4.9/bits/stl_vector.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/4.9/bits/stl_vector.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/4.9/bits/stl_vector.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/4.9/bits/stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/4.9/bits/stl_vector.h ****  *
  38:/usr/include/c++/4.9/bits/stl_vector.h ****  *
  39:/usr/include/c++/4.9/bits/stl_vector.h ****  * Copyright (c) 1996
  40:/usr/include/c++/4.9/bits/stl_vector.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/4.9/bits/stl_vector.h ****  *
  42:/usr/include/c++/4.9/bits/stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/4.9/bits/stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/4.9/bits/stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/4.9/bits/stl_vector.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/4.9/bits/stl_vector.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/4.9/bits/stl_vector.h ****  * representations about the suitability of this  software for any
  48:/usr/include/c++/4.9/bits/stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/4.9/bits/stl_vector.h ****  */
  50:/usr/include/c++/4.9/bits/stl_vector.h **** 
  51:/usr/include/c++/4.9/bits/stl_vector.h **** /** @file bits/stl_vector.h
  52:/usr/include/c++/4.9/bits/stl_vector.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/4.9/bits/stl_vector.h ****  *  Do not attempt to use it directly. @headername{vector}
  54:/usr/include/c++/4.9/bits/stl_vector.h ****  */
  55:/usr/include/c++/4.9/bits/stl_vector.h **** 
  56:/usr/include/c++/4.9/bits/stl_vector.h **** #ifndef _STL_VECTOR_H
  57:/usr/include/c++/4.9/bits/stl_vector.h **** #define _STL_VECTOR_H 1
  58:/usr/include/c++/4.9/bits/stl_vector.h **** 
  59:/usr/include/c++/4.9/bits/stl_vector.h **** #include <bits/stl_iterator_base_funcs.h>
  60:/usr/include/c++/4.9/bits/stl_vector.h **** #include <bits/functexcept.h>
  61:/usr/include/c++/4.9/bits/stl_vector.h **** #include <bits/concept_check.h>
  62:/usr/include/c++/4.9/bits/stl_vector.h **** #if __cplusplus >= 201103L
  63:/usr/include/c++/4.9/bits/stl_vector.h **** #include <initializer_list>
  64:/usr/include/c++/4.9/bits/stl_vector.h **** #endif
  65:/usr/include/c++/4.9/bits/stl_vector.h **** 
  66:/usr/include/c++/4.9/bits/stl_vector.h **** namespace std _GLIBCXX_VISIBILITY(default)
  67:/usr/include/c++/4.9/bits/stl_vector.h **** {
  68:/usr/include/c++/4.9/bits/stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  69:/usr/include/c++/4.9/bits/stl_vector.h **** 
  70:/usr/include/c++/4.9/bits/stl_vector.h ****   /// See bits/stl_deque.h's _Deque_base for an explanation.
  71:/usr/include/c++/4.9/bits/stl_vector.h ****   template<typename _Tp, typename _Alloc>
  72:/usr/include/c++/4.9/bits/stl_vector.h ****     struct _Vector_base
  73:/usr/include/c++/4.9/bits/stl_vector.h ****     {
  74:/usr/include/c++/4.9/bits/stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  75:/usr/include/c++/4.9/bits/stl_vector.h ****         rebind<_Tp>::other _Tp_alloc_type;
  76:/usr/include/c++/4.9/bits/stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
  77:/usr/include/c++/4.9/bits/stl_vector.h ****        	pointer;
  78:/usr/include/c++/4.9/bits/stl_vector.h **** 
  79:/usr/include/c++/4.9/bits/stl_vector.h ****       struct _Vector_impl 
  80:/usr/include/c++/4.9/bits/stl_vector.h ****       : public _Tp_alloc_type
  81:/usr/include/c++/4.9/bits/stl_vector.h ****       {
  82:/usr/include/c++/4.9/bits/stl_vector.h **** 	pointer _M_start;
  83:/usr/include/c++/4.9/bits/stl_vector.h **** 	pointer _M_finish;
  84:/usr/include/c++/4.9/bits/stl_vector.h **** 	pointer _M_end_of_storage;
  85:/usr/include/c++/4.9/bits/stl_vector.h **** 
  86:/usr/include/c++/4.9/bits/stl_vector.h **** 	_Vector_impl()
  87:/usr/include/c++/4.9/bits/stl_vector.h **** 	: _Tp_alloc_type(), _M_start(0), _M_finish(0), _M_end_of_storage(0)
  88:/usr/include/c++/4.9/bits/stl_vector.h **** 	{ }
  89:/usr/include/c++/4.9/bits/stl_vector.h **** 
  90:/usr/include/c++/4.9/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
  91:/usr/include/c++/4.9/bits/stl_vector.h **** 	: _Tp_alloc_type(__a), _M_start(0), _M_finish(0), _M_end_of_storage(0)
  92:/usr/include/c++/4.9/bits/stl_vector.h **** 	{ }
  93:/usr/include/c++/4.9/bits/stl_vector.h **** 
  94:/usr/include/c++/4.9/bits/stl_vector.h **** #if __cplusplus >= 201103L
  95:/usr/include/c++/4.9/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a) noexcept
  96:/usr/include/c++/4.9/bits/stl_vector.h **** 	: _Tp_alloc_type(std::move(__a)),
  97:/usr/include/c++/4.9/bits/stl_vector.h **** 	  _M_start(0), _M_finish(0), _M_end_of_storage(0)
  98:/usr/include/c++/4.9/bits/stl_vector.h **** 	{ }
  99:/usr/include/c++/4.9/bits/stl_vector.h **** #endif
 100:/usr/include/c++/4.9/bits/stl_vector.h **** 
 101:/usr/include/c++/4.9/bits/stl_vector.h **** 	void _M_swap_data(_Vector_impl& __x) _GLIBCXX_NOEXCEPT
 102:/usr/include/c++/4.9/bits/stl_vector.h **** 	{
 103:/usr/include/c++/4.9/bits/stl_vector.h **** 	  std::swap(_M_start, __x._M_start);
 104:/usr/include/c++/4.9/bits/stl_vector.h **** 	  std::swap(_M_finish, __x._M_finish);
 105:/usr/include/c++/4.9/bits/stl_vector.h **** 	  std::swap(_M_end_of_storage, __x._M_end_of_storage);
 106:/usr/include/c++/4.9/bits/stl_vector.h **** 	}
 107:/usr/include/c++/4.9/bits/stl_vector.h ****       };
 108:/usr/include/c++/4.9/bits/stl_vector.h ****       
 109:/usr/include/c++/4.9/bits/stl_vector.h ****     public:
 110:/usr/include/c++/4.9/bits/stl_vector.h ****       typedef _Alloc allocator_type;
 111:/usr/include/c++/4.9/bits/stl_vector.h **** 
 112:/usr/include/c++/4.9/bits/stl_vector.h ****       _Tp_alloc_type&
 113:/usr/include/c++/4.9/bits/stl_vector.h ****       _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 114:/usr/include/c++/4.9/bits/stl_vector.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 115:/usr/include/c++/4.9/bits/stl_vector.h **** 
 116:/usr/include/c++/4.9/bits/stl_vector.h ****       const _Tp_alloc_type&
 117:/usr/include/c++/4.9/bits/stl_vector.h ****       _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 118:/usr/include/c++/4.9/bits/stl_vector.h ****       { return *static_cast<const _Tp_alloc_type*>(&this->_M_impl); }
 119:/usr/include/c++/4.9/bits/stl_vector.h **** 
 120:/usr/include/c++/4.9/bits/stl_vector.h ****       allocator_type
 121:/usr/include/c++/4.9/bits/stl_vector.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 122:/usr/include/c++/4.9/bits/stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 123:/usr/include/c++/4.9/bits/stl_vector.h **** 
 124:/usr/include/c++/4.9/bits/stl_vector.h ****       _Vector_base()
 125:/usr/include/c++/4.9/bits/stl_vector.h ****       : _M_impl() { }
 126:/usr/include/c++/4.9/bits/stl_vector.h **** 
 127:/usr/include/c++/4.9/bits/stl_vector.h ****       _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 128:/usr/include/c++/4.9/bits/stl_vector.h ****       : _M_impl(__a) { }
 129:/usr/include/c++/4.9/bits/stl_vector.h **** 
 130:/usr/include/c++/4.9/bits/stl_vector.h ****       _Vector_base(size_t __n)
 131:/usr/include/c++/4.9/bits/stl_vector.h ****       : _M_impl()
 132:/usr/include/c++/4.9/bits/stl_vector.h ****       { _M_create_storage(__n); }
 133:/usr/include/c++/4.9/bits/stl_vector.h **** 
 134:/usr/include/c++/4.9/bits/stl_vector.h ****       _Vector_base(size_t __n, const allocator_type& __a)
 135:/usr/include/c++/4.9/bits/stl_vector.h ****       : _M_impl(__a)
 136:/usr/include/c++/4.9/bits/stl_vector.h ****       { _M_create_storage(__n); }
 137:/usr/include/c++/4.9/bits/stl_vector.h **** 
 138:/usr/include/c++/4.9/bits/stl_vector.h **** #if __cplusplus >= 201103L
 139:/usr/include/c++/4.9/bits/stl_vector.h ****       _Vector_base(_Tp_alloc_type&& __a) noexcept
 140:/usr/include/c++/4.9/bits/stl_vector.h ****       : _M_impl(std::move(__a)) { }
 141:/usr/include/c++/4.9/bits/stl_vector.h **** 
 142:/usr/include/c++/4.9/bits/stl_vector.h ****       _Vector_base(_Vector_base&& __x) noexcept
 143:/usr/include/c++/4.9/bits/stl_vector.h ****       : _M_impl(std::move(__x._M_get_Tp_allocator()))
 144:/usr/include/c++/4.9/bits/stl_vector.h ****       { this->_M_impl._M_swap_data(__x._M_impl); }
 145:/usr/include/c++/4.9/bits/stl_vector.h **** 
 146:/usr/include/c++/4.9/bits/stl_vector.h ****       _Vector_base(_Vector_base&& __x, const allocator_type& __a)
 147:/usr/include/c++/4.9/bits/stl_vector.h ****       : _M_impl(__a)
 148:/usr/include/c++/4.9/bits/stl_vector.h ****       {
 149:/usr/include/c++/4.9/bits/stl_vector.h **** 	if (__x.get_allocator() == __a)
 150:/usr/include/c++/4.9/bits/stl_vector.h **** 	  this->_M_impl._M_swap_data(__x._M_impl);
 151:/usr/include/c++/4.9/bits/stl_vector.h **** 	else
 152:/usr/include/c++/4.9/bits/stl_vector.h **** 	  {
 153:/usr/include/c++/4.9/bits/stl_vector.h **** 	    size_t __n = __x._M_impl._M_finish - __x._M_impl._M_start;
 154:/usr/include/c++/4.9/bits/stl_vector.h **** 	    _M_create_storage(__n);
 155:/usr/include/c++/4.9/bits/stl_vector.h **** 	  }
 156:/usr/include/c++/4.9/bits/stl_vector.h ****       }
 157:/usr/include/c++/4.9/bits/stl_vector.h **** #endif
 158:/usr/include/c++/4.9/bits/stl_vector.h **** 
 159:/usr/include/c++/4.9/bits/stl_vector.h ****       ~_Vector_base() _GLIBCXX_NOEXCEPT
 160:/usr/include/c++/4.9/bits/stl_vector.h ****       { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 161:/usr/include/c++/4.9/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 162:/usr/include/c++/4.9/bits/stl_vector.h **** 
 163:/usr/include/c++/4.9/bits/stl_vector.h ****     public:
 164:/usr/include/c++/4.9/bits/stl_vector.h ****       _Vector_impl _M_impl;
 165:/usr/include/c++/4.9/bits/stl_vector.h **** 
 166:/usr/include/c++/4.9/bits/stl_vector.h ****       pointer
 167:/usr/include/c++/4.9/bits/stl_vector.h ****       _M_allocate(size_t __n)
 168:/usr/include/c++/4.9/bits/stl_vector.h ****       {
 169:/usr/include/c++/4.9/bits/stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 170:/usr/include/c++/4.9/bits/stl_vector.h **** 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : 0;
 171:/usr/include/c++/4.9/bits/stl_vector.h ****       }
 172:/usr/include/c++/4.9/bits/stl_vector.h **** 
 173:/usr/include/c++/4.9/bits/stl_vector.h ****       void
 174:/usr/include/c++/4.9/bits/stl_vector.h ****       _M_deallocate(pointer __p, size_t __n)
 175:/usr/include/c++/4.9/bits/stl_vector.h ****       {
 176:/usr/include/c++/4.9/bits/stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 177:/usr/include/c++/4.9/bits/stl_vector.h **** 	if (__p)
 178:/usr/include/c++/4.9/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 179:/usr/include/c++/4.9/bits/stl_vector.h ****       }
 180:/usr/include/c++/4.9/bits/stl_vector.h **** 
 181:/usr/include/c++/4.9/bits/stl_vector.h ****     private:
 182:/usr/include/c++/4.9/bits/stl_vector.h ****       void
 183:/usr/include/c++/4.9/bits/stl_vector.h ****       _M_create_storage(size_t __n)
 184:/usr/include/c++/4.9/bits/stl_vector.h ****       {
 185:/usr/include/c++/4.9/bits/stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 186:/usr/include/c++/4.9/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 187:/usr/include/c++/4.9/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 188:/usr/include/c++/4.9/bits/stl_vector.h ****       }
 189:/usr/include/c++/4.9/bits/stl_vector.h ****     };
 190:/usr/include/c++/4.9/bits/stl_vector.h **** 
 191:/usr/include/c++/4.9/bits/stl_vector.h **** 
 192:/usr/include/c++/4.9/bits/stl_vector.h ****   /**
 193:/usr/include/c++/4.9/bits/stl_vector.h ****    *  @brief A standard container which offers fixed time access to
 194:/usr/include/c++/4.9/bits/stl_vector.h ****    *  individual elements in any order.
 195:/usr/include/c++/4.9/bits/stl_vector.h ****    *
 196:/usr/include/c++/4.9/bits/stl_vector.h ****    *  @ingroup sequences
 197:/usr/include/c++/4.9/bits/stl_vector.h ****    *
 198:/usr/include/c++/4.9/bits/stl_vector.h ****    *  @tparam _Tp  Type of element.
 199:/usr/include/c++/4.9/bits/stl_vector.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
 200:/usr/include/c++/4.9/bits/stl_vector.h ****    *
 201:/usr/include/c++/4.9/bits/stl_vector.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
 202:/usr/include/c++/4.9/bits/stl_vector.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 203:/usr/include/c++/4.9/bits/stl_vector.h ****    *  <a href="tables.html#67">sequence</a>, including the
 204:/usr/include/c++/4.9/bits/stl_vector.h ****    *  <a href="tables.html#68">optional sequence requirements</a> with the
 205:/usr/include/c++/4.9/bits/stl_vector.h ****    *  %exception of @c push_front and @c pop_front.
 206:/usr/include/c++/4.9/bits/stl_vector.h ****    *
 207:/usr/include/c++/4.9/bits/stl_vector.h ****    *  In some terminology a %vector can be described as a dynamic
 208:/usr/include/c++/4.9/bits/stl_vector.h ****    *  C-style array, it offers fast and efficient access to individual
 209:/usr/include/c++/4.9/bits/stl_vector.h ****    *  elements in any order and saves the user from worrying about
 210:/usr/include/c++/4.9/bits/stl_vector.h ****    *  memory and size allocation.  Subscripting ( @c [] ) access is
 211:/usr/include/c++/4.9/bits/stl_vector.h ****    *  also provided as with C-style arrays.
 212:/usr/include/c++/4.9/bits/stl_vector.h ****   */
 213:/usr/include/c++/4.9/bits/stl_vector.h ****   template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
 214:/usr/include/c++/4.9/bits/stl_vector.h ****     class vector : protected _Vector_base<_Tp, _Alloc>
 215:/usr/include/c++/4.9/bits/stl_vector.h ****     {
 216:/usr/include/c++/4.9/bits/stl_vector.h ****       // Concept requirements.
 217:/usr/include/c++/4.9/bits/stl_vector.h ****       typedef typename _Alloc::value_type                _Alloc_value_type;
 218:/usr/include/c++/4.9/bits/stl_vector.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 219:/usr/include/c++/4.9/bits/stl_vector.h ****       __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
 220:/usr/include/c++/4.9/bits/stl_vector.h ****       
 221:/usr/include/c++/4.9/bits/stl_vector.h ****       typedef _Vector_base<_Tp, _Alloc>			 _Base;
 222:/usr/include/c++/4.9/bits/stl_vector.h ****       typedef typename _Base::_Tp_alloc_type		 _Tp_alloc_type;
 223:/usr/include/c++/4.9/bits/stl_vector.h ****       typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>  _Alloc_traits;
 224:/usr/include/c++/4.9/bits/stl_vector.h **** 
 225:/usr/include/c++/4.9/bits/stl_vector.h ****     public:
 226:/usr/include/c++/4.9/bits/stl_vector.h ****       typedef _Tp					 value_type;
 227:/usr/include/c++/4.9/bits/stl_vector.h ****       typedef typename _Base::pointer                    pointer;
 228:/usr/include/c++/4.9/bits/stl_vector.h ****       typedef typename _Alloc_traits::const_pointer      const_pointer;
 229:/usr/include/c++/4.9/bits/stl_vector.h ****       typedef typename _Alloc_traits::reference          reference;
 230:/usr/include/c++/4.9/bits/stl_vector.h ****       typedef typename _Alloc_traits::const_reference    const_reference;
 231:/usr/include/c++/4.9/bits/stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<pointer, vector> iterator;
 232:/usr/include/c++/4.9/bits/stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, vector>
 233:/usr/include/c++/4.9/bits/stl_vector.h ****       const_iterator;
 234:/usr/include/c++/4.9/bits/stl_vector.h ****       typedef std::reverse_iterator<const_iterator>  const_reverse_iterator;
 235:/usr/include/c++/4.9/bits/stl_vector.h ****       typedef std::reverse_iterator<iterator>		 reverse_iterator;
 236:/usr/include/c++/4.9/bits/stl_vector.h ****       typedef size_t					 size_type;
 237:/usr/include/c++/4.9/bits/stl_vector.h ****       typedef ptrdiff_t					 difference_type;
 238:/usr/include/c++/4.9/bits/stl_vector.h ****       typedef _Alloc                        		 allocator_type;
 239:/usr/include/c++/4.9/bits/stl_vector.h **** 
 240:/usr/include/c++/4.9/bits/stl_vector.h ****     protected:
 241:/usr/include/c++/4.9/bits/stl_vector.h ****       using _Base::_M_allocate;
 242:/usr/include/c++/4.9/bits/stl_vector.h ****       using _Base::_M_deallocate;
 243:/usr/include/c++/4.9/bits/stl_vector.h ****       using _Base::_M_impl;
 244:/usr/include/c++/4.9/bits/stl_vector.h ****       using _Base::_M_get_Tp_allocator;
 245:/usr/include/c++/4.9/bits/stl_vector.h **** 
 246:/usr/include/c++/4.9/bits/stl_vector.h ****     public:
 247:/usr/include/c++/4.9/bits/stl_vector.h ****       // [23.2.4.1] construct/copy/destroy
 248:/usr/include/c++/4.9/bits/stl_vector.h ****       // (assign() and get_allocator() are also listed in this section)
 249:/usr/include/c++/4.9/bits/stl_vector.h **** 
 250:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 251:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 252:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 253:/usr/include/c++/4.9/bits/stl_vector.h ****       vector()
 4804              		.loc 6 253 0
 4805              		.cfi_startproc
 4806 0000 55       		pushq	%rbp
 4807              		.cfi_def_cfa_offset 16
 4808              		.cfi_offset 6, -16
 4809 0001 4889E5   		movq	%rsp, %rbp
 4810              		.cfi_def_cfa_register 6
 4811 0004 4883EC10 		subq	$16, %rsp
 4812 0008 48897DF8 		movq	%rdi, -8(%rbp)
 4813              	.LBB113:
 254:/usr/include/c++/4.9/bits/stl_vector.h **** #if __cplusplus >= 201103L
 255:/usr/include/c++/4.9/bits/stl_vector.h ****       noexcept(is_nothrow_default_constructible<_Alloc>::value)
 256:/usr/include/c++/4.9/bits/stl_vector.h **** #endif
 257:/usr/include/c++/4.9/bits/stl_vector.h ****       : _Base() { }
 4814              		.loc 6 257 0
 4815 000c 488B45F8 		movq	-8(%rbp), %rax
 4816 0010 4889C7   		movq	%rax, %rdi
 4817 0013 E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev
 4817      00
 4818              	.LBE113:
 4819 0018 C9       		leave
 4820              		.cfi_def_cfa 7, 8
 4821 0019 C3       		ret
 4822              		.cfi_endproc
 4823              	.LFE1449:
 4825              		.weak	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC1Ev
 4826              		.set	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC1Ev,_ZNSt6vectorIN8UnitTest18DeferredTes
 4827              		.section	.text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev,"axG",@progbits,_ZNSt6vect
 4828              		.align 2
 4829              		.weak	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
 4831              	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:
 4832              	.LFB1452:
 258:/usr/include/c++/4.9/bits/stl_vector.h **** 
 259:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 260:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 261:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __a  An allocator object.
 262:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 263:/usr/include/c++/4.9/bits/stl_vector.h ****       explicit
 264:/usr/include/c++/4.9/bits/stl_vector.h ****       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 265:/usr/include/c++/4.9/bits/stl_vector.h ****       : _Base(__a) { }
 266:/usr/include/c++/4.9/bits/stl_vector.h **** 
 267:/usr/include/c++/4.9/bits/stl_vector.h **** #if __cplusplus >= 201103L
 268:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 269:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Creates a %vector with default constructed elements.
 270:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 271:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __a  An allocator.
 272:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 273:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n default
 274:/usr/include/c++/4.9/bits/stl_vector.h ****        *  constructed elements.
 275:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 276:/usr/include/c++/4.9/bits/stl_vector.h ****       explicit
 277:/usr/include/c++/4.9/bits/stl_vector.h ****       vector(size_type __n, const allocator_type& __a = allocator_type())
 278:/usr/include/c++/4.9/bits/stl_vector.h ****       : _Base(__n, __a)
 279:/usr/include/c++/4.9/bits/stl_vector.h ****       { _M_default_initialize(__n); }
 280:/usr/include/c++/4.9/bits/stl_vector.h **** 
 281:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 282:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 283:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 284:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __value  An element to copy.
 285:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __a  An allocator.
 286:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 287:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 288:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 289:/usr/include/c++/4.9/bits/stl_vector.h ****       vector(size_type __n, const value_type& __value,
 290:/usr/include/c++/4.9/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 291:/usr/include/c++/4.9/bits/stl_vector.h ****       : _Base(__n, __a)
 292:/usr/include/c++/4.9/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 293:/usr/include/c++/4.9/bits/stl_vector.h **** #else
 294:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 295:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 296:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 297:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __value  An element to copy.
 298:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __a  An allocator.
 299:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 300:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 301:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 302:/usr/include/c++/4.9/bits/stl_vector.h ****       explicit
 303:/usr/include/c++/4.9/bits/stl_vector.h ****       vector(size_type __n, const value_type& __value = value_type(),
 304:/usr/include/c++/4.9/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 305:/usr/include/c++/4.9/bits/stl_vector.h ****       : _Base(__n, __a)
 306:/usr/include/c++/4.9/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 307:/usr/include/c++/4.9/bits/stl_vector.h **** #endif
 308:/usr/include/c++/4.9/bits/stl_vector.h **** 
 309:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 310:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  %Vector copy constructor.
 311:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 312:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 313:/usr/include/c++/4.9/bits/stl_vector.h ****        *  The newly-created %vector uses a copy of the allocation
 314:/usr/include/c++/4.9/bits/stl_vector.h ****        *  object used by @a __x.  All the elements of @a __x are copied,
 315:/usr/include/c++/4.9/bits/stl_vector.h ****        *  but any extra memory in
 316:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @a __x (for fast expansion) will not be copied.
 317:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 318:/usr/include/c++/4.9/bits/stl_vector.h ****       vector(const vector& __x)
 319:/usr/include/c++/4.9/bits/stl_vector.h ****       : _Base(__x.size(),
 320:/usr/include/c++/4.9/bits/stl_vector.h ****         _Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 321:/usr/include/c++/4.9/bits/stl_vector.h ****       { this->_M_impl._M_finish =
 322:/usr/include/c++/4.9/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 323:/usr/include/c++/4.9/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 324:/usr/include/c++/4.9/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 325:/usr/include/c++/4.9/bits/stl_vector.h ****       }
 326:/usr/include/c++/4.9/bits/stl_vector.h **** 
 327:/usr/include/c++/4.9/bits/stl_vector.h **** #if __cplusplus >= 201103L
 328:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 329:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  %Vector move constructor.
 330:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 331:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 332:/usr/include/c++/4.9/bits/stl_vector.h ****        *  The newly-created %vector contains the exact contents of @a __x.
 333:/usr/include/c++/4.9/bits/stl_vector.h ****        *  The contents of @a __x are a valid, but unspecified %vector.
 334:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 335:/usr/include/c++/4.9/bits/stl_vector.h ****       vector(vector&& __x) noexcept
 336:/usr/include/c++/4.9/bits/stl_vector.h ****       : _Base(std::move(__x)) { }
 337:/usr/include/c++/4.9/bits/stl_vector.h **** 
 338:/usr/include/c++/4.9/bits/stl_vector.h ****       /// Copy constructor with alternative allocator
 339:/usr/include/c++/4.9/bits/stl_vector.h ****       vector(const vector& __x, const allocator_type& __a)
 340:/usr/include/c++/4.9/bits/stl_vector.h ****       : _Base(__x.size(), __a)
 341:/usr/include/c++/4.9/bits/stl_vector.h ****       { this->_M_impl._M_finish =
 342:/usr/include/c++/4.9/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 343:/usr/include/c++/4.9/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 344:/usr/include/c++/4.9/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 345:/usr/include/c++/4.9/bits/stl_vector.h ****       }
 346:/usr/include/c++/4.9/bits/stl_vector.h **** 
 347:/usr/include/c++/4.9/bits/stl_vector.h ****       /// Move constructor with alternative allocator
 348:/usr/include/c++/4.9/bits/stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m)
 349:/usr/include/c++/4.9/bits/stl_vector.h ****       noexcept(_Alloc_traits::_S_always_equal())
 350:/usr/include/c++/4.9/bits/stl_vector.h ****       : _Base(std::move(__rv), __m)
 351:/usr/include/c++/4.9/bits/stl_vector.h ****       {
 352:/usr/include/c++/4.9/bits/stl_vector.h **** 	if (__rv.get_allocator() != __m)
 353:/usr/include/c++/4.9/bits/stl_vector.h **** 	  {
 354:/usr/include/c++/4.9/bits/stl_vector.h **** 	    this->_M_impl._M_finish =
 355:/usr/include/c++/4.9/bits/stl_vector.h **** 	      std::__uninitialized_move_a(__rv.begin(), __rv.end(),
 356:/usr/include/c++/4.9/bits/stl_vector.h **** 					  this->_M_impl._M_start,
 357:/usr/include/c++/4.9/bits/stl_vector.h **** 					  _M_get_Tp_allocator());
 358:/usr/include/c++/4.9/bits/stl_vector.h **** 	    __rv.clear();
 359:/usr/include/c++/4.9/bits/stl_vector.h **** 	  }
 360:/usr/include/c++/4.9/bits/stl_vector.h ****       }
 361:/usr/include/c++/4.9/bits/stl_vector.h **** 
 362:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 363:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Builds a %vector from an initializer list.
 364:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 365:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __a  An allocator.
 366:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 367:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Create a %vector consisting of copies of the elements in the
 368:/usr/include/c++/4.9/bits/stl_vector.h ****        *  initializer_list @a __l.
 369:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 370:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This will call the element type's copy constructor N times
 371:/usr/include/c++/4.9/bits/stl_vector.h ****        *  (where N is @a __l.size()) and do no memory reallocation.
 372:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 373:/usr/include/c++/4.9/bits/stl_vector.h ****       vector(initializer_list<value_type> __l,
 374:/usr/include/c++/4.9/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 375:/usr/include/c++/4.9/bits/stl_vector.h ****       : _Base(__a)
 376:/usr/include/c++/4.9/bits/stl_vector.h ****       {
 377:/usr/include/c++/4.9/bits/stl_vector.h **** 	_M_range_initialize(__l.begin(), __l.end(),
 378:/usr/include/c++/4.9/bits/stl_vector.h **** 			    random_access_iterator_tag());
 379:/usr/include/c++/4.9/bits/stl_vector.h ****       }
 380:/usr/include/c++/4.9/bits/stl_vector.h **** #endif
 381:/usr/include/c++/4.9/bits/stl_vector.h **** 
 382:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 383:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Builds a %vector from a range.
 384:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __first  An input iterator.
 385:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __last  An input iterator.
 386:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __a  An allocator.
 387:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 388:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Create a %vector consisting of copies of the elements from
 389:/usr/include/c++/4.9/bits/stl_vector.h ****        *  [first,last).
 390:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 391:/usr/include/c++/4.9/bits/stl_vector.h ****        *  If the iterators are forward, bidirectional, or
 392:/usr/include/c++/4.9/bits/stl_vector.h ****        *  random-access, then this will call the elements' copy
 393:/usr/include/c++/4.9/bits/stl_vector.h ****        *  constructor N times (where N is distance(first,last)) and do
 394:/usr/include/c++/4.9/bits/stl_vector.h ****        *  no memory reallocation.  But if only input iterators are
 395:/usr/include/c++/4.9/bits/stl_vector.h ****        *  used, then this will do at most 2N calls to the copy
 396:/usr/include/c++/4.9/bits/stl_vector.h ****        *  constructor, and logN memory reallocations.
 397:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 398:/usr/include/c++/4.9/bits/stl_vector.h **** #if __cplusplus >= 201103L
 399:/usr/include/c++/4.9/bits/stl_vector.h ****       template<typename _InputIterator,
 400:/usr/include/c++/4.9/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 401:/usr/include/c++/4.9/bits/stl_vector.h ****         vector(_InputIterator __first, _InputIterator __last,
 402:/usr/include/c++/4.9/bits/stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 403:/usr/include/c++/4.9/bits/stl_vector.h **** 	: _Base(__a)
 404:/usr/include/c++/4.9/bits/stl_vector.h ****         { _M_initialize_dispatch(__first, __last, __false_type()); }
 405:/usr/include/c++/4.9/bits/stl_vector.h **** #else
 406:/usr/include/c++/4.9/bits/stl_vector.h ****       template<typename _InputIterator>
 407:/usr/include/c++/4.9/bits/stl_vector.h ****         vector(_InputIterator __first, _InputIterator __last,
 408:/usr/include/c++/4.9/bits/stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 409:/usr/include/c++/4.9/bits/stl_vector.h **** 	: _Base(__a)
 410:/usr/include/c++/4.9/bits/stl_vector.h ****         {
 411:/usr/include/c++/4.9/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 412:/usr/include/c++/4.9/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 413:/usr/include/c++/4.9/bits/stl_vector.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 414:/usr/include/c++/4.9/bits/stl_vector.h **** 	}
 415:/usr/include/c++/4.9/bits/stl_vector.h **** #endif
 416:/usr/include/c++/4.9/bits/stl_vector.h **** 
 417:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 418:/usr/include/c++/4.9/bits/stl_vector.h ****        *  The dtor only erases the elements, and note that if the
 419:/usr/include/c++/4.9/bits/stl_vector.h ****        *  elements themselves are pointers, the pointed-to memory is
 420:/usr/include/c++/4.9/bits/stl_vector.h ****        *  not touched in any way.  Managing the pointer is the user's
 421:/usr/include/c++/4.9/bits/stl_vector.h ****        *  responsibility.
 422:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 423:/usr/include/c++/4.9/bits/stl_vector.h ****       ~vector() _GLIBCXX_NOEXCEPT
 4833              		.loc 6 423 0
 4834              		.cfi_startproc
 4835              		.cfi_personality 0x3,__gxx_personality_v0
 4836              		.cfi_lsda 0x3,.LLSDA1452
 4837 0000 55       		pushq	%rbp
 4838              		.cfi_def_cfa_offset 16
 4839              		.cfi_offset 6, -16
 4840 0001 4889E5   		movq	%rsp, %rbp
 4841              		.cfi_def_cfa_register 6
 4842 0004 53       		pushq	%rbx
 4843 0005 4883EC18 		subq	$24, %rsp
 4844              		.cfi_offset 3, -24
 4845 0009 48897DE8 		movq	%rdi, -24(%rbp)
 4846              	.LBB114:
 424:/usr/include/c++/4.9/bits/stl_vector.h ****       { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 425:/usr/include/c++/4.9/bits/stl_vector.h **** 		      _M_get_Tp_allocator()); }
 4847              		.loc 6 425 0
 4848 000d 488B45E8 		movq	-24(%rbp), %rax
 4849 0011 4889C7   		movq	%rax, %rdi
 4850 0014 E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv
 4850      00
 4851 0019 4889C2   		movq	%rax, %rdx
 4852 001c 488B45E8 		movq	-24(%rbp), %rax
 4853 0020 488B4808 		movq	8(%rax), %rcx
 4854 0024 488B45E8 		movq	-24(%rbp), %rax
 4855 0028 488B00   		movq	(%rax), %rax
 424:/usr/include/c++/4.9/bits/stl_vector.h ****       { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 4856              		.loc 6 424 0
 4857 002b 4889CE   		movq	%rcx, %rsi
 4858 002e 4889C7   		movq	%rax, %rdi
 4859              	.LEHB138:
 4860 0031 E8000000 		call	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E
 4860      00
 4861              	.LEHE138:
 4862              		.loc 6 425 0
 4863 0036 488B45E8 		movq	-24(%rbp), %rax
 4864 003a 4889C7   		movq	%rax, %rdi
 4865              	.LEHB139:
 4866 003d E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
 4866      00
 4867              	.LEHE139:
 4868 0042 EB1A     		jmp	.L276
 4869              	.L275:
 4870 0044 4889C3   		movq	%rax, %rbx
 4871 0047 488B45E8 		movq	-24(%rbp), %rax
 4872 004b 4889C7   		movq	%rax, %rdi
 4873 004e E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
 4873      00
 4874 0053 4889D8   		movq	%rbx, %rax
 4875 0056 4889C7   		movq	%rax, %rdi
 4876              	.LEHB140:
 4877 0059 E8000000 		call	_Unwind_Resume
 4877      00
 4878              	.LEHE140:
 4879              	.L276:
 4880              	.LBE114:
 4881 005e 4883C418 		addq	$24, %rsp
 4882 0062 5B       		popq	%rbx
 4883 0063 5D       		popq	%rbp
 4884              		.cfi_def_cfa 7, 8
 4885 0064 C3       		ret
 4886              		.cfi_endproc
 4887              	.LFE1452:
 4888              		.section	.gcc_except_table
 4889              	.LLSDA1452:
 4890 03a4 FF       		.byte	0xff
 4891 03a5 FF       		.byte	0xff
 4892 03a6 01       		.byte	0x1
 4893 03a7 0C       		.uleb128 .LLSDACSE1452-.LLSDACSB1452
 4894              	.LLSDACSB1452:
 4895 03a8 31       		.uleb128 .LEHB138-.LFB1452
 4896 03a9 05       		.uleb128 .LEHE138-.LEHB138
 4897 03aa 44       		.uleb128 .L275-.LFB1452
 4898 03ab 00       		.uleb128 0
 4899 03ac 3D       		.uleb128 .LEHB139-.LFB1452
 4900 03ad 05       		.uleb128 .LEHE139-.LEHB139
 4901 03ae 00       		.uleb128 0
 4902 03af 00       		.uleb128 0
 4903 03b0 59       		.uleb128 .LEHB140-.LFB1452
 4904 03b1 05       		.uleb128 .LEHE140-.LEHB140
 4905 03b2 00       		.uleb128 0
 4906 03b3 00       		.uleb128 0
 4907              	.LLSDACSE1452:
 4908              		.section	.text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev,"axG",@progbits,_ZNSt6vect
 4910              		.weak	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
 4911              		.set	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED1Ev,_ZNSt6vectorIN8UnitTest18DeferredTes
 4912              		.section	.rodata
 4913              	.LC32:
 4914 0524 556E6861 		.string	"Unhandled system exception"
 4914      6E646C65 
 4914      64207379 
 4914      7374656D 
 4914      20657863 
 4915              	.LC33:
 4916 053f 556E6861 		.string	"Unhandled exception: Crash!"
 4916      6E646C65 
 4916      64206578 
 4916      63657074 
 4916      696F6E3A 
 4917              		.text
 4919              	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewD
 4920              	.LFB1460:
 4921              		.file 7 "../ExecuteTest.h"
   1:../ExecuteTest.h **** #ifndef UNITTEST_EXECUTE_TEST_H
   2:../ExecuteTest.h **** #define UNITTEST_EXECUTE_TEST_H
   3:../ExecuteTest.h **** 
   4:../ExecuteTest.h **** #include "TestDetails.h"
   5:../ExecuteTest.h **** #include "MemoryOutStream.h"
   6:../ExecuteTest.h **** #include "AssertException.h"
   7:../ExecuteTest.h **** #include "CurrentTest.h"
   8:../ExecuteTest.h **** 
   9:../ExecuteTest.h **** #ifdef UNITTEST_POSIX
  10:../ExecuteTest.h **** 	#include "PosixUtils/SignalTranslator.h"
  11:../ExecuteTest.h **** #endif
  12:../ExecuteTest.h **** 
  13:../ExecuteTest.h **** namespace UnitTest {
  14:../ExecuteTest.h **** 
  15:../ExecuteTest.h **** template< typename T >
  16:../ExecuteTest.h **** void ExecuteTest(T& testObject, TestDetails const& details)
 4922              		.loc 7 16 0
 4923              		.cfi_startproc
 4924              		.cfi_personality 0x3,__gxx_personality_v0
 4925              		.cfi_lsda 0x3,.LLSDA1460
 4926 2248 55       		pushq	%rbp
 4927              		.cfi_def_cfa_offset 16
 4928              		.cfi_offset 6, -16
 4929 2249 4889E5   		movq	%rsp, %rbp
 4930              		.cfi_def_cfa_register 6
 4931 224c 4154     		pushq	%r12
 4932 224e 53       		pushq	%rbx
 4933 224f 4881EC20 		subq	$1568, %rsp
 4933      060000
 4934              		.cfi_offset 12, -24
 4935              		.cfi_offset 3, -32
 4936 2256 4889BDD8 		movq	%rdi, -1576(%rbp)
 4936      F9FFFF
 4937 225d 4889B5D0 		movq	%rsi, -1584(%rbp)
 4937      F9FFFF
 4938              		.loc 7 16 0
 4939 2264 64488B04 		movq	%fs:40, %rax
 4939      25280000 
 4939      00
 4940 226d 488945E8 		movq	%rax, -24(%rbp)
 4941 2271 31C0     		xorl	%eax, %eax
 4942              	.LEHB141:
 4943              	.LBB115:
  17:../ExecuteTest.h **** {
  18:../ExecuteTest.h **** 	CurrentTest::Details() = &details;
 4944              		.loc 7 18 0
 4945 2273 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4945      00
 4946              	.LEHE141:
 4947 2278 4889C2   		movq	%rax, %rdx
 4948 227b 488B85D0 		movq	-1584(%rbp), %rax
 4948      F9FFFF
 4949 2282 488902   		movq	%rax, (%rdx)
 4950              	.LBB116:
  19:../ExecuteTest.h **** 
  20:../ExecuteTest.h **** 	try
  21:../ExecuteTest.h **** 	{
  22:../ExecuteTest.h **** #ifdef UNITTEST_POSIX
  23:../ExecuteTest.h **** 		UNITTEST_THROW_SIGNALS
 4951              		.loc 7 23 0
 4952 2285 488D8580 		leaq	-1152(%rbp), %rax
 4952      FBFFFF
 4953 228c 4889C7   		movq	%rax, %rdi
 4954              	.LEHB142:
 4955 228f E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev
 4955      00
 4956              	.LEHE142:
 4957              		.loc 7 23 0 is_stmt 0 discriminator 1
 4958 2294 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 4958      000000
 4959 229b BE010000 		movl	$1, %esi
 4959      00
 4960 22a0 4889C7   		movq	%rax, %rdi
 4961 22a3 E8000000 		call	__sigsetjmp
 4961      00
 4962 22a8 85C0     		testl	%eax, %eax
 4963 22aa 0F95C0   		setne	%al
 4964 22ad 84C0     		testb	%al, %al
 4965 22af 7423     		je	.L297
 4966              		.loc 7 23 0 discriminator 3
 4967 22b1 BF080000 		movl	$8, %edi
 4967      00
 4968 22b6 E8000000 		call	__cxa_allocate_exception
 4968      00
 4969 22bb 48C70000 		movq	$.LC32, (%rax)
 4969      000000
 4970 22c2 BA000000 		movl	$0, %edx
 4970      00
 4971 22c7 BE000000 		movl	$_ZTIPKc, %esi
 4971      00
 4972 22cc 4889C7   		movq	%rax, %rdi
 4973              	.LEHB143:
 4974 22cf E8000000 		call	__cxa_throw
 4974      00
 4975              	.L297:
  24:../ExecuteTest.h **** #endif
  25:../ExecuteTest.h **** 		testObject.RunImpl();
 4976              		.loc 7 25 0 is_stmt 1
 4977 22d4 488B85D8 		movq	-1576(%rbp), %rax
 4977      F9FFFF
 4978 22db 4889C7   		movq	%rax, %rdi
 4979 22de E843E3FF 		call	_ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest
 4979      FF
 4980              	.LEHE143:
 4981              		.loc 7 25 0 is_stmt 0 discriminator 2
 4982 22e3 488D8580 		leaq	-1152(%rbp), %rax
 4982      FBFFFF
 4983 22ea 4889C7   		movq	%rax, %rdi
 4984              	.LEHB144:
 4985 22ed E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 4985      00
 4986              	.LEHE144:
 4987              	.LBE116:
 4988              	.LBE115:
  26:../ExecuteTest.h **** 	}
  27:../ExecuteTest.h **** 	catch (AssertException const& e)
  28:../ExecuteTest.h **** 	{
  29:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(
  30:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
  31:../ExecuteTest.h **** 	}
  32:../ExecuteTest.h **** 	catch (std::exception const& e)
  33:../ExecuteTest.h **** 	{
  34:../ExecuteTest.h **** 		MemoryOutStream stream;
  35:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
  36:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
  37:../ExecuteTest.h **** 	}
  38:../ExecuteTest.h **** 	catch (...)
  39:../ExecuteTest.h **** 	{
  40:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, "Unhandled exception: Crash!");
  41:../ExecuteTest.h **** 	}
  42:../ExecuteTest.h **** }
 4989              		.loc 7 42 0 is_stmt 1
 4990 22f2 E9EE0100 		jmp	.L299
 4990      00
 4991              	.L292:
 4992 22f7 4989C4   		movq	%rax, %r12
 4993 22fa 4889D3   		movq	%rdx, %rbx
 4994              	.LBB124:
 4995              	.LBB117:
  25:../ExecuteTest.h **** 	}
 4996              		.loc 7 25 0
 4997 22fd 488D8580 		leaq	-1152(%rbp), %rax
 4997      FBFFFF
 4998 2304 4889C7   		movq	%rax, %rdi
 4999 2307 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 4999      00
 5000 230c 4C89E0   		movq	%r12, %rax
 5001 230f 4889DA   		movq	%rbx, %rdx
 5002 2312 EB00     		jmp	.L281
 5003              	.L291:
 5004              	.L281:
 5005 2314 4883FA01 		cmpq	$1, %rdx
 5006 2318 745C     		je	.L283
 5007 231a 4883FA02 		cmpq	$2, %rdx
 5008 231e 0F84F300 		je	.L284
 5008      0000
 5009 2324 E9900100 		jmp	.L298
 5009      00
 5010              	.L293:
 5011 2329 4889C3   		movq	%rax, %rbx
 5012              	.LBE117:
 5013              	.LBB118:
  27:../ExecuteTest.h **** 	{
 5014              		.loc 7 27 0
 5015 232c E8000000 		call	__cxa_end_catch
 5015      00
 5016 2331 4889D8   		movq	%rbx, %rax
 5017 2334 4889C7   		movq	%rax, %rdi
 5018              	.LEHB145:
 5019 2337 E8000000 		call	_Unwind_Resume
 5019      00
 5020              	.LEHE145:
 5021              	.L294:
 5022 233c 4889C3   		movq	%rax, %rbx
 5023              	.LBE118:
 5024              	.LBB119:
 5025              	.LBB120:
  36:../ExecuteTest.h **** 	}
 5026              		.loc 7 36 0
 5027 233f 488D8510 		leaq	-1520(%rbp), %rax
 5027      FAFFFF
 5028 2346 4889C7   		movq	%rax, %rdi
 5029 2349 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5029      00
 5030 234e EB03     		jmp	.L287
 5031              	.L295:
 5032 2350 4889C3   		movq	%rax, %rbx
 5033              	.L287:
 5034              	.LBE120:
  32:../ExecuteTest.h **** 	{
 5035              		.loc 7 32 0
 5036 2353 E8000000 		call	__cxa_end_catch
 5036      00
 5037 2358 4889D8   		movq	%rbx, %rax
 5038 235b 4889C7   		movq	%rax, %rdi
 5039              	.LEHB146:
 5040 235e E8000000 		call	_Unwind_Resume
 5040      00
 5041              	.LEHE146:
 5042              	.L296:
 5043 2363 4889C3   		movq	%rax, %rbx
 5044              	.LBE119:
  38:../ExecuteTest.h **** 	{
 5045              		.loc 7 38 0
 5046 2366 E8000000 		call	__cxa_end_catch
 5046      00
 5047 236b 4889D8   		movq	%rbx, %rax
 5048 236e 4889C7   		movq	%rax, %rdi
 5049              	.LEHB147:
 5050 2371 E8000000 		call	_Unwind_Resume
 5050      00
 5051              	.LEHE147:
 5052              	.L283:
 5053              	.LBB122:
  27:../ExecuteTest.h **** 	{
 5054              		.loc 7 27 0
 5055 2376 4889C7   		movq	%rax, %rdi
 5056 2379 E8000000 		call	__cxa_begin_catch
 5056      00
 5057 237e 488985E0 		movq	%rax, -1568(%rbp)
 5057      F9FFFF
  30:../ExecuteTest.h **** 	}
 5058              		.loc 7 30 0
 5059 2385 488B85E0 		movq	-1568(%rbp), %rax
 5059      F9FFFF
 5060 238c 488B00   		movq	(%rax), %rax
 5061 238f 4883C010 		addq	$16, %rax
 5062 2393 488B00   		movq	(%rax), %rax
 5063 2396 488B95E0 		movq	-1568(%rbp), %rdx
 5063      F9FFFF
 5064 239d 4889D7   		movq	%rdx, %rdi
 5065 23a0 FFD0     		call	*%rax
 5066 23a2 4889C3   		movq	%rax, %rbx
 5067 23a5 488B85E0 		movq	-1568(%rbp), %rax
 5067      F9FFFF
 5068 23ac 4889C7   		movq	%rax, %rdi
 5069              	.LEHB148:
 5070 23af E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 5070      00
  30:../ExecuteTest.h **** 	}
 5071              		.loc 7 30 0 is_stmt 0 discriminator 1
 5072 23b4 4189C4   		movl	%eax, %r12d
 5073 23b7 488B85E0 		movq	-1568(%rbp), %rax
 5073      F9FFFF
 5074 23be 4889C7   		movq	%rax, %rdi
 5075 23c1 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 5075      00
  30:../ExecuteTest.h **** 	}
 5076              		.loc 7 30 0 discriminator 2
 5077 23c6 4889C1   		movq	%rax, %rcx
 5078 23c9 488B85D0 		movq	-1584(%rbp), %rax
 5078      F9FFFF
 5079 23d0 488B10   		movq	(%rax), %rdx
 5080 23d3 488B85D0 		movq	-1584(%rbp), %rax
 5080      F9FFFF
 5081 23da 488B7008 		movq	8(%rax), %rsi
 5082 23de 488D85F0 		leaq	-1552(%rbp), %rax
 5082      F9FFFF
 5083 23e5 4589E0   		movl	%r12d, %r8d
 5084 23e8 4889C7   		movq	%rax, %rdi
 5085 23eb E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 5085      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5086              		.loc 7 29 0 is_stmt 1
 5087 23f0 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5087      00
  30:../ExecuteTest.h **** 	}
 5088              		.loc 7 30 0
 5089 23f5 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5090              		.loc 7 29 0
 5091 23f8 488D8DF0 		leaq	-1552(%rbp), %rcx
 5091      F9FFFF
 5092 23ff 4889DA   		movq	%rbx, %rdx
 5093 2402 4889CE   		movq	%rcx, %rsi
 5094 2405 4889C7   		movq	%rax, %rdi
 5095 2408 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5095      00
 5096              	.LEHE148:
  27:../ExecuteTest.h **** 	{
 5097              		.loc 7 27 0
 5098 240d E8000000 		call	__cxa_end_catch
 5098      00
 5099              	.LBE122:
 5100              	.LBE124:
 5101              		.loc 7 42 0
 5102 2412 E9CE0000 		jmp	.L299
 5102      00
 5103              	.L284:
 5104              	.LBB125:
 5105              	.LBB123:
  32:../ExecuteTest.h **** 	{
 5106              		.loc 7 32 0
 5107 2417 4889C7   		movq	%rax, %rdi
 5108 241a E8000000 		call	__cxa_begin_catch
 5108      00
 5109 241f 488985E8 		movq	%rax, -1560(%rbp)
 5109      F9FFFF
 5110              	.LBB121:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 5111              		.loc 7 34 0
 5112 2426 488D8510 		leaq	-1520(%rbp), %rax
 5112      FAFFFF
 5113 242d 4889C7   		movq	%rax, %rdi
 5114              	.LEHB149:
 5115 2430 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 5115      00
 5116              	.LEHE149:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 5117              		.loc 7 35 0
 5118 2435 488B85E8 		movq	-1560(%rbp), %rax
 5118      F9FFFF
 5119 243c 488B00   		movq	(%rax), %rax
 5120 243f 4883C010 		addq	$16, %rax
 5121 2443 488B00   		movq	(%rax), %rax
 5122 2446 488B95E8 		movq	-1560(%rbp), %rdx
 5122      F9FFFF
 5123 244d 4889D7   		movq	%rdx, %rdi
 5124 2450 FFD0     		call	*%rax
 5125 2452 4889C3   		movq	%rax, %rbx
 5126 2455 488D8510 		leaq	-1520(%rbp), %rax
 5126      FAFFFF
 5127 245c BE000000 		movl	$.LC6, %esi
 5127      00
 5128 2461 4889C7   		movq	%rax, %rdi
 5129              	.LEHB150:
 5130 2464 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5130      00
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 5131              		.loc 7 35 0 is_stmt 0 discriminator 1
 5132 2469 4889DE   		movq	%rbx, %rsi
 5133 246c 4889C7   		movq	%rax, %rdi
 5134 246f E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5134      00
  36:../ExecuteTest.h **** 	}
 5135              		.loc 7 36 0 is_stmt 1
 5136 2474 488D8510 		leaq	-1520(%rbp), %rax
 5136      FAFFFF
 5137 247b 4889C7   		movq	%rax, %rdi
 5138 247e E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 5138      00
 5139 2483 4889C3   		movq	%rax, %rbx
 5140 2486 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5140      00
  36:../ExecuteTest.h **** 	}
 5141              		.loc 7 36 0 is_stmt 0 discriminator 2
 5142 248b 488B00   		movq	(%rax), %rax
 5143 248e 488B8DD0 		movq	-1584(%rbp), %rcx
 5143      F9FFFF
 5144 2495 4889DA   		movq	%rbx, %rdx
 5145 2498 4889CE   		movq	%rcx, %rsi
 5146 249b 4889C7   		movq	%rax, %rdi
 5147 249e E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5147      00
 5148              	.LEHE150:
  36:../ExecuteTest.h **** 	}
 5149              		.loc 7 36 0 discriminator 6
 5150 24a3 488D8510 		leaq	-1520(%rbp), %rax
 5150      FAFFFF
 5151 24aa 4889C7   		movq	%rax, %rdi
 5152              	.LEHB151:
 5153 24ad E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5153      00
 5154              	.LEHE151:
 5155              	.LBE121:
  32:../ExecuteTest.h **** 	{
 5156              		.loc 7 32 0 is_stmt 1
 5157 24b2 E8000000 		call	__cxa_end_catch
 5157      00
 5158              	.LBE123:
 5159              	.LBE125:
 5160              		.loc 7 42 0
 5161 24b7 EB2C     		jmp	.L299
 5162              	.L298:
 5163              	.LBB126:
  38:../ExecuteTest.h **** 	{
 5164              		.loc 7 38 0
 5165 24b9 4889C7   		movq	%rax, %rdi
 5166 24bc E8000000 		call	__cxa_begin_catch
 5166      00
 5167              	.LEHB152:
  40:../ExecuteTest.h **** 	}
 5168              		.loc 7 40 0
 5169 24c1 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5169      00
 5170 24c6 488B00   		movq	(%rax), %rax
 5171 24c9 488B8DD0 		movq	-1584(%rbp), %rcx
 5171      F9FFFF
 5172 24d0 BA000000 		movl	$.LC33, %edx
 5172      00
 5173 24d5 4889CE   		movq	%rcx, %rsi
 5174 24d8 4889C7   		movq	%rax, %rdi
 5175 24db E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5175      00
 5176              	.LEHE152:
 5177              	.LEHB153:
  38:../ExecuteTest.h **** 	{
 5178              		.loc 7 38 0
 5179 24e0 E8000000 		call	__cxa_end_catch
 5179      00
 5180              	.LEHE153:
 5181              	.L299:
 5182              	.LBE126:
 5183              		.loc 7 42 0
 5184 24e5 90       		nop
 5185 24e6 488B45E8 		movq	-24(%rbp), %rax
 5186 24ea 64483304 		xorq	%fs:40, %rax
 5186      25280000 
 5186      00
 5187 24f3 7405     		je	.L290
 5188 24f5 E8000000 		call	__stack_chk_fail
 5188      00
 5189              	.L290:
 5190 24fa 4881C420 		addq	$1568, %rsp
 5190      060000
 5191 2501 5B       		popq	%rbx
 5192 2502 415C     		popq	%r12
 5193 2504 5D       		popq	%rbp
 5194              		.cfi_def_cfa 7, 8
 5195 2505 C3       		ret
 5196              		.cfi_endproc
 5197              	.LFE1460:
 5198              		.section	.gcc_except_table
 5199              		.align 4
 5200              	.LLSDA1460:
 5201 03b4 FF       		.byte	0xff
 5202 03b5 03       		.byte	0x3
 5203 03b6 5D       		.uleb128 .LLSDATT1460-.LLSDATTD1460
 5204              	.LLSDATTD1460:
 5205 03b7 01       		.byte	0x1
 5206 03b8 47       		.uleb128 .LLSDACSE1460-.LLSDACSB1460
 5207              	.LLSDACSB1460:
 5208 03b9 2B       		.uleb128 .LEHB141-.LFB1460
 5209 03ba 05       		.uleb128 .LEHE141-.LEHB141
 5210 03bb 00       		.uleb128 0
 5211 03bc 00       		.uleb128 0
 5212 03bd 47       		.uleb128 .LEHB142-.LFB1460
 5213 03be 05       		.uleb128 .LEHE142-.LEHB142
 5214 03bf CC01     		.uleb128 .L291-.LFB1460
 5215 03c1 05       		.uleb128 0x5
 5216 03c2 8701     		.uleb128 .LEHB143-.LFB1460
 5217 03c4 14       		.uleb128 .LEHE143-.LEHB143
 5218 03c5 AF01     		.uleb128 .L292-.LFB1460
 5219 03c7 07       		.uleb128 0x7
 5220 03c8 A501     		.uleb128 .LEHB144-.LFB1460
 5221 03ca 05       		.uleb128 .LEHE144-.LEHB144
 5222 03cb CC01     		.uleb128 .L291-.LFB1460
 5223 03cd 05       		.uleb128 0x5
 5224 03ce EF01     		.uleb128 .LEHB145-.LFB1460
 5225 03d0 05       		.uleb128 .LEHE145-.LEHB145
 5226 03d1 00       		.uleb128 0
 5227 03d2 00       		.uleb128 0
 5228 03d3 9602     		.uleb128 .LEHB146-.LFB1460
 5229 03d5 05       		.uleb128 .LEHE146-.LEHB146
 5230 03d6 00       		.uleb128 0
 5231 03d7 00       		.uleb128 0
 5232 03d8 A902     		.uleb128 .LEHB147-.LFB1460
 5233 03da 05       		.uleb128 .LEHE147-.LEHB147
 5234 03db 00       		.uleb128 0
 5235 03dc 00       		.uleb128 0
 5236 03dd E702     		.uleb128 .LEHB148-.LFB1460
 5237 03df 5E       		.uleb128 .LEHE148-.LEHB148
 5238 03e0 E101     		.uleb128 .L293-.LFB1460
 5239 03e2 00       		.uleb128 0
 5240 03e3 E803     		.uleb128 .LEHB149-.LFB1460
 5241 03e5 05       		.uleb128 .LEHE149-.LEHB149
 5242 03e6 8802     		.uleb128 .L295-.LFB1460
 5243 03e8 00       		.uleb128 0
 5244 03e9 9C04     		.uleb128 .LEHB150-.LFB1460
 5245 03eb 3F       		.uleb128 .LEHE150-.LEHB150
 5246 03ec F401     		.uleb128 .L294-.LFB1460
 5247 03ee 00       		.uleb128 0
 5248 03ef E504     		.uleb128 .LEHB151-.LFB1460
 5249 03f1 05       		.uleb128 .LEHE151-.LEHB151
 5250 03f2 8802     		.uleb128 .L295-.LFB1460
 5251 03f4 00       		.uleb128 0
 5252 03f5 F904     		.uleb128 .LEHB152-.LFB1460
 5253 03f7 1F       		.uleb128 .LEHE152-.LEHB152
 5254 03f8 9B02     		.uleb128 .L296-.LFB1460
 5255 03fa 00       		.uleb128 0
 5256 03fb 9805     		.uleb128 .LEHB153-.LFB1460
 5257 03fd 05       		.uleb128 .LEHE153-.LEHB153
 5258 03fe 00       		.uleb128 0
 5259 03ff 00       		.uleb128 0
 5260              	.LLSDACSE1460:
 5261 0400 03       		.byte	0x3
 5262 0401 00       		.byte	0
 5263 0402 02       		.byte	0x2
 5264 0403 7D       		.byte	0x7d
 5265 0404 01       		.byte	0x1
 5266 0405 7D       		.byte	0x7d
 5267 0406 00       		.byte	0
 5268 0407 7D       		.byte	0x7d
 5269              		.align 4
 5270 0408 00000000 		.long	0
 5271              	
 5272 040c 00000000 		.long	_ZTISt9exception
 5273 0410 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 5274              	.LLSDATT1460:
 5275              		.text
 5277              		.section	.text._ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv,"axG",@progbits,_ZNKSt
 5278              		.align 2
 5279              		.weak	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv
 5281              	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv:
 5282              	.LFB1462:
 426:/usr/include/c++/4.9/bits/stl_vector.h **** 
 427:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 428:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  %Vector assignment operator.
 429:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 430:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 431:/usr/include/c++/4.9/bits/stl_vector.h ****        *  All the elements of @a __x are copied, but any extra memory in
 432:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @a __x (for fast expansion) will not be copied.  Unlike the
 433:/usr/include/c++/4.9/bits/stl_vector.h ****        *  copy constructor, the allocator object is not copied.
 434:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 435:/usr/include/c++/4.9/bits/stl_vector.h ****       vector&
 436:/usr/include/c++/4.9/bits/stl_vector.h ****       operator=(const vector& __x);
 437:/usr/include/c++/4.9/bits/stl_vector.h **** 
 438:/usr/include/c++/4.9/bits/stl_vector.h **** #if __cplusplus >= 201103L
 439:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 440:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  %Vector move assignment operator.
 441:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 442:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 443:/usr/include/c++/4.9/bits/stl_vector.h ****        *  The contents of @a __x are moved into this %vector (without copying,
 444:/usr/include/c++/4.9/bits/stl_vector.h ****        *  if the allocators permit it).
 445:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @a __x is a valid, but unspecified %vector.
 446:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 447:/usr/include/c++/4.9/bits/stl_vector.h ****       vector&
 448:/usr/include/c++/4.9/bits/stl_vector.h ****       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
 449:/usr/include/c++/4.9/bits/stl_vector.h ****       {
 450:/usr/include/c++/4.9/bits/stl_vector.h ****         constexpr bool __move_storage =
 451:/usr/include/c++/4.9/bits/stl_vector.h ****           _Alloc_traits::_S_propagate_on_move_assign()
 452:/usr/include/c++/4.9/bits/stl_vector.h ****           || _Alloc_traits::_S_always_equal();
 453:/usr/include/c++/4.9/bits/stl_vector.h ****         _M_move_assign(std::move(__x),
 454:/usr/include/c++/4.9/bits/stl_vector.h ****                        integral_constant<bool, __move_storage>());
 455:/usr/include/c++/4.9/bits/stl_vector.h **** 	return *this;
 456:/usr/include/c++/4.9/bits/stl_vector.h ****       }
 457:/usr/include/c++/4.9/bits/stl_vector.h **** 
 458:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 459:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  %Vector list assignment operator.
 460:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 461:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 462:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 463:/usr/include/c++/4.9/bits/stl_vector.h ****        *  initializer list @a __l.
 464:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 465:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 466:/usr/include/c++/4.9/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 467:/usr/include/c++/4.9/bits/stl_vector.h ****        *  of elements assigned.  Old data may be lost.
 468:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 469:/usr/include/c++/4.9/bits/stl_vector.h ****       vector&
 470:/usr/include/c++/4.9/bits/stl_vector.h ****       operator=(initializer_list<value_type> __l)
 471:/usr/include/c++/4.9/bits/stl_vector.h ****       {
 472:/usr/include/c++/4.9/bits/stl_vector.h **** 	this->assign(__l.begin(), __l.end());
 473:/usr/include/c++/4.9/bits/stl_vector.h **** 	return *this;
 474:/usr/include/c++/4.9/bits/stl_vector.h ****       }
 475:/usr/include/c++/4.9/bits/stl_vector.h **** #endif
 476:/usr/include/c++/4.9/bits/stl_vector.h **** 
 477:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 478:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Assigns a given value to a %vector.
 479:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __n  Number of elements to be assigned.
 480:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __val  Value to be assigned.
 481:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 482:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This function fills a %vector with @a __n copies of the given
 483:/usr/include/c++/4.9/bits/stl_vector.h ****        *  value.  Note that the assignment completely changes the
 484:/usr/include/c++/4.9/bits/stl_vector.h ****        *  %vector and that the resulting %vector's size is the same as
 485:/usr/include/c++/4.9/bits/stl_vector.h ****        *  the number of elements assigned.  Old data may be lost.
 486:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 487:/usr/include/c++/4.9/bits/stl_vector.h ****       void
 488:/usr/include/c++/4.9/bits/stl_vector.h ****       assign(size_type __n, const value_type& __val)
 489:/usr/include/c++/4.9/bits/stl_vector.h ****       { _M_fill_assign(__n, __val); }
 490:/usr/include/c++/4.9/bits/stl_vector.h **** 
 491:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 492:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Assigns a range to a %vector.
 493:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __first  An input iterator.
 494:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __last   An input iterator.
 495:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 496:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 497:/usr/include/c++/4.9/bits/stl_vector.h ****        *  range [__first,__last).
 498:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 499:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 500:/usr/include/c++/4.9/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 501:/usr/include/c++/4.9/bits/stl_vector.h ****        *  of elements assigned.  Old data may be lost.
 502:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 503:/usr/include/c++/4.9/bits/stl_vector.h **** #if __cplusplus >= 201103L
 504:/usr/include/c++/4.9/bits/stl_vector.h ****       template<typename _InputIterator,
 505:/usr/include/c++/4.9/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 506:/usr/include/c++/4.9/bits/stl_vector.h ****         void
 507:/usr/include/c++/4.9/bits/stl_vector.h ****         assign(_InputIterator __first, _InputIterator __last)
 508:/usr/include/c++/4.9/bits/stl_vector.h ****         { _M_assign_dispatch(__first, __last, __false_type()); }
 509:/usr/include/c++/4.9/bits/stl_vector.h **** #else
 510:/usr/include/c++/4.9/bits/stl_vector.h ****       template<typename _InputIterator>
 511:/usr/include/c++/4.9/bits/stl_vector.h ****         void
 512:/usr/include/c++/4.9/bits/stl_vector.h ****         assign(_InputIterator __first, _InputIterator __last)
 513:/usr/include/c++/4.9/bits/stl_vector.h ****         {
 514:/usr/include/c++/4.9/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 515:/usr/include/c++/4.9/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 516:/usr/include/c++/4.9/bits/stl_vector.h **** 	  _M_assign_dispatch(__first, __last, _Integral());
 517:/usr/include/c++/4.9/bits/stl_vector.h **** 	}
 518:/usr/include/c++/4.9/bits/stl_vector.h **** #endif
 519:/usr/include/c++/4.9/bits/stl_vector.h **** 
 520:/usr/include/c++/4.9/bits/stl_vector.h **** #if __cplusplus >= 201103L
 521:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 522:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Assigns an initializer list to a %vector.
 523:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 524:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 525:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 526:/usr/include/c++/4.9/bits/stl_vector.h ****        *  initializer list @a __l.
 527:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 528:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 529:/usr/include/c++/4.9/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 530:/usr/include/c++/4.9/bits/stl_vector.h ****        *  of elements assigned.  Old data may be lost.
 531:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 532:/usr/include/c++/4.9/bits/stl_vector.h ****       void
 533:/usr/include/c++/4.9/bits/stl_vector.h ****       assign(initializer_list<value_type> __l)
 534:/usr/include/c++/4.9/bits/stl_vector.h ****       { this->assign(__l.begin(), __l.end()); }
 535:/usr/include/c++/4.9/bits/stl_vector.h **** #endif
 536:/usr/include/c++/4.9/bits/stl_vector.h **** 
 537:/usr/include/c++/4.9/bits/stl_vector.h ****       /// Get a copy of the memory allocation object.
 538:/usr/include/c++/4.9/bits/stl_vector.h ****       using _Base::get_allocator;
 539:/usr/include/c++/4.9/bits/stl_vector.h **** 
 540:/usr/include/c++/4.9/bits/stl_vector.h ****       // iterators
 541:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 542:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Returns a read/write iterator that points to the first
 543:/usr/include/c++/4.9/bits/stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 544:/usr/include/c++/4.9/bits/stl_vector.h ****        *  element order.
 545:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 546:/usr/include/c++/4.9/bits/stl_vector.h ****       iterator
 547:/usr/include/c++/4.9/bits/stl_vector.h ****       begin() _GLIBCXX_NOEXCEPT
 548:/usr/include/c++/4.9/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 549:/usr/include/c++/4.9/bits/stl_vector.h **** 
 550:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 551:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 552:/usr/include/c++/4.9/bits/stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 553:/usr/include/c++/4.9/bits/stl_vector.h ****        *  element order.
 554:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 555:/usr/include/c++/4.9/bits/stl_vector.h ****       const_iterator
 556:/usr/include/c++/4.9/bits/stl_vector.h ****       begin() const _GLIBCXX_NOEXCEPT
 557:/usr/include/c++/4.9/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 558:/usr/include/c++/4.9/bits/stl_vector.h **** 
 559:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 560:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Returns a read/write iterator that points one past the last
 561:/usr/include/c++/4.9/bits/stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 562:/usr/include/c++/4.9/bits/stl_vector.h ****        *  element order.
 563:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 564:/usr/include/c++/4.9/bits/stl_vector.h ****       iterator
 565:/usr/include/c++/4.9/bits/stl_vector.h ****       end() _GLIBCXX_NOEXCEPT
 566:/usr/include/c++/4.9/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 567:/usr/include/c++/4.9/bits/stl_vector.h **** 
 568:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 569:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 570:/usr/include/c++/4.9/bits/stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 571:/usr/include/c++/4.9/bits/stl_vector.h ****        *  ordinary element order.
 572:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 573:/usr/include/c++/4.9/bits/stl_vector.h ****       const_iterator
 574:/usr/include/c++/4.9/bits/stl_vector.h ****       end() const _GLIBCXX_NOEXCEPT
 575:/usr/include/c++/4.9/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 576:/usr/include/c++/4.9/bits/stl_vector.h **** 
 577:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 578:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Returns a read/write reverse iterator that points to the
 579:/usr/include/c++/4.9/bits/stl_vector.h ****        *  last element in the %vector.  Iteration is done in reverse
 580:/usr/include/c++/4.9/bits/stl_vector.h ****        *  element order.
 581:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 582:/usr/include/c++/4.9/bits/stl_vector.h ****       reverse_iterator
 583:/usr/include/c++/4.9/bits/stl_vector.h ****       rbegin() _GLIBCXX_NOEXCEPT
 584:/usr/include/c++/4.9/bits/stl_vector.h ****       { return reverse_iterator(end()); }
 585:/usr/include/c++/4.9/bits/stl_vector.h **** 
 586:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 587:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 588:/usr/include/c++/4.9/bits/stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 589:/usr/include/c++/4.9/bits/stl_vector.h ****        *  reverse element order.
 590:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 591:/usr/include/c++/4.9/bits/stl_vector.h ****       const_reverse_iterator
 592:/usr/include/c++/4.9/bits/stl_vector.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 593:/usr/include/c++/4.9/bits/stl_vector.h ****       { return const_reverse_iterator(end()); }
 594:/usr/include/c++/4.9/bits/stl_vector.h **** 
 595:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 596:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Returns a read/write reverse iterator that points to one
 597:/usr/include/c++/4.9/bits/stl_vector.h ****        *  before the first element in the %vector.  Iteration is done
 598:/usr/include/c++/4.9/bits/stl_vector.h ****        *  in reverse element order.
 599:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 600:/usr/include/c++/4.9/bits/stl_vector.h ****       reverse_iterator
 601:/usr/include/c++/4.9/bits/stl_vector.h ****       rend() _GLIBCXX_NOEXCEPT
 602:/usr/include/c++/4.9/bits/stl_vector.h ****       { return reverse_iterator(begin()); }
 603:/usr/include/c++/4.9/bits/stl_vector.h **** 
 604:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 605:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 606:/usr/include/c++/4.9/bits/stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 607:/usr/include/c++/4.9/bits/stl_vector.h ****        *  is done in reverse element order.
 608:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 609:/usr/include/c++/4.9/bits/stl_vector.h ****       const_reverse_iterator
 610:/usr/include/c++/4.9/bits/stl_vector.h ****       rend() const _GLIBCXX_NOEXCEPT
 611:/usr/include/c++/4.9/bits/stl_vector.h ****       { return const_reverse_iterator(begin()); }
 612:/usr/include/c++/4.9/bits/stl_vector.h **** 
 613:/usr/include/c++/4.9/bits/stl_vector.h **** #if __cplusplus >= 201103L
 614:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 615:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 616:/usr/include/c++/4.9/bits/stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 617:/usr/include/c++/4.9/bits/stl_vector.h ****        *  element order.
 618:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 619:/usr/include/c++/4.9/bits/stl_vector.h ****       const_iterator
 620:/usr/include/c++/4.9/bits/stl_vector.h ****       cbegin() const noexcept
 621:/usr/include/c++/4.9/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 622:/usr/include/c++/4.9/bits/stl_vector.h **** 
 623:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 624:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 625:/usr/include/c++/4.9/bits/stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 626:/usr/include/c++/4.9/bits/stl_vector.h ****        *  ordinary element order.
 627:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 628:/usr/include/c++/4.9/bits/stl_vector.h ****       const_iterator
 629:/usr/include/c++/4.9/bits/stl_vector.h ****       cend() const noexcept
 630:/usr/include/c++/4.9/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 631:/usr/include/c++/4.9/bits/stl_vector.h **** 
 632:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 633:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 634:/usr/include/c++/4.9/bits/stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 635:/usr/include/c++/4.9/bits/stl_vector.h ****        *  reverse element order.
 636:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 637:/usr/include/c++/4.9/bits/stl_vector.h ****       const_reverse_iterator
 638:/usr/include/c++/4.9/bits/stl_vector.h ****       crbegin() const noexcept
 639:/usr/include/c++/4.9/bits/stl_vector.h ****       { return const_reverse_iterator(end()); }
 640:/usr/include/c++/4.9/bits/stl_vector.h **** 
 641:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 642:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 643:/usr/include/c++/4.9/bits/stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 644:/usr/include/c++/4.9/bits/stl_vector.h ****        *  is done in reverse element order.
 645:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 646:/usr/include/c++/4.9/bits/stl_vector.h ****       const_reverse_iterator
 647:/usr/include/c++/4.9/bits/stl_vector.h ****       crend() const noexcept
 648:/usr/include/c++/4.9/bits/stl_vector.h ****       { return const_reverse_iterator(begin()); }
 649:/usr/include/c++/4.9/bits/stl_vector.h **** #endif
 650:/usr/include/c++/4.9/bits/stl_vector.h **** 
 651:/usr/include/c++/4.9/bits/stl_vector.h ****       // [23.2.4.2] capacity
 652:/usr/include/c++/4.9/bits/stl_vector.h ****       /**  Returns the number of elements in the %vector.  */
 653:/usr/include/c++/4.9/bits/stl_vector.h ****       size_type
 654:/usr/include/c++/4.9/bits/stl_vector.h ****       size() const _GLIBCXX_NOEXCEPT
 5283              		.loc 6 654 0
 5284              		.cfi_startproc
 5285 0000 55       		pushq	%rbp
 5286              		.cfi_def_cfa_offset 16
 5287              		.cfi_offset 6, -16
 5288 0001 4889E5   		movq	%rsp, %rbp
 5289              		.cfi_def_cfa_register 6
 5290 0004 48897DF8 		movq	%rdi, -8(%rbp)
 655:/usr/include/c++/4.9/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 5291              		.loc 6 655 0
 5292 0008 488B45F8 		movq	-8(%rbp), %rax
 5293 000c 488B4008 		movq	8(%rax), %rax
 5294 0010 4889C2   		movq	%rax, %rdx
 5295 0013 488B45F8 		movq	-8(%rbp), %rax
 5296 0017 488B00   		movq	(%rax), %rax
 5297 001a 4829C2   		subq	%rax, %rdx
 5298 001d 4889D0   		movq	%rdx, %rax
 5299 0020 48C1F803 		sarq	$3, %rax
 5300 0024 4889C2   		movq	%rax, %rdx
 5301 0027 48B8B76D 		movabsq	$7905747460161236407, %rax
 5301      DBB66DDB 
 5301      B66D
 5302 0031 480FAFC2 		imulq	%rdx, %rax
 5303 0035 5D       		popq	%rbp
 5304              		.cfi_def_cfa 7, 8
 5305 0036 C3       		ret
 5306              		.cfi_endproc
 5307              	.LFE1462:
 5309              		.section	.rodata
 5310              	.LC34:
 5311 055b 45787065 		.string	"Expected "
 5311      63746564 
 5311      2000
 5312              	.LC35:
 5313 0565 20627574 		.string	" but was "
 5313      20776173 
 5313      2000
 5314              		.section	.text._ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE,"axG",
 5315              		.weak	_ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 5317              	_ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE:
 5318              	.LFB1463:
 5319              		.file 8 "../Checks.h"
   1:../Checks.h   **** #ifndef UNITTEST_CHECKS_H
   2:../Checks.h   **** #define UNITTEST_CHECKS_H
   3:../Checks.h   **** 
   4:../Checks.h   **** #include "Config.h"
   5:../Checks.h   **** #include "TestResults.h"
   6:../Checks.h   **** #include "MemoryOutStream.h"
   7:../Checks.h   **** 
   8:../Checks.h   **** namespace UnitTest {
   9:../Checks.h   **** 
  10:../Checks.h   **** 
  11:../Checks.h   **** template< typename Value >
  12:../Checks.h   **** bool Check(Value const value)
  13:../Checks.h   **** {
  14:../Checks.h   ****     return !!value; // doing double negative to avoid silly VS warnings
  15:../Checks.h   **** }
  16:../Checks.h   **** 
  17:../Checks.h   **** 
  18:../Checks.h   **** template< typename Expected, typename Actual >
  19:../Checks.h   **** void CheckEqual(TestResults& results, Expected const& expected, Actual const& actual, TestDetails c
 5320              		.loc 8 19 0
 5321              		.cfi_startproc
 5322              		.cfi_personality 0x3,__gxx_personality_v0
 5323              		.cfi_lsda 0x3,.LLSDA1463
 5324 0000 55       		pushq	%rbp
 5325              		.cfi_def_cfa_offset 16
 5326              		.cfi_offset 6, -16
 5327 0001 4889E5   		movq	%rsp, %rbp
 5328              		.cfi_def_cfa_register 6
 5329 0004 4154     		pushq	%r12
 5330 0006 53       		pushq	%rbx
 5331 0007 4881EC90 		subq	$400, %rsp
 5331      010000
 5332              		.cfi_offset 12, -24
 5333              		.cfi_offset 3, -32
 5334 000e 4889BD78 		movq	%rdi, -392(%rbp)
 5334      FEFFFF
 5335 0015 4889B570 		movq	%rsi, -400(%rbp)
 5335      FEFFFF
 5336 001c 48899568 		movq	%rdx, -408(%rbp)
 5336      FEFFFF
 5337 0023 48898D60 		movq	%rcx, -416(%rbp)
 5337      FEFFFF
 5338              		.loc 8 19 0
 5339 002a 64488B04 		movq	%fs:40, %rax
 5339      25280000 
 5339      00
 5340 0033 488945E8 		movq	%rax, -24(%rbp)
 5341 0037 31C0     		xorl	%eax, %eax
 5342              	.LBB127:
 5343              	.LBB128:
  20:../Checks.h   **** {
  21:../Checks.h   ****     if (!(expected == actual))
 5344              		.loc 8 21 0
 5345 0039 488B8570 		movq	-400(%rbp), %rax
 5345      FEFFFF
 5346 0040 8B10     		movl	(%rax), %edx
 5347 0042 488B8568 		movq	-408(%rbp), %rax
 5347      FEFFFF
 5348 0049 8B00     		movl	(%rax), %eax
 5349 004b 39C2     		cmpl	%eax, %edx
 5350 004d 0F849200 		je	.L303
 5350      0000
 5351              	.LBB129:
  22:../Checks.h   ****     {
  23:../Checks.h   ****         UnitTest::MemoryOutStream stream;
 5352              		.loc 8 23 0
 5353 0053 488D8580 		leaq	-384(%rbp), %rax
 5353      FEFFFF
 5354 005a 4889C7   		movq	%rax, %rdi
 5355              	.LEHB154:
 5356 005d E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 5356      00
 5357              	.LEHE154:
  24:../Checks.h   ****         stream << "Expected " << expected << " but was " << actual;
 5358              		.loc 8 24 0
 5359 0062 488B8568 		movq	-408(%rbp), %rax
 5359      FEFFFF
 5360 0069 8B18     		movl	(%rax), %ebx
 5361 006b 488B8570 		movq	-400(%rbp), %rax
 5361      FEFFFF
 5362 0072 448B20   		movl	(%rax), %r12d
 5363 0075 488D8580 		leaq	-384(%rbp), %rax
 5363      FEFFFF
 5364 007c BE000000 		movl	$.LC34, %esi
 5364      00
 5365 0081 4889C7   		movq	%rax, %rdi
 5366              	.LEHB155:
 5367 0084 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5367      00
 5368 0089 4489E6   		movl	%r12d, %esi
 5369 008c 4889C7   		movq	%rax, %rdi
 5370 008f E8000000 		call	_ZNSolsEi
 5370      00
 5371              		.loc 8 24 0 is_stmt 0 discriminator 1
 5372 0094 BE000000 		movl	$.LC35, %esi
 5372      00
 5373 0099 4889C7   		movq	%rax, %rdi
 5374 009c E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5374      00
 5375              		.loc 8 24 0 discriminator 2
 5376 00a1 89DE     		movl	%ebx, %esi
 5377 00a3 4889C7   		movq	%rax, %rdi
 5378 00a6 E8000000 		call	_ZNSolsEi
 5378      00
  25:../Checks.h   **** 
  26:../Checks.h   ****         results.OnTestFailure(details, stream.GetText());
 5379              		.loc 8 26 0 is_stmt 1
 5380 00ab 488D8580 		leaq	-384(%rbp), %rax
 5380      FEFFFF
 5381 00b2 4889C7   		movq	%rax, %rdi
 5382 00b5 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 5382      00
 5383 00ba 4889C2   		movq	%rax, %rdx
 5384 00bd 488B8D60 		movq	-416(%rbp), %rcx
 5384      FEFFFF
 5385 00c4 488B8578 		movq	-392(%rbp), %rax
 5385      FEFFFF
 5386 00cb 4889CE   		movq	%rcx, %rsi
 5387 00ce 4889C7   		movq	%rax, %rdi
 5388 00d1 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5388      00
 5389              	.LEHE155:
 5390              		.loc 8 26 0 is_stmt 0 discriminator 4
 5391 00d6 488D8580 		leaq	-384(%rbp), %rax
 5391      FEFFFF
 5392 00dd 4889C7   		movq	%rax, %rdi
 5393              	.LEHB156:
 5394 00e0 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5394      00
 5395              	.LEHE156:
 5396              	.L303:
 5397              	.LBE129:
 5398              	.LBE128:
 5399              	.LBE127:
  27:../Checks.h   ****     }
  28:../Checks.h   **** }
 5400              		.loc 8 28 0 is_stmt 1
 5401 00e5 488B45E8 		movq	-24(%rbp), %rax
 5402 00e9 64483304 		xorq	%fs:40, %rax
 5402      25280000 
 5402      00
 5403 00f2 7424     		je	.L305
 5404 00f4 EB1D     		jmp	.L307
 5405              	.L306:
 5406 00f6 4889C3   		movq	%rax, %rbx
 5407              	.LBB132:
 5408              	.LBB131:
 5409              	.LBB130:
  26:../Checks.h   ****     }
 5410              		.loc 8 26 0
 5411 00f9 488D8580 		leaq	-384(%rbp), %rax
 5411      FEFFFF
 5412 0100 4889C7   		movq	%rax, %rdi
 5413 0103 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5413      00
 5414 0108 4889D8   		movq	%rbx, %rax
 5415 010b 4889C7   		movq	%rax, %rdi
 5416              	.LEHB157:
 5417 010e E8000000 		call	_Unwind_Resume
 5417      00
 5418              	.LEHE157:
 5419              	.L307:
 5420              	.LBE130:
 5421              	.LBE131:
 5422              	.LBE132:
 5423              		.loc 8 28 0
 5424 0113 E8000000 		call	__stack_chk_fail
 5424      00
 5425              	.L305:
 5426 0118 4881C490 		addq	$400, %rsp
 5426      010000
 5427 011f 5B       		popq	%rbx
 5428 0120 415C     		popq	%r12
 5429 0122 5D       		popq	%rbp
 5430              		.cfi_def_cfa 7, 8
 5431 0123 C3       		ret
 5432              		.cfi_endproc
 5433              	.LFE1463:
 5434              		.section	.gcc_except_table
 5435              	.LLSDA1463:
 5436 0414 FF       		.byte	0xff
 5437 0415 FF       		.byte	0xff
 5438 0416 01       		.byte	0x1
 5439 0417 14       		.uleb128 .LLSDACSE1463-.LLSDACSB1463
 5440              	.LLSDACSB1463:
 5441 0418 5D       		.uleb128 .LEHB154-.LFB1463
 5442 0419 05       		.uleb128 .LEHE154-.LEHB154
 5443 041a 00       		.uleb128 0
 5444 041b 00       		.uleb128 0
 5445 041c 8401     		.uleb128 .LEHB155-.LFB1463
 5446 041e 52       		.uleb128 .LEHE155-.LEHB155
 5447 041f F601     		.uleb128 .L306-.LFB1463
 5448 0421 00       		.uleb128 0
 5449 0422 E001     		.uleb128 .LEHB156-.LFB1463
 5450 0424 05       		.uleb128 .LEHE156-.LEHB156
 5451 0425 00       		.uleb128 0
 5452 0426 00       		.uleb128 0
 5453 0427 8E02     		.uleb128 .LEHB157-.LFB1463
 5454 0429 05       		.uleb128 .LEHE157-.LEHB157
 5455 042a 00       		.uleb128 0
 5456 042b 00       		.uleb128 0
 5457              	.LLSDACSE1463:
 5458              		.section	.text._ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE,"axG",
 5460              		.text
 5462              	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTest
 5463              	.LFB1464:
  16:../ExecuteTest.h **** {
 5464              		.loc 7 16 0
 5465              		.cfi_startproc
 5466              		.cfi_personality 0x3,__gxx_personality_v0
 5467              		.cfi_lsda 0x3,.LLSDA1464
 5468 2506 55       		pushq	%rbp
 5469              		.cfi_def_cfa_offset 16
 5470              		.cfi_offset 6, -16
 5471 2507 4889E5   		movq	%rsp, %rbp
 5472              		.cfi_def_cfa_register 6
 5473 250a 4154     		pushq	%r12
 5474 250c 53       		pushq	%rbx
 5475 250d 4881EC20 		subq	$1568, %rsp
 5475      060000
 5476              		.cfi_offset 12, -24
 5477              		.cfi_offset 3, -32
 5478 2514 4889BDD8 		movq	%rdi, -1576(%rbp)
 5478      F9FFFF
 5479 251b 4889B5D0 		movq	%rsi, -1584(%rbp)
 5479      F9FFFF
  16:../ExecuteTest.h **** {
 5480              		.loc 7 16 0
 5481 2522 64488B04 		movq	%fs:40, %rax
 5481      25280000 
 5481      00
 5482 252b 488945E8 		movq	%rax, -24(%rbp)
 5483 252f 31C0     		xorl	%eax, %eax
 5484              	.LEHB158:
 5485              	.LBB133:
  18:../ExecuteTest.h **** 
 5486              		.loc 7 18 0
 5487 2531 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 5487      00
 5488              	.LEHE158:
 5489 2536 4889C2   		movq	%rax, %rdx
 5490 2539 488B85D0 		movq	-1584(%rbp), %rax
 5490      F9FFFF
 5491 2540 488902   		movq	%rax, (%rdx)
 5492              	.LBB134:
  23:../ExecuteTest.h **** #endif
 5493              		.loc 7 23 0
 5494 2543 488D8580 		leaq	-1152(%rbp), %rax
 5494      FBFFFF
 5495 254a 4889C7   		movq	%rax, %rdi
 5496              	.LEHB159:
 5497 254d E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev
 5497      00
 5498              	.LEHE159:
  23:../ExecuteTest.h **** #endif
 5499              		.loc 7 23 0 is_stmt 0 discriminator 1
 5500 2552 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 5500      000000
 5501 2559 BE010000 		movl	$1, %esi
 5501      00
 5502 255e 4889C7   		movq	%rax, %rdi
 5503 2561 E8000000 		call	__sigsetjmp
 5503      00
 5504 2566 85C0     		testl	%eax, %eax
 5505 2568 0F95C0   		setne	%al
 5506 256b 84C0     		testb	%al, %al
 5507 256d 7423     		je	.L328
  23:../ExecuteTest.h **** #endif
 5508              		.loc 7 23 0 discriminator 3
 5509 256f BF080000 		movl	$8, %edi
 5509      00
 5510 2574 E8000000 		call	__cxa_allocate_exception
 5510      00
 5511 2579 48C70000 		movq	$.LC32, (%rax)
 5511      000000
 5512 2580 BA000000 		movl	$0, %edx
 5512      00
 5513 2585 BE000000 		movl	$_ZTIPKc, %esi
 5513      00
 5514 258a 4889C7   		movq	%rax, %rdi
 5515              	.LEHB160:
 5516 258d E8000000 		call	__cxa_throw
 5516      00
 5517              	.L328:
  25:../ExecuteTest.h **** 	}
 5518              		.loc 7 25 0 is_stmt 1
 5519 2592 488B85D8 		movq	-1576(%rbp), %rax
 5519      F9FFFF
 5520 2599 4889C7   		movq	%rax, %rdi
 5521 259c E80DE5FF 		call	_ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuit
 5521      FF
 5522              	.LEHE160:
  25:../ExecuteTest.h **** 	}
 5523              		.loc 7 25 0 is_stmt 0 discriminator 2
 5524 25a1 488D8580 		leaq	-1152(%rbp), %rax
 5524      FBFFFF
 5525 25a8 4889C7   		movq	%rax, %rdi
 5526              	.LEHB161:
 5527 25ab E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 5527      00
 5528              	.LEHE161:
 5529              	.LBE134:
 5530              	.LBE133:
 5531              		.loc 7 42 0 is_stmt 1
 5532 25b0 E9EE0100 		jmp	.L330
 5532      00
 5533              	.L323:
 5534 25b5 4989C4   		movq	%rax, %r12
 5535 25b8 4889D3   		movq	%rdx, %rbx
 5536              	.LBB142:
 5537              	.LBB135:
  25:../ExecuteTest.h **** 	}
 5538              		.loc 7 25 0
 5539 25bb 488D8580 		leaq	-1152(%rbp), %rax
 5539      FBFFFF
 5540 25c2 4889C7   		movq	%rax, %rdi
 5541 25c5 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 5541      00
 5542 25ca 4C89E0   		movq	%r12, %rax
 5543 25cd 4889DA   		movq	%rbx, %rdx
 5544 25d0 EB00     		jmp	.L312
 5545              	.L322:
 5546              	.L312:
 5547 25d2 4883FA01 		cmpq	$1, %rdx
 5548 25d6 745C     		je	.L314
 5549 25d8 4883FA02 		cmpq	$2, %rdx
 5550 25dc 0F84F300 		je	.L315
 5550      0000
 5551 25e2 E9900100 		jmp	.L329
 5551      00
 5552              	.L324:
 5553 25e7 4889C3   		movq	%rax, %rbx
 5554              	.LBE135:
 5555              	.LBB136:
  27:../ExecuteTest.h **** 	{
 5556              		.loc 7 27 0
 5557 25ea E8000000 		call	__cxa_end_catch
 5557      00
 5558 25ef 4889D8   		movq	%rbx, %rax
 5559 25f2 4889C7   		movq	%rax, %rdi
 5560              	.LEHB162:
 5561 25f5 E8000000 		call	_Unwind_Resume
 5561      00
 5562              	.LEHE162:
 5563              	.L325:
 5564 25fa 4889C3   		movq	%rax, %rbx
 5565              	.LBE136:
 5566              	.LBB137:
 5567              	.LBB138:
  36:../ExecuteTest.h **** 	}
 5568              		.loc 7 36 0
 5569 25fd 488D8510 		leaq	-1520(%rbp), %rax
 5569      FAFFFF
 5570 2604 4889C7   		movq	%rax, %rdi
 5571 2607 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5571      00
 5572 260c EB03     		jmp	.L318
 5573              	.L326:
 5574 260e 4889C3   		movq	%rax, %rbx
 5575              	.L318:
 5576              	.LBE138:
  32:../ExecuteTest.h **** 	{
 5577              		.loc 7 32 0
 5578 2611 E8000000 		call	__cxa_end_catch
 5578      00
 5579 2616 4889D8   		movq	%rbx, %rax
 5580 2619 4889C7   		movq	%rax, %rdi
 5581              	.LEHB163:
 5582 261c E8000000 		call	_Unwind_Resume
 5582      00
 5583              	.LEHE163:
 5584              	.L327:
 5585 2621 4889C3   		movq	%rax, %rbx
 5586              	.LBE137:
  38:../ExecuteTest.h **** 	{
 5587              		.loc 7 38 0
 5588 2624 E8000000 		call	__cxa_end_catch
 5588      00
 5589 2629 4889D8   		movq	%rbx, %rax
 5590 262c 4889C7   		movq	%rax, %rdi
 5591              	.LEHB164:
 5592 262f E8000000 		call	_Unwind_Resume
 5592      00
 5593              	.LEHE164:
 5594              	.L314:
 5595              	.LBB140:
  27:../ExecuteTest.h **** 	{
 5596              		.loc 7 27 0
 5597 2634 4889C7   		movq	%rax, %rdi
 5598 2637 E8000000 		call	__cxa_begin_catch
 5598      00
 5599 263c 488985E0 		movq	%rax, -1568(%rbp)
 5599      F9FFFF
  30:../ExecuteTest.h **** 	}
 5600              		.loc 7 30 0
 5601 2643 488B85E0 		movq	-1568(%rbp), %rax
 5601      F9FFFF
 5602 264a 488B00   		movq	(%rax), %rax
 5603 264d 4883C010 		addq	$16, %rax
 5604 2651 488B00   		movq	(%rax), %rax
 5605 2654 488B95E0 		movq	-1568(%rbp), %rdx
 5605      F9FFFF
 5606 265b 4889D7   		movq	%rdx, %rdi
 5607 265e FFD0     		call	*%rax
 5608 2660 4889C3   		movq	%rax, %rbx
 5609 2663 488B85E0 		movq	-1568(%rbp), %rax
 5609      F9FFFF
 5610 266a 4889C7   		movq	%rax, %rdi
 5611              	.LEHB165:
 5612 266d E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 5612      00
  30:../ExecuteTest.h **** 	}
 5613              		.loc 7 30 0 is_stmt 0 discriminator 1
 5614 2672 4189C4   		movl	%eax, %r12d
 5615 2675 488B85E0 		movq	-1568(%rbp), %rax
 5615      F9FFFF
 5616 267c 4889C7   		movq	%rax, %rdi
 5617 267f E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 5617      00
  30:../ExecuteTest.h **** 	}
 5618              		.loc 7 30 0 discriminator 2
 5619 2684 4889C1   		movq	%rax, %rcx
 5620 2687 488B85D0 		movq	-1584(%rbp), %rax
 5620      F9FFFF
 5621 268e 488B10   		movq	(%rax), %rdx
 5622 2691 488B85D0 		movq	-1584(%rbp), %rax
 5622      F9FFFF
 5623 2698 488B7008 		movq	8(%rax), %rsi
 5624 269c 488D85F0 		leaq	-1552(%rbp), %rax
 5624      F9FFFF
 5625 26a3 4589E0   		movl	%r12d, %r8d
 5626 26a6 4889C7   		movq	%rax, %rdi
 5627 26a9 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 5627      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5628              		.loc 7 29 0 is_stmt 1
 5629 26ae E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5629      00
  30:../ExecuteTest.h **** 	}
 5630              		.loc 7 30 0
 5631 26b3 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5632              		.loc 7 29 0
 5633 26b6 488D8DF0 		leaq	-1552(%rbp), %rcx
 5633      F9FFFF
 5634 26bd 4889DA   		movq	%rbx, %rdx
 5635 26c0 4889CE   		movq	%rcx, %rsi
 5636 26c3 4889C7   		movq	%rax, %rdi
 5637 26c6 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5637      00
 5638              	.LEHE165:
  27:../ExecuteTest.h **** 	{
 5639              		.loc 7 27 0
 5640 26cb E8000000 		call	__cxa_end_catch
 5640      00
 5641              	.LBE140:
 5642              	.LBE142:
 5643              		.loc 7 42 0
 5644 26d0 E9CE0000 		jmp	.L330
 5644      00
 5645              	.L315:
 5646              	.LBB143:
 5647              	.LBB141:
  32:../ExecuteTest.h **** 	{
 5648              		.loc 7 32 0
 5649 26d5 4889C7   		movq	%rax, %rdi
 5650 26d8 E8000000 		call	__cxa_begin_catch
 5650      00
 5651 26dd 488985E8 		movq	%rax, -1560(%rbp)
 5651      F9FFFF
 5652              	.LBB139:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 5653              		.loc 7 34 0
 5654 26e4 488D8510 		leaq	-1520(%rbp), %rax
 5654      FAFFFF
 5655 26eb 4889C7   		movq	%rax, %rdi
 5656              	.LEHB166:
 5657 26ee E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 5657      00
 5658              	.LEHE166:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 5659              		.loc 7 35 0
 5660 26f3 488B85E8 		movq	-1560(%rbp), %rax
 5660      F9FFFF
 5661 26fa 488B00   		movq	(%rax), %rax
 5662 26fd 4883C010 		addq	$16, %rax
 5663 2701 488B00   		movq	(%rax), %rax
 5664 2704 488B95E8 		movq	-1560(%rbp), %rdx
 5664      F9FFFF
 5665 270b 4889D7   		movq	%rdx, %rdi
 5666 270e FFD0     		call	*%rax
 5667 2710 4889C3   		movq	%rax, %rbx
 5668 2713 488D8510 		leaq	-1520(%rbp), %rax
 5668      FAFFFF
 5669 271a BE000000 		movl	$.LC6, %esi
 5669      00
 5670 271f 4889C7   		movq	%rax, %rdi
 5671              	.LEHB167:
 5672 2722 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5672      00
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 5673              		.loc 7 35 0 is_stmt 0 discriminator 1
 5674 2727 4889DE   		movq	%rbx, %rsi
 5675 272a 4889C7   		movq	%rax, %rdi
 5676 272d E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5676      00
  36:../ExecuteTest.h **** 	}
 5677              		.loc 7 36 0 is_stmt 1
 5678 2732 488D8510 		leaq	-1520(%rbp), %rax
 5678      FAFFFF
 5679 2739 4889C7   		movq	%rax, %rdi
 5680 273c E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 5680      00
 5681 2741 4889C3   		movq	%rax, %rbx
 5682 2744 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5682      00
  36:../ExecuteTest.h **** 	}
 5683              		.loc 7 36 0 is_stmt 0 discriminator 2
 5684 2749 488B00   		movq	(%rax), %rax
 5685 274c 488B8DD0 		movq	-1584(%rbp), %rcx
 5685      F9FFFF
 5686 2753 4889DA   		movq	%rbx, %rdx
 5687 2756 4889CE   		movq	%rcx, %rsi
 5688 2759 4889C7   		movq	%rax, %rdi
 5689 275c E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5689      00
 5690              	.LEHE167:
  36:../ExecuteTest.h **** 	}
 5691              		.loc 7 36 0 discriminator 6
 5692 2761 488D8510 		leaq	-1520(%rbp), %rax
 5692      FAFFFF
 5693 2768 4889C7   		movq	%rax, %rdi
 5694              	.LEHB168:
 5695 276b E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5695      00
 5696              	.LEHE168:
 5697              	.LBE139:
  32:../ExecuteTest.h **** 	{
 5698              		.loc 7 32 0 is_stmt 1
 5699 2770 E8000000 		call	__cxa_end_catch
 5699      00
 5700              	.LBE141:
 5701              	.LBE143:
 5702              		.loc 7 42 0
 5703 2775 EB2C     		jmp	.L330
 5704              	.L329:
 5705              	.LBB144:
  38:../ExecuteTest.h **** 	{
 5706              		.loc 7 38 0
 5707 2777 4889C7   		movq	%rax, %rdi
 5708 277a E8000000 		call	__cxa_begin_catch
 5708      00
 5709              	.LEHB169:
  40:../ExecuteTest.h **** 	}
 5710              		.loc 7 40 0
 5711 277f E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5711      00
 5712 2784 488B00   		movq	(%rax), %rax
 5713 2787 488B8DD0 		movq	-1584(%rbp), %rcx
 5713      F9FFFF
 5714 278e BA000000 		movl	$.LC33, %edx
 5714      00
 5715 2793 4889CE   		movq	%rcx, %rsi
 5716 2796 4889C7   		movq	%rax, %rdi
 5717 2799 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5717      00
 5718              	.LEHE169:
 5719              	.LEHB170:
  38:../ExecuteTest.h **** 	{
 5720              		.loc 7 38 0
 5721 279e E8000000 		call	__cxa_end_catch
 5721      00
 5722              	.LEHE170:
 5723              	.L330:
 5724              	.LBE144:
 5725              		.loc 7 42 0
 5726 27a3 90       		nop
 5727 27a4 488B45E8 		movq	-24(%rbp), %rax
 5728 27a8 64483304 		xorq	%fs:40, %rax
 5728      25280000 
 5728      00
 5729 27b1 7405     		je	.L321
 5730 27b3 E8000000 		call	__stack_chk_fail
 5730      00
 5731              	.L321:
 5732 27b8 4881C420 		addq	$1568, %rsp
 5732      060000
 5733 27bf 5B       		popq	%rbx
 5734 27c0 415C     		popq	%r12
 5735 27c2 5D       		popq	%rbp
 5736              		.cfi_def_cfa 7, 8
 5737 27c3 C3       		ret
 5738              		.cfi_endproc
 5739              	.LFE1464:
 5740              		.section	.gcc_except_table
 5741              		.align 4
 5742              	.LLSDA1464:
 5743 042c FF       		.byte	0xff
 5744 042d 03       		.byte	0x3
 5745 042e 5D       		.uleb128 .LLSDATT1464-.LLSDATTD1464
 5746              	.LLSDATTD1464:
 5747 042f 01       		.byte	0x1
 5748 0430 47       		.uleb128 .LLSDACSE1464-.LLSDACSB1464
 5749              	.LLSDACSB1464:
 5750 0431 2B       		.uleb128 .LEHB158-.LFB1464
 5751 0432 05       		.uleb128 .LEHE158-.LEHB158
 5752 0433 00       		.uleb128 0
 5753 0434 00       		.uleb128 0
 5754 0435 47       		.uleb128 .LEHB159-.LFB1464
 5755 0436 05       		.uleb128 .LEHE159-.LEHB159
 5756 0437 CC01     		.uleb128 .L322-.LFB1464
 5757 0439 05       		.uleb128 0x5
 5758 043a 8701     		.uleb128 .LEHB160-.LFB1464
 5759 043c 14       		.uleb128 .LEHE160-.LEHB160
 5760 043d AF01     		.uleb128 .L323-.LFB1464
 5761 043f 07       		.uleb128 0x7
 5762 0440 A501     		.uleb128 .LEHB161-.LFB1464
 5763 0442 05       		.uleb128 .LEHE161-.LEHB161
 5764 0443 CC01     		.uleb128 .L322-.LFB1464
 5765 0445 05       		.uleb128 0x5
 5766 0446 EF01     		.uleb128 .LEHB162-.LFB1464
 5767 0448 05       		.uleb128 .LEHE162-.LEHB162
 5768 0449 00       		.uleb128 0
 5769 044a 00       		.uleb128 0
 5770 044b 9602     		.uleb128 .LEHB163-.LFB1464
 5771 044d 05       		.uleb128 .LEHE163-.LEHB163
 5772 044e 00       		.uleb128 0
 5773 044f 00       		.uleb128 0
 5774 0450 A902     		.uleb128 .LEHB164-.LFB1464
 5775 0452 05       		.uleb128 .LEHE164-.LEHB164
 5776 0453 00       		.uleb128 0
 5777 0454 00       		.uleb128 0
 5778 0455 E702     		.uleb128 .LEHB165-.LFB1464
 5779 0457 5E       		.uleb128 .LEHE165-.LEHB165
 5780 0458 E101     		.uleb128 .L324-.LFB1464
 5781 045a 00       		.uleb128 0
 5782 045b E803     		.uleb128 .LEHB166-.LFB1464
 5783 045d 05       		.uleb128 .LEHE166-.LEHB166
 5784 045e 8802     		.uleb128 .L326-.LFB1464
 5785 0460 00       		.uleb128 0
 5786 0461 9C04     		.uleb128 .LEHB167-.LFB1464
 5787 0463 3F       		.uleb128 .LEHE167-.LEHB167
 5788 0464 F401     		.uleb128 .L325-.LFB1464
 5789 0466 00       		.uleb128 0
 5790 0467 E504     		.uleb128 .LEHB168-.LFB1464
 5791 0469 05       		.uleb128 .LEHE168-.LEHB168
 5792 046a 8802     		.uleb128 .L326-.LFB1464
 5793 046c 00       		.uleb128 0
 5794 046d F904     		.uleb128 .LEHB169-.LFB1464
 5795 046f 1F       		.uleb128 .LEHE169-.LEHB169
 5796 0470 9B02     		.uleb128 .L327-.LFB1464
 5797 0472 00       		.uleb128 0
 5798 0473 9805     		.uleb128 .LEHB170-.LFB1464
 5799 0475 05       		.uleb128 .LEHE170-.LEHB170
 5800 0476 00       		.uleb128 0
 5801 0477 00       		.uleb128 0
 5802              	.LLSDACSE1464:
 5803 0478 03       		.byte	0x3
 5804 0479 00       		.byte	0
 5805 047a 02       		.byte	0x2
 5806 047b 7D       		.byte	0x7d
 5807 047c 01       		.byte	0x1
 5808 047d 7D       		.byte	0x7d
 5809 047e 00       		.byte	0
 5810 047f 7D       		.byte	0x7d
 5811              		.align 4
 5812 0480 00000000 		.long	0
 5813              	
 5814 0484 00000000 		.long	_ZTISt9exception
 5815 0488 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 5816              	.LLSDATT1464:
 5817              		.text
 5819              		.section	.text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm,"axG",@progbits,_ZNSt6vec
 5820              		.align 2
 5821              		.weak	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm
 5823              	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm:
 5824              	.LFB1465:
 656:/usr/include/c++/4.9/bits/stl_vector.h **** 
 657:/usr/include/c++/4.9/bits/stl_vector.h ****       /**  Returns the size() of the largest possible %vector.  */
 658:/usr/include/c++/4.9/bits/stl_vector.h ****       size_type
 659:/usr/include/c++/4.9/bits/stl_vector.h ****       max_size() const _GLIBCXX_NOEXCEPT
 660:/usr/include/c++/4.9/bits/stl_vector.h ****       { return _Alloc_traits::max_size(_M_get_Tp_allocator()); }
 661:/usr/include/c++/4.9/bits/stl_vector.h **** 
 662:/usr/include/c++/4.9/bits/stl_vector.h **** #if __cplusplus >= 201103L
 663:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 664:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 665:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 666:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 667:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 668:/usr/include/c++/4.9/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 669:/usr/include/c++/4.9/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 670:/usr/include/c++/4.9/bits/stl_vector.h ****        *  default constructed elements are appended.
 671:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 672:/usr/include/c++/4.9/bits/stl_vector.h ****       void
 673:/usr/include/c++/4.9/bits/stl_vector.h ****       resize(size_type __new_size)
 674:/usr/include/c++/4.9/bits/stl_vector.h ****       {
 675:/usr/include/c++/4.9/bits/stl_vector.h **** 	if (__new_size > size())
 676:/usr/include/c++/4.9/bits/stl_vector.h **** 	  _M_default_append(__new_size - size());
 677:/usr/include/c++/4.9/bits/stl_vector.h **** 	else if (__new_size < size())
 678:/usr/include/c++/4.9/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 679:/usr/include/c++/4.9/bits/stl_vector.h ****       }
 680:/usr/include/c++/4.9/bits/stl_vector.h **** 
 681:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 682:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 683:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 684:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 685:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 686:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 687:/usr/include/c++/4.9/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 688:/usr/include/c++/4.9/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 689:/usr/include/c++/4.9/bits/stl_vector.h ****        *  the %vector is extended and new elements are populated with
 690:/usr/include/c++/4.9/bits/stl_vector.h ****        *  given data.
 691:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 692:/usr/include/c++/4.9/bits/stl_vector.h ****       void
 693:/usr/include/c++/4.9/bits/stl_vector.h ****       resize(size_type __new_size, const value_type& __x)
 694:/usr/include/c++/4.9/bits/stl_vector.h ****       {
 695:/usr/include/c++/4.9/bits/stl_vector.h **** 	if (__new_size > size())
 696:/usr/include/c++/4.9/bits/stl_vector.h **** 	  insert(end(), __new_size - size(), __x);
 697:/usr/include/c++/4.9/bits/stl_vector.h **** 	else if (__new_size < size())
 698:/usr/include/c++/4.9/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 699:/usr/include/c++/4.9/bits/stl_vector.h ****       }
 700:/usr/include/c++/4.9/bits/stl_vector.h **** #else
 701:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 702:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 703:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 704:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 705:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 706:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 707:/usr/include/c++/4.9/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 708:/usr/include/c++/4.9/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 709:/usr/include/c++/4.9/bits/stl_vector.h ****        *  the %vector is extended and new elements are populated with
 710:/usr/include/c++/4.9/bits/stl_vector.h ****        *  given data.
 711:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 712:/usr/include/c++/4.9/bits/stl_vector.h ****       void
 713:/usr/include/c++/4.9/bits/stl_vector.h ****       resize(size_type __new_size, value_type __x = value_type())
 714:/usr/include/c++/4.9/bits/stl_vector.h ****       {
 715:/usr/include/c++/4.9/bits/stl_vector.h **** 	if (__new_size > size())
 716:/usr/include/c++/4.9/bits/stl_vector.h **** 	  insert(end(), __new_size - size(), __x);
 717:/usr/include/c++/4.9/bits/stl_vector.h **** 	else if (__new_size < size())
 718:/usr/include/c++/4.9/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 719:/usr/include/c++/4.9/bits/stl_vector.h ****       }
 720:/usr/include/c++/4.9/bits/stl_vector.h **** #endif
 721:/usr/include/c++/4.9/bits/stl_vector.h **** 
 722:/usr/include/c++/4.9/bits/stl_vector.h **** #if __cplusplus >= 201103L
 723:/usr/include/c++/4.9/bits/stl_vector.h ****       /**  A non-binding request to reduce capacity() to size().  */
 724:/usr/include/c++/4.9/bits/stl_vector.h ****       void
 725:/usr/include/c++/4.9/bits/stl_vector.h ****       shrink_to_fit()
 726:/usr/include/c++/4.9/bits/stl_vector.h ****       { _M_shrink_to_fit(); }
 727:/usr/include/c++/4.9/bits/stl_vector.h **** #endif
 728:/usr/include/c++/4.9/bits/stl_vector.h **** 
 729:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 730:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Returns the total number of elements that the %vector can
 731:/usr/include/c++/4.9/bits/stl_vector.h ****        *  hold before needing to allocate more memory.
 732:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 733:/usr/include/c++/4.9/bits/stl_vector.h ****       size_type
 734:/usr/include/c++/4.9/bits/stl_vector.h ****       capacity() const _GLIBCXX_NOEXCEPT
 735:/usr/include/c++/4.9/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_end_of_storage
 736:/usr/include/c++/4.9/bits/stl_vector.h **** 			 - this->_M_impl._M_start); }
 737:/usr/include/c++/4.9/bits/stl_vector.h **** 
 738:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 739:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Returns true if the %vector is empty.  (Thus begin() would
 740:/usr/include/c++/4.9/bits/stl_vector.h ****        *  equal end().)
 741:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 742:/usr/include/c++/4.9/bits/stl_vector.h ****       bool
 743:/usr/include/c++/4.9/bits/stl_vector.h ****       empty() const _GLIBCXX_NOEXCEPT
 744:/usr/include/c++/4.9/bits/stl_vector.h ****       { return begin() == end(); }
 745:/usr/include/c++/4.9/bits/stl_vector.h **** 
 746:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 747:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
 748:/usr/include/c++/4.9/bits/stl_vector.h ****        *          elements.
 749:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param  __n  Number of elements required.
 750:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @throw  std::length_error  If @a n exceeds @c max_size().
 751:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 752:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This function attempts to reserve enough memory for the
 753:/usr/include/c++/4.9/bits/stl_vector.h ****        *  %vector to hold the specified number of elements.  If the
 754:/usr/include/c++/4.9/bits/stl_vector.h ****        *  number requested is more than max_size(), length_error is
 755:/usr/include/c++/4.9/bits/stl_vector.h ****        *  thrown.
 756:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 757:/usr/include/c++/4.9/bits/stl_vector.h ****        *  The advantage of this function is that if optimal code is a
 758:/usr/include/c++/4.9/bits/stl_vector.h ****        *  necessity and the user can determine the number of elements
 759:/usr/include/c++/4.9/bits/stl_vector.h ****        *  that will be required, the user can reserve the memory in
 760:/usr/include/c++/4.9/bits/stl_vector.h ****        *  %advance, and thus prevent a possible reallocation of memory
 761:/usr/include/c++/4.9/bits/stl_vector.h ****        *  and copying of %vector data.
 762:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 763:/usr/include/c++/4.9/bits/stl_vector.h ****       void
 764:/usr/include/c++/4.9/bits/stl_vector.h ****       reserve(size_type __n);
 765:/usr/include/c++/4.9/bits/stl_vector.h **** 
 766:/usr/include/c++/4.9/bits/stl_vector.h ****       // element access
 767:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 768:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
 769:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 770:/usr/include/c++/4.9/bits/stl_vector.h ****        *  accessed.
 771:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @return  Read/write reference to data.
 772:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 773:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This operator allows for easy, array-style, data access.
 774:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Note that data access with this operator is unchecked and
 775:/usr/include/c++/4.9/bits/stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
 776:/usr/include/c++/4.9/bits/stl_vector.h ****        *  see at().)
 777:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 778:/usr/include/c++/4.9/bits/stl_vector.h ****       reference
 779:/usr/include/c++/4.9/bits/stl_vector.h ****       operator[](size_type __n) _GLIBCXX_NOEXCEPT
 780:/usr/include/c++/4.9/bits/stl_vector.h ****       { return *(this->_M_impl._M_start + __n); }
 781:/usr/include/c++/4.9/bits/stl_vector.h **** 
 782:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 783:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
 784:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 785:/usr/include/c++/4.9/bits/stl_vector.h ****        *  accessed.
 786:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @return  Read-only (constant) reference to data.
 787:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 788:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This operator allows for easy, array-style, data access.
 789:/usr/include/c++/4.9/bits/stl_vector.h ****        *  Note that data access with this operator is unchecked and
 790:/usr/include/c++/4.9/bits/stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
 791:/usr/include/c++/4.9/bits/stl_vector.h ****        *  see at().)
 792:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 793:/usr/include/c++/4.9/bits/stl_vector.h ****       const_reference
 794:/usr/include/c++/4.9/bits/stl_vector.h ****       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
 795:/usr/include/c++/4.9/bits/stl_vector.h ****       { return *(this->_M_impl._M_start + __n); }
 796:/usr/include/c++/4.9/bits/stl_vector.h **** 
 797:/usr/include/c++/4.9/bits/stl_vector.h ****     protected:
 798:/usr/include/c++/4.9/bits/stl_vector.h ****       /// Safety check used only from at().
 799:/usr/include/c++/4.9/bits/stl_vector.h ****       void
 800:/usr/include/c++/4.9/bits/stl_vector.h ****       _M_range_check(size_type __n) const
 801:/usr/include/c++/4.9/bits/stl_vector.h ****       {
 802:/usr/include/c++/4.9/bits/stl_vector.h **** 	if (__n >= this->size())
 803:/usr/include/c++/4.9/bits/stl_vector.h **** 	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
 804:/usr/include/c++/4.9/bits/stl_vector.h **** 				       "(which is %zu) >= this->size() "
 805:/usr/include/c++/4.9/bits/stl_vector.h **** 				       "(which is %zu)"),
 806:/usr/include/c++/4.9/bits/stl_vector.h **** 				   __n, this->size());
 807:/usr/include/c++/4.9/bits/stl_vector.h ****       }
 808:/usr/include/c++/4.9/bits/stl_vector.h **** 
 809:/usr/include/c++/4.9/bits/stl_vector.h ****     public:
 810:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 811:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
 812:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 813:/usr/include/c++/4.9/bits/stl_vector.h ****        *  accessed.
 814:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @return  Read/write reference to data.
 815:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
 816:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 817:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This function provides for safer data access.  The parameter
 818:/usr/include/c++/4.9/bits/stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
 819:/usr/include/c++/4.9/bits/stl_vector.h ****        *  function throws out_of_range if the check fails.
 820:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 821:/usr/include/c++/4.9/bits/stl_vector.h ****       reference
 822:/usr/include/c++/4.9/bits/stl_vector.h ****       at(size_type __n)
 5825              		.loc 6 822 0
 5826              		.cfi_startproc
 5827 0000 55       		pushq	%rbp
 5828              		.cfi_def_cfa_offset 16
 5829              		.cfi_offset 6, -16
 5830 0001 4889E5   		movq	%rsp, %rbp
 5831              		.cfi_def_cfa_register 6
 5832 0004 4883EC10 		subq	$16, %rsp
 5833 0008 48897DF8 		movq	%rdi, -8(%rbp)
 5834 000c 488975F0 		movq	%rsi, -16(%rbp)
 823:/usr/include/c++/4.9/bits/stl_vector.h ****       {
 824:/usr/include/c++/4.9/bits/stl_vector.h **** 	_M_range_check(__n);
 5835              		.loc 6 824 0
 5836 0010 488B55F0 		movq	-16(%rbp), %rdx
 5837 0014 488B45F8 		movq	-8(%rbp), %rax
 5838 0018 4889D6   		movq	%rdx, %rsi
 5839 001b 4889C7   		movq	%rax, %rdi
 5840 001e E8000000 		call	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE14_M_range_checkEm
 5840      00
 825:/usr/include/c++/4.9/bits/stl_vector.h **** 	return (*this)[__n]; 
 5841              		.loc 6 825 0
 5842 0023 488B55F0 		movq	-16(%rbp), %rdx
 5843 0027 488B45F8 		movq	-8(%rbp), %rax
 5844 002b 4889D6   		movq	%rdx, %rsi
 5845 002e 4889C7   		movq	%rax, %rdi
 5846 0031 E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEixEm
 5846      00
 826:/usr/include/c++/4.9/bits/stl_vector.h ****       }
 5847              		.loc 6 826 0
 5848 0036 C9       		leave
 5849              		.cfi_def_cfa 7, 8
 5850 0037 C3       		ret
 5851              		.cfi_endproc
 5852              	.LFE1465:
 5854              		.section	.text._ZN8UnitTest10CheckEqualIPKcSsEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE,"ax
 5855              		.weak	_ZN8UnitTest10CheckEqualIPKcSsEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 5857              	_ZN8UnitTest10CheckEqualIPKcSsEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE:
 5858              	.LFB1466:
  19:../Checks.h   **** {
 5859              		.loc 8 19 0
 5860              		.cfi_startproc
 5861              		.cfi_personality 0x3,__gxx_personality_v0
 5862              		.cfi_lsda 0x3,.LLSDA1466
 5863 0000 55       		pushq	%rbp
 5864              		.cfi_def_cfa_offset 16
 5865              		.cfi_offset 6, -16
 5866 0001 4889E5   		movq	%rsp, %rbp
 5867              		.cfi_def_cfa_register 6
 5868 0004 53       		pushq	%rbx
 5869 0005 4881EC98 		subq	$408, %rsp
 5869      010000
 5870              		.cfi_offset 3, -24
 5871 000c 4889BD78 		movq	%rdi, -392(%rbp)
 5871      FEFFFF
 5872 0013 4889B570 		movq	%rsi, -400(%rbp)
 5872      FEFFFF
 5873 001a 48899568 		movq	%rdx, -408(%rbp)
 5873      FEFFFF
 5874 0021 48898D60 		movq	%rcx, -416(%rbp)
 5874      FEFFFF
  19:../Checks.h   **** {
 5875              		.loc 8 19 0
 5876 0028 64488B04 		movq	%fs:40, %rax
 5876      25280000 
 5876      00
 5877 0031 488945E8 		movq	%rax, -24(%rbp)
 5878 0035 31C0     		xorl	%eax, %eax
 5879              	.LBB145:
 5880              	.LBB146:
  21:../Checks.h   ****     {
 5881              		.loc 8 21 0
 5882 0037 488B8570 		movq	-400(%rbp), %rax
 5882      FEFFFF
 5883 003e 488B00   		movq	(%rax), %rax
 5884 0041 488B9568 		movq	-408(%rbp), %rdx
 5884      FEFFFF
 5885 0048 4889D6   		movq	%rdx, %rsi
 5886 004b 4889C7   		movq	%rax, %rdi
 5887              	.LEHB171:
 5888 004e E8000000 		call	_ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKSbIS3_T0_T1_E
 5888      00
 5889 0053 83F001   		xorl	$1, %eax
 5890 0056 84C0     		testb	%al, %al
 5891 0058 0F849400 		je	.L334
 5891      0000
 5892              	.LBB147:
  23:../Checks.h   ****         stream << "Expected " << expected << " but was " << actual;
 5893              		.loc 8 23 0
 5894 005e 488D8580 		leaq	-384(%rbp), %rax
 5894      FEFFFF
 5895 0065 4889C7   		movq	%rax, %rdi
 5896 0068 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 5896      00
 5897              	.LEHE171:
  24:../Checks.h   **** 
 5898              		.loc 8 24 0
 5899 006d 488B8570 		movq	-400(%rbp), %rax
 5899      FEFFFF
 5900 0074 488B18   		movq	(%rax), %rbx
 5901 0077 488D8580 		leaq	-384(%rbp), %rax
 5901      FEFFFF
 5902 007e BE000000 		movl	$.LC34, %esi
 5902      00
 5903 0083 4889C7   		movq	%rax, %rdi
 5904              	.LEHB172:
 5905 0086 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5905      00
 5906 008b 4889DE   		movq	%rbx, %rsi
 5907 008e 4889C7   		movq	%rax, %rdi
 5908 0091 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5908      00
  24:../Checks.h   **** 
 5909              		.loc 8 24 0 is_stmt 0 discriminator 1
 5910 0096 BE000000 		movl	$.LC35, %esi
 5910      00
 5911 009b 4889C7   		movq	%rax, %rdi
 5912 009e E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5912      00
  24:../Checks.h   **** 
 5913              		.loc 8 24 0 discriminator 2
 5914 00a3 4889C2   		movq	%rax, %rdx
 5915 00a6 488B8568 		movq	-408(%rbp), %rax
 5915      FEFFFF
 5916 00ad 4889C6   		movq	%rax, %rsi
 5917 00b0 4889D7   		movq	%rdx, %rdi
 5918 00b3 E8000000 		call	_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKSbIS4_S5_T1_E
 5918      00
  26:../Checks.h   ****     }
 5919              		.loc 8 26 0 is_stmt 1
 5920 00b8 488D8580 		leaq	-384(%rbp), %rax
 5920      FEFFFF
 5921 00bf 4889C7   		movq	%rax, %rdi
 5922 00c2 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 5922      00
 5923 00c7 4889C2   		movq	%rax, %rdx
 5924 00ca 488B8D60 		movq	-416(%rbp), %rcx
 5924      FEFFFF
 5925 00d1 488B8578 		movq	-392(%rbp), %rax
 5925      FEFFFF
 5926 00d8 4889CE   		movq	%rcx, %rsi
 5927 00db 4889C7   		movq	%rax, %rdi
 5928 00de E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5928      00
 5929              	.LEHE172:
  26:../Checks.h   ****     }
 5930              		.loc 8 26 0 is_stmt 0 discriminator 4
 5931 00e3 488D8580 		leaq	-384(%rbp), %rax
 5931      FEFFFF
 5932 00ea 4889C7   		movq	%rax, %rdi
 5933              	.LEHB173:
 5934 00ed E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5934      00
 5935              	.LEHE173:
 5936              	.L334:
 5937              	.LBE147:
 5938              	.LBE146:
 5939              	.LBE145:
 5940              		.loc 8 28 0 is_stmt 1
 5941 00f2 488B45E8 		movq	-24(%rbp), %rax
 5942 00f6 64483304 		xorq	%fs:40, %rax
 5942      25280000 
 5942      00
 5943 00ff 7424     		je	.L336
 5944 0101 EB1D     		jmp	.L338
 5945              	.L337:
 5946 0103 4889C3   		movq	%rax, %rbx
 5947              	.LBB150:
 5948              	.LBB149:
 5949              	.LBB148:
  26:../Checks.h   ****     }
 5950              		.loc 8 26 0
 5951 0106 488D8580 		leaq	-384(%rbp), %rax
 5951      FEFFFF
 5952 010d 4889C7   		movq	%rax, %rdi
 5953 0110 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5953      00
 5954 0115 4889D8   		movq	%rbx, %rax
 5955 0118 4889C7   		movq	%rax, %rdi
 5956              	.LEHB174:
 5957 011b E8000000 		call	_Unwind_Resume
 5957      00
 5958              	.LEHE174:
 5959              	.L338:
 5960              	.LBE148:
 5961              	.LBE149:
 5962              	.LBE150:
 5963              		.loc 8 28 0
 5964 0120 E8000000 		call	__stack_chk_fail
 5964      00
 5965              	.L336:
 5966 0125 4881C498 		addq	$408, %rsp
 5966      010000
 5967 012c 5B       		popq	%rbx
 5968 012d 5D       		popq	%rbp
 5969              		.cfi_def_cfa 7, 8
 5970 012e C3       		ret
 5971              		.cfi_endproc
 5972              	.LFE1466:
 5973              		.section	.gcc_except_table
 5974              	.LLSDA1466:
 5975 048c FF       		.byte	0xff
 5976 048d FF       		.byte	0xff
 5977 048e 01       		.byte	0x1
 5978 048f 14       		.uleb128 .LLSDACSE1466-.LLSDACSB1466
 5979              	.LLSDACSB1466:
 5980 0490 4E       		.uleb128 .LEHB171-.LFB1466
 5981 0491 1F       		.uleb128 .LEHE171-.LEHB171
 5982 0492 00       		.uleb128 0
 5983 0493 00       		.uleb128 0
 5984 0494 8601     		.uleb128 .LEHB172-.LFB1466
 5985 0496 5D       		.uleb128 .LEHE172-.LEHB172
 5986 0497 8302     		.uleb128 .L337-.LFB1466
 5987 0499 00       		.uleb128 0
 5988 049a ED01     		.uleb128 .LEHB173-.LFB1466
 5989 049c 05       		.uleb128 .LEHE173-.LEHB173
 5990 049d 00       		.uleb128 0
 5991 049e 00       		.uleb128 0
 5992 049f 9B02     		.uleb128 .LEHB174-.LFB1466
 5993 04a1 05       		.uleb128 .LEHE174-.LEHB174
 5994 04a2 00       		.uleb128 0
 5995 04a3 00       		.uleb128 0
 5996              	.LLSDACSE1466:
 5997              		.section	.text._ZN8UnitTest10CheckEqualIPKcSsEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE,"ax
 5999              		.text
 6001              	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTi
 6002              	.LFB1467:
  16:../ExecuteTest.h **** {
 6003              		.loc 7 16 0
 6004              		.cfi_startproc
 6005              		.cfi_personality 0x3,__gxx_personality_v0
 6006              		.cfi_lsda 0x3,.LLSDA1467
 6007 27c4 55       		pushq	%rbp
 6008              		.cfi_def_cfa_offset 16
 6009              		.cfi_offset 6, -16
 6010 27c5 4889E5   		movq	%rsp, %rbp
 6011              		.cfi_def_cfa_register 6
 6012 27c8 4154     		pushq	%r12
 6013 27ca 53       		pushq	%rbx
 6014 27cb 4881EC20 		subq	$1568, %rsp
 6014      060000
 6015              		.cfi_offset 12, -24
 6016              		.cfi_offset 3, -32
 6017 27d2 4889BDD8 		movq	%rdi, -1576(%rbp)
 6017      F9FFFF
 6018 27d9 4889B5D0 		movq	%rsi, -1584(%rbp)
 6018      F9FFFF
  16:../ExecuteTest.h **** {
 6019              		.loc 7 16 0
 6020 27e0 64488B04 		movq	%fs:40, %rax
 6020      25280000 
 6020      00
 6021 27e9 488945E8 		movq	%rax, -24(%rbp)
 6022 27ed 31C0     		xorl	%eax, %eax
 6023              	.LEHB175:
 6024              	.LBB151:
  18:../ExecuteTest.h **** 
 6025              		.loc 7 18 0
 6026 27ef E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 6026      00
 6027              	.LEHE175:
 6028 27f4 4889C2   		movq	%rax, %rdx
 6029 27f7 488B85D0 		movq	-1584(%rbp), %rax
 6029      F9FFFF
 6030 27fe 488902   		movq	%rax, (%rdx)
 6031              	.LBB152:
  23:../ExecuteTest.h **** #endif
 6032              		.loc 7 23 0
 6033 2801 488D8580 		leaq	-1152(%rbp), %rax
 6033      FBFFFF
 6034 2808 4889C7   		movq	%rax, %rdi
 6035              	.LEHB176:
 6036 280b E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev
 6036      00
 6037              	.LEHE176:
  23:../ExecuteTest.h **** #endif
 6038              		.loc 7 23 0 is_stmt 0 discriminator 1
 6039 2810 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 6039      000000
 6040 2817 BE010000 		movl	$1, %esi
 6040      00
 6041 281c 4889C7   		movq	%rax, %rdi
 6042 281f E8000000 		call	__sigsetjmp
 6042      00
 6043 2824 85C0     		testl	%eax, %eax
 6044 2826 0F95C0   		setne	%al
 6045 2829 84C0     		testb	%al, %al
 6046 282b 7423     		je	.L359
  23:../ExecuteTest.h **** #endif
 6047              		.loc 7 23 0 discriminator 3
 6048 282d BF080000 		movl	$8, %edi
 6048      00
 6049 2832 E8000000 		call	__cxa_allocate_exception
 6049      00
 6050 2837 48C70000 		movq	$.LC32, (%rax)
 6050      000000
 6051 283e BA000000 		movl	$0, %edx
 6051      00
 6052 2843 BE000000 		movl	$_ZTIPKc, %esi
 6052      00
 6053 2848 4889C7   		movq	%rax, %rdi
 6054              	.LEHB177:
 6055 284b E8000000 		call	__cxa_throw
 6055      00
 6056              	.L359:
  25:../ExecuteTest.h **** 	}
 6057              		.loc 7 25 0 is_stmt 1
 6058 2850 488B85D8 		movq	-1576(%rbp), %rax
 6058      F9FFFF
 6059 2857 4889C7   		movq	%rax, %rdi
 6060 285a E8A5E7FF 		call	_ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelper7Ru
 6060      FF
 6061              	.LEHE177:
  25:../ExecuteTest.h **** 	}
 6062              		.loc 7 25 0 is_stmt 0 discriminator 2
 6063 285f 488D8580 		leaq	-1152(%rbp), %rax
 6063      FBFFFF
 6064 2866 4889C7   		movq	%rax, %rdi
 6065              	.LEHB178:
 6066 2869 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 6066      00
 6067              	.LEHE178:
 6068              	.LBE152:
 6069              	.LBE151:
 6070              		.loc 7 42 0 is_stmt 1
 6071 286e E9EE0100 		jmp	.L361
 6071      00
 6072              	.L354:
 6073 2873 4989C4   		movq	%rax, %r12
 6074 2876 4889D3   		movq	%rdx, %rbx
 6075              	.LBB160:
 6076              	.LBB153:
  25:../ExecuteTest.h **** 	}
 6077              		.loc 7 25 0
 6078 2879 488D8580 		leaq	-1152(%rbp), %rax
 6078      FBFFFF
 6079 2880 4889C7   		movq	%rax, %rdi
 6080 2883 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 6080      00
 6081 2888 4C89E0   		movq	%r12, %rax
 6082 288b 4889DA   		movq	%rbx, %rdx
 6083 288e EB00     		jmp	.L343
 6084              	.L353:
 6085              	.L343:
 6086 2890 4883FA01 		cmpq	$1, %rdx
 6087 2894 745C     		je	.L345
 6088 2896 4883FA02 		cmpq	$2, %rdx
 6089 289a 0F84F300 		je	.L346
 6089      0000
 6090 28a0 E9900100 		jmp	.L360
 6090      00
 6091              	.L355:
 6092 28a5 4889C3   		movq	%rax, %rbx
 6093              	.LBE153:
 6094              	.LBB154:
  27:../ExecuteTest.h **** 	{
 6095              		.loc 7 27 0
 6096 28a8 E8000000 		call	__cxa_end_catch
 6096      00
 6097 28ad 4889D8   		movq	%rbx, %rax
 6098 28b0 4889C7   		movq	%rax, %rdi
 6099              	.LEHB179:
 6100 28b3 E8000000 		call	_Unwind_Resume
 6100      00
 6101              	.LEHE179:
 6102              	.L356:
 6103 28b8 4889C3   		movq	%rax, %rbx
 6104              	.LBE154:
 6105              	.LBB155:
 6106              	.LBB156:
  36:../ExecuteTest.h **** 	}
 6107              		.loc 7 36 0
 6108 28bb 488D8510 		leaq	-1520(%rbp), %rax
 6108      FAFFFF
 6109 28c2 4889C7   		movq	%rax, %rdi
 6110 28c5 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6110      00
 6111 28ca EB03     		jmp	.L349
 6112              	.L357:
 6113 28cc 4889C3   		movq	%rax, %rbx
 6114              	.L349:
 6115              	.LBE156:
  32:../ExecuteTest.h **** 	{
 6116              		.loc 7 32 0
 6117 28cf E8000000 		call	__cxa_end_catch
 6117      00
 6118 28d4 4889D8   		movq	%rbx, %rax
 6119 28d7 4889C7   		movq	%rax, %rdi
 6120              	.LEHB180:
 6121 28da E8000000 		call	_Unwind_Resume
 6121      00
 6122              	.LEHE180:
 6123              	.L358:
 6124 28df 4889C3   		movq	%rax, %rbx
 6125              	.LBE155:
  38:../ExecuteTest.h **** 	{
 6126              		.loc 7 38 0
 6127 28e2 E8000000 		call	__cxa_end_catch
 6127      00
 6128 28e7 4889D8   		movq	%rbx, %rax
 6129 28ea 4889C7   		movq	%rax, %rdi
 6130              	.LEHB181:
 6131 28ed E8000000 		call	_Unwind_Resume
 6131      00
 6132              	.LEHE181:
 6133              	.L345:
 6134              	.LBB158:
  27:../ExecuteTest.h **** 	{
 6135              		.loc 7 27 0
 6136 28f2 4889C7   		movq	%rax, %rdi
 6137 28f5 E8000000 		call	__cxa_begin_catch
 6137      00
 6138 28fa 488985E0 		movq	%rax, -1568(%rbp)
 6138      F9FFFF
  30:../ExecuteTest.h **** 	}
 6139              		.loc 7 30 0
 6140 2901 488B85E0 		movq	-1568(%rbp), %rax
 6140      F9FFFF
 6141 2908 488B00   		movq	(%rax), %rax
 6142 290b 4883C010 		addq	$16, %rax
 6143 290f 488B00   		movq	(%rax), %rax
 6144 2912 488B95E0 		movq	-1568(%rbp), %rdx
 6144      F9FFFF
 6145 2919 4889D7   		movq	%rdx, %rdi
 6146 291c FFD0     		call	*%rax
 6147 291e 4889C3   		movq	%rax, %rbx
 6148 2921 488B85E0 		movq	-1568(%rbp), %rax
 6148      F9FFFF
 6149 2928 4889C7   		movq	%rax, %rdi
 6150              	.LEHB182:
 6151 292b E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 6151      00
  30:../ExecuteTest.h **** 	}
 6152              		.loc 7 30 0 is_stmt 0 discriminator 1
 6153 2930 4189C4   		movl	%eax, %r12d
 6154 2933 488B85E0 		movq	-1568(%rbp), %rax
 6154      F9FFFF
 6155 293a 4889C7   		movq	%rax, %rdi
 6156 293d E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 6156      00
  30:../ExecuteTest.h **** 	}
 6157              		.loc 7 30 0 discriminator 2
 6158 2942 4889C1   		movq	%rax, %rcx
 6159 2945 488B85D0 		movq	-1584(%rbp), %rax
 6159      F9FFFF
 6160 294c 488B10   		movq	(%rax), %rdx
 6161 294f 488B85D0 		movq	-1584(%rbp), %rax
 6161      F9FFFF
 6162 2956 488B7008 		movq	8(%rax), %rsi
 6163 295a 488D85F0 		leaq	-1552(%rbp), %rax
 6163      F9FFFF
 6164 2961 4589E0   		movl	%r12d, %r8d
 6165 2964 4889C7   		movq	%rax, %rdi
 6166 2967 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 6166      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6167              		.loc 7 29 0 is_stmt 1
 6168 296c E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6168      00
  30:../ExecuteTest.h **** 	}
 6169              		.loc 7 30 0
 6170 2971 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6171              		.loc 7 29 0
 6172 2974 488D8DF0 		leaq	-1552(%rbp), %rcx
 6172      F9FFFF
 6173 297b 4889DA   		movq	%rbx, %rdx
 6174 297e 4889CE   		movq	%rcx, %rsi
 6175 2981 4889C7   		movq	%rax, %rdi
 6176 2984 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6176      00
 6177              	.LEHE182:
  27:../ExecuteTest.h **** 	{
 6178              		.loc 7 27 0
 6179 2989 E8000000 		call	__cxa_end_catch
 6179      00
 6180              	.LBE158:
 6181              	.LBE160:
 6182              		.loc 7 42 0
 6183 298e E9CE0000 		jmp	.L361
 6183      00
 6184              	.L346:
 6185              	.LBB161:
 6186              	.LBB159:
  32:../ExecuteTest.h **** 	{
 6187              		.loc 7 32 0
 6188 2993 4889C7   		movq	%rax, %rdi
 6189 2996 E8000000 		call	__cxa_begin_catch
 6189      00
 6190 299b 488985E8 		movq	%rax, -1560(%rbp)
 6190      F9FFFF
 6191              	.LBB157:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6192              		.loc 7 34 0
 6193 29a2 488D8510 		leaq	-1520(%rbp), %rax
 6193      FAFFFF
 6194 29a9 4889C7   		movq	%rax, %rdi
 6195              	.LEHB183:
 6196 29ac E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 6196      00
 6197              	.LEHE183:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 6198              		.loc 7 35 0
 6199 29b1 488B85E8 		movq	-1560(%rbp), %rax
 6199      F9FFFF
 6200 29b8 488B00   		movq	(%rax), %rax
 6201 29bb 4883C010 		addq	$16, %rax
 6202 29bf 488B00   		movq	(%rax), %rax
 6203 29c2 488B95E8 		movq	-1560(%rbp), %rdx
 6203      F9FFFF
 6204 29c9 4889D7   		movq	%rdx, %rdi
 6205 29cc FFD0     		call	*%rax
 6206 29ce 4889C3   		movq	%rax, %rbx
 6207 29d1 488D8510 		leaq	-1520(%rbp), %rax
 6207      FAFFFF
 6208 29d8 BE000000 		movl	$.LC6, %esi
 6208      00
 6209 29dd 4889C7   		movq	%rax, %rdi
 6210              	.LEHB184:
 6211 29e0 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6211      00
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 6212              		.loc 7 35 0 is_stmt 0 discriminator 1
 6213 29e5 4889DE   		movq	%rbx, %rsi
 6214 29e8 4889C7   		movq	%rax, %rdi
 6215 29eb E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6215      00
  36:../ExecuteTest.h **** 	}
 6216              		.loc 7 36 0 is_stmt 1
 6217 29f0 488D8510 		leaq	-1520(%rbp), %rax
 6217      FAFFFF
 6218 29f7 4889C7   		movq	%rax, %rdi
 6219 29fa E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 6219      00
 6220 29ff 4889C3   		movq	%rax, %rbx
 6221 2a02 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6221      00
  36:../ExecuteTest.h **** 	}
 6222              		.loc 7 36 0 is_stmt 0 discriminator 2
 6223 2a07 488B00   		movq	(%rax), %rax
 6224 2a0a 488B8DD0 		movq	-1584(%rbp), %rcx
 6224      F9FFFF
 6225 2a11 4889DA   		movq	%rbx, %rdx
 6226 2a14 4889CE   		movq	%rcx, %rsi
 6227 2a17 4889C7   		movq	%rax, %rdi
 6228 2a1a E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6228      00
 6229              	.LEHE184:
  36:../ExecuteTest.h **** 	}
 6230              		.loc 7 36 0 discriminator 6
 6231 2a1f 488D8510 		leaq	-1520(%rbp), %rax
 6231      FAFFFF
 6232 2a26 4889C7   		movq	%rax, %rdi
 6233              	.LEHB185:
 6234 2a29 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6234      00
 6235              	.LEHE185:
 6236              	.LBE157:
  32:../ExecuteTest.h **** 	{
 6237              		.loc 7 32 0 is_stmt 1
 6238 2a2e E8000000 		call	__cxa_end_catch
 6238      00
 6239              	.LBE159:
 6240              	.LBE161:
 6241              		.loc 7 42 0
 6242 2a33 EB2C     		jmp	.L361
 6243              	.L360:
 6244              	.LBB162:
  38:../ExecuteTest.h **** 	{
 6245              		.loc 7 38 0
 6246 2a35 4889C7   		movq	%rax, %rdi
 6247 2a38 E8000000 		call	__cxa_begin_catch
 6247      00
 6248              	.LEHB186:
  40:../ExecuteTest.h **** 	}
 6249              		.loc 7 40 0
 6250 2a3d E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6250      00
 6251 2a42 488B00   		movq	(%rax), %rax
 6252 2a45 488B8DD0 		movq	-1584(%rbp), %rcx
 6252      F9FFFF
 6253 2a4c BA000000 		movl	$.LC33, %edx
 6253      00
 6254 2a51 4889CE   		movq	%rcx, %rsi
 6255 2a54 4889C7   		movq	%rax, %rdi
 6256 2a57 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6256      00
 6257              	.LEHE186:
 6258              	.LEHB187:
  38:../ExecuteTest.h **** 	{
 6259              		.loc 7 38 0
 6260 2a5c E8000000 		call	__cxa_end_catch
 6260      00
 6261              	.LEHE187:
 6262              	.L361:
 6263              	.LBE162:
 6264              		.loc 7 42 0
 6265 2a61 90       		nop
 6266 2a62 488B45E8 		movq	-24(%rbp), %rax
 6267 2a66 64483304 		xorq	%fs:40, %rax
 6267      25280000 
 6267      00
 6268 2a6f 7405     		je	.L352
 6269 2a71 E8000000 		call	__stack_chk_fail
 6269      00
 6270              	.L352:
 6271 2a76 4881C420 		addq	$1568, %rsp
 6271      060000
 6272 2a7d 5B       		popq	%rbx
 6273 2a7e 415C     		popq	%r12
 6274 2a80 5D       		popq	%rbp
 6275              		.cfi_def_cfa 7, 8
 6276 2a81 C3       		ret
 6277              		.cfi_endproc
 6278              	.LFE1467:
 6279              		.section	.gcc_except_table
 6280              		.align 4
 6281              	.LLSDA1467:
 6282 04a4 FF       		.byte	0xff
 6283 04a5 03       		.byte	0x3
 6284 04a6 5D       		.uleb128 .LLSDATT1467-.LLSDATTD1467
 6285              	.LLSDATTD1467:
 6286 04a7 01       		.byte	0x1
 6287 04a8 47       		.uleb128 .LLSDACSE1467-.LLSDACSB1467
 6288              	.LLSDACSB1467:
 6289 04a9 2B       		.uleb128 .LEHB175-.LFB1467
 6290 04aa 05       		.uleb128 .LEHE175-.LEHB175
 6291 04ab 00       		.uleb128 0
 6292 04ac 00       		.uleb128 0
 6293 04ad 47       		.uleb128 .LEHB176-.LFB1467
 6294 04ae 05       		.uleb128 .LEHE176-.LEHB176
 6295 04af CC01     		.uleb128 .L353-.LFB1467
 6296 04b1 05       		.uleb128 0x5
 6297 04b2 8701     		.uleb128 .LEHB177-.LFB1467
 6298 04b4 14       		.uleb128 .LEHE177-.LEHB177
 6299 04b5 AF01     		.uleb128 .L354-.LFB1467
 6300 04b7 07       		.uleb128 0x7
 6301 04b8 A501     		.uleb128 .LEHB178-.LFB1467
 6302 04ba 05       		.uleb128 .LEHE178-.LEHB178
 6303 04bb CC01     		.uleb128 .L353-.LFB1467
 6304 04bd 05       		.uleb128 0x5
 6305 04be EF01     		.uleb128 .LEHB179-.LFB1467
 6306 04c0 05       		.uleb128 .LEHE179-.LEHB179
 6307 04c1 00       		.uleb128 0
 6308 04c2 00       		.uleb128 0
 6309 04c3 9602     		.uleb128 .LEHB180-.LFB1467
 6310 04c5 05       		.uleb128 .LEHE180-.LEHB180
 6311 04c6 00       		.uleb128 0
 6312 04c7 00       		.uleb128 0
 6313 04c8 A902     		.uleb128 .LEHB181-.LFB1467
 6314 04ca 05       		.uleb128 .LEHE181-.LEHB181
 6315 04cb 00       		.uleb128 0
 6316 04cc 00       		.uleb128 0
 6317 04cd E702     		.uleb128 .LEHB182-.LFB1467
 6318 04cf 5E       		.uleb128 .LEHE182-.LEHB182
 6319 04d0 E101     		.uleb128 .L355-.LFB1467
 6320 04d2 00       		.uleb128 0
 6321 04d3 E803     		.uleb128 .LEHB183-.LFB1467
 6322 04d5 05       		.uleb128 .LEHE183-.LEHB183
 6323 04d6 8802     		.uleb128 .L357-.LFB1467
 6324 04d8 00       		.uleb128 0
 6325 04d9 9C04     		.uleb128 .LEHB184-.LFB1467
 6326 04db 3F       		.uleb128 .LEHE184-.LEHB184
 6327 04dc F401     		.uleb128 .L356-.LFB1467
 6328 04de 00       		.uleb128 0
 6329 04df E504     		.uleb128 .LEHB185-.LFB1467
 6330 04e1 05       		.uleb128 .LEHE185-.LEHB185
 6331 04e2 8802     		.uleb128 .L357-.LFB1467
 6332 04e4 00       		.uleb128 0
 6333 04e5 F904     		.uleb128 .LEHB186-.LFB1467
 6334 04e7 1F       		.uleb128 .LEHE186-.LEHB186
 6335 04e8 9B02     		.uleb128 .L358-.LFB1467
 6336 04ea 00       		.uleb128 0
 6337 04eb 9805     		.uleb128 .LEHB187-.LFB1467
 6338 04ed 05       		.uleb128 .LEHE187-.LEHB187
 6339 04ee 00       		.uleb128 0
 6340 04ef 00       		.uleb128 0
 6341              	.LLSDACSE1467:
 6342 04f0 03       		.byte	0x3
 6343 04f1 00       		.byte	0
 6344 04f2 02       		.byte	0x2
 6345 04f3 7D       		.byte	0x7d
 6346 04f4 01       		.byte	0x1
 6347 04f5 7D       		.byte	0x7d
 6348 04f6 00       		.byte	0
 6349 04f7 7D       		.byte	0x7d
 6350              		.align 4
 6351 04f8 00000000 		.long	0
 6352              	
 6353 04fc 00000000 		.long	_ZTISt9exception
 6354 0500 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 6355              	.LLSDATT1467:
 6356              		.text
 6358              		.section	.rodata
 6359              	.LC36:
 6360 056f 202B2F2D 		.string	" +/- "
 6360      2000
 6361              		.section	.text._ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE,
 6362              		.weak	_ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE
 6364              	_ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE:
 6365              	.LFB1468:
  29:../Checks.h   **** 
  30:../Checks.h   **** void CheckEqual(TestResults& results, char const* expected, char const* actual, TestDetails const& 
  31:../Checks.h   **** 
  32:../Checks.h   **** void CheckEqual(TestResults& results, char* expected, char* actual, TestDetails const& details);
  33:../Checks.h   **** 
  34:../Checks.h   **** void CheckEqual(TestResults& results, char* expected, char const* actual, TestDetails const& detail
  35:../Checks.h   **** 
  36:../Checks.h   **** void CheckEqual(TestResults& results, char const* expected, char* actual, TestDetails const& detail
  37:../Checks.h   **** 
  38:../Checks.h   **** template< typename Expected, typename Actual, typename Tolerance >
  39:../Checks.h   **** bool AreClose(Expected const& expected, Actual const& actual, Tolerance const& tolerance)
  40:../Checks.h   **** {
  41:../Checks.h   ****     return (actual >= (expected - tolerance)) && (actual <= (expected + tolerance));
  42:../Checks.h   **** }
  43:../Checks.h   **** 
  44:../Checks.h   **** template< typename Expected, typename Actual, typename Tolerance >
  45:../Checks.h   **** void CheckClose(TestResults& results, Expected const& expected, Actual const& actual, Tolerance con
 6366              		.loc 8 45 0
 6367              		.cfi_startproc
 6368              		.cfi_personality 0x3,__gxx_personality_v0
 6369              		.cfi_lsda 0x3,.LLSDA1468
 6370 0000 55       		pushq	%rbp
 6371              		.cfi_def_cfa_offset 16
 6372              		.cfi_offset 6, -16
 6373 0001 4889E5   		movq	%rsp, %rbp
 6374              		.cfi_def_cfa_register 6
 6375 0004 4155     		pushq	%r13
 6376 0006 4154     		pushq	%r12
 6377 0008 53       		pushq	%rbx
 6378 0009 4881ECA8 		subq	$424, %rsp
 6378      010000
 6379              		.cfi_offset 13, -24
 6380              		.cfi_offset 12, -32
 6381              		.cfi_offset 3, -40
 6382 0010 4889BD68 		movq	%rdi, -408(%rbp)
 6382      FEFFFF
 6383 0017 4889B560 		movq	%rsi, -416(%rbp)
 6383      FEFFFF
 6384 001e 48899558 		movq	%rdx, -424(%rbp)
 6384      FEFFFF
 6385 0025 48898D50 		movq	%rcx, -432(%rbp)
 6385      FEFFFF
 6386 002c 4C898548 		movq	%r8, -440(%rbp)
 6386      FEFFFF
 6387              		.loc 8 45 0
 6388 0033 64488B04 		movq	%fs:40, %rax
 6388      25280000 
 6388      00
 6389 003c 488945D8 		movq	%rax, -40(%rbp)
 6390 0040 31C0     		xorl	%eax, %eax
 6391              	.LBB163:
 6392              	.LBB164:
  46:../Checks.h   ****                 TestDetails const& details)
  47:../Checks.h   **** {
  48:../Checks.h   ****     if (!AreClose(expected, actual, tolerance))
 6393              		.loc 8 48 0
 6394 0042 488B9550 		movq	-432(%rbp), %rdx
 6394      FEFFFF
 6395 0049 488B8D58 		movq	-424(%rbp), %rcx
 6395      FEFFFF
 6396 0050 488B8560 		movq	-416(%rbp), %rax
 6396      FEFFFF
 6397 0057 4889CE   		movq	%rcx, %rsi
 6398 005a 4889C7   		movq	%rax, %rdi
 6399 005d E8000000 		call	_ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_
 6399      00
 6400 0062 83F001   		xorl	$1, %eax
 6401 0065 84C0     		testb	%al, %al
 6402 0067 0F84D800 		je	.L363
 6402      0000
 6403              	.LBB165:
  49:../Checks.h   ****     { 
  50:../Checks.h   ****         UnitTest::MemoryOutStream stream;
 6404              		.loc 8 50 0
 6405 006d 488D8570 		leaq	-400(%rbp), %rax
 6405      FEFFFF
 6406 0074 4889C7   		movq	%rax, %rdi
 6407              	.LEHB188:
 6408 0077 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 6408      00
 6409              	.LEHE188:
  51:../Checks.h   ****         stream << "Expected " << expected << " +/- " << tolerance << " but was " << actual;
 6410              		.loc 8 51 0
 6411 007c 488B8558 		movq	-424(%rbp), %rax
 6411      FEFFFF
 6412 0083 8B18     		movl	(%rax), %ebx
 6413 0085 488B8550 		movq	-432(%rbp), %rax
 6413      FEFFFF
 6414 008c 448B20   		movl	(%rax), %r12d
 6415 008f 488B8560 		movq	-416(%rbp), %rax
 6415      FEFFFF
 6416 0096 448B28   		movl	(%rax), %r13d
 6417 0099 488D8570 		leaq	-400(%rbp), %rax
 6417      FEFFFF
 6418 00a0 BE000000 		movl	$.LC34, %esi
 6418      00
 6419 00a5 4889C7   		movq	%rax, %rdi
 6420              	.LEHB189:
 6421 00a8 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6421      00
 6422 00ad 4489AD44 		movl	%r13d, -444(%rbp)
 6422      FEFFFF
 6423 00b4 F30F1085 		movss	-444(%rbp), %xmm0
 6423      44FEFFFF 
 6424 00bc 4889C7   		movq	%rax, %rdi
 6425 00bf E8000000 		call	_ZNSolsEf
 6425      00
 6426              		.loc 8 51 0 is_stmt 0 discriminator 1
 6427 00c4 BE000000 		movl	$.LC36, %esi
 6427      00
 6428 00c9 4889C7   		movq	%rax, %rdi
 6429 00cc E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6429      00
 6430              		.loc 8 51 0 discriminator 2
 6431 00d1 4489A544 		movl	%r12d, -444(%rbp)
 6431      FEFFFF
 6432 00d8 F30F1085 		movss	-444(%rbp), %xmm0
 6432      44FEFFFF 
 6433 00e0 4889C7   		movq	%rax, %rdi
 6434 00e3 E8000000 		call	_ZNSolsEf
 6434      00
 6435              		.loc 8 51 0 discriminator 3
 6436 00e8 BE000000 		movl	$.LC35, %esi
 6436      00
 6437 00ed 4889C7   		movq	%rax, %rdi
 6438 00f0 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6438      00
 6439              		.loc 8 51 0 discriminator 4
 6440 00f5 899D44FE 		movl	%ebx, -444(%rbp)
 6440      FFFF
 6441 00fb F30F1085 		movss	-444(%rbp), %xmm0
 6441      44FEFFFF 
 6442 0103 4889C7   		movq	%rax, %rdi
 6443 0106 E8000000 		call	_ZNSolsEf
 6443      00
  52:../Checks.h   **** 
  53:../Checks.h   ****         results.OnTestFailure(details, stream.GetText());
 6444              		.loc 8 53 0 is_stmt 1
 6445 010b 488D8570 		leaq	-400(%rbp), %rax
 6445      FEFFFF
 6446 0112 4889C7   		movq	%rax, %rdi
 6447 0115 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 6447      00
 6448 011a 4889C2   		movq	%rax, %rdx
 6449 011d 488B8D48 		movq	-440(%rbp), %rcx
 6449      FEFFFF
 6450 0124 488B8568 		movq	-408(%rbp), %rax
 6450      FEFFFF
 6451 012b 4889CE   		movq	%rcx, %rsi
 6452 012e 4889C7   		movq	%rax, %rdi
 6453 0131 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6453      00
 6454              	.LEHE189:
 6455              		.loc 8 53 0 is_stmt 0 discriminator 4
 6456 0136 488D8570 		leaq	-400(%rbp), %rax
 6456      FEFFFF
 6457 013d 4889C7   		movq	%rax, %rdi
 6458              	.LEHB190:
 6459 0140 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6459      00
 6460              	.LEHE190:
 6461              	.L363:
 6462              	.LBE165:
 6463              	.LBE164:
 6464              	.LBE163:
  54:../Checks.h   ****     }
  55:../Checks.h   **** }
 6465              		.loc 8 55 0 is_stmt 1
 6466 0145 488B45D8 		movq	-40(%rbp), %rax
 6467 0149 64483304 		xorq	%fs:40, %rax
 6467      25280000 
 6467      00
 6468 0152 7424     		je	.L365
 6469 0154 EB1D     		jmp	.L367
 6470              	.L366:
 6471 0156 4889C3   		movq	%rax, %rbx
 6472              	.LBB168:
 6473              	.LBB167:
 6474              	.LBB166:
  53:../Checks.h   ****     }
 6475              		.loc 8 53 0
 6476 0159 488D8570 		leaq	-400(%rbp), %rax
 6476      FEFFFF
 6477 0160 4889C7   		movq	%rax, %rdi
 6478 0163 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6478      00
 6479 0168 4889D8   		movq	%rbx, %rax
 6480 016b 4889C7   		movq	%rax, %rdi
 6481              	.LEHB191:
 6482 016e E8000000 		call	_Unwind_Resume
 6482      00
 6483              	.LEHE191:
 6484              	.L367:
 6485              	.LBE166:
 6486              	.LBE167:
 6487              	.LBE168:
 6488              		.loc 8 55 0
 6489 0173 E8000000 		call	__stack_chk_fail
 6489      00
 6490              	.L365:
 6491 0178 4881C4A8 		addq	$424, %rsp
 6491      010000
 6492 017f 5B       		popq	%rbx
 6493 0180 415C     		popq	%r12
 6494 0182 415D     		popq	%r13
 6495 0184 5D       		popq	%rbp
 6496              		.cfi_def_cfa 7, 8
 6497 0185 C3       		ret
 6498              		.cfi_endproc
 6499              	.LFE1468:
 6500              		.section	.gcc_except_table
 6501              	.LLSDA1468:
 6502 0504 FF       		.byte	0xff
 6503 0505 FF       		.byte	0xff
 6504 0506 01       		.byte	0x1
 6505 0507 15       		.uleb128 .LLSDACSE1468-.LLSDACSB1468
 6506              	.LLSDACSB1468:
 6507 0508 77       		.uleb128 .LEHB188-.LFB1468
 6508 0509 05       		.uleb128 .LEHE188-.LEHB188
 6509 050a 00       		.uleb128 0
 6510 050b 00       		.uleb128 0
 6511 050c A801     		.uleb128 .LEHB189-.LFB1468
 6512 050e 8E01     		.uleb128 .LEHE189-.LEHB189
 6513 0510 D602     		.uleb128 .L366-.LFB1468
 6514 0512 00       		.uleb128 0
 6515 0513 C002     		.uleb128 .LEHB190-.LFB1468
 6516 0515 05       		.uleb128 .LEHE190-.LEHB190
 6517 0516 00       		.uleb128 0
 6518 0517 00       		.uleb128 0
 6519 0518 EE02     		.uleb128 .LEHB191-.LFB1468
 6520 051a 05       		.uleb128 .LEHE191-.LEHB191
 6521 051b 00       		.uleb128 0
 6522 051c 00       		.uleb128 0
 6523              	.LLSDACSE1468:
 6524              		.section	.text._ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE,
 6526              		.text
 6528              	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDe
 6529              	.LFB1469:
  16:../ExecuteTest.h **** {
 6530              		.loc 7 16 0
 6531              		.cfi_startproc
 6532              		.cfi_personality 0x3,__gxx_personality_v0
 6533              		.cfi_lsda 0x3,.LLSDA1469
 6534 2a82 55       		pushq	%rbp
 6535              		.cfi_def_cfa_offset 16
 6536              		.cfi_offset 6, -16
 6537 2a83 4889E5   		movq	%rsp, %rbp
 6538              		.cfi_def_cfa_register 6
 6539 2a86 4154     		pushq	%r12
 6540 2a88 53       		pushq	%rbx
 6541 2a89 4881EC20 		subq	$1568, %rsp
 6541      060000
 6542              		.cfi_offset 12, -24
 6543              		.cfi_offset 3, -32
 6544 2a90 4889BDD8 		movq	%rdi, -1576(%rbp)
 6544      F9FFFF
 6545 2a97 4889B5D0 		movq	%rsi, -1584(%rbp)
 6545      F9FFFF
  16:../ExecuteTest.h **** {
 6546              		.loc 7 16 0
 6547 2a9e 64488B04 		movq	%fs:40, %rax
 6547      25280000 
 6547      00
 6548 2aa7 488945E8 		movq	%rax, -24(%rbp)
 6549 2aab 31C0     		xorl	%eax, %eax
 6550              	.LEHB192:
 6551              	.LBB169:
  18:../ExecuteTest.h **** 
 6552              		.loc 7 18 0
 6553 2aad E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 6553      00
 6554              	.LEHE192:
 6555 2ab2 4889C2   		movq	%rax, %rdx
 6556 2ab5 488B85D0 		movq	-1584(%rbp), %rax
 6556      F9FFFF
 6557 2abc 488902   		movq	%rax, (%rdx)
 6558              	.LBB170:
  23:../ExecuteTest.h **** #endif
 6559              		.loc 7 23 0
 6560 2abf 488D8580 		leaq	-1152(%rbp), %rax
 6560      FBFFFF
 6561 2ac6 4889C7   		movq	%rax, %rdi
 6562              	.LEHB193:
 6563 2ac9 E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev
 6563      00
 6564              	.LEHE193:
  23:../ExecuteTest.h **** #endif
 6565              		.loc 7 23 0 is_stmt 0 discriminator 1
 6566 2ace 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 6566      000000
 6567 2ad5 BE010000 		movl	$1, %esi
 6567      00
 6568 2ada 4889C7   		movq	%rax, %rdi
 6569 2add E8000000 		call	__sigsetjmp
 6569      00
 6570 2ae2 85C0     		testl	%eax, %eax
 6571 2ae4 0F95C0   		setne	%al
 6572 2ae7 84C0     		testb	%al, %al
 6573 2ae9 7423     		je	.L388
  23:../ExecuteTest.h **** #endif
 6574              		.loc 7 23 0 discriminator 3
 6575 2aeb BF080000 		movl	$8, %edi
 6575      00
 6576 2af0 E8000000 		call	__cxa_allocate_exception
 6576      00
 6577 2af5 48C70000 		movq	$.LC32, (%rax)
 6577      000000
 6578 2afc BA000000 		movl	$0, %edx
 6578      00
 6579 2b01 BE000000 		movl	$_ZTIPKc, %esi
 6579      00
 6580 2b06 4889C7   		movq	%rax, %rdi
 6581              	.LEHB194:
 6582 2b09 E8000000 		call	__cxa_throw
 6582      00
 6583              	.L388:
  25:../ExecuteTest.h **** 	}
 6584              		.loc 7 25 0 is_stmt 1
 6585 2b0e 488B85D8 		movq	-1576(%rbp), %rax
 6585      F9FFFF
 6586 2b15 4889C7   		movq	%rax, %rdi
 6587 2b18 E8AFE9FF 		call	_ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelper
 6587      FF
 6588              	.LEHE194:
  25:../ExecuteTest.h **** 	}
 6589              		.loc 7 25 0 is_stmt 0 discriminator 2
 6590 2b1d 488D8580 		leaq	-1152(%rbp), %rax
 6590      FBFFFF
 6591 2b24 4889C7   		movq	%rax, %rdi
 6592              	.LEHB195:
 6593 2b27 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 6593      00
 6594              	.LEHE195:
 6595              	.LBE170:
 6596              	.LBE169:
 6597              		.loc 7 42 0 is_stmt 1
 6598 2b2c E9EE0100 		jmp	.L390
 6598      00
 6599              	.L383:
 6600 2b31 4989C4   		movq	%rax, %r12
 6601 2b34 4889D3   		movq	%rdx, %rbx
 6602              	.LBB178:
 6603              	.LBB171:
  25:../ExecuteTest.h **** 	}
 6604              		.loc 7 25 0
 6605 2b37 488D8580 		leaq	-1152(%rbp), %rax
 6605      FBFFFF
 6606 2b3e 4889C7   		movq	%rax, %rdi
 6607 2b41 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 6607      00
 6608 2b46 4C89E0   		movq	%r12, %rax
 6609 2b49 4889DA   		movq	%rbx, %rdx
 6610 2b4c EB00     		jmp	.L372
 6611              	.L382:
 6612              	.L372:
 6613 2b4e 4883FA01 		cmpq	$1, %rdx
 6614 2b52 745C     		je	.L374
 6615 2b54 4883FA02 		cmpq	$2, %rdx
 6616 2b58 0F84F300 		je	.L375
 6616      0000
 6617 2b5e E9900100 		jmp	.L389
 6617      00
 6618              	.L384:
 6619 2b63 4889C3   		movq	%rax, %rbx
 6620              	.LBE171:
 6621              	.LBB172:
  27:../ExecuteTest.h **** 	{
 6622              		.loc 7 27 0
 6623 2b66 E8000000 		call	__cxa_end_catch
 6623      00
 6624 2b6b 4889D8   		movq	%rbx, %rax
 6625 2b6e 4889C7   		movq	%rax, %rdi
 6626              	.LEHB196:
 6627 2b71 E8000000 		call	_Unwind_Resume
 6627      00
 6628              	.LEHE196:
 6629              	.L385:
 6630 2b76 4889C3   		movq	%rax, %rbx
 6631              	.LBE172:
 6632              	.LBB173:
 6633              	.LBB174:
  36:../ExecuteTest.h **** 	}
 6634              		.loc 7 36 0
 6635 2b79 488D8510 		leaq	-1520(%rbp), %rax
 6635      FAFFFF
 6636 2b80 4889C7   		movq	%rax, %rdi
 6637 2b83 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6637      00
 6638 2b88 EB03     		jmp	.L378
 6639              	.L386:
 6640 2b8a 4889C3   		movq	%rax, %rbx
 6641              	.L378:
 6642              	.LBE174:
  32:../ExecuteTest.h **** 	{
 6643              		.loc 7 32 0
 6644 2b8d E8000000 		call	__cxa_end_catch
 6644      00
 6645 2b92 4889D8   		movq	%rbx, %rax
 6646 2b95 4889C7   		movq	%rax, %rdi
 6647              	.LEHB197:
 6648 2b98 E8000000 		call	_Unwind_Resume
 6648      00
 6649              	.LEHE197:
 6650              	.L387:
 6651 2b9d 4889C3   		movq	%rax, %rbx
 6652              	.LBE173:
  38:../ExecuteTest.h **** 	{
 6653              		.loc 7 38 0
 6654 2ba0 E8000000 		call	__cxa_end_catch
 6654      00
 6655 2ba5 4889D8   		movq	%rbx, %rax
 6656 2ba8 4889C7   		movq	%rax, %rdi
 6657              	.LEHB198:
 6658 2bab E8000000 		call	_Unwind_Resume
 6658      00
 6659              	.LEHE198:
 6660              	.L374:
 6661              	.LBB176:
  27:../ExecuteTest.h **** 	{
 6662              		.loc 7 27 0
 6663 2bb0 4889C7   		movq	%rax, %rdi
 6664 2bb3 E8000000 		call	__cxa_begin_catch
 6664      00
 6665 2bb8 488985E0 		movq	%rax, -1568(%rbp)
 6665      F9FFFF
  30:../ExecuteTest.h **** 	}
 6666              		.loc 7 30 0
 6667 2bbf 488B85E0 		movq	-1568(%rbp), %rax
 6667      F9FFFF
 6668 2bc6 488B00   		movq	(%rax), %rax
 6669 2bc9 4883C010 		addq	$16, %rax
 6670 2bcd 488B00   		movq	(%rax), %rax
 6671 2bd0 488B95E0 		movq	-1568(%rbp), %rdx
 6671      F9FFFF
 6672 2bd7 4889D7   		movq	%rdx, %rdi
 6673 2bda FFD0     		call	*%rax
 6674 2bdc 4889C3   		movq	%rax, %rbx
 6675 2bdf 488B85E0 		movq	-1568(%rbp), %rax
 6675      F9FFFF
 6676 2be6 4889C7   		movq	%rax, %rdi
 6677              	.LEHB199:
 6678 2be9 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 6678      00
  30:../ExecuteTest.h **** 	}
 6679              		.loc 7 30 0 is_stmt 0 discriminator 1
 6680 2bee 4189C4   		movl	%eax, %r12d
 6681 2bf1 488B85E0 		movq	-1568(%rbp), %rax
 6681      F9FFFF
 6682 2bf8 4889C7   		movq	%rax, %rdi
 6683 2bfb E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 6683      00
  30:../ExecuteTest.h **** 	}
 6684              		.loc 7 30 0 discriminator 2
 6685 2c00 4889C1   		movq	%rax, %rcx
 6686 2c03 488B85D0 		movq	-1584(%rbp), %rax
 6686      F9FFFF
 6687 2c0a 488B10   		movq	(%rax), %rdx
 6688 2c0d 488B85D0 		movq	-1584(%rbp), %rax
 6688      F9FFFF
 6689 2c14 488B7008 		movq	8(%rax), %rsi
 6690 2c18 488D85F0 		leaq	-1552(%rbp), %rax
 6690      F9FFFF
 6691 2c1f 4589E0   		movl	%r12d, %r8d
 6692 2c22 4889C7   		movq	%rax, %rdi
 6693 2c25 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 6693      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6694              		.loc 7 29 0 is_stmt 1
 6695 2c2a E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6695      00
  30:../ExecuteTest.h **** 	}
 6696              		.loc 7 30 0
 6697 2c2f 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6698              		.loc 7 29 0
 6699 2c32 488D8DF0 		leaq	-1552(%rbp), %rcx
 6699      F9FFFF
 6700 2c39 4889DA   		movq	%rbx, %rdx
 6701 2c3c 4889CE   		movq	%rcx, %rsi
 6702 2c3f 4889C7   		movq	%rax, %rdi
 6703 2c42 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6703      00
 6704              	.LEHE199:
  27:../ExecuteTest.h **** 	{
 6705              		.loc 7 27 0
 6706 2c47 E8000000 		call	__cxa_end_catch
 6706      00
 6707              	.LBE176:
 6708              	.LBE178:
 6709              		.loc 7 42 0
 6710 2c4c E9CE0000 		jmp	.L390
 6710      00
 6711              	.L375:
 6712              	.LBB179:
 6713              	.LBB177:
  32:../ExecuteTest.h **** 	{
 6714              		.loc 7 32 0
 6715 2c51 4889C7   		movq	%rax, %rdi
 6716 2c54 E8000000 		call	__cxa_begin_catch
 6716      00
 6717 2c59 488985E8 		movq	%rax, -1560(%rbp)
 6717      F9FFFF
 6718              	.LBB175:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6719              		.loc 7 34 0
 6720 2c60 488D8510 		leaq	-1520(%rbp), %rax
 6720      FAFFFF
 6721 2c67 4889C7   		movq	%rax, %rdi
 6722              	.LEHB200:
 6723 2c6a E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 6723      00
 6724              	.LEHE200:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 6725              		.loc 7 35 0
 6726 2c6f 488B85E8 		movq	-1560(%rbp), %rax
 6726      F9FFFF
 6727 2c76 488B00   		movq	(%rax), %rax
 6728 2c79 4883C010 		addq	$16, %rax
 6729 2c7d 488B00   		movq	(%rax), %rax
 6730 2c80 488B95E8 		movq	-1560(%rbp), %rdx
 6730      F9FFFF
 6731 2c87 4889D7   		movq	%rdx, %rdi
 6732 2c8a FFD0     		call	*%rax
 6733 2c8c 4889C3   		movq	%rax, %rbx
 6734 2c8f 488D8510 		leaq	-1520(%rbp), %rax
 6734      FAFFFF
 6735 2c96 BE000000 		movl	$.LC6, %esi
 6735      00
 6736 2c9b 4889C7   		movq	%rax, %rdi
 6737              	.LEHB201:
 6738 2c9e E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6738      00
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 6739              		.loc 7 35 0 is_stmt 0 discriminator 1
 6740 2ca3 4889DE   		movq	%rbx, %rsi
 6741 2ca6 4889C7   		movq	%rax, %rdi
 6742 2ca9 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6742      00
  36:../ExecuteTest.h **** 	}
 6743              		.loc 7 36 0 is_stmt 1
 6744 2cae 488D8510 		leaq	-1520(%rbp), %rax
 6744      FAFFFF
 6745 2cb5 4889C7   		movq	%rax, %rdi
 6746 2cb8 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 6746      00
 6747 2cbd 4889C3   		movq	%rax, %rbx
 6748 2cc0 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6748      00
  36:../ExecuteTest.h **** 	}
 6749              		.loc 7 36 0 is_stmt 0 discriminator 2
 6750 2cc5 488B00   		movq	(%rax), %rax
 6751 2cc8 488B8DD0 		movq	-1584(%rbp), %rcx
 6751      F9FFFF
 6752 2ccf 4889DA   		movq	%rbx, %rdx
 6753 2cd2 4889CE   		movq	%rcx, %rsi
 6754 2cd5 4889C7   		movq	%rax, %rdi
 6755 2cd8 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6755      00
 6756              	.LEHE201:
  36:../ExecuteTest.h **** 	}
 6757              		.loc 7 36 0 discriminator 6
 6758 2cdd 488D8510 		leaq	-1520(%rbp), %rax
 6758      FAFFFF
 6759 2ce4 4889C7   		movq	%rax, %rdi
 6760              	.LEHB202:
 6761 2ce7 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6761      00
 6762              	.LEHE202:
 6763              	.LBE175:
  32:../ExecuteTest.h **** 	{
 6764              		.loc 7 32 0 is_stmt 1
 6765 2cec E8000000 		call	__cxa_end_catch
 6765      00
 6766              	.LBE177:
 6767              	.LBE179:
 6768              		.loc 7 42 0
 6769 2cf1 EB2C     		jmp	.L390
 6770              	.L389:
 6771              	.LBB180:
  38:../ExecuteTest.h **** 	{
 6772              		.loc 7 38 0
 6773 2cf3 4889C7   		movq	%rax, %rdi
 6774 2cf6 E8000000 		call	__cxa_begin_catch
 6774      00
 6775              	.LEHB203:
  40:../ExecuteTest.h **** 	}
 6776              		.loc 7 40 0
 6777 2cfb E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6777      00
 6778 2d00 488B00   		movq	(%rax), %rax
 6779 2d03 488B8DD0 		movq	-1584(%rbp), %rcx
 6779      F9FFFF
 6780 2d0a BA000000 		movl	$.LC33, %edx
 6780      00
 6781 2d0f 4889CE   		movq	%rcx, %rsi
 6782 2d12 4889C7   		movq	%rax, %rdi
 6783 2d15 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6783      00
 6784              	.LEHE203:
 6785              	.LEHB204:
  38:../ExecuteTest.h **** 	{
 6786              		.loc 7 38 0
 6787 2d1a E8000000 		call	__cxa_end_catch
 6787      00
 6788              	.LEHE204:
 6789              	.L390:
 6790              	.LBE180:
 6791              		.loc 7 42 0
 6792 2d1f 90       		nop
 6793 2d20 488B45E8 		movq	-24(%rbp), %rax
 6794 2d24 64483304 		xorq	%fs:40, %rax
 6794      25280000 
 6794      00
 6795 2d2d 7405     		je	.L381
 6796 2d2f E8000000 		call	__stack_chk_fail
 6796      00
 6797              	.L381:
 6798 2d34 4881C420 		addq	$1568, %rsp
 6798      060000
 6799 2d3b 5B       		popq	%rbx
 6800 2d3c 415C     		popq	%r12
 6801 2d3e 5D       		popq	%rbp
 6802              		.cfi_def_cfa 7, 8
 6803 2d3f C3       		ret
 6804              		.cfi_endproc
 6805              	.LFE1469:
 6806              		.section	.gcc_except_table
 6807 051d 000000   		.align 4
 6808              	.LLSDA1469:
 6809 0520 FF       		.byte	0xff
 6810 0521 03       		.byte	0x3
 6811 0522 5D       		.uleb128 .LLSDATT1469-.LLSDATTD1469
 6812              	.LLSDATTD1469:
 6813 0523 01       		.byte	0x1
 6814 0524 47       		.uleb128 .LLSDACSE1469-.LLSDACSB1469
 6815              	.LLSDACSB1469:
 6816 0525 2B       		.uleb128 .LEHB192-.LFB1469
 6817 0526 05       		.uleb128 .LEHE192-.LEHB192
 6818 0527 00       		.uleb128 0
 6819 0528 00       		.uleb128 0
 6820 0529 47       		.uleb128 .LEHB193-.LFB1469
 6821 052a 05       		.uleb128 .LEHE193-.LEHB193
 6822 052b CC01     		.uleb128 .L382-.LFB1469
 6823 052d 05       		.uleb128 0x5
 6824 052e 8701     		.uleb128 .LEHB194-.LFB1469
 6825 0530 14       		.uleb128 .LEHE194-.LEHB194
 6826 0531 AF01     		.uleb128 .L383-.LFB1469
 6827 0533 07       		.uleb128 0x7
 6828 0534 A501     		.uleb128 .LEHB195-.LFB1469
 6829 0536 05       		.uleb128 .LEHE195-.LEHB195
 6830 0537 CC01     		.uleb128 .L382-.LFB1469
 6831 0539 05       		.uleb128 0x5
 6832 053a EF01     		.uleb128 .LEHB196-.LFB1469
 6833 053c 05       		.uleb128 .LEHE196-.LEHB196
 6834 053d 00       		.uleb128 0
 6835 053e 00       		.uleb128 0
 6836 053f 9602     		.uleb128 .LEHB197-.LFB1469
 6837 0541 05       		.uleb128 .LEHE197-.LEHB197
 6838 0542 00       		.uleb128 0
 6839 0543 00       		.uleb128 0
 6840 0544 A902     		.uleb128 .LEHB198-.LFB1469
 6841 0546 05       		.uleb128 .LEHE198-.LEHB198
 6842 0547 00       		.uleb128 0
 6843 0548 00       		.uleb128 0
 6844 0549 E702     		.uleb128 .LEHB199-.LFB1469
 6845 054b 5E       		.uleb128 .LEHE199-.LEHB199
 6846 054c E101     		.uleb128 .L384-.LFB1469
 6847 054e 00       		.uleb128 0
 6848 054f E803     		.uleb128 .LEHB200-.LFB1469
 6849 0551 05       		.uleb128 .LEHE200-.LEHB200
 6850 0552 8802     		.uleb128 .L386-.LFB1469
 6851 0554 00       		.uleb128 0
 6852 0555 9C04     		.uleb128 .LEHB201-.LFB1469
 6853 0557 3F       		.uleb128 .LEHE201-.LEHB201
 6854 0558 F401     		.uleb128 .L385-.LFB1469
 6855 055a 00       		.uleb128 0
 6856 055b E504     		.uleb128 .LEHB202-.LFB1469
 6857 055d 05       		.uleb128 .LEHE202-.LEHB202
 6858 055e 8802     		.uleb128 .L386-.LFB1469
 6859 0560 00       		.uleb128 0
 6860 0561 F904     		.uleb128 .LEHB203-.LFB1469
 6861 0563 1F       		.uleb128 .LEHE203-.LEHB203
 6862 0564 9B02     		.uleb128 .L387-.LFB1469
 6863 0566 00       		.uleb128 0
 6864 0567 9805     		.uleb128 .LEHB204-.LFB1469
 6865 0569 05       		.uleb128 .LEHE204-.LEHB204
 6866 056a 00       		.uleb128 0
 6867 056b 00       		.uleb128 0
 6868              	.LLSDACSE1469:
 6869 056c 03       		.byte	0x3
 6870 056d 00       		.byte	0
 6871 056e 02       		.byte	0x2
 6872 056f 7D       		.byte	0x7d
 6873 0570 01       		.byte	0x1
 6874 0571 7D       		.byte	0x7d
 6875 0572 00       		.byte	0
 6876 0573 7D       		.byte	0x7d
 6877              		.align 4
 6878 0574 00000000 		.long	0
 6879              	
 6880 0578 00000000 		.long	_ZTISt9exception
 6881 057c 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 6882              	.LLSDATT1469:
 6883              		.text
 6885              		.section	.text._ZN8UnitTest5CheckIbEEbT_,"axG",@progbits,_ZN8UnitTest5CheckIbEEbT_,comdat
 6886              		.weak	_ZN8UnitTest5CheckIbEEbT_
 6888              	_ZN8UnitTest5CheckIbEEbT_:
 6889              	.LFB1470:
  12:../Checks.h   **** {
 6890              		.loc 8 12 0
 6891              		.cfi_startproc
 6892 0000 55       		pushq	%rbp
 6893              		.cfi_def_cfa_offset 16
 6894              		.cfi_offset 6, -16
 6895 0001 4889E5   		movq	%rsp, %rbp
 6896              		.cfi_def_cfa_register 6
 6897 0004 89F8     		movl	%edi, %eax
 6898 0006 8845FC   		movb	%al, -4(%rbp)
  14:../Checks.h   **** }
 6899              		.loc 8 14 0
 6900 0009 0FB645FC 		movzbl	-4(%rbp), %eax
  15:../Checks.h   **** 
 6901              		.loc 8 15 0
 6902 000d 5D       		popq	%rbp
 6903              		.cfi_def_cfa 7, 8
 6904 000e C3       		ret
 6905              		.cfi_endproc
 6906              	.LFE1470:
 6908              		.text
 6910              	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDe
 6911              	.LFB1471:
  16:../ExecuteTest.h **** {
 6912              		.loc 7 16 0
 6913              		.cfi_startproc
 6914              		.cfi_personality 0x3,__gxx_personality_v0
 6915              		.cfi_lsda 0x3,.LLSDA1471
 6916 2d40 55       		pushq	%rbp
 6917              		.cfi_def_cfa_offset 16
 6918              		.cfi_offset 6, -16
 6919 2d41 4889E5   		movq	%rsp, %rbp
 6920              		.cfi_def_cfa_register 6
 6921 2d44 4154     		pushq	%r12
 6922 2d46 53       		pushq	%rbx
 6923 2d47 4881EC20 		subq	$1568, %rsp
 6923      060000
 6924              		.cfi_offset 12, -24
 6925              		.cfi_offset 3, -32
 6926 2d4e 4889BDD8 		movq	%rdi, -1576(%rbp)
 6926      F9FFFF
 6927 2d55 4889B5D0 		movq	%rsi, -1584(%rbp)
 6927      F9FFFF
  16:../ExecuteTest.h **** {
 6928              		.loc 7 16 0
 6929 2d5c 64488B04 		movq	%fs:40, %rax
 6929      25280000 
 6929      00
 6930 2d65 488945E8 		movq	%rax, -24(%rbp)
 6931 2d69 31C0     		xorl	%eax, %eax
 6932              	.LEHB205:
 6933              	.LBB181:
  18:../ExecuteTest.h **** 
 6934              		.loc 7 18 0
 6935 2d6b E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 6935      00
 6936              	.LEHE205:
 6937 2d70 4889C2   		movq	%rax, %rdx
 6938 2d73 488B85D0 		movq	-1584(%rbp), %rax
 6938      F9FFFF
 6939 2d7a 488902   		movq	%rax, (%rdx)
 6940              	.LBB182:
  23:../ExecuteTest.h **** #endif
 6941              		.loc 7 23 0
 6942 2d7d 488D8580 		leaq	-1152(%rbp), %rax
 6942      FBFFFF
 6943 2d84 4889C7   		movq	%rax, %rdi
 6944              	.LEHB206:
 6945 2d87 E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev
 6945      00
 6946              	.LEHE206:
  23:../ExecuteTest.h **** #endif
 6947              		.loc 7 23 0 is_stmt 0 discriminator 1
 6948 2d8c 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 6948      000000
 6949 2d93 BE010000 		movl	$1, %esi
 6949      00
 6950 2d98 4889C7   		movq	%rax, %rdi
 6951 2d9b E8000000 		call	__sigsetjmp
 6951      00
 6952 2da0 85C0     		testl	%eax, %eax
 6953 2da2 0F95C0   		setne	%al
 6954 2da5 84C0     		testb	%al, %al
 6955 2da7 7423     		je	.L413
  23:../ExecuteTest.h **** #endif
 6956              		.loc 7 23 0 discriminator 3
 6957 2da9 BF080000 		movl	$8, %edi
 6957      00
 6958 2dae E8000000 		call	__cxa_allocate_exception
 6958      00
 6959 2db3 48C70000 		movq	$.LC32, (%rax)
 6959      000000
 6960 2dba BA000000 		movl	$0, %edx
 6960      00
 6961 2dbf BE000000 		movl	$_ZTIPKc, %esi
 6961      00
 6962 2dc4 4889C7   		movq	%rax, %rdi
 6963              	.LEHB207:
 6964 2dc7 E8000000 		call	__cxa_throw
 6964      00
 6965              	.L413:
  25:../ExecuteTest.h **** 	}
 6966              		.loc 7 25 0 is_stmt 1
 6967 2dcc 488B85D8 		movq	-1576(%rbp), %rax
 6967      F9FFFF
 6968 2dd3 4889C7   		movq	%rax, %rdi
 6969 2dd6 E869ECFF 		call	_ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMul
 6969      FF
 6970              	.LEHE207:
  25:../ExecuteTest.h **** 	}
 6971              		.loc 7 25 0 is_stmt 0 discriminator 2
 6972 2ddb 488D8580 		leaq	-1152(%rbp), %rax
 6972      FBFFFF
 6973 2de2 4889C7   		movq	%rax, %rdi
 6974              	.LEHB208:
 6975 2de5 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 6975      00
 6976              	.LEHE208:
 6977              	.LBE182:
 6978              	.LBE181:
 6979              		.loc 7 42 0 is_stmt 1
 6980 2dea E9EE0100 		jmp	.L415
 6980      00
 6981              	.L408:
 6982 2def 4989C4   		movq	%rax, %r12
 6983 2df2 4889D3   		movq	%rdx, %rbx
 6984              	.LBB190:
 6985              	.LBB183:
  25:../ExecuteTest.h **** 	}
 6986              		.loc 7 25 0
 6987 2df5 488D8580 		leaq	-1152(%rbp), %rax
 6987      FBFFFF
 6988 2dfc 4889C7   		movq	%rax, %rdi
 6989 2dff E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 6989      00
 6990 2e04 4C89E0   		movq	%r12, %rax
 6991 2e07 4889DA   		movq	%rbx, %rdx
 6992 2e0a EB00     		jmp	.L397
 6993              	.L407:
 6994              	.L397:
 6995 2e0c 4883FA01 		cmpq	$1, %rdx
 6996 2e10 745C     		je	.L399
 6997 2e12 4883FA02 		cmpq	$2, %rdx
 6998 2e16 0F84F300 		je	.L400
 6998      0000
 6999 2e1c E9900100 		jmp	.L414
 6999      00
 7000              	.L409:
 7001 2e21 4889C3   		movq	%rax, %rbx
 7002              	.LBE183:
 7003              	.LBB184:
  27:../ExecuteTest.h **** 	{
 7004              		.loc 7 27 0
 7005 2e24 E8000000 		call	__cxa_end_catch
 7005      00
 7006 2e29 4889D8   		movq	%rbx, %rax
 7007 2e2c 4889C7   		movq	%rax, %rdi
 7008              	.LEHB209:
 7009 2e2f E8000000 		call	_Unwind_Resume
 7009      00
 7010              	.LEHE209:
 7011              	.L410:
 7012 2e34 4889C3   		movq	%rax, %rbx
 7013              	.LBE184:
 7014              	.LBB185:
 7015              	.LBB186:
  36:../ExecuteTest.h **** 	}
 7016              		.loc 7 36 0
 7017 2e37 488D8510 		leaq	-1520(%rbp), %rax
 7017      FAFFFF
 7018 2e3e 4889C7   		movq	%rax, %rdi
 7019 2e41 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7019      00
 7020 2e46 EB03     		jmp	.L403
 7021              	.L411:
 7022 2e48 4889C3   		movq	%rax, %rbx
 7023              	.L403:
 7024              	.LBE186:
  32:../ExecuteTest.h **** 	{
 7025              		.loc 7 32 0
 7026 2e4b E8000000 		call	__cxa_end_catch
 7026      00
 7027 2e50 4889D8   		movq	%rbx, %rax
 7028 2e53 4889C7   		movq	%rax, %rdi
 7029              	.LEHB210:
 7030 2e56 E8000000 		call	_Unwind_Resume
 7030      00
 7031              	.LEHE210:
 7032              	.L412:
 7033 2e5b 4889C3   		movq	%rax, %rbx
 7034              	.LBE185:
  38:../ExecuteTest.h **** 	{
 7035              		.loc 7 38 0
 7036 2e5e E8000000 		call	__cxa_end_catch
 7036      00
 7037 2e63 4889D8   		movq	%rbx, %rax
 7038 2e66 4889C7   		movq	%rax, %rdi
 7039              	.LEHB211:
 7040 2e69 E8000000 		call	_Unwind_Resume
 7040      00
 7041              	.LEHE211:
 7042              	.L399:
 7043              	.LBB188:
  27:../ExecuteTest.h **** 	{
 7044              		.loc 7 27 0
 7045 2e6e 4889C7   		movq	%rax, %rdi
 7046 2e71 E8000000 		call	__cxa_begin_catch
 7046      00
 7047 2e76 488985E0 		movq	%rax, -1568(%rbp)
 7047      F9FFFF
  30:../ExecuteTest.h **** 	}
 7048              		.loc 7 30 0
 7049 2e7d 488B85E0 		movq	-1568(%rbp), %rax
 7049      F9FFFF
 7050 2e84 488B00   		movq	(%rax), %rax
 7051 2e87 4883C010 		addq	$16, %rax
 7052 2e8b 488B00   		movq	(%rax), %rax
 7053 2e8e 488B95E0 		movq	-1568(%rbp), %rdx
 7053      F9FFFF
 7054 2e95 4889D7   		movq	%rdx, %rdi
 7055 2e98 FFD0     		call	*%rax
 7056 2e9a 4889C3   		movq	%rax, %rbx
 7057 2e9d 488B85E0 		movq	-1568(%rbp), %rax
 7057      F9FFFF
 7058 2ea4 4889C7   		movq	%rax, %rdi
 7059              	.LEHB212:
 7060 2ea7 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 7060      00
  30:../ExecuteTest.h **** 	}
 7061              		.loc 7 30 0 is_stmt 0 discriminator 1
 7062 2eac 4189C4   		movl	%eax, %r12d
 7063 2eaf 488B85E0 		movq	-1568(%rbp), %rax
 7063      F9FFFF
 7064 2eb6 4889C7   		movq	%rax, %rdi
 7065 2eb9 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 7065      00
  30:../ExecuteTest.h **** 	}
 7066              		.loc 7 30 0 discriminator 2
 7067 2ebe 4889C1   		movq	%rax, %rcx
 7068 2ec1 488B85D0 		movq	-1584(%rbp), %rax
 7068      F9FFFF
 7069 2ec8 488B10   		movq	(%rax), %rdx
 7070 2ecb 488B85D0 		movq	-1584(%rbp), %rax
 7070      F9FFFF
 7071 2ed2 488B7008 		movq	8(%rax), %rsi
 7072 2ed6 488D85F0 		leaq	-1552(%rbp), %rax
 7072      F9FFFF
 7073 2edd 4589E0   		movl	%r12d, %r8d
 7074 2ee0 4889C7   		movq	%rax, %rdi
 7075 2ee3 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 7075      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7076              		.loc 7 29 0 is_stmt 1
 7077 2ee8 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 7077      00
  30:../ExecuteTest.h **** 	}
 7078              		.loc 7 30 0
 7079 2eed 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7080              		.loc 7 29 0
 7081 2ef0 488D8DF0 		leaq	-1552(%rbp), %rcx
 7081      F9FFFF
 7082 2ef7 4889DA   		movq	%rbx, %rdx
 7083 2efa 4889CE   		movq	%rcx, %rsi
 7084 2efd 4889C7   		movq	%rax, %rdi
 7085 2f00 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 7085      00
 7086              	.LEHE212:
  27:../ExecuteTest.h **** 	{
 7087              		.loc 7 27 0
 7088 2f05 E8000000 		call	__cxa_end_catch
 7088      00
 7089              	.LBE188:
 7090              	.LBE190:
 7091              		.loc 7 42 0
 7092 2f0a E9CE0000 		jmp	.L415
 7092      00
 7093              	.L400:
 7094              	.LBB191:
 7095              	.LBB189:
  32:../ExecuteTest.h **** 	{
 7096              		.loc 7 32 0
 7097 2f0f 4889C7   		movq	%rax, %rdi
 7098 2f12 E8000000 		call	__cxa_begin_catch
 7098      00
 7099 2f17 488985E8 		movq	%rax, -1560(%rbp)
 7099      F9FFFF
 7100              	.LBB187:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 7101              		.loc 7 34 0
 7102 2f1e 488D8510 		leaq	-1520(%rbp), %rax
 7102      FAFFFF
 7103 2f25 4889C7   		movq	%rax, %rdi
 7104              	.LEHB213:
 7105 2f28 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 7105      00
 7106              	.LEHE213:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 7107              		.loc 7 35 0
 7108 2f2d 488B85E8 		movq	-1560(%rbp), %rax
 7108      F9FFFF
 7109 2f34 488B00   		movq	(%rax), %rax
 7110 2f37 4883C010 		addq	$16, %rax
 7111 2f3b 488B00   		movq	(%rax), %rax
 7112 2f3e 488B95E8 		movq	-1560(%rbp), %rdx
 7112      F9FFFF
 7113 2f45 4889D7   		movq	%rdx, %rdi
 7114 2f48 FFD0     		call	*%rax
 7115 2f4a 4889C3   		movq	%rax, %rbx
 7116 2f4d 488D8510 		leaq	-1520(%rbp), %rax
 7116      FAFFFF
 7117 2f54 BE000000 		movl	$.LC6, %esi
 7117      00
 7118 2f59 4889C7   		movq	%rax, %rdi
 7119              	.LEHB214:
 7120 2f5c E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 7120      00
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 7121              		.loc 7 35 0 is_stmt 0 discriminator 1
 7122 2f61 4889DE   		movq	%rbx, %rsi
 7123 2f64 4889C7   		movq	%rax, %rdi
 7124 2f67 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 7124      00
  36:../ExecuteTest.h **** 	}
 7125              		.loc 7 36 0 is_stmt 1
 7126 2f6c 488D8510 		leaq	-1520(%rbp), %rax
 7126      FAFFFF
 7127 2f73 4889C7   		movq	%rax, %rdi
 7128 2f76 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 7128      00
 7129 2f7b 4889C3   		movq	%rax, %rbx
 7130 2f7e E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 7130      00
  36:../ExecuteTest.h **** 	}
 7131              		.loc 7 36 0 is_stmt 0 discriminator 2
 7132 2f83 488B00   		movq	(%rax), %rax
 7133 2f86 488B8DD0 		movq	-1584(%rbp), %rcx
 7133      F9FFFF
 7134 2f8d 4889DA   		movq	%rbx, %rdx
 7135 2f90 4889CE   		movq	%rcx, %rsi
 7136 2f93 4889C7   		movq	%rax, %rdi
 7137 2f96 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 7137      00
 7138              	.LEHE214:
  36:../ExecuteTest.h **** 	}
 7139              		.loc 7 36 0 discriminator 6
 7140 2f9b 488D8510 		leaq	-1520(%rbp), %rax
 7140      FAFFFF
 7141 2fa2 4889C7   		movq	%rax, %rdi
 7142              	.LEHB215:
 7143 2fa5 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7143      00
 7144              	.LEHE215:
 7145              	.LBE187:
  32:../ExecuteTest.h **** 	{
 7146              		.loc 7 32 0 is_stmt 1
 7147 2faa E8000000 		call	__cxa_end_catch
 7147      00
 7148              	.LBE189:
 7149              	.LBE191:
 7150              		.loc 7 42 0
 7151 2faf EB2C     		jmp	.L415
 7152              	.L414:
 7153              	.LBB192:
  38:../ExecuteTest.h **** 	{
 7154              		.loc 7 38 0
 7155 2fb1 4889C7   		movq	%rax, %rdi
 7156 2fb4 E8000000 		call	__cxa_begin_catch
 7156      00
 7157              	.LEHB216:
  40:../ExecuteTest.h **** 	}
 7158              		.loc 7 40 0
 7159 2fb9 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 7159      00
 7160 2fbe 488B00   		movq	(%rax), %rax
 7161 2fc1 488B8DD0 		movq	-1584(%rbp), %rcx
 7161      F9FFFF
 7162 2fc8 BA000000 		movl	$.LC33, %edx
 7162      00
 7163 2fcd 4889CE   		movq	%rcx, %rsi
 7164 2fd0 4889C7   		movq	%rax, %rdi
 7165 2fd3 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 7165      00
 7166              	.LEHE216:
 7167              	.LEHB217:
  38:../ExecuteTest.h **** 	{
 7168              		.loc 7 38 0
 7169 2fd8 E8000000 		call	__cxa_end_catch
 7169      00
 7170              	.LEHE217:
 7171              	.L415:
 7172              	.LBE192:
 7173              		.loc 7 42 0
 7174 2fdd 90       		nop
 7175 2fde 488B45E8 		movq	-24(%rbp), %rax
 7176 2fe2 64483304 		xorq	%fs:40, %rax
 7176      25280000 
 7176      00
 7177 2feb 7405     		je	.L406
 7178 2fed E8000000 		call	__stack_chk_fail
 7178      00
 7179              	.L406:
 7180 2ff2 4881C420 		addq	$1568, %rsp
 7180      060000
 7181 2ff9 5B       		popq	%rbx
 7182 2ffa 415C     		popq	%r12
 7183 2ffc 5D       		popq	%rbp
 7184              		.cfi_def_cfa 7, 8
 7185 2ffd C3       		ret
 7186              		.cfi_endproc
 7187              	.LFE1471:
 7188              		.section	.gcc_except_table
 7189              		.align 4
 7190              	.LLSDA1471:
 7191 0580 FF       		.byte	0xff
 7192 0581 03       		.byte	0x3
 7193 0582 5D       		.uleb128 .LLSDATT1471-.LLSDATTD1471
 7194              	.LLSDATTD1471:
 7195 0583 01       		.byte	0x1
 7196 0584 47       		.uleb128 .LLSDACSE1471-.LLSDACSB1471
 7197              	.LLSDACSB1471:
 7198 0585 2B       		.uleb128 .LEHB205-.LFB1471
 7199 0586 05       		.uleb128 .LEHE205-.LEHB205
 7200 0587 00       		.uleb128 0
 7201 0588 00       		.uleb128 0
 7202 0589 47       		.uleb128 .LEHB206-.LFB1471
 7203 058a 05       		.uleb128 .LEHE206-.LEHB206
 7204 058b CC01     		.uleb128 .L407-.LFB1471
 7205 058d 05       		.uleb128 0x5
 7206 058e 8701     		.uleb128 .LEHB207-.LFB1471
 7207 0590 14       		.uleb128 .LEHE207-.LEHB207
 7208 0591 AF01     		.uleb128 .L408-.LFB1471
 7209 0593 07       		.uleb128 0x7
 7210 0594 A501     		.uleb128 .LEHB208-.LFB1471
 7211 0596 05       		.uleb128 .LEHE208-.LEHB208
 7212 0597 CC01     		.uleb128 .L407-.LFB1471
 7213 0599 05       		.uleb128 0x5
 7214 059a EF01     		.uleb128 .LEHB209-.LFB1471
 7215 059c 05       		.uleb128 .LEHE209-.LEHB209
 7216 059d 00       		.uleb128 0
 7217 059e 00       		.uleb128 0
 7218 059f 9602     		.uleb128 .LEHB210-.LFB1471
 7219 05a1 05       		.uleb128 .LEHE210-.LEHB210
 7220 05a2 00       		.uleb128 0
 7221 05a3 00       		.uleb128 0
 7222 05a4 A902     		.uleb128 .LEHB211-.LFB1471
 7223 05a6 05       		.uleb128 .LEHE211-.LEHB211
 7224 05a7 00       		.uleb128 0
 7225 05a8 00       		.uleb128 0
 7226 05a9 E702     		.uleb128 .LEHB212-.LFB1471
 7227 05ab 5E       		.uleb128 .LEHE212-.LEHB212
 7228 05ac E101     		.uleb128 .L409-.LFB1471
 7229 05ae 00       		.uleb128 0
 7230 05af E803     		.uleb128 .LEHB213-.LFB1471
 7231 05b1 05       		.uleb128 .LEHE213-.LEHB213
 7232 05b2 8802     		.uleb128 .L411-.LFB1471
 7233 05b4 00       		.uleb128 0
 7234 05b5 9C04     		.uleb128 .LEHB214-.LFB1471
 7235 05b7 3F       		.uleb128 .LEHE214-.LEHB214
 7236 05b8 F401     		.uleb128 .L410-.LFB1471
 7237 05ba 00       		.uleb128 0
 7238 05bb E504     		.uleb128 .LEHB215-.LFB1471
 7239 05bd 05       		.uleb128 .LEHE215-.LEHB215
 7240 05be 8802     		.uleb128 .L411-.LFB1471
 7241 05c0 00       		.uleb128 0
 7242 05c1 F904     		.uleb128 .LEHB216-.LFB1471
 7243 05c3 1F       		.uleb128 .LEHE216-.LEHB216
 7244 05c4 9B02     		.uleb128 .L412-.LFB1471
 7245 05c6 00       		.uleb128 0
 7246 05c7 9805     		.uleb128 .LEHB217-.LFB1471
 7247 05c9 05       		.uleb128 .LEHE217-.LEHB217
 7248 05ca 00       		.uleb128 0
 7249 05cb 00       		.uleb128 0
 7250              	.LLSDACSE1471:
 7251 05cc 03       		.byte	0x3
 7252 05cd 00       		.byte	0
 7253 05ce 02       		.byte	0x2
 7254 05cf 7D       		.byte	0x7d
 7255 05d0 01       		.byte	0x1
 7256 05d1 7D       		.byte	0x7d
 7257 05d2 00       		.byte	0
 7258 05d3 7D       		.byte	0x7d
 7259              		.align 4
 7260 05d4 00000000 		.long	0
 7261              	
 7262 05d8 00000000 		.long	_ZTISt9exception
 7263 05dc 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 7264              	.LLSDATT1471:
 7265              		.text
 7267              		.section	.text._ZNKSt6vectorISt4pairIiSsESaIS1_EE4sizeEv,"axG",@progbits,_ZNKSt6vectorISt4pairIiSs
 7268              		.align 2
 7269              		.weak	_ZNKSt6vectorISt4pairIiSsESaIS1_EE4sizeEv
 7271              	_ZNKSt6vectorISt4pairIiSsESaIS1_EE4sizeEv:
 7272              	.LFB1472:
 654:/usr/include/c++/4.9/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 7273              		.loc 6 654 0
 7274              		.cfi_startproc
 7275 0000 55       		pushq	%rbp
 7276              		.cfi_def_cfa_offset 16
 7277              		.cfi_offset 6, -16
 7278 0001 4889E5   		movq	%rsp, %rbp
 7279              		.cfi_def_cfa_register 6
 7280 0004 48897DF8 		movq	%rdi, -8(%rbp)
 655:/usr/include/c++/4.9/bits/stl_vector.h **** 
 7281              		.loc 6 655 0
 7282 0008 488B45F8 		movq	-8(%rbp), %rax
 7283 000c 488B4008 		movq	8(%rax), %rax
 7284 0010 4889C2   		movq	%rax, %rdx
 7285 0013 488B45F8 		movq	-8(%rbp), %rax
 7286 0017 488B00   		movq	(%rax), %rax
 7287 001a 4829C2   		subq	%rax, %rdx
 7288 001d 4889D0   		movq	%rdx, %rax
 7289 0020 48C1F804 		sarq	$4, %rax
 7290 0024 5D       		popq	%rbp
 7291              		.cfi_def_cfa 7, 8
 7292 0025 C3       		ret
 7293              		.cfi_endproc
 7294              	.LFE1472:
 7296              		.section	.text._ZNKSt6vectorISt4pairIiSsESaIS1_EEixEm,"axG",@progbits,_ZNKSt6vectorISt4pairIiSsESa
 7297              		.align 2
 7298              		.weak	_ZNKSt6vectorISt4pairIiSsESaIS1_EEixEm
 7300              	_ZNKSt6vectorISt4pairIiSsESaIS1_EEixEm:
 7301              	.LFB1473:
 794:/usr/include/c++/4.9/bits/stl_vector.h ****       { return *(this->_M_impl._M_start + __n); }
 7302              		.loc 6 794 0
 7303              		.cfi_startproc
 7304 0000 55       		pushq	%rbp
 7305              		.cfi_def_cfa_offset 16
 7306              		.cfi_offset 6, -16
 7307 0001 4889E5   		movq	%rsp, %rbp
 7308              		.cfi_def_cfa_register 6
 7309 0004 48897DF8 		movq	%rdi, -8(%rbp)
 7310 0008 488975F0 		movq	%rsi, -16(%rbp)
 795:/usr/include/c++/4.9/bits/stl_vector.h **** 
 7311              		.loc 6 795 0
 7312 000c 488B45F8 		movq	-8(%rbp), %rax
 7313 0010 488B00   		movq	(%rax), %rax
 7314 0013 488B55F0 		movq	-16(%rbp), %rdx
 7315 0017 48C1E204 		salq	$4, %rdx
 7316 001b 4801D0   		addq	%rdx, %rax
 7317 001e 5D       		popq	%rbp
 7318              		.cfi_def_cfa 7, 8
 7319 001f C3       		ret
 7320              		.cfi_endproc
 7321              	.LFE1473:
 7323              		.text
 7325              	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCo
 7326              	.LFB1474:
  16:../ExecuteTest.h **** {
 7327              		.loc 7 16 0
 7328              		.cfi_startproc
 7329              		.cfi_personality 0x3,__gxx_personality_v0
 7330              		.cfi_lsda 0x3,.LLSDA1474
 7331 2ffe 55       		pushq	%rbp
 7332              		.cfi_def_cfa_offset 16
 7333              		.cfi_offset 6, -16
 7334 2fff 4889E5   		movq	%rsp, %rbp
 7335              		.cfi_def_cfa_register 6
 7336 3002 4154     		pushq	%r12
 7337 3004 53       		pushq	%rbx
 7338 3005 4881EC20 		subq	$1568, %rsp
 7338      060000
 7339              		.cfi_offset 12, -24
 7340              		.cfi_offset 3, -32
 7341 300c 4889BDD8 		movq	%rdi, -1576(%rbp)
 7341      F9FFFF
 7342 3013 4889B5D0 		movq	%rsi, -1584(%rbp)
 7342      F9FFFF
  16:../ExecuteTest.h **** {
 7343              		.loc 7 16 0
 7344 301a 64488B04 		movq	%fs:40, %rax
 7344      25280000 
 7344      00
 7345 3023 488945E8 		movq	%rax, -24(%rbp)
 7346 3027 31C0     		xorl	%eax, %eax
 7347              	.LEHB218:
 7348              	.LBB193:
  18:../ExecuteTest.h **** 
 7349              		.loc 7 18 0
 7350 3029 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 7350      00
 7351              	.LEHE218:
 7352 302e 4889C2   		movq	%rax, %rdx
 7353 3031 488B85D0 		movq	-1584(%rbp), %rax
 7353      F9FFFF
 7354 3038 488902   		movq	%rax, (%rdx)
 7355              	.LBB194:
  23:../ExecuteTest.h **** #endif
 7356              		.loc 7 23 0
 7357 303b 488D8580 		leaq	-1152(%rbp), %rax
 7357      FBFFFF
 7358 3042 4889C7   		movq	%rax, %rdi
 7359              	.LEHB219:
 7360 3045 E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev
 7360      00
 7361              	.LEHE219:
  23:../ExecuteTest.h **** #endif
 7362              		.loc 7 23 0 is_stmt 0 discriminator 1
 7363 304a 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 7363      000000
 7364 3051 BE010000 		movl	$1, %esi
 7364      00
 7365 3056 4889C7   		movq	%rax, %rdi
 7366 3059 E8000000 		call	__sigsetjmp
 7366      00
 7367 305e 85C0     		testl	%eax, %eax
 7368 3060 0F95C0   		setne	%al
 7369 3063 84C0     		testb	%al, %al
 7370 3065 7423     		je	.L440
  23:../ExecuteTest.h **** #endif
 7371              		.loc 7 23 0 discriminator 3
 7372 3067 BF080000 		movl	$8, %edi
 7372      00
 7373 306c E8000000 		call	__cxa_allocate_exception
 7373      00
 7374 3071 48C70000 		movq	$.LC32, (%rax)
 7374      000000
 7375 3078 BA000000 		movl	$0, %edx
 7375      00
 7376 307d BE000000 		movl	$_ZTIPKc, %esi
 7376      00
 7377 3082 4889C7   		movq	%rax, %rdi
 7378              	.LEHB220:
 7379 3085 E8000000 		call	__cxa_throw
 7379      00
 7380              	.L440:
  25:../ExecuteTest.h **** 	}
 7381              		.loc 7 25 0 is_stmt 1
 7382 308a 488B85D8 		movq	-1576(%rbp), %rax
 7382      F9FFFF
 7383 3091 4889C7   		movq	%rax, %rdi
 7384 3094 E8F5EFFF 		call	_ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailure
 7384      FF
 7385              	.LEHE220:
  25:../ExecuteTest.h **** 	}
 7386              		.loc 7 25 0 is_stmt 0 discriminator 2
 7387 3099 488D8580 		leaq	-1152(%rbp), %rax
 7387      FBFFFF
 7388 30a0 4889C7   		movq	%rax, %rdi
 7389              	.LEHB221:
 7390 30a3 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 7390      00
 7391              	.LEHE221:
 7392              	.LBE194:
 7393              	.LBE193:
 7394              		.loc 7 42 0 is_stmt 1
 7395 30a8 E9EE0100 		jmp	.L442
 7395      00
 7396              	.L435:
 7397 30ad 4989C4   		movq	%rax, %r12
 7398 30b0 4889D3   		movq	%rdx, %rbx
 7399              	.LBB202:
 7400              	.LBB195:
  25:../ExecuteTest.h **** 	}
 7401              		.loc 7 25 0
 7402 30b3 488D8580 		leaq	-1152(%rbp), %rax
 7402      FBFFFF
 7403 30ba 4889C7   		movq	%rax, %rdi
 7404 30bd E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 7404      00
 7405 30c2 4C89E0   		movq	%r12, %rax
 7406 30c5 4889DA   		movq	%rbx, %rdx
 7407 30c8 EB00     		jmp	.L424
 7408              	.L434:
 7409              	.L424:
 7410 30ca 4883FA01 		cmpq	$1, %rdx
 7411 30ce 745C     		je	.L426
 7412 30d0 4883FA02 		cmpq	$2, %rdx
 7413 30d4 0F84F300 		je	.L427
 7413      0000
 7414 30da E9900100 		jmp	.L441
 7414      00
 7415              	.L436:
 7416 30df 4889C3   		movq	%rax, %rbx
 7417              	.LBE195:
 7418              	.LBB196:
  27:../ExecuteTest.h **** 	{
 7419              		.loc 7 27 0
 7420 30e2 E8000000 		call	__cxa_end_catch
 7420      00
 7421 30e7 4889D8   		movq	%rbx, %rax
 7422 30ea 4889C7   		movq	%rax, %rdi
 7423              	.LEHB222:
 7424 30ed E8000000 		call	_Unwind_Resume
 7424      00
 7425              	.LEHE222:
 7426              	.L437:
 7427 30f2 4889C3   		movq	%rax, %rbx
 7428              	.LBE196:
 7429              	.LBB197:
 7430              	.LBB198:
  36:../ExecuteTest.h **** 	}
 7431              		.loc 7 36 0
 7432 30f5 488D8510 		leaq	-1520(%rbp), %rax
 7432      FAFFFF
 7433 30fc 4889C7   		movq	%rax, %rdi
 7434 30ff E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7434      00
 7435 3104 EB03     		jmp	.L430
 7436              	.L438:
 7437 3106 4889C3   		movq	%rax, %rbx
 7438              	.L430:
 7439              	.LBE198:
  32:../ExecuteTest.h **** 	{
 7440              		.loc 7 32 0
 7441 3109 E8000000 		call	__cxa_end_catch
 7441      00
 7442 310e 4889D8   		movq	%rbx, %rax
 7443 3111 4889C7   		movq	%rax, %rdi
 7444              	.LEHB223:
 7445 3114 E8000000 		call	_Unwind_Resume
 7445      00
 7446              	.LEHE223:
 7447              	.L439:
 7448 3119 4889C3   		movq	%rax, %rbx
 7449              	.LBE197:
  38:../ExecuteTest.h **** 	{
 7450              		.loc 7 38 0
 7451 311c E8000000 		call	__cxa_end_catch
 7451      00
 7452 3121 4889D8   		movq	%rbx, %rax
 7453 3124 4889C7   		movq	%rax, %rdi
 7454              	.LEHB224:
 7455 3127 E8000000 		call	_Unwind_Resume
 7455      00
 7456              	.LEHE224:
 7457              	.L426:
 7458              	.LBB200:
  27:../ExecuteTest.h **** 	{
 7459              		.loc 7 27 0
 7460 312c 4889C7   		movq	%rax, %rdi
 7461 312f E8000000 		call	__cxa_begin_catch
 7461      00
 7462 3134 488985E0 		movq	%rax, -1568(%rbp)
 7462      F9FFFF
  30:../ExecuteTest.h **** 	}
 7463              		.loc 7 30 0
 7464 313b 488B85E0 		movq	-1568(%rbp), %rax
 7464      F9FFFF
 7465 3142 488B00   		movq	(%rax), %rax
 7466 3145 4883C010 		addq	$16, %rax
 7467 3149 488B00   		movq	(%rax), %rax
 7468 314c 488B95E0 		movq	-1568(%rbp), %rdx
 7468      F9FFFF
 7469 3153 4889D7   		movq	%rdx, %rdi
 7470 3156 FFD0     		call	*%rax
 7471 3158 4889C3   		movq	%rax, %rbx
 7472 315b 488B85E0 		movq	-1568(%rbp), %rax
 7472      F9FFFF
 7473 3162 4889C7   		movq	%rax, %rdi
 7474              	.LEHB225:
 7475 3165 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 7475      00
  30:../ExecuteTest.h **** 	}
 7476              		.loc 7 30 0 is_stmt 0 discriminator 1
 7477 316a 4189C4   		movl	%eax, %r12d
 7478 316d 488B85E0 		movq	-1568(%rbp), %rax
 7478      F9FFFF
 7479 3174 4889C7   		movq	%rax, %rdi
 7480 3177 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 7480      00
  30:../ExecuteTest.h **** 	}
 7481              		.loc 7 30 0 discriminator 2
 7482 317c 4889C1   		movq	%rax, %rcx
 7483 317f 488B85D0 		movq	-1584(%rbp), %rax
 7483      F9FFFF
 7484 3186 488B10   		movq	(%rax), %rdx
 7485 3189 488B85D0 		movq	-1584(%rbp), %rax
 7485      F9FFFF
 7486 3190 488B7008 		movq	8(%rax), %rsi
 7487 3194 488D85F0 		leaq	-1552(%rbp), %rax
 7487      F9FFFF
 7488 319b 4589E0   		movl	%r12d, %r8d
 7489 319e 4889C7   		movq	%rax, %rdi
 7490 31a1 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 7490      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7491              		.loc 7 29 0 is_stmt 1
 7492 31a6 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 7492      00
  30:../ExecuteTest.h **** 	}
 7493              		.loc 7 30 0
 7494 31ab 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7495              		.loc 7 29 0
 7496 31ae 488D8DF0 		leaq	-1552(%rbp), %rcx
 7496      F9FFFF
 7497 31b5 4889DA   		movq	%rbx, %rdx
 7498 31b8 4889CE   		movq	%rcx, %rsi
 7499 31bb 4889C7   		movq	%rax, %rdi
 7500 31be E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 7500      00
 7501              	.LEHE225:
  27:../ExecuteTest.h **** 	{
 7502              		.loc 7 27 0
 7503 31c3 E8000000 		call	__cxa_end_catch
 7503      00
 7504              	.LBE200:
 7505              	.LBE202:
 7506              		.loc 7 42 0
 7507 31c8 E9CE0000 		jmp	.L442
 7507      00
 7508              	.L427:
 7509              	.LBB203:
 7510              	.LBB201:
  32:../ExecuteTest.h **** 	{
 7511              		.loc 7 32 0
 7512 31cd 4889C7   		movq	%rax, %rdi
 7513 31d0 E8000000 		call	__cxa_begin_catch
 7513      00
 7514 31d5 488985E8 		movq	%rax, -1560(%rbp)
 7514      F9FFFF
 7515              	.LBB199:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 7516              		.loc 7 34 0
 7517 31dc 488D8510 		leaq	-1520(%rbp), %rax
 7517      FAFFFF
 7518 31e3 4889C7   		movq	%rax, %rdi
 7519              	.LEHB226:
 7520 31e6 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 7520      00
 7521              	.LEHE226:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 7522              		.loc 7 35 0
 7523 31eb 488B85E8 		movq	-1560(%rbp), %rax
 7523      F9FFFF
 7524 31f2 488B00   		movq	(%rax), %rax
 7525 31f5 4883C010 		addq	$16, %rax
 7526 31f9 488B00   		movq	(%rax), %rax
 7527 31fc 488B95E8 		movq	-1560(%rbp), %rdx
 7527      F9FFFF
 7528 3203 4889D7   		movq	%rdx, %rdi
 7529 3206 FFD0     		call	*%rax
 7530 3208 4889C3   		movq	%rax, %rbx
 7531 320b 488D8510 		leaq	-1520(%rbp), %rax
 7531      FAFFFF
 7532 3212 BE000000 		movl	$.LC6, %esi
 7532      00
 7533 3217 4889C7   		movq	%rax, %rdi
 7534              	.LEHB227:
 7535 321a E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 7535      00
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 7536              		.loc 7 35 0 is_stmt 0 discriminator 1
 7537 321f 4889DE   		movq	%rbx, %rsi
 7538 3222 4889C7   		movq	%rax, %rdi
 7539 3225 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 7539      00
  36:../ExecuteTest.h **** 	}
 7540              		.loc 7 36 0 is_stmt 1
 7541 322a 488D8510 		leaq	-1520(%rbp), %rax
 7541      FAFFFF
 7542 3231 4889C7   		movq	%rax, %rdi
 7543 3234 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 7543      00
 7544 3239 4889C3   		movq	%rax, %rbx
 7545 323c E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 7545      00
  36:../ExecuteTest.h **** 	}
 7546              		.loc 7 36 0 is_stmt 0 discriminator 2
 7547 3241 488B00   		movq	(%rax), %rax
 7548 3244 488B8DD0 		movq	-1584(%rbp), %rcx
 7548      F9FFFF
 7549 324b 4889DA   		movq	%rbx, %rdx
 7550 324e 4889CE   		movq	%rcx, %rsi
 7551 3251 4889C7   		movq	%rax, %rdi
 7552 3254 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 7552      00
 7553              	.LEHE227:
  36:../ExecuteTest.h **** 	}
 7554              		.loc 7 36 0 discriminator 6
 7555 3259 488D8510 		leaq	-1520(%rbp), %rax
 7555      FAFFFF
 7556 3260 4889C7   		movq	%rax, %rdi
 7557              	.LEHB228:
 7558 3263 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7558      00
 7559              	.LEHE228:
 7560              	.LBE199:
  32:../ExecuteTest.h **** 	{
 7561              		.loc 7 32 0 is_stmt 1
 7562 3268 E8000000 		call	__cxa_end_catch
 7562      00
 7563              	.LBE201:
 7564              	.LBE203:
 7565              		.loc 7 42 0
 7566 326d EB2C     		jmp	.L442
 7567              	.L441:
 7568              	.LBB204:
  38:../ExecuteTest.h **** 	{
 7569              		.loc 7 38 0
 7570 326f 4889C7   		movq	%rax, %rdi
 7571 3272 E8000000 		call	__cxa_begin_catch
 7571      00
 7572              	.LEHB229:
  40:../ExecuteTest.h **** 	}
 7573              		.loc 7 40 0
 7574 3277 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 7574      00
 7575 327c 488B00   		movq	(%rax), %rax
 7576 327f 488B8DD0 		movq	-1584(%rbp), %rcx
 7576      F9FFFF
 7577 3286 BA000000 		movl	$.LC33, %edx
 7577      00
 7578 328b 4889CE   		movq	%rcx, %rsi
 7579 328e 4889C7   		movq	%rax, %rdi
 7580 3291 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 7580      00
 7581              	.LEHE229:
 7582              	.LEHB230:
  38:../ExecuteTest.h **** 	{
 7583              		.loc 7 38 0
 7584 3296 E8000000 		call	__cxa_end_catch
 7584      00
 7585              	.LEHE230:
 7586              	.L442:
 7587              	.LBE204:
 7588              		.loc 7 42 0
 7589 329b 90       		nop
 7590 329c 488B45E8 		movq	-24(%rbp), %rax
 7591 32a0 64483304 		xorq	%fs:40, %rax
 7591      25280000 
 7591      00
 7592 32a9 7405     		je	.L433
 7593 32ab E8000000 		call	__stack_chk_fail
 7593      00
 7594              	.L433:
 7595 32b0 4881C420 		addq	$1568, %rsp
 7595      060000
 7596 32b7 5B       		popq	%rbx
 7597 32b8 415C     		popq	%r12
 7598 32ba 5D       		popq	%rbp
 7599              		.cfi_def_cfa 7, 8
 7600 32bb C3       		ret
 7601              		.cfi_endproc
 7602              	.LFE1474:
 7603              		.section	.gcc_except_table
 7604              		.align 4
 7605              	.LLSDA1474:
 7606 05e0 FF       		.byte	0xff
 7607 05e1 03       		.byte	0x3
 7608 05e2 5D       		.uleb128 .LLSDATT1474-.LLSDATTD1474
 7609              	.LLSDATTD1474:
 7610 05e3 01       		.byte	0x1
 7611 05e4 47       		.uleb128 .LLSDACSE1474-.LLSDACSB1474
 7612              	.LLSDACSB1474:
 7613 05e5 2B       		.uleb128 .LEHB218-.LFB1474
 7614 05e6 05       		.uleb128 .LEHE218-.LEHB218
 7615 05e7 00       		.uleb128 0
 7616 05e8 00       		.uleb128 0
 7617 05e9 47       		.uleb128 .LEHB219-.LFB1474
 7618 05ea 05       		.uleb128 .LEHE219-.LEHB219
 7619 05eb CC01     		.uleb128 .L434-.LFB1474
 7620 05ed 05       		.uleb128 0x5
 7621 05ee 8701     		.uleb128 .LEHB220-.LFB1474
 7622 05f0 14       		.uleb128 .LEHE220-.LEHB220
 7623 05f1 AF01     		.uleb128 .L435-.LFB1474
 7624 05f3 07       		.uleb128 0x7
 7625 05f4 A501     		.uleb128 .LEHB221-.LFB1474
 7626 05f6 05       		.uleb128 .LEHE221-.LEHB221
 7627 05f7 CC01     		.uleb128 .L434-.LFB1474
 7628 05f9 05       		.uleb128 0x5
 7629 05fa EF01     		.uleb128 .LEHB222-.LFB1474
 7630 05fc 05       		.uleb128 .LEHE222-.LEHB222
 7631 05fd 00       		.uleb128 0
 7632 05fe 00       		.uleb128 0
 7633 05ff 9602     		.uleb128 .LEHB223-.LFB1474
 7634 0601 05       		.uleb128 .LEHE223-.LEHB223
 7635 0602 00       		.uleb128 0
 7636 0603 00       		.uleb128 0
 7637 0604 A902     		.uleb128 .LEHB224-.LFB1474
 7638 0606 05       		.uleb128 .LEHE224-.LEHB224
 7639 0607 00       		.uleb128 0
 7640 0608 00       		.uleb128 0
 7641 0609 E702     		.uleb128 .LEHB225-.LFB1474
 7642 060b 5E       		.uleb128 .LEHE225-.LEHB225
 7643 060c E101     		.uleb128 .L436-.LFB1474
 7644 060e 00       		.uleb128 0
 7645 060f E803     		.uleb128 .LEHB226-.LFB1474
 7646 0611 05       		.uleb128 .LEHE226-.LEHB226
 7647 0612 8802     		.uleb128 .L438-.LFB1474
 7648 0614 00       		.uleb128 0
 7649 0615 9C04     		.uleb128 .LEHB227-.LFB1474
 7650 0617 3F       		.uleb128 .LEHE227-.LEHB227
 7651 0618 F401     		.uleb128 .L437-.LFB1474
 7652 061a 00       		.uleb128 0
 7653 061b E504     		.uleb128 .LEHB228-.LFB1474
 7654 061d 05       		.uleb128 .LEHE228-.LEHB228
 7655 061e 8802     		.uleb128 .L438-.LFB1474
 7656 0620 00       		.uleb128 0
 7657 0621 F904     		.uleb128 .LEHB229-.LFB1474
 7658 0623 1F       		.uleb128 .LEHE229-.LEHB229
 7659 0624 9B02     		.uleb128 .L439-.LFB1474
 7660 0626 00       		.uleb128 0
 7661 0627 9805     		.uleb128 .LEHB230-.LFB1474
 7662 0629 05       		.uleb128 .LEHE230-.LEHB230
 7663 062a 00       		.uleb128 0
 7664 062b 00       		.uleb128 0
 7665              	.LLSDACSE1474:
 7666 062c 03       		.byte	0x3
 7667 062d 00       		.byte	0
 7668 062e 02       		.byte	0x2
 7669 062f 7D       		.byte	0x7d
 7670 0630 01       		.byte	0x1
 7671 0631 7D       		.byte	0x7d
 7672 0632 00       		.byte	0
 7673 0633 7D       		.byte	0x7d
 7674              		.align 4
 7675 0634 00000000 		.long	0
 7676              	
 7677 0638 00000000 		.long	_ZTISt9exception
 7678 063c 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 7679              	.LLSDATT1474:
 7680              		.text
 7682              		.section	.text._ZNKSt6vectorISt4pairIiSsESaIS1_EE2atEm,"axG",@progbits,_ZNKSt6vectorISt4pairIiSsES
 7683              		.align 2
 7684              		.weak	_ZNKSt6vectorISt4pairIiSsESaIS1_EE2atEm
 7686              	_ZNKSt6vectorISt4pairIiSsESaIS1_EE2atEm:
 7687              	.LFB1475:
 827:/usr/include/c++/4.9/bits/stl_vector.h **** 
 828:/usr/include/c++/4.9/bits/stl_vector.h ****       /**
 829:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
 830:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 831:/usr/include/c++/4.9/bits/stl_vector.h ****        *  accessed.
 832:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @return  Read-only (constant) reference to data.
 833:/usr/include/c++/4.9/bits/stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
 834:/usr/include/c++/4.9/bits/stl_vector.h ****        *
 835:/usr/include/c++/4.9/bits/stl_vector.h ****        *  This function provides for safer data access.  The parameter
 836:/usr/include/c++/4.9/bits/stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
 837:/usr/include/c++/4.9/bits/stl_vector.h ****        *  function throws out_of_range if the check fails.
 838:/usr/include/c++/4.9/bits/stl_vector.h ****        */
 839:/usr/include/c++/4.9/bits/stl_vector.h ****       const_reference
 840:/usr/include/c++/4.9/bits/stl_vector.h ****       at(size_type __n) const
 7688              		.loc 6 840 0
 7689              		.cfi_startproc
 7690 0000 55       		pushq	%rbp
 7691              		.cfi_def_cfa_offset 16
 7692              		.cfi_offset 6, -16
 7693 0001 4889E5   		movq	%rsp, %rbp
 7694              		.cfi_def_cfa_register 6
 7695 0004 4883EC10 		subq	$16, %rsp
 7696 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7697 000c 488975F0 		movq	%rsi, -16(%rbp)
 841:/usr/include/c++/4.9/bits/stl_vector.h ****       {
 842:/usr/include/c++/4.9/bits/stl_vector.h **** 	_M_range_check(__n);
 7698              		.loc 6 842 0
 7699 0010 488B55F0 		movq	-16(%rbp), %rdx
 7700 0014 488B45F8 		movq	-8(%rbp), %rax
 7701 0018 4889D6   		movq	%rdx, %rsi
 7702 001b 4889C7   		movq	%rax, %rdi
 7703 001e E8000000 		call	_ZNKSt6vectorISt4pairIiSsESaIS1_EE14_M_range_checkEm
 7703      00
 843:/usr/include/c++/4.9/bits/stl_vector.h **** 	return (*this)[__n];
 7704              		.loc 6 843 0
 7705 0023 488B55F0 		movq	-16(%rbp), %rdx
 7706 0027 488B45F8 		movq	-8(%rbp), %rax
 7707 002b 4889D6   		movq	%rdx, %rsi
 7708 002e 4889C7   		movq	%rax, %rdi
 7709 0031 E8000000 		call	_ZNKSt6vectorISt4pairIiSsESaIS1_EEixEm
 7709      00
 844:/usr/include/c++/4.9/bits/stl_vector.h ****       }
 7710              		.loc 6 844 0
 7711 0036 C9       		leave
 7712              		.cfi_def_cfa 7, 8
 7713 0037 C3       		ret
 7714              		.cfi_endproc
 7715              	.LFE1475:
 7717              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev,"axG"
 7718              		.align 2
 7719              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev
 7721              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev:
 7722              	.LFB1503:
  79:/usr/include/c++/4.9/bits/stl_vector.h ****       : public _Tp_alloc_type
 7723              		.loc 6 79 0
 7724              		.cfi_startproc
 7725 0000 55       		pushq	%rbp
 7726              		.cfi_def_cfa_offset 16
 7727              		.cfi_offset 6, -16
 7728 0001 4889E5   		movq	%rsp, %rbp
 7729              		.cfi_def_cfa_register 6
 7730 0004 4883EC10 		subq	$16, %rsp
 7731 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7732              	.LBB205:
  79:/usr/include/c++/4.9/bits/stl_vector.h ****       : public _Tp_alloc_type
 7733              		.loc 6 79 0
 7734 000c 488B45F8 		movq	-8(%rbp), %rax
 7735 0010 4889C7   		movq	%rax, %rdi
 7736 0013 E8000000 		call	_ZNSaIN8UnitTest18DeferredTestResultEED2Ev
 7736      00
 7737              	.LBE205:
 7738 0018 C9       		leave
 7739              		.cfi_def_cfa 7, 8
 7740 0019 C3       		ret
 7741              		.cfi_endproc
 7742              	.LFE1503:
 7744              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev
 7745              		.set	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev,_ZNSt12_Vector_
 7746              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev,"axG",@progbits,_ZN
 7747              		.align 2
 7748              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev
 7750              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev:
 7751              	.LFB1505:
 124:/usr/include/c++/4.9/bits/stl_vector.h ****       : _M_impl() { }
 7752              		.loc 6 124 0
 7753              		.cfi_startproc
 7754 0000 55       		pushq	%rbp
 7755              		.cfi_def_cfa_offset 16
 7756              		.cfi_offset 6, -16
 7757 0001 4889E5   		movq	%rsp, %rbp
 7758              		.cfi_def_cfa_register 6
 7759 0004 4883EC10 		subq	$16, %rsp
 7760 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7761              	.LBB206:
 125:/usr/include/c++/4.9/bits/stl_vector.h **** 
 7762              		.loc 6 125 0
 7763 000c 488B45F8 		movq	-8(%rbp), %rax
 7764 0010 4889C7   		movq	%rax, %rdi
 7765 0013 E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC1Ev
 7765      00
 7766              	.LBE206:
 7767 0018 C9       		leave
 7768              		.cfi_def_cfa 7, 8
 7769 0019 C3       		ret
 7770              		.cfi_endproc
 7771              	.LFE1505:
 7773              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC1Ev
 7774              		.set	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC1Ev,_ZNSt12_Vector_baseIN8UnitTes
 7775              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev,"axG",@progbits,_ZN
 7776              		.align 2
 7777              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
 7779              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:
 7780              	.LFB1508:
 159:/usr/include/c++/4.9/bits/stl_vector.h ****       { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 7781              		.loc 6 159 0
 7782              		.cfi_startproc
 7783              		.cfi_personality 0x3,__gxx_personality_v0
 7784              		.cfi_lsda 0x3,.LLSDA1508
 7785 0000 55       		pushq	%rbp
 7786              		.cfi_def_cfa_offset 16
 7787              		.cfi_offset 6, -16
 7788 0001 4889E5   		movq	%rsp, %rbp
 7789              		.cfi_def_cfa_register 6
 7790 0004 53       		pushq	%rbx
 7791 0005 4883EC18 		subq	$24, %rsp
 7792              		.cfi_offset 3, -24
 7793 0009 48897DE8 		movq	%rdi, -24(%rbp)
 7794              	.LBB207:
 161:/usr/include/c++/4.9/bits/stl_vector.h **** 
 7795              		.loc 6 161 0
 7796 000d 488B45E8 		movq	-24(%rbp), %rax
 7797 0011 488B4010 		movq	16(%rax), %rax
 7798 0015 4889C2   		movq	%rax, %rdx
 7799 0018 488B45E8 		movq	-24(%rbp), %rax
 7800 001c 488B00   		movq	(%rax), %rax
 7801 001f 4829C2   		subq	%rax, %rdx
 7802 0022 4889D0   		movq	%rdx, %rax
 7803 0025 48C1F803 		sarq	$3, %rax
 7804 0029 4889C2   		movq	%rax, %rdx
 7805 002c 48B8B76D 		movabsq	$7905747460161236407, %rax
 7805      DBB66DDB 
 7805      B66D
 7806 0036 480FAFC2 		imulq	%rdx, %rax
 7807 003a 4889C2   		movq	%rax, %rdx
 7808 003d 488B45E8 		movq	-24(%rbp), %rax
 7809 0041 488B08   		movq	(%rax), %rcx
 160:/usr/include/c++/4.9/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 7810              		.loc 6 160 0
 7811 0044 488B45E8 		movq	-24(%rbp), %rax
 7812 0048 4889CE   		movq	%rcx, %rsi
 7813 004b 4889C7   		movq	%rax, %rdi
 7814              	.LEHB231:
 7815 004e E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m
 7815      00
 7816              	.LEHE231:
 161:/usr/include/c++/4.9/bits/stl_vector.h **** 
 7817              		.loc 6 161 0
 7818 0053 488B45E8 		movq	-24(%rbp), %rax
 7819 0057 4889C7   		movq	%rax, %rdi
 7820 005a E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev
 7820      00
 7821 005f EB1A     		jmp	.L452
 7822              	.L451:
 7823 0061 4889C3   		movq	%rax, %rbx
 7824 0064 488B45E8 		movq	-24(%rbp), %rax
 7825 0068 4889C7   		movq	%rax, %rdi
 7826 006b E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev
 7826      00
 7827 0070 4889D8   		movq	%rbx, %rax
 7828 0073 4889C7   		movq	%rax, %rdi
 7829              	.LEHB232:
 7830 0076 E8000000 		call	_Unwind_Resume
 7830      00
 7831              	.LEHE232:
 7832              	.L452:
 7833              	.LBE207:
 7834 007b 4883C418 		addq	$24, %rsp
 7835 007f 5B       		popq	%rbx
 7836 0080 5D       		popq	%rbp
 7837              		.cfi_def_cfa 7, 8
 7838 0081 C3       		ret
 7839              		.cfi_endproc
 7840              	.LFE1508:
 7841              		.section	.gcc_except_table
 7842              	.LLSDA1508:
 7843 0640 FF       		.byte	0xff
 7844 0641 FF       		.byte	0xff
 7845 0642 01       		.byte	0x1
 7846 0643 08       		.uleb128 .LLSDACSE1508-.LLSDACSB1508
 7847              	.LLSDACSB1508:
 7848 0644 4E       		.uleb128 .LEHB231-.LFB1508
 7849 0645 05       		.uleb128 .LEHE231-.LEHB231
 7850 0646 61       		.uleb128 .L451-.LFB1508
 7851 0647 00       		.uleb128 0
 7852 0648 76       		.uleb128 .LEHB232-.LFB1508
 7853 0649 05       		.uleb128 .LEHE232-.LEHB232
 7854 064a 00       		.uleb128 0
 7855 064b 00       		.uleb128 0
 7856              	.LLSDACSE1508:
 7857              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev,"axG",@progbits,_ZN
 7859              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
 7860              		.set	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED1Ev,_ZNSt12_Vector_baseIN8UnitTes
 7861              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv,
 7862              		.align 2
 7863              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv
 7865              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv:
 7866              	.LFB1510:
 113:/usr/include/c++/4.9/bits/stl_vector.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 7867              		.loc 6 113 0
 7868              		.cfi_startproc
 7869 0000 55       		pushq	%rbp
 7870              		.cfi_def_cfa_offset 16
 7871              		.cfi_offset 6, -16
 7872 0001 4889E5   		movq	%rsp, %rbp
 7873              		.cfi_def_cfa_register 6
 7874 0004 48897DF8 		movq	%rdi, -8(%rbp)
 114:/usr/include/c++/4.9/bits/stl_vector.h **** 
 7875              		.loc 6 114 0
 7876 0008 488B45F8 		movq	-8(%rbp), %rax
 7877 000c 5D       		popq	%rbp
 7878              		.cfi_def_cfa 7, 8
 7879 000d C3       		ret
 7880              		.cfi_endproc
 7881              	.LFE1510:
 7883              		.section	.text._ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E,"axG",@progbits,_Z
 7884              		.weak	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E
 7886              	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E:
 7887              	.LFB1511:
 7888              		.file 9 "/usr/include/c++/4.9/bits/stl_construct.h"
   1:/usr/include/c++/4.9/bits/stl_construct.h **** // nonstandard construct and destroy functions -*- C++ -*-
   2:/usr/include/c++/4.9/bits/stl_construct.h **** 
   3:/usr/include/c++/4.9/bits/stl_construct.h **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   4:/usr/include/c++/4.9/bits/stl_construct.h **** //
   5:/usr/include/c++/4.9/bits/stl_construct.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/4.9/bits/stl_construct.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/4.9/bits/stl_construct.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/4.9/bits/stl_construct.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/4.9/bits/stl_construct.h **** // any later version.
  10:/usr/include/c++/4.9/bits/stl_construct.h **** 
  11:/usr/include/c++/4.9/bits/stl_construct.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/4.9/bits/stl_construct.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/4.9/bits/stl_construct.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/4.9/bits/stl_construct.h **** // GNU General Public License for more details.
  15:/usr/include/c++/4.9/bits/stl_construct.h **** 
  16:/usr/include/c++/4.9/bits/stl_construct.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/4.9/bits/stl_construct.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/4.9/bits/stl_construct.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/4.9/bits/stl_construct.h **** 
  20:/usr/include/c++/4.9/bits/stl_construct.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/4.9/bits/stl_construct.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/4.9/bits/stl_construct.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/4.9/bits/stl_construct.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/4.9/bits/stl_construct.h **** 
  25:/usr/include/c++/4.9/bits/stl_construct.h **** /*
  26:/usr/include/c++/4.9/bits/stl_construct.h ****  *
  27:/usr/include/c++/4.9/bits/stl_construct.h ****  * Copyright (c) 1994
  28:/usr/include/c++/4.9/bits/stl_construct.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/4.9/bits/stl_construct.h ****  *
  30:/usr/include/c++/4.9/bits/stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/4.9/bits/stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/4.9/bits/stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/4.9/bits/stl_construct.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/4.9/bits/stl_construct.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/4.9/bits/stl_construct.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/4.9/bits/stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/4.9/bits/stl_construct.h ****  *
  38:/usr/include/c++/4.9/bits/stl_construct.h ****  *
  39:/usr/include/c++/4.9/bits/stl_construct.h ****  * Copyright (c) 1996,1997
  40:/usr/include/c++/4.9/bits/stl_construct.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/4.9/bits/stl_construct.h ****  *
  42:/usr/include/c++/4.9/bits/stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/4.9/bits/stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/4.9/bits/stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/4.9/bits/stl_construct.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/4.9/bits/stl_construct.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/4.9/bits/stl_construct.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/4.9/bits/stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/4.9/bits/stl_construct.h ****  */
  50:/usr/include/c++/4.9/bits/stl_construct.h **** 
  51:/usr/include/c++/4.9/bits/stl_construct.h **** /** @file bits/stl_construct.h
  52:/usr/include/c++/4.9/bits/stl_construct.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/4.9/bits/stl_construct.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:/usr/include/c++/4.9/bits/stl_construct.h ****  */
  55:/usr/include/c++/4.9/bits/stl_construct.h **** 
  56:/usr/include/c++/4.9/bits/stl_construct.h **** #ifndef _STL_CONSTRUCT_H
  57:/usr/include/c++/4.9/bits/stl_construct.h **** #define _STL_CONSTRUCT_H 1
  58:/usr/include/c++/4.9/bits/stl_construct.h **** 
  59:/usr/include/c++/4.9/bits/stl_construct.h **** #include <new>
  60:/usr/include/c++/4.9/bits/stl_construct.h **** #include <bits/move.h>
  61:/usr/include/c++/4.9/bits/stl_construct.h **** #include <ext/alloc_traits.h>
  62:/usr/include/c++/4.9/bits/stl_construct.h **** 
  63:/usr/include/c++/4.9/bits/stl_construct.h **** namespace std _GLIBCXX_VISIBILITY(default)
  64:/usr/include/c++/4.9/bits/stl_construct.h **** {
  65:/usr/include/c++/4.9/bits/stl_construct.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  66:/usr/include/c++/4.9/bits/stl_construct.h **** 
  67:/usr/include/c++/4.9/bits/stl_construct.h ****   /**
  68:/usr/include/c++/4.9/bits/stl_construct.h ****    * Constructs an object in existing memory by invoking an allocated
  69:/usr/include/c++/4.9/bits/stl_construct.h ****    * object's constructor with an initializer.
  70:/usr/include/c++/4.9/bits/stl_construct.h ****    */
  71:/usr/include/c++/4.9/bits/stl_construct.h **** #if __cplusplus >= 201103L
  72:/usr/include/c++/4.9/bits/stl_construct.h ****   template<typename _T1, typename... _Args>
  73:/usr/include/c++/4.9/bits/stl_construct.h ****     inline void
  74:/usr/include/c++/4.9/bits/stl_construct.h ****     _Construct(_T1* __p, _Args&&... __args)
  75:/usr/include/c++/4.9/bits/stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
  76:/usr/include/c++/4.9/bits/stl_construct.h **** #else
  77:/usr/include/c++/4.9/bits/stl_construct.h ****   template<typename _T1, typename _T2>
  78:/usr/include/c++/4.9/bits/stl_construct.h ****     inline void
  79:/usr/include/c++/4.9/bits/stl_construct.h ****     _Construct(_T1* __p, const _T2& __value)
  80:/usr/include/c++/4.9/bits/stl_construct.h ****     {
  81:/usr/include/c++/4.9/bits/stl_construct.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  82:/usr/include/c++/4.9/bits/stl_construct.h ****       // 402. wrong new expression in [some_]allocator::construct
  83:/usr/include/c++/4.9/bits/stl_construct.h ****       ::new(static_cast<void*>(__p)) _T1(__value);
  84:/usr/include/c++/4.9/bits/stl_construct.h ****     }
  85:/usr/include/c++/4.9/bits/stl_construct.h **** #endif
  86:/usr/include/c++/4.9/bits/stl_construct.h **** 
  87:/usr/include/c++/4.9/bits/stl_construct.h ****   /**
  88:/usr/include/c++/4.9/bits/stl_construct.h ****    * Destroy the object pointed to by a pointer type.
  89:/usr/include/c++/4.9/bits/stl_construct.h ****    */
  90:/usr/include/c++/4.9/bits/stl_construct.h ****   template<typename _Tp>
  91:/usr/include/c++/4.9/bits/stl_construct.h ****     inline void
  92:/usr/include/c++/4.9/bits/stl_construct.h ****     _Destroy(_Tp* __pointer)
  93:/usr/include/c++/4.9/bits/stl_construct.h ****     { __pointer->~_Tp(); }
  94:/usr/include/c++/4.9/bits/stl_construct.h **** 
  95:/usr/include/c++/4.9/bits/stl_construct.h ****   template<bool>
  96:/usr/include/c++/4.9/bits/stl_construct.h ****     struct _Destroy_aux
  97:/usr/include/c++/4.9/bits/stl_construct.h ****     {
  98:/usr/include/c++/4.9/bits/stl_construct.h ****       template<typename _ForwardIterator>
  99:/usr/include/c++/4.9/bits/stl_construct.h ****         static void
 100:/usr/include/c++/4.9/bits/stl_construct.h ****         __destroy(_ForwardIterator __first, _ForwardIterator __last)
 101:/usr/include/c++/4.9/bits/stl_construct.h **** 	{
 102:/usr/include/c++/4.9/bits/stl_construct.h **** 	  for (; __first != __last; ++__first)
 103:/usr/include/c++/4.9/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 104:/usr/include/c++/4.9/bits/stl_construct.h **** 	}
 105:/usr/include/c++/4.9/bits/stl_construct.h ****     };
 106:/usr/include/c++/4.9/bits/stl_construct.h **** 
 107:/usr/include/c++/4.9/bits/stl_construct.h ****   template<>
 108:/usr/include/c++/4.9/bits/stl_construct.h ****     struct _Destroy_aux<true>
 109:/usr/include/c++/4.9/bits/stl_construct.h ****     {
 110:/usr/include/c++/4.9/bits/stl_construct.h ****       template<typename _ForwardIterator>
 111:/usr/include/c++/4.9/bits/stl_construct.h ****         static void
 112:/usr/include/c++/4.9/bits/stl_construct.h ****         __destroy(_ForwardIterator, _ForwardIterator) { }
 113:/usr/include/c++/4.9/bits/stl_construct.h ****     };
 114:/usr/include/c++/4.9/bits/stl_construct.h **** 
 115:/usr/include/c++/4.9/bits/stl_construct.h ****   /**
 116:/usr/include/c++/4.9/bits/stl_construct.h ****    * Destroy a range of objects.  If the value_type of the object has
 117:/usr/include/c++/4.9/bits/stl_construct.h ****    * a trivial destructor, the compiler should optimize all of this
 118:/usr/include/c++/4.9/bits/stl_construct.h ****    * away, otherwise the objects' destructors must be invoked.
 119:/usr/include/c++/4.9/bits/stl_construct.h ****    */
 120:/usr/include/c++/4.9/bits/stl_construct.h ****   template<typename _ForwardIterator>
 121:/usr/include/c++/4.9/bits/stl_construct.h ****     inline void
 122:/usr/include/c++/4.9/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 123:/usr/include/c++/4.9/bits/stl_construct.h ****     {
 124:/usr/include/c++/4.9/bits/stl_construct.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 125:/usr/include/c++/4.9/bits/stl_construct.h ****                        _Value_type;
 126:/usr/include/c++/4.9/bits/stl_construct.h ****       std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
 127:/usr/include/c++/4.9/bits/stl_construct.h **** 	__destroy(__first, __last);
 128:/usr/include/c++/4.9/bits/stl_construct.h ****     }
 129:/usr/include/c++/4.9/bits/stl_construct.h **** 
 130:/usr/include/c++/4.9/bits/stl_construct.h ****   /**
 131:/usr/include/c++/4.9/bits/stl_construct.h ****    * Destroy a range of objects using the supplied allocator.  For
 132:/usr/include/c++/4.9/bits/stl_construct.h ****    * nondefault allocators we do not optimize away invocation of 
 133:/usr/include/c++/4.9/bits/stl_construct.h ****    * destroy() even if _Tp has a trivial destructor.
 134:/usr/include/c++/4.9/bits/stl_construct.h ****    */
 135:/usr/include/c++/4.9/bits/stl_construct.h **** 
 136:/usr/include/c++/4.9/bits/stl_construct.h ****   template<typename _ForwardIterator, typename _Allocator>
 137:/usr/include/c++/4.9/bits/stl_construct.h ****     void
 138:/usr/include/c++/4.9/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 139:/usr/include/c++/4.9/bits/stl_construct.h **** 	     _Allocator& __alloc)
 140:/usr/include/c++/4.9/bits/stl_construct.h ****     {
 141:/usr/include/c++/4.9/bits/stl_construct.h ****       typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 142:/usr/include/c++/4.9/bits/stl_construct.h ****       for (; __first != __last; ++__first)
 143:/usr/include/c++/4.9/bits/stl_construct.h **** 	__traits::destroy(__alloc, std::__addressof(*__first));
 144:/usr/include/c++/4.9/bits/stl_construct.h ****     }
 145:/usr/include/c++/4.9/bits/stl_construct.h **** 
 146:/usr/include/c++/4.9/bits/stl_construct.h ****   template<typename _ForwardIterator, typename _Tp>
 147:/usr/include/c++/4.9/bits/stl_construct.h ****     inline void
 148:/usr/include/c++/4.9/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 7889              		.loc 9 148 0
 7890              		.cfi_startproc
 7891 0000 55       		pushq	%rbp
 7892              		.cfi_def_cfa_offset 16
 7893              		.cfi_offset 6, -16
 7894 0001 4889E5   		movq	%rsp, %rbp
 7895              		.cfi_def_cfa_register 6
 7896 0004 4883EC20 		subq	$32, %rsp
 7897 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7898 000c 488975F0 		movq	%rsi, -16(%rbp)
 7899 0010 488955E8 		movq	%rdx, -24(%rbp)
 149:/usr/include/c++/4.9/bits/stl_construct.h **** 	     allocator<_Tp>&)
 150:/usr/include/c++/4.9/bits/stl_construct.h ****     {
 151:/usr/include/c++/4.9/bits/stl_construct.h ****       _Destroy(__first, __last);
 7900              		.loc 9 151 0
 7901 0014 488B55F0 		movq	-16(%rbp), %rdx
 7902 0018 488B45F8 		movq	-8(%rbp), %rax
 7903 001c 4889D6   		movq	%rdx, %rsi
 7904 001f 4889C7   		movq	%rax, %rdi
 7905 0022 E8000000 		call	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_
 7905      00
 152:/usr/include/c++/4.9/bits/stl_construct.h ****     }
 7906              		.loc 9 152 0
 7907 0027 C9       		leave
 7908              		.cfi_def_cfa 7, 8
 7909 0028 C3       		ret
 7910              		.cfi_endproc
 7911              	.LFE1511:
 7913              		.section	.rodata
 7914 0575 000000   		.align 8
 7915              	.LC37:
 7916 0578 76656374 		.string	"vector::_M_range_check: __n (which is %zu) >= this->size() (which is %zu)"
 7916      6F723A3A 
 7916      5F4D5F72 
 7916      616E6765 
 7916      5F636865 
 7917              		.section	.text._ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE14_M_range_checkEm,"axG",@prog
 7918              		.align 2
 7919              		.weak	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE14_M_range_checkEm
 7921              	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE14_M_range_checkEm:
 7922              	.LFB1519:
 800:/usr/include/c++/4.9/bits/stl_vector.h ****       {
 7923              		.loc 6 800 0
 7924              		.cfi_startproc
 7925 0000 55       		pushq	%rbp
 7926              		.cfi_def_cfa_offset 16
 7927              		.cfi_offset 6, -16
 7928 0001 4889E5   		movq	%rsp, %rbp
 7929              		.cfi_def_cfa_register 6
 7930 0004 4883EC10 		subq	$16, %rsp
 7931 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7932 000c 488975F0 		movq	%rsi, -16(%rbp)
 802:/usr/include/c++/4.9/bits/stl_vector.h **** 	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
 7933              		.loc 6 802 0
 7934 0010 488B45F8 		movq	-8(%rbp), %rax
 7935 0014 4889C7   		movq	%rax, %rdi
 7936 0017 E8000000 		call	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv
 7936      00
 7937 001c 483B45F0 		cmpq	-16(%rbp), %rax
 7938 0020 0F96C0   		setbe	%al
 7939 0023 84C0     		testb	%al, %al
 7940 0025 7425     		je	.L456
 806:/usr/include/c++/4.9/bits/stl_vector.h ****       }
 7941              		.loc 6 806 0
 7942 0027 488B45F8 		movq	-8(%rbp), %rax
 7943 002b 4889C7   		movq	%rax, %rdi
 7944 002e E8000000 		call	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv
 7944      00
 7945 0033 4889C2   		movq	%rax, %rdx
 803:/usr/include/c++/4.9/bits/stl_vector.h **** 				       "(which is %zu) >= this->size() "
 7946              		.loc 6 803 0
 7947 0036 488B45F0 		movq	-16(%rbp), %rax
 7948 003a 4889C6   		movq	%rax, %rsi
 7949 003d BF000000 		movl	$.LC37, %edi
 7949      00
 7950 0042 B8000000 		movl	$0, %eax
 7950      00
 7951 0047 E8000000 		call	_ZSt24__throw_out_of_range_fmtPKcz
 7951      00
 7952              	.L456:
 807:/usr/include/c++/4.9/bits/stl_vector.h **** 
 7953              		.loc 6 807 0
 7954 004c C9       		leave
 7955              		.cfi_def_cfa 7, 8
 7956 004d C3       		ret
 7957              		.cfi_endproc
 7958              	.LFE1519:
 7960              		.section	.text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEixEm,"axG",@progbits,_ZNSt6vect
 7961              		.align 2
 7962              		.weak	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEixEm
 7964              	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEixEm:
 7965              	.LFB1520:
 779:/usr/include/c++/4.9/bits/stl_vector.h ****       { return *(this->_M_impl._M_start + __n); }
 7966              		.loc 6 779 0
 7967              		.cfi_startproc
 7968 0000 55       		pushq	%rbp
 7969              		.cfi_def_cfa_offset 16
 7970              		.cfi_offset 6, -16
 7971 0001 4889E5   		movq	%rsp, %rbp
 7972              		.cfi_def_cfa_register 6
 7973 0004 48897DF8 		movq	%rdi, -8(%rbp)
 7974 0008 488975F0 		movq	%rsi, -16(%rbp)
 780:/usr/include/c++/4.9/bits/stl_vector.h **** 
 7975              		.loc 6 780 0
 7976 000c 488B45F8 		movq	-8(%rbp), %rax
 7977 0010 488B10   		movq	(%rax), %rdx
 7978 0013 488B45F0 		movq	-16(%rbp), %rax
 7979 0017 48C1E003 		salq	$3, %rax
 7980 001b 488D0CC5 		leaq	0(,%rax,8), %rcx
 7980      00000000 
 7981 0023 4829C1   		subq	%rax, %rcx
 7982 0026 4889C8   		movq	%rcx, %rax
 7983 0029 4801D0   		addq	%rdx, %rax
 7984 002c 5D       		popq	%rbp
 7985              		.cfi_def_cfa 7, 8
 7986 002d C3       		ret
 7987              		.cfi_endproc
 7988              	.LFE1520:
 7990              		.section	.text._ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKSbIS3_T0_T1_E,"axG",@progbits,_ZSteqIcSt11ch
 7991              		.weak	_ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKSbIS3_T0_T1_E
 7993              	_ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKSbIS3_T0_T1_E:
 7994              	.LFB1521:
 7995              		.file 10 "/usr/include/c++/4.9/bits/basic_string.h"
   1:/usr/include/c++/4.9/bits/basic_string.h **** // Components for manipulating sequences of characters -*- C++ -*-
   2:/usr/include/c++/4.9/bits/basic_string.h **** 
   3:/usr/include/c++/4.9/bits/basic_string.h **** // Copyright (C) 1997-2014 Free Software Foundation, Inc.
   4:/usr/include/c++/4.9/bits/basic_string.h **** //
   5:/usr/include/c++/4.9/bits/basic_string.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/4.9/bits/basic_string.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/4.9/bits/basic_string.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/4.9/bits/basic_string.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/4.9/bits/basic_string.h **** // any later version.
  10:/usr/include/c++/4.9/bits/basic_string.h **** 
  11:/usr/include/c++/4.9/bits/basic_string.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/4.9/bits/basic_string.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/4.9/bits/basic_string.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/4.9/bits/basic_string.h **** // GNU General Public License for more details.
  15:/usr/include/c++/4.9/bits/basic_string.h **** 
  16:/usr/include/c++/4.9/bits/basic_string.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/4.9/bits/basic_string.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/4.9/bits/basic_string.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/4.9/bits/basic_string.h **** 
  20:/usr/include/c++/4.9/bits/basic_string.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/4.9/bits/basic_string.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/4.9/bits/basic_string.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/4.9/bits/basic_string.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/4.9/bits/basic_string.h **** 
  25:/usr/include/c++/4.9/bits/basic_string.h **** /** @file bits/basic_string.h
  26:/usr/include/c++/4.9/bits/basic_string.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/4.9/bits/basic_string.h ****  *  Do not attempt to use it directly. @headername{string}
  28:/usr/include/c++/4.9/bits/basic_string.h ****  */
  29:/usr/include/c++/4.9/bits/basic_string.h **** 
  30:/usr/include/c++/4.9/bits/basic_string.h **** //
  31:/usr/include/c++/4.9/bits/basic_string.h **** // ISO C++ 14882: 21 Strings library
  32:/usr/include/c++/4.9/bits/basic_string.h **** //
  33:/usr/include/c++/4.9/bits/basic_string.h **** 
  34:/usr/include/c++/4.9/bits/basic_string.h **** #ifndef _BASIC_STRING_H
  35:/usr/include/c++/4.9/bits/basic_string.h **** #define _BASIC_STRING_H 1
  36:/usr/include/c++/4.9/bits/basic_string.h **** 
  37:/usr/include/c++/4.9/bits/basic_string.h **** #pragma GCC system_header
  38:/usr/include/c++/4.9/bits/basic_string.h **** 
  39:/usr/include/c++/4.9/bits/basic_string.h **** #include <ext/atomicity.h>
  40:/usr/include/c++/4.9/bits/basic_string.h **** #include <debug/debug.h>
  41:/usr/include/c++/4.9/bits/basic_string.h **** #if __cplusplus >= 201103L
  42:/usr/include/c++/4.9/bits/basic_string.h **** #include <initializer_list>
  43:/usr/include/c++/4.9/bits/basic_string.h **** #endif
  44:/usr/include/c++/4.9/bits/basic_string.h **** 
  45:/usr/include/c++/4.9/bits/basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
  46:/usr/include/c++/4.9/bits/basic_string.h **** {
  47:/usr/include/c++/4.9/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  48:/usr/include/c++/4.9/bits/basic_string.h **** 
  49:/usr/include/c++/4.9/bits/basic_string.h ****   /**
  50:/usr/include/c++/4.9/bits/basic_string.h ****    *  @class basic_string basic_string.h <string>
  51:/usr/include/c++/4.9/bits/basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
  52:/usr/include/c++/4.9/bits/basic_string.h ****    *
  53:/usr/include/c++/4.9/bits/basic_string.h ****    *  @ingroup strings
  54:/usr/include/c++/4.9/bits/basic_string.h ****    *  @ingroup sequences
  55:/usr/include/c++/4.9/bits/basic_string.h ****    *
  56:/usr/include/c++/4.9/bits/basic_string.h ****    *  @tparam _CharT  Type of character
  57:/usr/include/c++/4.9/bits/basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
  58:/usr/include/c++/4.9/bits/basic_string.h ****    *                   char_traits<_CharT>.
  59:/usr/include/c++/4.9/bits/basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
  60:/usr/include/c++/4.9/bits/basic_string.h ****    *
  61:/usr/include/c++/4.9/bits/basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  62:/usr/include/c++/4.9/bits/basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
  63:/usr/include/c++/4.9/bits/basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
  64:/usr/include/c++/4.9/bits/basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
  65:/usr/include/c++/4.9/bits/basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
  66:/usr/include/c++/4.9/bits/basic_string.h ****    *
  67:/usr/include/c++/4.9/bits/basic_string.h ****    *  @doctodo
  68:/usr/include/c++/4.9/bits/basic_string.h ****    *
  69:/usr/include/c++/4.9/bits/basic_string.h ****    *
  70:/usr/include/c++/4.9/bits/basic_string.h ****    *  Documentation?  What's that?
  71:/usr/include/c++/4.9/bits/basic_string.h ****    *  Nathan Myers <ncm@cantrip.org>.
  72:/usr/include/c++/4.9/bits/basic_string.h ****    *
  73:/usr/include/c++/4.9/bits/basic_string.h ****    *  A string looks like this:
  74:/usr/include/c++/4.9/bits/basic_string.h ****    *
  75:/usr/include/c++/4.9/bits/basic_string.h ****    *  @code
  76:/usr/include/c++/4.9/bits/basic_string.h ****    *                                        [_Rep]
  77:/usr/include/c++/4.9/bits/basic_string.h ****    *                                        _M_length
  78:/usr/include/c++/4.9/bits/basic_string.h ****    *   [basic_string<char_type>]            _M_capacity
  79:/usr/include/c++/4.9/bits/basic_string.h ****    *   _M_dataplus                          _M_refcount
  80:/usr/include/c++/4.9/bits/basic_string.h ****    *   _M_p ---------------->               unnamed array of char_type
  81:/usr/include/c++/4.9/bits/basic_string.h ****    *  @endcode
  82:/usr/include/c++/4.9/bits/basic_string.h ****    *
  83:/usr/include/c++/4.9/bits/basic_string.h ****    *  Where the _M_p points to the first character in the string, and
  84:/usr/include/c++/4.9/bits/basic_string.h ****    *  you cast it to a pointer-to-_Rep and subtract 1 to get a
  85:/usr/include/c++/4.9/bits/basic_string.h ****    *  pointer to the header.
  86:/usr/include/c++/4.9/bits/basic_string.h ****    *
  87:/usr/include/c++/4.9/bits/basic_string.h ****    *  This approach has the enormous advantage that a string object
  88:/usr/include/c++/4.9/bits/basic_string.h ****    *  requires only one allocation.  All the ugliness is confined
  89:/usr/include/c++/4.9/bits/basic_string.h ****    *  within a single %pair of inline functions, which each compile to
  90:/usr/include/c++/4.9/bits/basic_string.h ****    *  a single @a add instruction: _Rep::_M_data(), and
  91:/usr/include/c++/4.9/bits/basic_string.h ****    *  string::_M_rep(); and the allocation function which gets a
  92:/usr/include/c++/4.9/bits/basic_string.h ****    *  block of raw bytes and with room enough and constructs a _Rep
  93:/usr/include/c++/4.9/bits/basic_string.h ****    *  object at the front.
  94:/usr/include/c++/4.9/bits/basic_string.h ****    *
  95:/usr/include/c++/4.9/bits/basic_string.h ****    *  The reason you want _M_data pointing to the character %array and
  96:/usr/include/c++/4.9/bits/basic_string.h ****    *  not the _Rep is so that the debugger can see the string
  97:/usr/include/c++/4.9/bits/basic_string.h ****    *  contents. (Probably we should add a non-inline member to get
  98:/usr/include/c++/4.9/bits/basic_string.h ****    *  the _Rep for the debugger to use, so users can check the actual
  99:/usr/include/c++/4.9/bits/basic_string.h ****    *  string length.)
 100:/usr/include/c++/4.9/bits/basic_string.h ****    *
 101:/usr/include/c++/4.9/bits/basic_string.h ****    *  Note that the _Rep object is a POD so that you can have a
 102:/usr/include/c++/4.9/bits/basic_string.h ****    *  static <em>empty string</em> _Rep object already @a constructed before
 103:/usr/include/c++/4.9/bits/basic_string.h ****    *  static constructors have run.  The reference-count encoding is
 104:/usr/include/c++/4.9/bits/basic_string.h ****    *  chosen so that a 0 indicates one reference, so you never try to
 105:/usr/include/c++/4.9/bits/basic_string.h ****    *  destroy the empty-string _Rep object.
 106:/usr/include/c++/4.9/bits/basic_string.h ****    *
 107:/usr/include/c++/4.9/bits/basic_string.h ****    *  All but the last paragraph is considered pretty conventional
 108:/usr/include/c++/4.9/bits/basic_string.h ****    *  for a C++ string implementation.
 109:/usr/include/c++/4.9/bits/basic_string.h ****   */
 110:/usr/include/c++/4.9/bits/basic_string.h ****   // 21.3  Template class basic_string
 111:/usr/include/c++/4.9/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
 112:/usr/include/c++/4.9/bits/basic_string.h ****     class basic_string
 113:/usr/include/c++/4.9/bits/basic_string.h ****     {
 114:/usr/include/c++/4.9/bits/basic_string.h ****       typedef typename _Alloc::template rebind<_CharT>::other _CharT_alloc_type;
 115:/usr/include/c++/4.9/bits/basic_string.h **** 
 116:/usr/include/c++/4.9/bits/basic_string.h ****       // Types:
 117:/usr/include/c++/4.9/bits/basic_string.h ****     public:
 118:/usr/include/c++/4.9/bits/basic_string.h ****       typedef _Traits					    traits_type;
 119:/usr/include/c++/4.9/bits/basic_string.h ****       typedef typename _Traits::char_type		    value_type;
 120:/usr/include/c++/4.9/bits/basic_string.h ****       typedef _Alloc					    allocator_type;
 121:/usr/include/c++/4.9/bits/basic_string.h ****       typedef typename _CharT_alloc_type::size_type	    size_type;
 122:/usr/include/c++/4.9/bits/basic_string.h ****       typedef typename _CharT_alloc_type::difference_type   difference_type;
 123:/usr/include/c++/4.9/bits/basic_string.h ****       typedef typename _CharT_alloc_type::reference	    reference;
 124:/usr/include/c++/4.9/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_reference   const_reference;
 125:/usr/include/c++/4.9/bits/basic_string.h ****       typedef typename _CharT_alloc_type::pointer	    pointer;
 126:/usr/include/c++/4.9/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_pointer	    const_pointer;
 127:/usr/include/c++/4.9/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
 128:/usr/include/c++/4.9/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
 129:/usr/include/c++/4.9/bits/basic_string.h ****                                                             const_iterator;
 130:/usr/include/c++/4.9/bits/basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
 131:/usr/include/c++/4.9/bits/basic_string.h ****       typedef std::reverse_iterator<iterator>		    reverse_iterator;
 132:/usr/include/c++/4.9/bits/basic_string.h **** 
 133:/usr/include/c++/4.9/bits/basic_string.h ****     private:
 134:/usr/include/c++/4.9/bits/basic_string.h ****       // _Rep: string representation
 135:/usr/include/c++/4.9/bits/basic_string.h ****       //   Invariants:
 136:/usr/include/c++/4.9/bits/basic_string.h ****       //   1. String really contains _M_length + 1 characters: due to 21.3.4
 137:/usr/include/c++/4.9/bits/basic_string.h ****       //      must be kept null-terminated.
 138:/usr/include/c++/4.9/bits/basic_string.h ****       //   2. _M_capacity >= _M_length
 139:/usr/include/c++/4.9/bits/basic_string.h ****       //      Allocated memory is always (_M_capacity + 1) * sizeof(_CharT).
 140:/usr/include/c++/4.9/bits/basic_string.h ****       //   3. _M_refcount has three states:
 141:/usr/include/c++/4.9/bits/basic_string.h ****       //      -1: leaked, one reference, no ref-copies allowed, non-const.
 142:/usr/include/c++/4.9/bits/basic_string.h ****       //       0: one reference, non-const.
 143:/usr/include/c++/4.9/bits/basic_string.h ****       //     n>0: n + 1 references, operations require a lock, const.
 144:/usr/include/c++/4.9/bits/basic_string.h ****       //   4. All fields==0 is an empty string, given the extra storage
 145:/usr/include/c++/4.9/bits/basic_string.h ****       //      beyond-the-end for a null terminator; thus, the shared
 146:/usr/include/c++/4.9/bits/basic_string.h ****       //      empty string representation needs no constructor.
 147:/usr/include/c++/4.9/bits/basic_string.h **** 
 148:/usr/include/c++/4.9/bits/basic_string.h ****       struct _Rep_base
 149:/usr/include/c++/4.9/bits/basic_string.h ****       {
 150:/usr/include/c++/4.9/bits/basic_string.h **** 	size_type		_M_length;
 151:/usr/include/c++/4.9/bits/basic_string.h **** 	size_type		_M_capacity;
 152:/usr/include/c++/4.9/bits/basic_string.h **** 	_Atomic_word		_M_refcount;
 153:/usr/include/c++/4.9/bits/basic_string.h ****       };
 154:/usr/include/c++/4.9/bits/basic_string.h **** 
 155:/usr/include/c++/4.9/bits/basic_string.h ****       struct _Rep : _Rep_base
 156:/usr/include/c++/4.9/bits/basic_string.h ****       {
 157:/usr/include/c++/4.9/bits/basic_string.h **** 	// Types:
 158:/usr/include/c++/4.9/bits/basic_string.h **** 	typedef typename _Alloc::template rebind<char>::other _Raw_bytes_alloc;
 159:/usr/include/c++/4.9/bits/basic_string.h **** 
 160:/usr/include/c++/4.9/bits/basic_string.h **** 	// (Public) Data members:
 161:/usr/include/c++/4.9/bits/basic_string.h **** 
 162:/usr/include/c++/4.9/bits/basic_string.h **** 	// The maximum number of individual char_type elements of an
 163:/usr/include/c++/4.9/bits/basic_string.h **** 	// individual string is determined by _S_max_size. This is the
 164:/usr/include/c++/4.9/bits/basic_string.h **** 	// value that will be returned by max_size().  (Whereas npos
 165:/usr/include/c++/4.9/bits/basic_string.h **** 	// is the maximum number of bytes the allocator can allocate.)
 166:/usr/include/c++/4.9/bits/basic_string.h **** 	// If one was to divvy up the theoretical largest size string,
 167:/usr/include/c++/4.9/bits/basic_string.h **** 	// with a terminating character and m _CharT elements, it'd
 168:/usr/include/c++/4.9/bits/basic_string.h **** 	// look like this:
 169:/usr/include/c++/4.9/bits/basic_string.h **** 	// npos = sizeof(_Rep) + (m * sizeof(_CharT)) + sizeof(_CharT)
 170:/usr/include/c++/4.9/bits/basic_string.h **** 	// Solving for m:
 171:/usr/include/c++/4.9/bits/basic_string.h **** 	// m = ((npos - sizeof(_Rep))/sizeof(CharT)) - 1
 172:/usr/include/c++/4.9/bits/basic_string.h **** 	// In addition, this implementation quarters this amount.
 173:/usr/include/c++/4.9/bits/basic_string.h **** 	static const size_type	_S_max_size;
 174:/usr/include/c++/4.9/bits/basic_string.h **** 	static const _CharT	_S_terminal;
 175:/usr/include/c++/4.9/bits/basic_string.h **** 
 176:/usr/include/c++/4.9/bits/basic_string.h **** 	// The following storage is init'd to 0 by the linker, resulting
 177:/usr/include/c++/4.9/bits/basic_string.h ****         // (carefully) in an empty string with one reference.
 178:/usr/include/c++/4.9/bits/basic_string.h ****         static size_type _S_empty_rep_storage[];
 179:/usr/include/c++/4.9/bits/basic_string.h **** 
 180:/usr/include/c++/4.9/bits/basic_string.h ****         static _Rep&
 181:/usr/include/c++/4.9/bits/basic_string.h ****         _S_empty_rep() _GLIBCXX_NOEXCEPT
 182:/usr/include/c++/4.9/bits/basic_string.h ****         { 
 183:/usr/include/c++/4.9/bits/basic_string.h **** 	  // NB: Mild hack to avoid strict-aliasing warnings.  Note that
 184:/usr/include/c++/4.9/bits/basic_string.h **** 	  // _S_empty_rep_storage is never modified and the punning should
 185:/usr/include/c++/4.9/bits/basic_string.h **** 	  // be reasonably safe in this case.
 186:/usr/include/c++/4.9/bits/basic_string.h **** 	  void* __p = reinterpret_cast<void*>(&_S_empty_rep_storage);
 187:/usr/include/c++/4.9/bits/basic_string.h **** 	  return *reinterpret_cast<_Rep*>(__p);
 188:/usr/include/c++/4.9/bits/basic_string.h **** 	}
 189:/usr/include/c++/4.9/bits/basic_string.h **** 
 190:/usr/include/c++/4.9/bits/basic_string.h ****         bool
 191:/usr/include/c++/4.9/bits/basic_string.h **** 	_M_is_leaked() const _GLIBCXX_NOEXCEPT
 192:/usr/include/c++/4.9/bits/basic_string.h ****         { return this->_M_refcount < 0; }
 193:/usr/include/c++/4.9/bits/basic_string.h **** 
 194:/usr/include/c++/4.9/bits/basic_string.h ****         bool
 195:/usr/include/c++/4.9/bits/basic_string.h **** 	_M_is_shared() const _GLIBCXX_NOEXCEPT
 196:/usr/include/c++/4.9/bits/basic_string.h ****         { return this->_M_refcount > 0; }
 197:/usr/include/c++/4.9/bits/basic_string.h **** 
 198:/usr/include/c++/4.9/bits/basic_string.h ****         void
 199:/usr/include/c++/4.9/bits/basic_string.h **** 	_M_set_leaked() _GLIBCXX_NOEXCEPT
 200:/usr/include/c++/4.9/bits/basic_string.h ****         { this->_M_refcount = -1; }
 201:/usr/include/c++/4.9/bits/basic_string.h **** 
 202:/usr/include/c++/4.9/bits/basic_string.h ****         void
 203:/usr/include/c++/4.9/bits/basic_string.h **** 	_M_set_sharable() _GLIBCXX_NOEXCEPT
 204:/usr/include/c++/4.9/bits/basic_string.h ****         { this->_M_refcount = 0; }
 205:/usr/include/c++/4.9/bits/basic_string.h **** 
 206:/usr/include/c++/4.9/bits/basic_string.h **** 	void
 207:/usr/include/c++/4.9/bits/basic_string.h **** 	_M_set_length_and_sharable(size_type __n) _GLIBCXX_NOEXCEPT
 208:/usr/include/c++/4.9/bits/basic_string.h **** 	{
 209:/usr/include/c++/4.9/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
 210:/usr/include/c++/4.9/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
 211:/usr/include/c++/4.9/bits/basic_string.h **** #endif
 212:/usr/include/c++/4.9/bits/basic_string.h **** 	    {
 213:/usr/include/c++/4.9/bits/basic_string.h **** 	      this->_M_set_sharable();  // One reference.
 214:/usr/include/c++/4.9/bits/basic_string.h **** 	      this->_M_length = __n;
 215:/usr/include/c++/4.9/bits/basic_string.h **** 	      traits_type::assign(this->_M_refdata()[__n], _S_terminal);
 216:/usr/include/c++/4.9/bits/basic_string.h **** 	      // grrr. (per 21.3.4)
 217:/usr/include/c++/4.9/bits/basic_string.h **** 	      // You cannot leave those LWG people alone for a second.
 218:/usr/include/c++/4.9/bits/basic_string.h **** 	    }
 219:/usr/include/c++/4.9/bits/basic_string.h **** 	}
 220:/usr/include/c++/4.9/bits/basic_string.h **** 
 221:/usr/include/c++/4.9/bits/basic_string.h **** 	_CharT*
 222:/usr/include/c++/4.9/bits/basic_string.h **** 	_M_refdata() throw()
 223:/usr/include/c++/4.9/bits/basic_string.h **** 	{ return reinterpret_cast<_CharT*>(this + 1); }
 224:/usr/include/c++/4.9/bits/basic_string.h **** 
 225:/usr/include/c++/4.9/bits/basic_string.h **** 	_CharT*
 226:/usr/include/c++/4.9/bits/basic_string.h **** 	_M_grab(const _Alloc& __alloc1, const _Alloc& __alloc2)
 227:/usr/include/c++/4.9/bits/basic_string.h **** 	{
 228:/usr/include/c++/4.9/bits/basic_string.h **** 	  return (!_M_is_leaked() && __alloc1 == __alloc2)
 229:/usr/include/c++/4.9/bits/basic_string.h **** 	          ? _M_refcopy() : _M_clone(__alloc1);
 230:/usr/include/c++/4.9/bits/basic_string.h **** 	}
 231:/usr/include/c++/4.9/bits/basic_string.h **** 
 232:/usr/include/c++/4.9/bits/basic_string.h **** 	// Create & Destroy
 233:/usr/include/c++/4.9/bits/basic_string.h **** 	static _Rep*
 234:/usr/include/c++/4.9/bits/basic_string.h **** 	_S_create(size_type, size_type, const _Alloc&);
 235:/usr/include/c++/4.9/bits/basic_string.h **** 
 236:/usr/include/c++/4.9/bits/basic_string.h **** 	void
 237:/usr/include/c++/4.9/bits/basic_string.h **** 	_M_dispose(const _Alloc& __a) _GLIBCXX_NOEXCEPT
 238:/usr/include/c++/4.9/bits/basic_string.h **** 	{
 239:/usr/include/c++/4.9/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
 240:/usr/include/c++/4.9/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
 241:/usr/include/c++/4.9/bits/basic_string.h **** #endif
 242:/usr/include/c++/4.9/bits/basic_string.h **** 	    {
 243:/usr/include/c++/4.9/bits/basic_string.h **** 	      // Be race-detector-friendly.  For more info see bits/c++config.
 244:/usr/include/c++/4.9/bits/basic_string.h **** 	      _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&this->_M_refcount);
 245:/usr/include/c++/4.9/bits/basic_string.h **** 	      if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount,
 246:/usr/include/c++/4.9/bits/basic_string.h **** 							 -1) <= 0)
 247:/usr/include/c++/4.9/bits/basic_string.h **** 		{
 248:/usr/include/c++/4.9/bits/basic_string.h **** 		  _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&this->_M_refcount);
 249:/usr/include/c++/4.9/bits/basic_string.h **** 		  _M_destroy(__a);
 250:/usr/include/c++/4.9/bits/basic_string.h **** 		}
 251:/usr/include/c++/4.9/bits/basic_string.h **** 	    }
 252:/usr/include/c++/4.9/bits/basic_string.h **** 	}  // XXX MT
 253:/usr/include/c++/4.9/bits/basic_string.h **** 
 254:/usr/include/c++/4.9/bits/basic_string.h **** 	void
 255:/usr/include/c++/4.9/bits/basic_string.h **** 	_M_destroy(const _Alloc&) throw();
 256:/usr/include/c++/4.9/bits/basic_string.h **** 
 257:/usr/include/c++/4.9/bits/basic_string.h **** 	_CharT*
 258:/usr/include/c++/4.9/bits/basic_string.h **** 	_M_refcopy() throw()
 259:/usr/include/c++/4.9/bits/basic_string.h **** 	{
 260:/usr/include/c++/4.9/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
 261:/usr/include/c++/4.9/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
 262:/usr/include/c++/4.9/bits/basic_string.h **** #endif
 263:/usr/include/c++/4.9/bits/basic_string.h ****             __gnu_cxx::__atomic_add_dispatch(&this->_M_refcount, 1);
 264:/usr/include/c++/4.9/bits/basic_string.h **** 	  return _M_refdata();
 265:/usr/include/c++/4.9/bits/basic_string.h **** 	}  // XXX MT
 266:/usr/include/c++/4.9/bits/basic_string.h **** 
 267:/usr/include/c++/4.9/bits/basic_string.h **** 	_CharT*
 268:/usr/include/c++/4.9/bits/basic_string.h **** 	_M_clone(const _Alloc&, size_type __res = 0);
 269:/usr/include/c++/4.9/bits/basic_string.h ****       };
 270:/usr/include/c++/4.9/bits/basic_string.h **** 
 271:/usr/include/c++/4.9/bits/basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
 272:/usr/include/c++/4.9/bits/basic_string.h ****       struct _Alloc_hider : _Alloc
 273:/usr/include/c++/4.9/bits/basic_string.h ****       {
 274:/usr/include/c++/4.9/bits/basic_string.h **** 	_Alloc_hider(_CharT* __dat, const _Alloc& __a) _GLIBCXX_NOEXCEPT
 275:/usr/include/c++/4.9/bits/basic_string.h **** 	: _Alloc(__a), _M_p(__dat) { }
 276:/usr/include/c++/4.9/bits/basic_string.h **** 
 277:/usr/include/c++/4.9/bits/basic_string.h **** 	_CharT* _M_p; // The actual data.
 278:/usr/include/c++/4.9/bits/basic_string.h ****       };
 279:/usr/include/c++/4.9/bits/basic_string.h **** 
 280:/usr/include/c++/4.9/bits/basic_string.h ****     public:
 281:/usr/include/c++/4.9/bits/basic_string.h ****       // Data Members (public):
 282:/usr/include/c++/4.9/bits/basic_string.h ****       // NB: This is an unsigned type, and thus represents the maximum
 283:/usr/include/c++/4.9/bits/basic_string.h ****       // size that the allocator can hold.
 284:/usr/include/c++/4.9/bits/basic_string.h ****       ///  Value returned by various member functions when they fail.
 285:/usr/include/c++/4.9/bits/basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
 286:/usr/include/c++/4.9/bits/basic_string.h **** 
 287:/usr/include/c++/4.9/bits/basic_string.h ****     private:
 288:/usr/include/c++/4.9/bits/basic_string.h ****       // Data Members (private):
 289:/usr/include/c++/4.9/bits/basic_string.h ****       mutable _Alloc_hider	_M_dataplus;
 290:/usr/include/c++/4.9/bits/basic_string.h **** 
 291:/usr/include/c++/4.9/bits/basic_string.h ****       _CharT*
 292:/usr/include/c++/4.9/bits/basic_string.h ****       _M_data() const _GLIBCXX_NOEXCEPT
 293:/usr/include/c++/4.9/bits/basic_string.h ****       { return  _M_dataplus._M_p; }
 294:/usr/include/c++/4.9/bits/basic_string.h **** 
 295:/usr/include/c++/4.9/bits/basic_string.h ****       _CharT*
 296:/usr/include/c++/4.9/bits/basic_string.h ****       _M_data(_CharT* __p) _GLIBCXX_NOEXCEPT
 297:/usr/include/c++/4.9/bits/basic_string.h ****       { return (_M_dataplus._M_p = __p); }
 298:/usr/include/c++/4.9/bits/basic_string.h **** 
 299:/usr/include/c++/4.9/bits/basic_string.h ****       _Rep*
 300:/usr/include/c++/4.9/bits/basic_string.h ****       _M_rep() const _GLIBCXX_NOEXCEPT
 301:/usr/include/c++/4.9/bits/basic_string.h ****       { return &((reinterpret_cast<_Rep*> (_M_data()))[-1]); }
 302:/usr/include/c++/4.9/bits/basic_string.h **** 
 303:/usr/include/c++/4.9/bits/basic_string.h ****       // For the internal use we have functions similar to `begin'/`end'
 304:/usr/include/c++/4.9/bits/basic_string.h ****       // but they do not call _M_leak.
 305:/usr/include/c++/4.9/bits/basic_string.h ****       iterator
 306:/usr/include/c++/4.9/bits/basic_string.h ****       _M_ibegin() const _GLIBCXX_NOEXCEPT
 307:/usr/include/c++/4.9/bits/basic_string.h ****       { return iterator(_M_data()); }
 308:/usr/include/c++/4.9/bits/basic_string.h **** 
 309:/usr/include/c++/4.9/bits/basic_string.h ****       iterator
 310:/usr/include/c++/4.9/bits/basic_string.h ****       _M_iend() const _GLIBCXX_NOEXCEPT
 311:/usr/include/c++/4.9/bits/basic_string.h ****       { return iterator(_M_data() + this->size()); }
 312:/usr/include/c++/4.9/bits/basic_string.h **** 
 313:/usr/include/c++/4.9/bits/basic_string.h ****       void
 314:/usr/include/c++/4.9/bits/basic_string.h ****       _M_leak()    // for use in begin() & non-const op[]
 315:/usr/include/c++/4.9/bits/basic_string.h ****       {
 316:/usr/include/c++/4.9/bits/basic_string.h **** 	if (!_M_rep()->_M_is_leaked())
 317:/usr/include/c++/4.9/bits/basic_string.h **** 	  _M_leak_hard();
 318:/usr/include/c++/4.9/bits/basic_string.h ****       }
 319:/usr/include/c++/4.9/bits/basic_string.h **** 
 320:/usr/include/c++/4.9/bits/basic_string.h ****       size_type
 321:/usr/include/c++/4.9/bits/basic_string.h ****       _M_check(size_type __pos, const char* __s) const
 322:/usr/include/c++/4.9/bits/basic_string.h ****       {
 323:/usr/include/c++/4.9/bits/basic_string.h **** 	if (__pos > this->size())
 324:/usr/include/c++/4.9/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 325:/usr/include/c++/4.9/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 326:/usr/include/c++/4.9/bits/basic_string.h **** 				   __s, __pos, this->size());
 327:/usr/include/c++/4.9/bits/basic_string.h **** 	return __pos;
 328:/usr/include/c++/4.9/bits/basic_string.h ****       }
 329:/usr/include/c++/4.9/bits/basic_string.h **** 
 330:/usr/include/c++/4.9/bits/basic_string.h ****       void
 331:/usr/include/c++/4.9/bits/basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
 332:/usr/include/c++/4.9/bits/basic_string.h ****       {
 333:/usr/include/c++/4.9/bits/basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
 334:/usr/include/c++/4.9/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 335:/usr/include/c++/4.9/bits/basic_string.h ****       }
 336:/usr/include/c++/4.9/bits/basic_string.h **** 
 337:/usr/include/c++/4.9/bits/basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
 338:/usr/include/c++/4.9/bits/basic_string.h ****       size_type
 339:/usr/include/c++/4.9/bits/basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
 340:/usr/include/c++/4.9/bits/basic_string.h ****       {
 341:/usr/include/c++/4.9/bits/basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
 342:/usr/include/c++/4.9/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 343:/usr/include/c++/4.9/bits/basic_string.h ****       }
 344:/usr/include/c++/4.9/bits/basic_string.h **** 
 345:/usr/include/c++/4.9/bits/basic_string.h ****       // True if _Rep and source do not overlap.
 346:/usr/include/c++/4.9/bits/basic_string.h ****       bool
 347:/usr/include/c++/4.9/bits/basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
 348:/usr/include/c++/4.9/bits/basic_string.h ****       {
 349:/usr/include/c++/4.9/bits/basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
 350:/usr/include/c++/4.9/bits/basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
 351:/usr/include/c++/4.9/bits/basic_string.h ****       }
 352:/usr/include/c++/4.9/bits/basic_string.h **** 
 353:/usr/include/c++/4.9/bits/basic_string.h ****       // When __n = 1 way faster than the general multichar
 354:/usr/include/c++/4.9/bits/basic_string.h ****       // traits_type::copy/move/assign.
 355:/usr/include/c++/4.9/bits/basic_string.h ****       static void
 356:/usr/include/c++/4.9/bits/basic_string.h ****       _M_copy(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
 357:/usr/include/c++/4.9/bits/basic_string.h ****       {
 358:/usr/include/c++/4.9/bits/basic_string.h **** 	if (__n == 1)
 359:/usr/include/c++/4.9/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 360:/usr/include/c++/4.9/bits/basic_string.h **** 	else
 361:/usr/include/c++/4.9/bits/basic_string.h **** 	  traits_type::copy(__d, __s, __n);
 362:/usr/include/c++/4.9/bits/basic_string.h ****       }
 363:/usr/include/c++/4.9/bits/basic_string.h **** 
 364:/usr/include/c++/4.9/bits/basic_string.h ****       static void
 365:/usr/include/c++/4.9/bits/basic_string.h ****       _M_move(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
 366:/usr/include/c++/4.9/bits/basic_string.h ****       {
 367:/usr/include/c++/4.9/bits/basic_string.h **** 	if (__n == 1)
 368:/usr/include/c++/4.9/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 369:/usr/include/c++/4.9/bits/basic_string.h **** 	else
 370:/usr/include/c++/4.9/bits/basic_string.h **** 	  traits_type::move(__d, __s, __n);	  
 371:/usr/include/c++/4.9/bits/basic_string.h ****       }
 372:/usr/include/c++/4.9/bits/basic_string.h **** 
 373:/usr/include/c++/4.9/bits/basic_string.h ****       static void
 374:/usr/include/c++/4.9/bits/basic_string.h ****       _M_assign(_CharT* __d, size_type __n, _CharT __c) _GLIBCXX_NOEXCEPT
 375:/usr/include/c++/4.9/bits/basic_string.h ****       {
 376:/usr/include/c++/4.9/bits/basic_string.h **** 	if (__n == 1)
 377:/usr/include/c++/4.9/bits/basic_string.h **** 	  traits_type::assign(*__d, __c);
 378:/usr/include/c++/4.9/bits/basic_string.h **** 	else
 379:/usr/include/c++/4.9/bits/basic_string.h **** 	  traits_type::assign(__d, __n, __c);	  
 380:/usr/include/c++/4.9/bits/basic_string.h ****       }
 381:/usr/include/c++/4.9/bits/basic_string.h **** 
 382:/usr/include/c++/4.9/bits/basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
 383:/usr/include/c++/4.9/bits/basic_string.h ****       // to optimize for the common case of pointers as iterators.
 384:/usr/include/c++/4.9/bits/basic_string.h ****       template<class _Iterator>
 385:/usr/include/c++/4.9/bits/basic_string.h ****         static void
 386:/usr/include/c++/4.9/bits/basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
 387:/usr/include/c++/4.9/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
 388:/usr/include/c++/4.9/bits/basic_string.h ****         {
 389:/usr/include/c++/4.9/bits/basic_string.h **** 	  for (; __k1 != __k2; ++__k1, ++__p)
 390:/usr/include/c++/4.9/bits/basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
 391:/usr/include/c++/4.9/bits/basic_string.h **** 	}
 392:/usr/include/c++/4.9/bits/basic_string.h **** 
 393:/usr/include/c++/4.9/bits/basic_string.h ****       static void
 394:/usr/include/c++/4.9/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
 395:/usr/include/c++/4.9/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 396:/usr/include/c++/4.9/bits/basic_string.h **** 
 397:/usr/include/c++/4.9/bits/basic_string.h ****       static void
 398:/usr/include/c++/4.9/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
 399:/usr/include/c++/4.9/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 400:/usr/include/c++/4.9/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 401:/usr/include/c++/4.9/bits/basic_string.h **** 
 402:/usr/include/c++/4.9/bits/basic_string.h ****       static void
 403:/usr/include/c++/4.9/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
 404:/usr/include/c++/4.9/bits/basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
 405:/usr/include/c++/4.9/bits/basic_string.h **** 
 406:/usr/include/c++/4.9/bits/basic_string.h ****       static void
 407:/usr/include/c++/4.9/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
 408:/usr/include/c++/4.9/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 409:/usr/include/c++/4.9/bits/basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
 410:/usr/include/c++/4.9/bits/basic_string.h **** 
 411:/usr/include/c++/4.9/bits/basic_string.h ****       static int
 412:/usr/include/c++/4.9/bits/basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
 413:/usr/include/c++/4.9/bits/basic_string.h ****       {
 414:/usr/include/c++/4.9/bits/basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
 415:/usr/include/c++/4.9/bits/basic_string.h **** 
 416:/usr/include/c++/4.9/bits/basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
 417:/usr/include/c++/4.9/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
 418:/usr/include/c++/4.9/bits/basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
 419:/usr/include/c++/4.9/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
 420:/usr/include/c++/4.9/bits/basic_string.h **** 	else
 421:/usr/include/c++/4.9/bits/basic_string.h **** 	  return int(__d);
 422:/usr/include/c++/4.9/bits/basic_string.h ****       }
 423:/usr/include/c++/4.9/bits/basic_string.h **** 
 424:/usr/include/c++/4.9/bits/basic_string.h ****       void
 425:/usr/include/c++/4.9/bits/basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, size_type __len2);
 426:/usr/include/c++/4.9/bits/basic_string.h **** 
 427:/usr/include/c++/4.9/bits/basic_string.h ****       void
 428:/usr/include/c++/4.9/bits/basic_string.h ****       _M_leak_hard();
 429:/usr/include/c++/4.9/bits/basic_string.h **** 
 430:/usr/include/c++/4.9/bits/basic_string.h ****       static _Rep&
 431:/usr/include/c++/4.9/bits/basic_string.h ****       _S_empty_rep() _GLIBCXX_NOEXCEPT
 432:/usr/include/c++/4.9/bits/basic_string.h ****       { return _Rep::_S_empty_rep(); }
 433:/usr/include/c++/4.9/bits/basic_string.h **** 
 434:/usr/include/c++/4.9/bits/basic_string.h ****     public:
 435:/usr/include/c++/4.9/bits/basic_string.h ****       // Construct/copy/destroy:
 436:/usr/include/c++/4.9/bits/basic_string.h ****       // NB: We overload ctors in some cases instead of using default
 437:/usr/include/c++/4.9/bits/basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
 438:/usr/include/c++/4.9/bits/basic_string.h **** 
 439:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 440:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Default constructor creates an empty string.
 441:/usr/include/c++/4.9/bits/basic_string.h ****        */
 442:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string()
 443:/usr/include/c++/4.9/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
 444:/usr/include/c++/4.9/bits/basic_string.h ****       : _M_dataplus(_S_empty_rep()._M_refdata(), _Alloc()) { }
 445:/usr/include/c++/4.9/bits/basic_string.h **** #else
 446:/usr/include/c++/4.9/bits/basic_string.h ****       : _M_dataplus(_S_construct(size_type(), _CharT(), _Alloc()), _Alloc()){ }
 447:/usr/include/c++/4.9/bits/basic_string.h **** #endif
 448:/usr/include/c++/4.9/bits/basic_string.h **** 
 449:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 450:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
 451:/usr/include/c++/4.9/bits/basic_string.h ****        */
 452:/usr/include/c++/4.9/bits/basic_string.h ****       explicit
 453:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string(const _Alloc& __a);
 454:/usr/include/c++/4.9/bits/basic_string.h **** 
 455:/usr/include/c++/4.9/bits/basic_string.h ****       // NB: per LWG issue 42, semantics different from IS:
 456:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 457:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Construct string with copy of value of @a str.
 458:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param  __str  Source string.
 459:/usr/include/c++/4.9/bits/basic_string.h ****        */
 460:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string(const basic_string& __str);
 461:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 462:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 463:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param  __str  Source string.
 464:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 465:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param  __n  Number of characters to copy (default remainder).
 466:/usr/include/c++/4.9/bits/basic_string.h ****        */
 467:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 468:/usr/include/c++/4.9/bits/basic_string.h **** 		   size_type __n = npos);
 469:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 470:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 471:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param  __str  Source string.
 472:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 473:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 474:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 475:/usr/include/c++/4.9/bits/basic_string.h ****        */
 476:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 477:/usr/include/c++/4.9/bits/basic_string.h **** 		   size_type __n, const _Alloc& __a);
 478:/usr/include/c++/4.9/bits/basic_string.h **** 
 479:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 480:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Construct string initialized by a character %array.
 481:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param  __s  Source character %array.
 482:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 483:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 484:/usr/include/c++/4.9/bits/basic_string.h ****        *
 485:/usr/include/c++/4.9/bits/basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
 486:/usr/include/c++/4.9/bits/basic_string.h ****        *  has no special meaning.
 487:/usr/include/c++/4.9/bits/basic_string.h ****        */
 488:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
 489:/usr/include/c++/4.9/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc());
 490:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 491:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Construct string as copy of a C string.
 492:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param  __s  Source C string.
 493:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 494:/usr/include/c++/4.9/bits/basic_string.h ****        */
 495:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc());
 496:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 497:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Construct string as multiple characters.
 498:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param  __n  Number of characters.
 499:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param  __c  Character to use.
 500:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 501:/usr/include/c++/4.9/bits/basic_string.h ****        */
 502:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc());
 503:/usr/include/c++/4.9/bits/basic_string.h **** 
 504:/usr/include/c++/4.9/bits/basic_string.h **** #if __cplusplus >= 201103L
 505:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 506:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Move construct string.
 507:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param  __str  Source string.
 508:/usr/include/c++/4.9/bits/basic_string.h ****        *
 509:/usr/include/c++/4.9/bits/basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
 510:/usr/include/c++/4.9/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
 511:/usr/include/c++/4.9/bits/basic_string.h ****        **/
 512:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string(basic_string&& __str)
 513:/usr/include/c++/4.9/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
 514:/usr/include/c++/4.9/bits/basic_string.h ****       noexcept // FIXME C++11: should always be noexcept.
 515:/usr/include/c++/4.9/bits/basic_string.h **** #endif
 516:/usr/include/c++/4.9/bits/basic_string.h ****       : _M_dataplus(__str._M_dataplus)
 517:/usr/include/c++/4.9/bits/basic_string.h ****       {
 518:/usr/include/c++/4.9/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
 519:/usr/include/c++/4.9/bits/basic_string.h **** 	__str._M_data(_S_empty_rep()._M_refdata());
 520:/usr/include/c++/4.9/bits/basic_string.h **** #else
 521:/usr/include/c++/4.9/bits/basic_string.h **** 	__str._M_data(_S_construct(size_type(), _CharT(), get_allocator()));
 522:/usr/include/c++/4.9/bits/basic_string.h **** #endif
 523:/usr/include/c++/4.9/bits/basic_string.h ****       }
 524:/usr/include/c++/4.9/bits/basic_string.h **** 
 525:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 526:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Construct string from an initializer %list.
 527:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param  __l  std::initializer_list of characters.
 528:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 529:/usr/include/c++/4.9/bits/basic_string.h ****        */
 530:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc());
 531:/usr/include/c++/4.9/bits/basic_string.h **** #endif // C++11
 532:/usr/include/c++/4.9/bits/basic_string.h **** 
 533:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 534:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Construct string as copy of a range.
 535:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param  __beg  Start of range.
 536:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param  __end  End of range.
 537:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 538:/usr/include/c++/4.9/bits/basic_string.h ****        */
 539:/usr/include/c++/4.9/bits/basic_string.h ****       template<class _InputIterator>
 540:/usr/include/c++/4.9/bits/basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
 541:/usr/include/c++/4.9/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc());
 542:/usr/include/c++/4.9/bits/basic_string.h **** 
 543:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 544:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Destroy the string instance.
 545:/usr/include/c++/4.9/bits/basic_string.h ****        */
 546:/usr/include/c++/4.9/bits/basic_string.h ****       ~basic_string() _GLIBCXX_NOEXCEPT
 547:/usr/include/c++/4.9/bits/basic_string.h ****       { _M_rep()->_M_dispose(this->get_allocator()); }
 548:/usr/include/c++/4.9/bits/basic_string.h **** 
 549:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 550:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Assign the value of @a str to this string.
 551:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param  __str  Source string.
 552:/usr/include/c++/4.9/bits/basic_string.h ****        */
 553:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string&
 554:/usr/include/c++/4.9/bits/basic_string.h ****       operator=(const basic_string& __str) 
 555:/usr/include/c++/4.9/bits/basic_string.h ****       { return this->assign(__str); }
 556:/usr/include/c++/4.9/bits/basic_string.h **** 
 557:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 558:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Copy contents of @a s into this string.
 559:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param  __s  Source null-terminated string.
 560:/usr/include/c++/4.9/bits/basic_string.h ****        */
 561:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string&
 562:/usr/include/c++/4.9/bits/basic_string.h ****       operator=(const _CharT* __s) 
 563:/usr/include/c++/4.9/bits/basic_string.h ****       { return this->assign(__s); }
 564:/usr/include/c++/4.9/bits/basic_string.h **** 
 565:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 566:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Set value to string of length 1.
 567:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param  __c  Source character.
 568:/usr/include/c++/4.9/bits/basic_string.h ****        *
 569:/usr/include/c++/4.9/bits/basic_string.h ****        *  Assigning to a character makes this string length 1 and
 570:/usr/include/c++/4.9/bits/basic_string.h ****        *  (*this)[0] == @a c.
 571:/usr/include/c++/4.9/bits/basic_string.h ****        */
 572:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string&
 573:/usr/include/c++/4.9/bits/basic_string.h ****       operator=(_CharT __c) 
 574:/usr/include/c++/4.9/bits/basic_string.h ****       { 
 575:/usr/include/c++/4.9/bits/basic_string.h **** 	this->assign(1, __c); 
 576:/usr/include/c++/4.9/bits/basic_string.h **** 	return *this;
 577:/usr/include/c++/4.9/bits/basic_string.h ****       }
 578:/usr/include/c++/4.9/bits/basic_string.h **** 
 579:/usr/include/c++/4.9/bits/basic_string.h **** #if __cplusplus >= 201103L
 580:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 581:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
 582:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param  __str  Source string.
 583:/usr/include/c++/4.9/bits/basic_string.h ****        *
 584:/usr/include/c++/4.9/bits/basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
 585:/usr/include/c++/4.9/bits/basic_string.h ****        *  @a str is a valid, but unspecified string.
 586:/usr/include/c++/4.9/bits/basic_string.h ****        **/
 587:/usr/include/c++/4.9/bits/basic_string.h ****       // PR 58265, this should be noexcept.
 588:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string&
 589:/usr/include/c++/4.9/bits/basic_string.h ****       operator=(basic_string&& __str)
 590:/usr/include/c++/4.9/bits/basic_string.h ****       {
 591:/usr/include/c++/4.9/bits/basic_string.h **** 	// NB: DR 1204.
 592:/usr/include/c++/4.9/bits/basic_string.h **** 	this->swap(__str);
 593:/usr/include/c++/4.9/bits/basic_string.h **** 	return *this;
 594:/usr/include/c++/4.9/bits/basic_string.h ****       }
 595:/usr/include/c++/4.9/bits/basic_string.h **** 
 596:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 597:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
 598:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param  __l  std::initializer_list.
 599:/usr/include/c++/4.9/bits/basic_string.h ****        */
 600:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string&
 601:/usr/include/c++/4.9/bits/basic_string.h ****       operator=(initializer_list<_CharT> __l)
 602:/usr/include/c++/4.9/bits/basic_string.h ****       {
 603:/usr/include/c++/4.9/bits/basic_string.h **** 	this->assign(__l.begin(), __l.size());
 604:/usr/include/c++/4.9/bits/basic_string.h **** 	return *this;
 605:/usr/include/c++/4.9/bits/basic_string.h ****       }
 606:/usr/include/c++/4.9/bits/basic_string.h **** #endif // C++11
 607:/usr/include/c++/4.9/bits/basic_string.h **** 
 608:/usr/include/c++/4.9/bits/basic_string.h ****       // Iterators:
 609:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 610:/usr/include/c++/4.9/bits/basic_string.h ****        *  Returns a read/write iterator that points to the first character in
 611:/usr/include/c++/4.9/bits/basic_string.h ****        *  the %string.  Unshares the string.
 612:/usr/include/c++/4.9/bits/basic_string.h ****        */
 613:/usr/include/c++/4.9/bits/basic_string.h ****       iterator
 614:/usr/include/c++/4.9/bits/basic_string.h ****       begin() // FIXME C++11: should be noexcept.
 615:/usr/include/c++/4.9/bits/basic_string.h ****       {
 616:/usr/include/c++/4.9/bits/basic_string.h **** 	_M_leak();
 617:/usr/include/c++/4.9/bits/basic_string.h **** 	return iterator(_M_data());
 618:/usr/include/c++/4.9/bits/basic_string.h ****       }
 619:/usr/include/c++/4.9/bits/basic_string.h **** 
 620:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 621:/usr/include/c++/4.9/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 622:/usr/include/c++/4.9/bits/basic_string.h ****        *  character in the %string.
 623:/usr/include/c++/4.9/bits/basic_string.h ****        */
 624:/usr/include/c++/4.9/bits/basic_string.h ****       const_iterator
 625:/usr/include/c++/4.9/bits/basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
 626:/usr/include/c++/4.9/bits/basic_string.h ****       { return const_iterator(_M_data()); }
 627:/usr/include/c++/4.9/bits/basic_string.h **** 
 628:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 629:/usr/include/c++/4.9/bits/basic_string.h ****        *  Returns a read/write iterator that points one past the last
 630:/usr/include/c++/4.9/bits/basic_string.h ****        *  character in the %string.  Unshares the string.
 631:/usr/include/c++/4.9/bits/basic_string.h ****        */
 632:/usr/include/c++/4.9/bits/basic_string.h ****       iterator
 633:/usr/include/c++/4.9/bits/basic_string.h ****       end() // FIXME C++11: should be noexcept.
 634:/usr/include/c++/4.9/bits/basic_string.h ****       {
 635:/usr/include/c++/4.9/bits/basic_string.h **** 	_M_leak();
 636:/usr/include/c++/4.9/bits/basic_string.h **** 	return iterator(_M_data() + this->size());
 637:/usr/include/c++/4.9/bits/basic_string.h ****       }
 638:/usr/include/c++/4.9/bits/basic_string.h **** 
 639:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 640:/usr/include/c++/4.9/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 641:/usr/include/c++/4.9/bits/basic_string.h ****        *  last character in the %string.
 642:/usr/include/c++/4.9/bits/basic_string.h ****        */
 643:/usr/include/c++/4.9/bits/basic_string.h ****       const_iterator
 644:/usr/include/c++/4.9/bits/basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
 645:/usr/include/c++/4.9/bits/basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
 646:/usr/include/c++/4.9/bits/basic_string.h **** 
 647:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 648:/usr/include/c++/4.9/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
 649:/usr/include/c++/4.9/bits/basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
 650:/usr/include/c++/4.9/bits/basic_string.h ****        *  order.  Unshares the string.
 651:/usr/include/c++/4.9/bits/basic_string.h ****        */
 652:/usr/include/c++/4.9/bits/basic_string.h ****       reverse_iterator
 653:/usr/include/c++/4.9/bits/basic_string.h ****       rbegin() // FIXME C++11: should be noexcept.
 654:/usr/include/c++/4.9/bits/basic_string.h ****       { return reverse_iterator(this->end()); }
 655:/usr/include/c++/4.9/bits/basic_string.h **** 
 656:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 657:/usr/include/c++/4.9/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 658:/usr/include/c++/4.9/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 659:/usr/include/c++/4.9/bits/basic_string.h ****        *  reverse element order.
 660:/usr/include/c++/4.9/bits/basic_string.h ****        */
 661:/usr/include/c++/4.9/bits/basic_string.h ****       const_reverse_iterator
 662:/usr/include/c++/4.9/bits/basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 663:/usr/include/c++/4.9/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
 664:/usr/include/c++/4.9/bits/basic_string.h **** 
 665:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 666:/usr/include/c++/4.9/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
 667:/usr/include/c++/4.9/bits/basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
 668:/usr/include/c++/4.9/bits/basic_string.h ****        *  element order.  Unshares the string.
 669:/usr/include/c++/4.9/bits/basic_string.h ****        */
 670:/usr/include/c++/4.9/bits/basic_string.h ****       reverse_iterator
 671:/usr/include/c++/4.9/bits/basic_string.h ****       rend() // FIXME C++11: should be noexcept.
 672:/usr/include/c++/4.9/bits/basic_string.h ****       { return reverse_iterator(this->begin()); }
 673:/usr/include/c++/4.9/bits/basic_string.h **** 
 674:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 675:/usr/include/c++/4.9/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 676:/usr/include/c++/4.9/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
 677:/usr/include/c++/4.9/bits/basic_string.h ****        *  is done in reverse element order.
 678:/usr/include/c++/4.9/bits/basic_string.h ****        */
 679:/usr/include/c++/4.9/bits/basic_string.h ****       const_reverse_iterator
 680:/usr/include/c++/4.9/bits/basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
 681:/usr/include/c++/4.9/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 682:/usr/include/c++/4.9/bits/basic_string.h **** 
 683:/usr/include/c++/4.9/bits/basic_string.h **** #if __cplusplus >= 201103L
 684:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 685:/usr/include/c++/4.9/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 686:/usr/include/c++/4.9/bits/basic_string.h ****        *  character in the %string.
 687:/usr/include/c++/4.9/bits/basic_string.h ****        */
 688:/usr/include/c++/4.9/bits/basic_string.h ****       const_iterator
 689:/usr/include/c++/4.9/bits/basic_string.h ****       cbegin() const noexcept
 690:/usr/include/c++/4.9/bits/basic_string.h ****       { return const_iterator(this->_M_data()); }
 691:/usr/include/c++/4.9/bits/basic_string.h **** 
 692:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 693:/usr/include/c++/4.9/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 694:/usr/include/c++/4.9/bits/basic_string.h ****        *  last character in the %string.
 695:/usr/include/c++/4.9/bits/basic_string.h ****        */
 696:/usr/include/c++/4.9/bits/basic_string.h ****       const_iterator
 697:/usr/include/c++/4.9/bits/basic_string.h ****       cend() const noexcept
 698:/usr/include/c++/4.9/bits/basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
 699:/usr/include/c++/4.9/bits/basic_string.h **** 
 700:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 701:/usr/include/c++/4.9/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 702:/usr/include/c++/4.9/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 703:/usr/include/c++/4.9/bits/basic_string.h ****        *  reverse element order.
 704:/usr/include/c++/4.9/bits/basic_string.h ****        */
 705:/usr/include/c++/4.9/bits/basic_string.h ****       const_reverse_iterator
 706:/usr/include/c++/4.9/bits/basic_string.h ****       crbegin() const noexcept
 707:/usr/include/c++/4.9/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
 708:/usr/include/c++/4.9/bits/basic_string.h **** 
 709:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 710:/usr/include/c++/4.9/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 711:/usr/include/c++/4.9/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
 712:/usr/include/c++/4.9/bits/basic_string.h ****        *  is done in reverse element order.
 713:/usr/include/c++/4.9/bits/basic_string.h ****        */
 714:/usr/include/c++/4.9/bits/basic_string.h ****       const_reverse_iterator
 715:/usr/include/c++/4.9/bits/basic_string.h ****       crend() const noexcept
 716:/usr/include/c++/4.9/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 717:/usr/include/c++/4.9/bits/basic_string.h **** #endif
 718:/usr/include/c++/4.9/bits/basic_string.h **** 
 719:/usr/include/c++/4.9/bits/basic_string.h ****     public:
 720:/usr/include/c++/4.9/bits/basic_string.h ****       // Capacity:
 721:/usr/include/c++/4.9/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
 722:/usr/include/c++/4.9/bits/basic_string.h ****       ///  null-termination.
 723:/usr/include/c++/4.9/bits/basic_string.h ****       size_type
 724:/usr/include/c++/4.9/bits/basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
 725:/usr/include/c++/4.9/bits/basic_string.h ****       { return _M_rep()->_M_length; }
 726:/usr/include/c++/4.9/bits/basic_string.h **** 
 727:/usr/include/c++/4.9/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
 728:/usr/include/c++/4.9/bits/basic_string.h ****       ///  null-termination.
 729:/usr/include/c++/4.9/bits/basic_string.h ****       size_type
 730:/usr/include/c++/4.9/bits/basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
 731:/usr/include/c++/4.9/bits/basic_string.h ****       { return _M_rep()->_M_length; }
 732:/usr/include/c++/4.9/bits/basic_string.h **** 
 733:/usr/include/c++/4.9/bits/basic_string.h ****       ///  Returns the size() of the largest possible %string.
 734:/usr/include/c++/4.9/bits/basic_string.h ****       size_type
 735:/usr/include/c++/4.9/bits/basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
 736:/usr/include/c++/4.9/bits/basic_string.h ****       { return _Rep::_S_max_size; }
 737:/usr/include/c++/4.9/bits/basic_string.h **** 
 738:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 739:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 740:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 741:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param  __c  Character to fill any new elements.
 742:/usr/include/c++/4.9/bits/basic_string.h ****        *
 743:/usr/include/c++/4.9/bits/basic_string.h ****        *  This function will %resize the %string to the specified
 744:/usr/include/c++/4.9/bits/basic_string.h ****        *  number of characters.  If the number is smaller than the
 745:/usr/include/c++/4.9/bits/basic_string.h ****        *  %string's current size the %string is truncated, otherwise
 746:/usr/include/c++/4.9/bits/basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
 747:/usr/include/c++/4.9/bits/basic_string.h ****        */
 748:/usr/include/c++/4.9/bits/basic_string.h ****       void
 749:/usr/include/c++/4.9/bits/basic_string.h ****       resize(size_type __n, _CharT __c);
 750:/usr/include/c++/4.9/bits/basic_string.h **** 
 751:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 752:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 753:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 754:/usr/include/c++/4.9/bits/basic_string.h ****        *
 755:/usr/include/c++/4.9/bits/basic_string.h ****        *  This function will resize the %string to the specified length.  If
 756:/usr/include/c++/4.9/bits/basic_string.h ****        *  the new size is smaller than the %string's current size the %string
 757:/usr/include/c++/4.9/bits/basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
 758:/usr/include/c++/4.9/bits/basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
 759:/usr/include/c++/4.9/bits/basic_string.h ****        *  setting them to 0.
 760:/usr/include/c++/4.9/bits/basic_string.h ****        */
 761:/usr/include/c++/4.9/bits/basic_string.h ****       void
 762:/usr/include/c++/4.9/bits/basic_string.h ****       resize(size_type __n)
 763:/usr/include/c++/4.9/bits/basic_string.h ****       { this->resize(__n, _CharT()); }
 764:/usr/include/c++/4.9/bits/basic_string.h **** 
 765:/usr/include/c++/4.9/bits/basic_string.h **** #if __cplusplus >= 201103L
 766:/usr/include/c++/4.9/bits/basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
 767:/usr/include/c++/4.9/bits/basic_string.h ****       void
 768:/usr/include/c++/4.9/bits/basic_string.h ****       shrink_to_fit() _GLIBCXX_NOEXCEPT
 769:/usr/include/c++/4.9/bits/basic_string.h ****       {
 770:/usr/include/c++/4.9/bits/basic_string.h **** 	if (capacity() > size())
 771:/usr/include/c++/4.9/bits/basic_string.h **** 	  {
 772:/usr/include/c++/4.9/bits/basic_string.h **** 	    __try
 773:/usr/include/c++/4.9/bits/basic_string.h **** 	      { reserve(0); }
 774:/usr/include/c++/4.9/bits/basic_string.h **** 	    __catch(...)
 775:/usr/include/c++/4.9/bits/basic_string.h **** 	      { }
 776:/usr/include/c++/4.9/bits/basic_string.h **** 	  }
 777:/usr/include/c++/4.9/bits/basic_string.h ****       }
 778:/usr/include/c++/4.9/bits/basic_string.h **** #endif
 779:/usr/include/c++/4.9/bits/basic_string.h **** 
 780:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 781:/usr/include/c++/4.9/bits/basic_string.h ****        *  Returns the total number of characters that the %string can hold
 782:/usr/include/c++/4.9/bits/basic_string.h ****        *  before needing to allocate more memory.
 783:/usr/include/c++/4.9/bits/basic_string.h ****        */
 784:/usr/include/c++/4.9/bits/basic_string.h ****       size_type
 785:/usr/include/c++/4.9/bits/basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
 786:/usr/include/c++/4.9/bits/basic_string.h ****       { return _M_rep()->_M_capacity; }
 787:/usr/include/c++/4.9/bits/basic_string.h **** 
 788:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 789:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
 790:/usr/include/c++/4.9/bits/basic_string.h ****        *          characters.
 791:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param  __res_arg  Number of characters required.
 792:/usr/include/c++/4.9/bits/basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
 793:/usr/include/c++/4.9/bits/basic_string.h ****        *
 794:/usr/include/c++/4.9/bits/basic_string.h ****        *  This function attempts to reserve enough memory for the
 795:/usr/include/c++/4.9/bits/basic_string.h ****        *  %string to hold the specified number of characters.  If the
 796:/usr/include/c++/4.9/bits/basic_string.h ****        *  number requested is more than max_size(), length_error is
 797:/usr/include/c++/4.9/bits/basic_string.h ****        *  thrown.
 798:/usr/include/c++/4.9/bits/basic_string.h ****        *
 799:/usr/include/c++/4.9/bits/basic_string.h ****        *  The advantage of this function is that if optimal code is a
 800:/usr/include/c++/4.9/bits/basic_string.h ****        *  necessity and the user can determine the string length that will be
 801:/usr/include/c++/4.9/bits/basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
 802:/usr/include/c++/4.9/bits/basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
 803:/usr/include/c++/4.9/bits/basic_string.h ****        *  data.
 804:/usr/include/c++/4.9/bits/basic_string.h ****        */
 805:/usr/include/c++/4.9/bits/basic_string.h ****       void
 806:/usr/include/c++/4.9/bits/basic_string.h ****       reserve(size_type __res_arg = 0);
 807:/usr/include/c++/4.9/bits/basic_string.h **** 
 808:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 809:/usr/include/c++/4.9/bits/basic_string.h ****        *  Erases the string, making it empty.
 810:/usr/include/c++/4.9/bits/basic_string.h ****        */
 811:/usr/include/c++/4.9/bits/basic_string.h ****       // PR 56166: this should not throw.
 812:/usr/include/c++/4.9/bits/basic_string.h ****       void
 813:/usr/include/c++/4.9/bits/basic_string.h ****       clear()
 814:/usr/include/c++/4.9/bits/basic_string.h ****       { _M_mutate(0, this->size(), 0); }
 815:/usr/include/c++/4.9/bits/basic_string.h **** 
 816:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 817:/usr/include/c++/4.9/bits/basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
 818:/usr/include/c++/4.9/bits/basic_string.h ****        *  <code>*this == ""</code>.
 819:/usr/include/c++/4.9/bits/basic_string.h ****        */
 820:/usr/include/c++/4.9/bits/basic_string.h ****       bool
 821:/usr/include/c++/4.9/bits/basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
 822:/usr/include/c++/4.9/bits/basic_string.h ****       { return this->size() == 0; }
 823:/usr/include/c++/4.9/bits/basic_string.h **** 
 824:/usr/include/c++/4.9/bits/basic_string.h ****       // Element access:
 825:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 826:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
 827:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
 828:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Read-only (constant) reference to the character.
 829:/usr/include/c++/4.9/bits/basic_string.h ****        *
 830:/usr/include/c++/4.9/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
 831:/usr/include/c++/4.9/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
 832:/usr/include/c++/4.9/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
 833:/usr/include/c++/4.9/bits/basic_string.h ****        *  see at().)
 834:/usr/include/c++/4.9/bits/basic_string.h ****        */
 835:/usr/include/c++/4.9/bits/basic_string.h ****       const_reference
 836:/usr/include/c++/4.9/bits/basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
 837:/usr/include/c++/4.9/bits/basic_string.h ****       {
 838:/usr/include/c++/4.9/bits/basic_string.h **** 	_GLIBCXX_DEBUG_ASSERT(__pos <= size());
 839:/usr/include/c++/4.9/bits/basic_string.h **** 	return _M_data()[__pos];
 840:/usr/include/c++/4.9/bits/basic_string.h ****       }
 841:/usr/include/c++/4.9/bits/basic_string.h **** 
 842:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 843:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
 844:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
 845:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Read/write reference to the character.
 846:/usr/include/c++/4.9/bits/basic_string.h ****        *
 847:/usr/include/c++/4.9/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
 848:/usr/include/c++/4.9/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
 849:/usr/include/c++/4.9/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
 850:/usr/include/c++/4.9/bits/basic_string.h ****        *  see at().)  Unshares the string.
 851:/usr/include/c++/4.9/bits/basic_string.h ****        */
 852:/usr/include/c++/4.9/bits/basic_string.h ****       reference
 853:/usr/include/c++/4.9/bits/basic_string.h ****       operator[](size_type __pos)
 854:/usr/include/c++/4.9/bits/basic_string.h ****       {
 855:/usr/include/c++/4.9/bits/basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
 856:/usr/include/c++/4.9/bits/basic_string.h **** 	// and in C++11 mode.
 857:/usr/include/c++/4.9/bits/basic_string.h **** 	_GLIBCXX_DEBUG_ASSERT(__pos <= size());
 858:/usr/include/c++/4.9/bits/basic_string.h ****         // In pedantic mode be strict in C++98 mode.
 859:/usr/include/c++/4.9/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
 860:/usr/include/c++/4.9/bits/basic_string.h **** 	_M_leak();
 861:/usr/include/c++/4.9/bits/basic_string.h **** 	return _M_data()[__pos];
 862:/usr/include/c++/4.9/bits/basic_string.h ****       }
 863:/usr/include/c++/4.9/bits/basic_string.h **** 
 864:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 865:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
 866:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __n The index of the character to access.
 867:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Read-only (const) reference to the character.
 868:/usr/include/c++/4.9/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
 869:/usr/include/c++/4.9/bits/basic_string.h ****        *
 870:/usr/include/c++/4.9/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
 871:/usr/include/c++/4.9/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
 872:/usr/include/c++/4.9/bits/basic_string.h ****        *  throws out_of_range if the check fails.
 873:/usr/include/c++/4.9/bits/basic_string.h ****        */
 874:/usr/include/c++/4.9/bits/basic_string.h ****       const_reference
 875:/usr/include/c++/4.9/bits/basic_string.h ****       at(size_type __n) const
 876:/usr/include/c++/4.9/bits/basic_string.h ****       {
 877:/usr/include/c++/4.9/bits/basic_string.h **** 	if (__n >= this->size())
 878:/usr/include/c++/4.9/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
 879:/usr/include/c++/4.9/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
 880:/usr/include/c++/4.9/bits/basic_string.h **** 				       "(which is %zu)"),
 881:/usr/include/c++/4.9/bits/basic_string.h **** 				   __n, this->size());
 882:/usr/include/c++/4.9/bits/basic_string.h **** 	return _M_data()[__n];
 883:/usr/include/c++/4.9/bits/basic_string.h ****       }
 884:/usr/include/c++/4.9/bits/basic_string.h **** 
 885:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 886:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
 887:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __n The index of the character to access.
 888:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Read/write reference to the character.
 889:/usr/include/c++/4.9/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
 890:/usr/include/c++/4.9/bits/basic_string.h ****        *
 891:/usr/include/c++/4.9/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
 892:/usr/include/c++/4.9/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
 893:/usr/include/c++/4.9/bits/basic_string.h ****        *  throws out_of_range if the check fails.  Success results in
 894:/usr/include/c++/4.9/bits/basic_string.h ****        *  unsharing the string.
 895:/usr/include/c++/4.9/bits/basic_string.h ****        */
 896:/usr/include/c++/4.9/bits/basic_string.h ****       reference
 897:/usr/include/c++/4.9/bits/basic_string.h ****       at(size_type __n)
 898:/usr/include/c++/4.9/bits/basic_string.h ****       {
 899:/usr/include/c++/4.9/bits/basic_string.h **** 	if (__n >= size())
 900:/usr/include/c++/4.9/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
 901:/usr/include/c++/4.9/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
 902:/usr/include/c++/4.9/bits/basic_string.h **** 				       "(which is %zu)"),
 903:/usr/include/c++/4.9/bits/basic_string.h **** 				   __n, this->size());
 904:/usr/include/c++/4.9/bits/basic_string.h **** 	_M_leak();
 905:/usr/include/c++/4.9/bits/basic_string.h **** 	return _M_data()[__n];
 906:/usr/include/c++/4.9/bits/basic_string.h ****       }
 907:/usr/include/c++/4.9/bits/basic_string.h **** 
 908:/usr/include/c++/4.9/bits/basic_string.h **** #if __cplusplus >= 201103L
 909:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 910:/usr/include/c++/4.9/bits/basic_string.h ****        *  Returns a read/write reference to the data at the first
 911:/usr/include/c++/4.9/bits/basic_string.h ****        *  element of the %string.
 912:/usr/include/c++/4.9/bits/basic_string.h ****        */
 913:/usr/include/c++/4.9/bits/basic_string.h ****       reference
 914:/usr/include/c++/4.9/bits/basic_string.h ****       front()
 915:/usr/include/c++/4.9/bits/basic_string.h ****       { return operator[](0); }
 916:/usr/include/c++/4.9/bits/basic_string.h **** 
 917:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 918:/usr/include/c++/4.9/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
 919:/usr/include/c++/4.9/bits/basic_string.h ****        *  element of the %string.
 920:/usr/include/c++/4.9/bits/basic_string.h ****        */
 921:/usr/include/c++/4.9/bits/basic_string.h ****       const_reference
 922:/usr/include/c++/4.9/bits/basic_string.h ****       front() const _GLIBCXX_NOEXCEPT
 923:/usr/include/c++/4.9/bits/basic_string.h ****       { return operator[](0); }
 924:/usr/include/c++/4.9/bits/basic_string.h **** 
 925:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 926:/usr/include/c++/4.9/bits/basic_string.h ****        *  Returns a read/write reference to the data at the last
 927:/usr/include/c++/4.9/bits/basic_string.h ****        *  element of the %string.
 928:/usr/include/c++/4.9/bits/basic_string.h ****        */
 929:/usr/include/c++/4.9/bits/basic_string.h ****       reference
 930:/usr/include/c++/4.9/bits/basic_string.h ****       back()
 931:/usr/include/c++/4.9/bits/basic_string.h ****       { return operator[](this->size() - 1); }
 932:/usr/include/c++/4.9/bits/basic_string.h **** 
 933:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 934:/usr/include/c++/4.9/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
 935:/usr/include/c++/4.9/bits/basic_string.h ****        *  last element of the %string.
 936:/usr/include/c++/4.9/bits/basic_string.h ****        */
 937:/usr/include/c++/4.9/bits/basic_string.h ****       const_reference
 938:/usr/include/c++/4.9/bits/basic_string.h ****       back() const _GLIBCXX_NOEXCEPT
 939:/usr/include/c++/4.9/bits/basic_string.h ****       { return operator[](this->size() - 1); }
 940:/usr/include/c++/4.9/bits/basic_string.h **** #endif
 941:/usr/include/c++/4.9/bits/basic_string.h **** 
 942:/usr/include/c++/4.9/bits/basic_string.h ****       // Modifiers:
 943:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 944:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Append a string to this string.
 945:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __str  The string to append.
 946:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Reference to this string.
 947:/usr/include/c++/4.9/bits/basic_string.h ****        */
 948:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string&
 949:/usr/include/c++/4.9/bits/basic_string.h ****       operator+=(const basic_string& __str)
 950:/usr/include/c++/4.9/bits/basic_string.h ****       { return this->append(__str); }
 951:/usr/include/c++/4.9/bits/basic_string.h **** 
 952:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 953:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Append a C string.
 954:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __s  The C string to append.
 955:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Reference to this string.
 956:/usr/include/c++/4.9/bits/basic_string.h ****        */
 957:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string&
 958:/usr/include/c++/4.9/bits/basic_string.h ****       operator+=(const _CharT* __s)
 959:/usr/include/c++/4.9/bits/basic_string.h ****       { return this->append(__s); }
 960:/usr/include/c++/4.9/bits/basic_string.h **** 
 961:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 962:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Append a character.
 963:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __c  The character to append.
 964:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Reference to this string.
 965:/usr/include/c++/4.9/bits/basic_string.h ****        */
 966:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string&
 967:/usr/include/c++/4.9/bits/basic_string.h ****       operator+=(_CharT __c)
 968:/usr/include/c++/4.9/bits/basic_string.h ****       { 
 969:/usr/include/c++/4.9/bits/basic_string.h **** 	this->push_back(__c);
 970:/usr/include/c++/4.9/bits/basic_string.h **** 	return *this;
 971:/usr/include/c++/4.9/bits/basic_string.h ****       }
 972:/usr/include/c++/4.9/bits/basic_string.h **** 
 973:/usr/include/c++/4.9/bits/basic_string.h **** #if __cplusplus >= 201103L
 974:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 975:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
 976:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
 977:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Reference to this string.
 978:/usr/include/c++/4.9/bits/basic_string.h ****        */
 979:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string&
 980:/usr/include/c++/4.9/bits/basic_string.h ****       operator+=(initializer_list<_CharT> __l)
 981:/usr/include/c++/4.9/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
 982:/usr/include/c++/4.9/bits/basic_string.h **** #endif // C++11
 983:/usr/include/c++/4.9/bits/basic_string.h **** 
 984:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 985:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Append a string to this string.
 986:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __str  The string to append.
 987:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Reference to this string.
 988:/usr/include/c++/4.9/bits/basic_string.h ****        */
 989:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string&
 990:/usr/include/c++/4.9/bits/basic_string.h ****       append(const basic_string& __str);
 991:/usr/include/c++/4.9/bits/basic_string.h **** 
 992:/usr/include/c++/4.9/bits/basic_string.h ****       /**
 993:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Append a substring.
 994:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __str  The string to append.
 995:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos  Index of the first character of str to append.
 996:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __n  The number of characters to append.
 997:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Reference to this string.
 998:/usr/include/c++/4.9/bits/basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
 999:/usr/include/c++/4.9/bits/basic_string.h ****        *
1000:/usr/include/c++/4.9/bits/basic_string.h ****        *  This function appends @a __n characters from @a __str
1001:/usr/include/c++/4.9/bits/basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
1002:/usr/include/c++/4.9/bits/basic_string.h ****        *  than the number of available characters in @a __str, the
1003:/usr/include/c++/4.9/bits/basic_string.h ****        *  remainder of @a __str is appended.
1004:/usr/include/c++/4.9/bits/basic_string.h ****        */
1005:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string&
1006:/usr/include/c++/4.9/bits/basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n);
1007:/usr/include/c++/4.9/bits/basic_string.h **** 
1008:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1009:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Append a C substring.
1010:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __s  The C string to append.
1011:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1012:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Reference to this string.
1013:/usr/include/c++/4.9/bits/basic_string.h ****        */
1014:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string&
1015:/usr/include/c++/4.9/bits/basic_string.h ****       append(const _CharT* __s, size_type __n);
1016:/usr/include/c++/4.9/bits/basic_string.h **** 
1017:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1018:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Append a C string.
1019:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __s  The C string to append.
1020:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Reference to this string.
1021:/usr/include/c++/4.9/bits/basic_string.h ****        */
1022:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string&
1023:/usr/include/c++/4.9/bits/basic_string.h ****       append(const _CharT* __s)
1024:/usr/include/c++/4.9/bits/basic_string.h ****       {
1025:/usr/include/c++/4.9/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1026:/usr/include/c++/4.9/bits/basic_string.h **** 	return this->append(__s, traits_type::length(__s));
1027:/usr/include/c++/4.9/bits/basic_string.h ****       }
1028:/usr/include/c++/4.9/bits/basic_string.h **** 
1029:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1030:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Append multiple characters.
1031:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1032:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __c  The character to use.
1033:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Reference to this string.
1034:/usr/include/c++/4.9/bits/basic_string.h ****        *
1035:/usr/include/c++/4.9/bits/basic_string.h ****        *  Appends __n copies of __c to this string.
1036:/usr/include/c++/4.9/bits/basic_string.h ****        */
1037:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string&
1038:/usr/include/c++/4.9/bits/basic_string.h ****       append(size_type __n, _CharT __c);
1039:/usr/include/c++/4.9/bits/basic_string.h **** 
1040:/usr/include/c++/4.9/bits/basic_string.h **** #if __cplusplus >= 201103L
1041:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1042:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
1043:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to append.
1044:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Reference to this string.
1045:/usr/include/c++/4.9/bits/basic_string.h ****        */
1046:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string&
1047:/usr/include/c++/4.9/bits/basic_string.h ****       append(initializer_list<_CharT> __l)
1048:/usr/include/c++/4.9/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1049:/usr/include/c++/4.9/bits/basic_string.h **** #endif // C++11
1050:/usr/include/c++/4.9/bits/basic_string.h **** 
1051:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1052:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Append a range of characters.
1053:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1054:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1055:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Reference to this string.
1056:/usr/include/c++/4.9/bits/basic_string.h ****        *
1057:/usr/include/c++/4.9/bits/basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
1058:/usr/include/c++/4.9/bits/basic_string.h ****        */
1059:/usr/include/c++/4.9/bits/basic_string.h ****       template<class _InputIterator>
1060:/usr/include/c++/4.9/bits/basic_string.h ****         basic_string&
1061:/usr/include/c++/4.9/bits/basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
1062:/usr/include/c++/4.9/bits/basic_string.h ****         { return this->replace(_M_iend(), _M_iend(), __first, __last); }
1063:/usr/include/c++/4.9/bits/basic_string.h **** 
1064:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1065:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Append a single character.
1066:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __c  Character to append.
1067:/usr/include/c++/4.9/bits/basic_string.h ****        */
1068:/usr/include/c++/4.9/bits/basic_string.h ****       void
1069:/usr/include/c++/4.9/bits/basic_string.h ****       push_back(_CharT __c)
1070:/usr/include/c++/4.9/bits/basic_string.h ****       { 
1071:/usr/include/c++/4.9/bits/basic_string.h **** 	const size_type __len = 1 + this->size();
1072:/usr/include/c++/4.9/bits/basic_string.h **** 	if (__len > this->capacity() || _M_rep()->_M_is_shared())
1073:/usr/include/c++/4.9/bits/basic_string.h **** 	  this->reserve(__len);
1074:/usr/include/c++/4.9/bits/basic_string.h **** 	traits_type::assign(_M_data()[this->size()], __c);
1075:/usr/include/c++/4.9/bits/basic_string.h **** 	_M_rep()->_M_set_length_and_sharable(__len);
1076:/usr/include/c++/4.9/bits/basic_string.h ****       }
1077:/usr/include/c++/4.9/bits/basic_string.h **** 
1078:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1079:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
1080:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param  __str  Source string to use.
1081:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Reference to this string.
1082:/usr/include/c++/4.9/bits/basic_string.h ****        */
1083:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string&
1084:/usr/include/c++/4.9/bits/basic_string.h ****       assign(const basic_string& __str);
1085:/usr/include/c++/4.9/bits/basic_string.h **** 
1086:/usr/include/c++/4.9/bits/basic_string.h **** #if __cplusplus >= 201103L
1087:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1088:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
1089:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param  __str  Source string to use.
1090:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Reference to this string.
1091:/usr/include/c++/4.9/bits/basic_string.h ****        *
1092:/usr/include/c++/4.9/bits/basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
1093:/usr/include/c++/4.9/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
1094:/usr/include/c++/4.9/bits/basic_string.h ****        */
1095:/usr/include/c++/4.9/bits/basic_string.h ****       // PR 58265, this should be noexcept.
1096:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string&
1097:/usr/include/c++/4.9/bits/basic_string.h ****       assign(basic_string&& __str)
1098:/usr/include/c++/4.9/bits/basic_string.h ****       {
1099:/usr/include/c++/4.9/bits/basic_string.h **** 	this->swap(__str);
1100:/usr/include/c++/4.9/bits/basic_string.h **** 	return *this;
1101:/usr/include/c++/4.9/bits/basic_string.h ****       }
1102:/usr/include/c++/4.9/bits/basic_string.h **** #endif // C++11
1103:/usr/include/c++/4.9/bits/basic_string.h **** 
1104:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1105:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Set value to a substring of a string.
1106:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __str  The string to use.
1107:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos  Index of the first character of str.
1108:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __n  Number of characters to use.
1109:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Reference to this string.
1110:/usr/include/c++/4.9/bits/basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
1111:/usr/include/c++/4.9/bits/basic_string.h ****        *
1112:/usr/include/c++/4.9/bits/basic_string.h ****        *  This function sets this string to the substring of @a __str
1113:/usr/include/c++/4.9/bits/basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
1114:/usr/include/c++/4.9/bits/basic_string.h ****        *  is larger than the number of available characters in @a
1115:/usr/include/c++/4.9/bits/basic_string.h ****        *  __str, the remainder of @a __str is used.
1116:/usr/include/c++/4.9/bits/basic_string.h ****        */
1117:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string&
1118:/usr/include/c++/4.9/bits/basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n)
1119:/usr/include/c++/4.9/bits/basic_string.h ****       { return this->assign(__str._M_data()
1120:/usr/include/c++/4.9/bits/basic_string.h **** 			    + __str._M_check(__pos, "basic_string::assign"),
1121:/usr/include/c++/4.9/bits/basic_string.h **** 			    __str._M_limit(__pos, __n)); }
1122:/usr/include/c++/4.9/bits/basic_string.h **** 
1123:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1124:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Set value to a C substring.
1125:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __s  The C string to use.
1126:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __n  Number of characters to use.
1127:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Reference to this string.
1128:/usr/include/c++/4.9/bits/basic_string.h ****        *
1129:/usr/include/c++/4.9/bits/basic_string.h ****        *  This function sets the value of this string to the first @a __n
1130:/usr/include/c++/4.9/bits/basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
1131:/usr/include/c++/4.9/bits/basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
1132:/usr/include/c++/4.9/bits/basic_string.h ****        */
1133:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string&
1134:/usr/include/c++/4.9/bits/basic_string.h ****       assign(const _CharT* __s, size_type __n);
1135:/usr/include/c++/4.9/bits/basic_string.h **** 
1136:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1137:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Set value to contents of a C string.
1138:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __s  The C string to use.
1139:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Reference to this string.
1140:/usr/include/c++/4.9/bits/basic_string.h ****        *
1141:/usr/include/c++/4.9/bits/basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
1142:/usr/include/c++/4.9/bits/basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
1143:/usr/include/c++/4.9/bits/basic_string.h ****        *  function returns.
1144:/usr/include/c++/4.9/bits/basic_string.h ****        */
1145:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string&
1146:/usr/include/c++/4.9/bits/basic_string.h ****       assign(const _CharT* __s)
1147:/usr/include/c++/4.9/bits/basic_string.h ****       {
1148:/usr/include/c++/4.9/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1149:/usr/include/c++/4.9/bits/basic_string.h **** 	return this->assign(__s, traits_type::length(__s));
1150:/usr/include/c++/4.9/bits/basic_string.h ****       }
1151:/usr/include/c++/4.9/bits/basic_string.h **** 
1152:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1153:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Set value to multiple characters.
1154:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __n  Length of the resulting string.
1155:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __c  The character to use.
1156:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Reference to this string.
1157:/usr/include/c++/4.9/bits/basic_string.h ****        *
1158:/usr/include/c++/4.9/bits/basic_string.h ****        *  This function sets the value of this string to @a __n copies of
1159:/usr/include/c++/4.9/bits/basic_string.h ****        *  character @a __c.
1160:/usr/include/c++/4.9/bits/basic_string.h ****        */
1161:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string&
1162:/usr/include/c++/4.9/bits/basic_string.h ****       assign(size_type __n, _CharT __c)
1163:/usr/include/c++/4.9/bits/basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
1164:/usr/include/c++/4.9/bits/basic_string.h **** 
1165:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1166:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Set value to a range of characters.
1167:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1168:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1169:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Reference to this string.
1170:/usr/include/c++/4.9/bits/basic_string.h ****        *
1171:/usr/include/c++/4.9/bits/basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
1172:/usr/include/c++/4.9/bits/basic_string.h ****       */
1173:/usr/include/c++/4.9/bits/basic_string.h ****       template<class _InputIterator>
1174:/usr/include/c++/4.9/bits/basic_string.h ****         basic_string&
1175:/usr/include/c++/4.9/bits/basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
1176:/usr/include/c++/4.9/bits/basic_string.h ****         { return this->replace(_M_ibegin(), _M_iend(), __first, __last); }
1177:/usr/include/c++/4.9/bits/basic_string.h **** 
1178:/usr/include/c++/4.9/bits/basic_string.h **** #if __cplusplus >= 201103L
1179:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1180:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
1181:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
1182:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Reference to this string.
1183:/usr/include/c++/4.9/bits/basic_string.h ****        */
1184:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string&
1185:/usr/include/c++/4.9/bits/basic_string.h ****       assign(initializer_list<_CharT> __l)
1186:/usr/include/c++/4.9/bits/basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
1187:/usr/include/c++/4.9/bits/basic_string.h **** #endif // C++11
1188:/usr/include/c++/4.9/bits/basic_string.h **** 
1189:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1190:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1191:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1192:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1193:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __c  The character to insert.
1194:/usr/include/c++/4.9/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1195:/usr/include/c++/4.9/bits/basic_string.h ****        *
1196:/usr/include/c++/4.9/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1197:/usr/include/c++/4.9/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1198:/usr/include/c++/4.9/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1199:/usr/include/c++/4.9/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1200:/usr/include/c++/4.9/bits/basic_string.h ****        *  change if an error is thrown.
1201:/usr/include/c++/4.9/bits/basic_string.h ****       */
1202:/usr/include/c++/4.9/bits/basic_string.h ****       void
1203:/usr/include/c++/4.9/bits/basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
1204:/usr/include/c++/4.9/bits/basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
1205:/usr/include/c++/4.9/bits/basic_string.h **** 
1206:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1207:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Insert a range of characters.
1208:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1209:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __beg  Start of range.
1210:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __end  End of range.
1211:/usr/include/c++/4.9/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1212:/usr/include/c++/4.9/bits/basic_string.h ****        *
1213:/usr/include/c++/4.9/bits/basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
1214:/usr/include/c++/4.9/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1215:/usr/include/c++/4.9/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1216:/usr/include/c++/4.9/bits/basic_string.h ****        *  change if an error is thrown.
1217:/usr/include/c++/4.9/bits/basic_string.h ****       */
1218:/usr/include/c++/4.9/bits/basic_string.h ****       template<class _InputIterator>
1219:/usr/include/c++/4.9/bits/basic_string.h ****         void
1220:/usr/include/c++/4.9/bits/basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
1221:/usr/include/c++/4.9/bits/basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
1222:/usr/include/c++/4.9/bits/basic_string.h **** 
1223:/usr/include/c++/4.9/bits/basic_string.h **** #if __cplusplus >= 201103L
1224:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1225:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Insert an initializer_list of characters.
1226:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1227:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
1228:/usr/include/c++/4.9/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1229:/usr/include/c++/4.9/bits/basic_string.h ****        */
1230:/usr/include/c++/4.9/bits/basic_string.h ****       void
1231:/usr/include/c++/4.9/bits/basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
1232:/usr/include/c++/4.9/bits/basic_string.h ****       {
1233:/usr/include/c++/4.9/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
1234:/usr/include/c++/4.9/bits/basic_string.h **** 	this->insert(__p - _M_ibegin(), __l.begin(), __l.size());
1235:/usr/include/c++/4.9/bits/basic_string.h ****       }
1236:/usr/include/c++/4.9/bits/basic_string.h **** #endif // C++11
1237:/usr/include/c++/4.9/bits/basic_string.h **** 
1238:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1239:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Insert value of a string.
1240:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
1241:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __str  The string to insert.
1242:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Reference to this string.
1243:/usr/include/c++/4.9/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1244:/usr/include/c++/4.9/bits/basic_string.h ****        *
1245:/usr/include/c++/4.9/bits/basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
1246:/usr/include/c++/4.9/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1247:/usr/include/c++/4.9/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1248:/usr/include/c++/4.9/bits/basic_string.h ****        *  change if an error is thrown.
1249:/usr/include/c++/4.9/bits/basic_string.h ****       */
1250:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string&
1251:/usr/include/c++/4.9/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
1252:/usr/include/c++/4.9/bits/basic_string.h ****       { return this->insert(__pos1, __str, size_type(0), __str.size()); }
1253:/usr/include/c++/4.9/bits/basic_string.h **** 
1254:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1255:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Insert a substring.
1256:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
1257:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __str  The string to insert.
1258:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
1259:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
1260:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Reference to this string.
1261:/usr/include/c++/4.9/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1262:/usr/include/c++/4.9/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
1263:/usr/include/c++/4.9/bits/basic_string.h ****        *  @a __pos2 > @a str.size().
1264:/usr/include/c++/4.9/bits/basic_string.h ****        *
1265:/usr/include/c++/4.9/bits/basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
1266:/usr/include/c++/4.9/bits/basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
1267:/usr/include/c++/4.9/bits/basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
1268:/usr/include/c++/4.9/bits/basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
1269:/usr/include/c++/4.9/bits/basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
1270:/usr/include/c++/4.9/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1271:/usr/include/c++/4.9/bits/basic_string.h ****       */
1272:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string&
1273:/usr/include/c++/4.9/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
1274:/usr/include/c++/4.9/bits/basic_string.h **** 	     size_type __pos2, size_type __n)
1275:/usr/include/c++/4.9/bits/basic_string.h ****       { return this->insert(__pos1, __str._M_data()
1276:/usr/include/c++/4.9/bits/basic_string.h **** 			    + __str._M_check(__pos2, "basic_string::insert"),
1277:/usr/include/c++/4.9/bits/basic_string.h **** 			    __str._M_limit(__pos2, __n)); }
1278:/usr/include/c++/4.9/bits/basic_string.h **** 
1279:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1280:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Insert a C substring.
1281:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
1282:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __s  The C string to insert.
1283:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __n  The number of characters to insert.
1284:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Reference to this string.
1285:/usr/include/c++/4.9/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1286:/usr/include/c++/4.9/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1287:/usr/include/c++/4.9/bits/basic_string.h ****        *  string.
1288:/usr/include/c++/4.9/bits/basic_string.h ****        *
1289:/usr/include/c++/4.9/bits/basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
1290:/usr/include/c++/4.9/bits/basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
1291:/usr/include/c++/4.9/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
1292:/usr/include/c++/4.9/bits/basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
1293:/usr/include/c++/4.9/bits/basic_string.h ****        *  doesn't change if an error is thrown.
1294:/usr/include/c++/4.9/bits/basic_string.h ****       */
1295:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string&
1296:/usr/include/c++/4.9/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n);
1297:/usr/include/c++/4.9/bits/basic_string.h **** 
1298:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1299:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Insert a C string.
1300:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
1301:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __s  The C string to insert.
1302:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Reference to this string.
1303:/usr/include/c++/4.9/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1304:/usr/include/c++/4.9/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1305:/usr/include/c++/4.9/bits/basic_string.h ****        *  string.
1306:/usr/include/c++/4.9/bits/basic_string.h ****        *
1307:/usr/include/c++/4.9/bits/basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
1308:/usr/include/c++/4.9/bits/basic_string.h ****        *  adding characters causes the length to exceed max_size(),
1309:/usr/include/c++/4.9/bits/basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
1310:/usr/include/c++/4.9/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
1311:/usr/include/c++/4.9/bits/basic_string.h ****        *  thrown.
1312:/usr/include/c++/4.9/bits/basic_string.h ****       */
1313:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string&
1314:/usr/include/c++/4.9/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s)
1315:/usr/include/c++/4.9/bits/basic_string.h ****       {
1316:/usr/include/c++/4.9/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1317:/usr/include/c++/4.9/bits/basic_string.h **** 	return this->insert(__pos, __s, traits_type::length(__s));
1318:/usr/include/c++/4.9/bits/basic_string.h ****       }
1319:/usr/include/c++/4.9/bits/basic_string.h **** 
1320:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1321:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1322:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos  Index in string to insert at.
1323:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1324:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __c  The character to insert.
1325:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Reference to this string.
1326:/usr/include/c++/4.9/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1327:/usr/include/c++/4.9/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1328:/usr/include/c++/4.9/bits/basic_string.h ****        *  string.
1329:/usr/include/c++/4.9/bits/basic_string.h ****        *
1330:/usr/include/c++/4.9/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
1331:/usr/include/c++/4.9/bits/basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
1332:/usr/include/c++/4.9/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
1333:/usr/include/c++/4.9/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1334:/usr/include/c++/4.9/bits/basic_string.h ****        *  change if an error is thrown.
1335:/usr/include/c++/4.9/bits/basic_string.h ****       */
1336:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string&
1337:/usr/include/c++/4.9/bits/basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
1338:/usr/include/c++/4.9/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
1339:/usr/include/c++/4.9/bits/basic_string.h **** 			      size_type(0), __n, __c); }
1340:/usr/include/c++/4.9/bits/basic_string.h **** 
1341:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1342:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Insert one character.
1343:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
1344:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __c  The character to insert.
1345:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Iterator referencing newly inserted char.
1346:/usr/include/c++/4.9/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1347:/usr/include/c++/4.9/bits/basic_string.h ****        *
1348:/usr/include/c++/4.9/bits/basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
1349:/usr/include/c++/4.9/bits/basic_string.h ****        *  If adding character causes the length to exceed max_size(),
1350:/usr/include/c++/4.9/bits/basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
1351:/usr/include/c++/4.9/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1352:/usr/include/c++/4.9/bits/basic_string.h ****        *  change if an error is thrown.
1353:/usr/include/c++/4.9/bits/basic_string.h ****       */
1354:/usr/include/c++/4.9/bits/basic_string.h ****       iterator
1355:/usr/include/c++/4.9/bits/basic_string.h ****       insert(iterator __p, _CharT __c)
1356:/usr/include/c++/4.9/bits/basic_string.h ****       {
1357:/usr/include/c++/4.9/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
1358:/usr/include/c++/4.9/bits/basic_string.h **** 	const size_type __pos = __p - _M_ibegin();
1359:/usr/include/c++/4.9/bits/basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
1360:/usr/include/c++/4.9/bits/basic_string.h **** 	_M_rep()->_M_set_leaked();
1361:/usr/include/c++/4.9/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
1362:/usr/include/c++/4.9/bits/basic_string.h ****       }
1363:/usr/include/c++/4.9/bits/basic_string.h **** 
1364:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1365:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Remove characters.
1366:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
1367:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
1368:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Reference to this string.
1369:/usr/include/c++/4.9/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1370:/usr/include/c++/4.9/bits/basic_string.h ****        *  string.
1371:/usr/include/c++/4.9/bits/basic_string.h ****        *
1372:/usr/include/c++/4.9/bits/basic_string.h ****        *  Removes @a __n characters from this string starting at @a
1373:/usr/include/c++/4.9/bits/basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
1374:/usr/include/c++/4.9/bits/basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
1375:/usr/include/c++/4.9/bits/basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
1376:/usr/include/c++/4.9/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1377:/usr/include/c++/4.9/bits/basic_string.h ****        *  change if an error is thrown.
1378:/usr/include/c++/4.9/bits/basic_string.h ****       */
1379:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string&
1380:/usr/include/c++/4.9/bits/basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
1381:/usr/include/c++/4.9/bits/basic_string.h ****       { 
1382:/usr/include/c++/4.9/bits/basic_string.h **** 	_M_mutate(_M_check(__pos, "basic_string::erase"),
1383:/usr/include/c++/4.9/bits/basic_string.h **** 		  _M_limit(__pos, __n), size_type(0));
1384:/usr/include/c++/4.9/bits/basic_string.h **** 	return *this;
1385:/usr/include/c++/4.9/bits/basic_string.h ****       }
1386:/usr/include/c++/4.9/bits/basic_string.h **** 
1387:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1388:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Remove one character.
1389:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
1390:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  iterator referencing same location after removal.
1391:/usr/include/c++/4.9/bits/basic_string.h ****        *
1392:/usr/include/c++/4.9/bits/basic_string.h ****        *  Removes the character at @a __position from this string. The value
1393:/usr/include/c++/4.9/bits/basic_string.h ****        *  of the string doesn't change if an error is thrown.
1394:/usr/include/c++/4.9/bits/basic_string.h ****       */
1395:/usr/include/c++/4.9/bits/basic_string.h ****       iterator
1396:/usr/include/c++/4.9/bits/basic_string.h ****       erase(iterator __position)
1397:/usr/include/c++/4.9/bits/basic_string.h ****       {
1398:/usr/include/c++/4.9/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= _M_ibegin()
1399:/usr/include/c++/4.9/bits/basic_string.h **** 				 && __position < _M_iend());
1400:/usr/include/c++/4.9/bits/basic_string.h **** 	const size_type __pos = __position - _M_ibegin();
1401:/usr/include/c++/4.9/bits/basic_string.h **** 	_M_mutate(__pos, size_type(1), size_type(0));
1402:/usr/include/c++/4.9/bits/basic_string.h **** 	_M_rep()->_M_set_leaked();
1403:/usr/include/c++/4.9/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
1404:/usr/include/c++/4.9/bits/basic_string.h ****       }
1405:/usr/include/c++/4.9/bits/basic_string.h **** 
1406:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1407:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Remove a range of characters.
1408:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
1409:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
1410:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Iterator referencing location of first after removal.
1411:/usr/include/c++/4.9/bits/basic_string.h ****        *
1412:/usr/include/c++/4.9/bits/basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
1413:/usr/include/c++/4.9/bits/basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
1414:/usr/include/c++/4.9/bits/basic_string.h ****       */
1415:/usr/include/c++/4.9/bits/basic_string.h ****       iterator
1416:/usr/include/c++/4.9/bits/basic_string.h ****       erase(iterator __first, iterator __last);
1417:/usr/include/c++/4.9/bits/basic_string.h ****  
1418:/usr/include/c++/4.9/bits/basic_string.h **** #if __cplusplus >= 201103L
1419:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1420:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Remove the last character.
1421:/usr/include/c++/4.9/bits/basic_string.h ****        *
1422:/usr/include/c++/4.9/bits/basic_string.h ****        *  The string must be non-empty.
1423:/usr/include/c++/4.9/bits/basic_string.h ****        */
1424:/usr/include/c++/4.9/bits/basic_string.h ****       void
1425:/usr/include/c++/4.9/bits/basic_string.h ****       pop_back() // FIXME C++11: should be noexcept.
1426:/usr/include/c++/4.9/bits/basic_string.h ****       { erase(size()-1, 1); }
1427:/usr/include/c++/4.9/bits/basic_string.h **** #endif // C++11
1428:/usr/include/c++/4.9/bits/basic_string.h **** 
1429:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1430:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
1431:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1432:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __n  Number of characters to be replaced.
1433:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __str  String to insert.
1434:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Reference to this string.
1435:/usr/include/c++/4.9/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1436:/usr/include/c++/4.9/bits/basic_string.h ****        *  string.
1437:/usr/include/c++/4.9/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1438:/usr/include/c++/4.9/bits/basic_string.h ****        *
1439:/usr/include/c++/4.9/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
1440:/usr/include/c++/4.9/bits/basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
1441:/usr/include/c++/4.9/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1442:/usr/include/c++/4.9/bits/basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
1443:/usr/include/c++/4.9/bits/basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
1444:/usr/include/c++/4.9/bits/basic_string.h ****        *  error is thrown.
1445:/usr/include/c++/4.9/bits/basic_string.h ****       */
1446:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string&
1447:/usr/include/c++/4.9/bits/basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
1448:/usr/include/c++/4.9/bits/basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
1449:/usr/include/c++/4.9/bits/basic_string.h **** 
1450:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1451:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
1452:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos1  Index of first character to replace.
1453:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1454:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __str  String to insert.
1455:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos2  Index of first character of str to use.
1456:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __n2  Number of characters from str to use.
1457:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Reference to this string.
1458:/usr/include/c++/4.9/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
1459:/usr/include/c++/4.9/bits/basic_string.h ****        *  __str.size().
1460:/usr/include/c++/4.9/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1461:/usr/include/c++/4.9/bits/basic_string.h ****        *
1462:/usr/include/c++/4.9/bits/basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
1463:/usr/include/c++/4.9/bits/basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
1464:/usr/include/c++/4.9/bits/basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
1465:/usr/include/c++/4.9/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
1466:/usr/include/c++/4.9/bits/basic_string.h ****        *  string doesn't change if an error is thrown.
1467:/usr/include/c++/4.9/bits/basic_string.h ****       */
1468:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string&
1469:/usr/include/c++/4.9/bits/basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
1470:/usr/include/c++/4.9/bits/basic_string.h **** 	      size_type __pos2, size_type __n2)
1471:/usr/include/c++/4.9/bits/basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
1472:/usr/include/c++/4.9/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
1473:/usr/include/c++/4.9/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
1474:/usr/include/c++/4.9/bits/basic_string.h **** 
1475:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1476:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Replace characters with value of a C substring.
1477:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1478:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1479:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __s  C string to insert.
1480:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
1481:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Reference to this string.
1482:/usr/include/c++/4.9/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
1483:/usr/include/c++/4.9/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1484:/usr/include/c++/4.9/bits/basic_string.h ****        *
1485:/usr/include/c++/4.9/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1486:/usr/include/c++/4.9/bits/basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
1487:/usr/include/c++/4.9/bits/basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
1488:/usr/include/c++/4.9/bits/basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
1489:/usr/include/c++/4.9/bits/basic_string.h ****        *  the length of result exceeds max_size(), length_error is
1490:/usr/include/c++/4.9/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1491:/usr/include/c++/4.9/bits/basic_string.h ****        *  is thrown.
1492:/usr/include/c++/4.9/bits/basic_string.h ****       */
1493:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string&
1494:/usr/include/c++/4.9/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
1495:/usr/include/c++/4.9/bits/basic_string.h **** 	      size_type __n2);
1496:/usr/include/c++/4.9/bits/basic_string.h **** 
1497:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1498:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Replace characters with value of a C string.
1499:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1500:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1501:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __s  C string to insert.
1502:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Reference to this string.
1503:/usr/include/c++/4.9/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
1504:/usr/include/c++/4.9/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1505:/usr/include/c++/4.9/bits/basic_string.h ****        *
1506:/usr/include/c++/4.9/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1507:/usr/include/c++/4.9/bits/basic_string.h ****        *  from this string.  In place, the characters of @a __s are
1508:/usr/include/c++/4.9/bits/basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
1509:/usr/include/c++/4.9/bits/basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
1510:/usr/include/c++/4.9/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1511:/usr/include/c++/4.9/bits/basic_string.h ****        *  change if an error is thrown.
1512:/usr/include/c++/4.9/bits/basic_string.h ****       */
1513:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string&
1514:/usr/include/c++/4.9/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
1515:/usr/include/c++/4.9/bits/basic_string.h ****       {
1516:/usr/include/c++/4.9/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1517:/usr/include/c++/4.9/bits/basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
1518:/usr/include/c++/4.9/bits/basic_string.h ****       }
1519:/usr/include/c++/4.9/bits/basic_string.h **** 
1520:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1521:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Replace characters with multiple characters.
1522:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1523:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1524:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __n2  Number of characters to insert.
1525:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __c  Character to insert.
1526:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Reference to this string.
1527:/usr/include/c++/4.9/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
1528:/usr/include/c++/4.9/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1529:/usr/include/c++/4.9/bits/basic_string.h ****        *
1530:/usr/include/c++/4.9/bits/basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
1531:/usr/include/c++/4.9/bits/basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
1532:/usr/include/c++/4.9/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1533:/usr/include/c++/4.9/bits/basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
1534:/usr/include/c++/4.9/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1535:/usr/include/c++/4.9/bits/basic_string.h ****        *  is thrown.
1536:/usr/include/c++/4.9/bits/basic_string.h ****       */
1537:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string&
1538:/usr/include/c++/4.9/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
1539:/usr/include/c++/4.9/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
1540:/usr/include/c++/4.9/bits/basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
1541:/usr/include/c++/4.9/bits/basic_string.h **** 
1542:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1543:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Replace range of characters with string.
1544:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1545:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1546:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __str  String value to insert.
1547:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Reference to this string.
1548:/usr/include/c++/4.9/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1549:/usr/include/c++/4.9/bits/basic_string.h ****        *
1550:/usr/include/c++/4.9/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1551:/usr/include/c++/4.9/bits/basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
1552:/usr/include/c++/4.9/bits/basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
1553:/usr/include/c++/4.9/bits/basic_string.h ****        *  the string doesn't change if an error is thrown.
1554:/usr/include/c++/4.9/bits/basic_string.h ****       */
1555:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string&
1556:/usr/include/c++/4.9/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const basic_string& __str)
1557:/usr/include/c++/4.9/bits/basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
1558:/usr/include/c++/4.9/bits/basic_string.h **** 
1559:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1560:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Replace range of characters with C substring.
1561:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1562:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1563:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __s  C string value to insert.
1564:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __n  Number of characters from s to insert.
1565:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Reference to this string.
1566:/usr/include/c++/4.9/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1567:/usr/include/c++/4.9/bits/basic_string.h ****        *
1568:/usr/include/c++/4.9/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1569:/usr/include/c++/4.9/bits/basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
1570:/usr/include/c++/4.9/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
1571:/usr/include/c++/4.9/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
1572:/usr/include/c++/4.9/bits/basic_string.h ****        *  thrown.
1573:/usr/include/c++/4.9/bits/basic_string.h ****       */
1574:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string&
1575:/usr/include/c++/4.9/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s, size_type __n)
1576:/usr/include/c++/4.9/bits/basic_string.h ****       {
1577:/usr/include/c++/4.9/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
1578:/usr/include/c++/4.9/bits/basic_string.h **** 				 && __i2 <= _M_iend());
1579:/usr/include/c++/4.9/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1, __s, __n);
1580:/usr/include/c++/4.9/bits/basic_string.h ****       }
1581:/usr/include/c++/4.9/bits/basic_string.h **** 
1582:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1583:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Replace range of characters with C string.
1584:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1585:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1586:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __s  C string value to insert.
1587:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Reference to this string.
1588:/usr/include/c++/4.9/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1589:/usr/include/c++/4.9/bits/basic_string.h ****        *
1590:/usr/include/c++/4.9/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1591:/usr/include/c++/4.9/bits/basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
1592:/usr/include/c++/4.9/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
1593:/usr/include/c++/4.9/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1594:/usr/include/c++/4.9/bits/basic_string.h ****       */
1595:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string&
1596:/usr/include/c++/4.9/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s)
1597:/usr/include/c++/4.9/bits/basic_string.h ****       {
1598:/usr/include/c++/4.9/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1599:/usr/include/c++/4.9/bits/basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
1600:/usr/include/c++/4.9/bits/basic_string.h ****       }
1601:/usr/include/c++/4.9/bits/basic_string.h **** 
1602:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1603:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Replace range of characters with multiple characters
1604:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1605:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1606:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
1607:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __c  Character to insert.
1608:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Reference to this string.
1609:/usr/include/c++/4.9/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1610:/usr/include/c++/4.9/bits/basic_string.h ****        *
1611:/usr/include/c++/4.9/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1612:/usr/include/c++/4.9/bits/basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
1613:/usr/include/c++/4.9/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
1614:/usr/include/c++/4.9/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1615:/usr/include/c++/4.9/bits/basic_string.h ****       */
1616:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string&
1617:/usr/include/c++/4.9/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, size_type __n, _CharT __c)
1618:/usr/include/c++/4.9/bits/basic_string.h ****       {
1619:/usr/include/c++/4.9/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
1620:/usr/include/c++/4.9/bits/basic_string.h **** 				 && __i2 <= _M_iend());
1621:/usr/include/c++/4.9/bits/basic_string.h **** 	return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __c);
1622:/usr/include/c++/4.9/bits/basic_string.h ****       }
1623:/usr/include/c++/4.9/bits/basic_string.h **** 
1624:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1625:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Replace range of characters with range.
1626:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1627:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1628:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
1629:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
1630:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Reference to this string.
1631:/usr/include/c++/4.9/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1632:/usr/include/c++/4.9/bits/basic_string.h ****        *
1633:/usr/include/c++/4.9/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1634:/usr/include/c++/4.9/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
1635:/usr/include/c++/4.9/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
1636:/usr/include/c++/4.9/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
1637:/usr/include/c++/4.9/bits/basic_string.h ****        *  thrown.
1638:/usr/include/c++/4.9/bits/basic_string.h ****       */
1639:/usr/include/c++/4.9/bits/basic_string.h ****       template<class _InputIterator>
1640:/usr/include/c++/4.9/bits/basic_string.h ****         basic_string&
1641:/usr/include/c++/4.9/bits/basic_string.h ****         replace(iterator __i1, iterator __i2,
1642:/usr/include/c++/4.9/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
1643:/usr/include/c++/4.9/bits/basic_string.h ****         {
1644:/usr/include/c++/4.9/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
1645:/usr/include/c++/4.9/bits/basic_string.h **** 				   && __i2 <= _M_iend());
1646:/usr/include/c++/4.9/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
1647:/usr/include/c++/4.9/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1648:/usr/include/c++/4.9/bits/basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
1649:/usr/include/c++/4.9/bits/basic_string.h **** 	}
1650:/usr/include/c++/4.9/bits/basic_string.h **** 
1651:/usr/include/c++/4.9/bits/basic_string.h ****       // Specializations for the common case of pointer and iterator:
1652:/usr/include/c++/4.9/bits/basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
1653:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string&
1654:/usr/include/c++/4.9/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, _CharT* __k1, _CharT* __k2)
1655:/usr/include/c++/4.9/bits/basic_string.h ****       {
1656:/usr/include/c++/4.9/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
1657:/usr/include/c++/4.9/bits/basic_string.h **** 				 && __i2 <= _M_iend());
1658:/usr/include/c++/4.9/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
1659:/usr/include/c++/4.9/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
1660:/usr/include/c++/4.9/bits/basic_string.h **** 			     __k1, __k2 - __k1);
1661:/usr/include/c++/4.9/bits/basic_string.h ****       }
1662:/usr/include/c++/4.9/bits/basic_string.h **** 
1663:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string&
1664:/usr/include/c++/4.9/bits/basic_string.h ****       replace(iterator __i1, iterator __i2,
1665:/usr/include/c++/4.9/bits/basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
1666:/usr/include/c++/4.9/bits/basic_string.h ****       {
1667:/usr/include/c++/4.9/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
1668:/usr/include/c++/4.9/bits/basic_string.h **** 				 && __i2 <= _M_iend());
1669:/usr/include/c++/4.9/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
1670:/usr/include/c++/4.9/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
1671:/usr/include/c++/4.9/bits/basic_string.h **** 			     __k1, __k2 - __k1);
1672:/usr/include/c++/4.9/bits/basic_string.h ****       }
1673:/usr/include/c++/4.9/bits/basic_string.h **** 
1674:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string&
1675:/usr/include/c++/4.9/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2)
1676:/usr/include/c++/4.9/bits/basic_string.h ****       {
1677:/usr/include/c++/4.9/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
1678:/usr/include/c++/4.9/bits/basic_string.h **** 				 && __i2 <= _M_iend());
1679:/usr/include/c++/4.9/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
1680:/usr/include/c++/4.9/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
1681:/usr/include/c++/4.9/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
1682:/usr/include/c++/4.9/bits/basic_string.h ****       }
1683:/usr/include/c++/4.9/bits/basic_string.h **** 
1684:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string&
1685:/usr/include/c++/4.9/bits/basic_string.h ****       replace(iterator __i1, iterator __i2,
1686:/usr/include/c++/4.9/bits/basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
1687:/usr/include/c++/4.9/bits/basic_string.h ****       {
1688:/usr/include/c++/4.9/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
1689:/usr/include/c++/4.9/bits/basic_string.h **** 				 && __i2 <= _M_iend());
1690:/usr/include/c++/4.9/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
1691:/usr/include/c++/4.9/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
1692:/usr/include/c++/4.9/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
1693:/usr/include/c++/4.9/bits/basic_string.h ****       }
1694:/usr/include/c++/4.9/bits/basic_string.h ****       
1695:/usr/include/c++/4.9/bits/basic_string.h **** #if __cplusplus >= 201103L
1696:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1697:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
1698:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1699:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1700:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
1701:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Reference to this string.
1702:/usr/include/c++/4.9/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1703:/usr/include/c++/4.9/bits/basic_string.h ****        *
1704:/usr/include/c++/4.9/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1705:/usr/include/c++/4.9/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
1706:/usr/include/c++/4.9/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
1707:/usr/include/c++/4.9/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
1708:/usr/include/c++/4.9/bits/basic_string.h ****        *  thrown.
1709:/usr/include/c++/4.9/bits/basic_string.h ****       */
1710:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string& replace(iterator __i1, iterator __i2,
1711:/usr/include/c++/4.9/bits/basic_string.h **** 			    initializer_list<_CharT> __l)
1712:/usr/include/c++/4.9/bits/basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.end()); }
1713:/usr/include/c++/4.9/bits/basic_string.h **** #endif // C++11
1714:/usr/include/c++/4.9/bits/basic_string.h **** 
1715:/usr/include/c++/4.9/bits/basic_string.h ****     private:
1716:/usr/include/c++/4.9/bits/basic_string.h ****       template<class _Integer>
1717:/usr/include/c++/4.9/bits/basic_string.h **** 	basic_string&
1718:/usr/include/c++/4.9/bits/basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n,
1719:/usr/include/c++/4.9/bits/basic_string.h **** 			    _Integer __val, __true_type)
1720:/usr/include/c++/4.9/bits/basic_string.h ****         { return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __val); }
1721:/usr/include/c++/4.9/bits/basic_string.h **** 
1722:/usr/include/c++/4.9/bits/basic_string.h ****       template<class _InputIterator>
1723:/usr/include/c++/4.9/bits/basic_string.h **** 	basic_string&
1724:/usr/include/c++/4.9/bits/basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1,
1725:/usr/include/c++/4.9/bits/basic_string.h **** 			    _InputIterator __k2, __false_type);
1726:/usr/include/c++/4.9/bits/basic_string.h **** 
1727:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string&
1728:/usr/include/c++/4.9/bits/basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
1729:/usr/include/c++/4.9/bits/basic_string.h **** 		     _CharT __c);
1730:/usr/include/c++/4.9/bits/basic_string.h **** 
1731:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string&
1732:/usr/include/c++/4.9/bits/basic_string.h ****       _M_replace_safe(size_type __pos1, size_type __n1, const _CharT* __s,
1733:/usr/include/c++/4.9/bits/basic_string.h **** 		      size_type __n2);
1734:/usr/include/c++/4.9/bits/basic_string.h **** 
1735:/usr/include/c++/4.9/bits/basic_string.h ****       // _S_construct_aux is used to implement the 21.3.1 para 15 which
1736:/usr/include/c++/4.9/bits/basic_string.h ****       // requires special behaviour if _InIter is an integral type
1737:/usr/include/c++/4.9/bits/basic_string.h ****       template<class _InIterator>
1738:/usr/include/c++/4.9/bits/basic_string.h ****         static _CharT*
1739:/usr/include/c++/4.9/bits/basic_string.h ****         _S_construct_aux(_InIterator __beg, _InIterator __end,
1740:/usr/include/c++/4.9/bits/basic_string.h **** 			 const _Alloc& __a, __false_type)
1741:/usr/include/c++/4.9/bits/basic_string.h **** 	{
1742:/usr/include/c++/4.9/bits/basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
1743:/usr/include/c++/4.9/bits/basic_string.h ****           return _S_construct(__beg, __end, __a, _Tag());
1744:/usr/include/c++/4.9/bits/basic_string.h **** 	}
1745:/usr/include/c++/4.9/bits/basic_string.h **** 
1746:/usr/include/c++/4.9/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1747:/usr/include/c++/4.9/bits/basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
1748:/usr/include/c++/4.9/bits/basic_string.h ****       template<class _Integer>
1749:/usr/include/c++/4.9/bits/basic_string.h ****         static _CharT*
1750:/usr/include/c++/4.9/bits/basic_string.h ****         _S_construct_aux(_Integer __beg, _Integer __end,
1751:/usr/include/c++/4.9/bits/basic_string.h **** 			 const _Alloc& __a, __true_type)
1752:/usr/include/c++/4.9/bits/basic_string.h ****         { return _S_construct_aux_2(static_cast<size_type>(__beg),
1753:/usr/include/c++/4.9/bits/basic_string.h **** 				    __end, __a); }
1754:/usr/include/c++/4.9/bits/basic_string.h **** 
1755:/usr/include/c++/4.9/bits/basic_string.h ****       static _CharT*
1756:/usr/include/c++/4.9/bits/basic_string.h ****       _S_construct_aux_2(size_type __req, _CharT __c, const _Alloc& __a)
1757:/usr/include/c++/4.9/bits/basic_string.h ****       { return _S_construct(__req, __c, __a); }
1758:/usr/include/c++/4.9/bits/basic_string.h **** 
1759:/usr/include/c++/4.9/bits/basic_string.h ****       template<class _InIterator>
1760:/usr/include/c++/4.9/bits/basic_string.h ****         static _CharT*
1761:/usr/include/c++/4.9/bits/basic_string.h ****         _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a)
1762:/usr/include/c++/4.9/bits/basic_string.h **** 	{
1763:/usr/include/c++/4.9/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
1764:/usr/include/c++/4.9/bits/basic_string.h **** 	  return _S_construct_aux(__beg, __end, __a, _Integral());
1765:/usr/include/c++/4.9/bits/basic_string.h ****         }
1766:/usr/include/c++/4.9/bits/basic_string.h **** 
1767:/usr/include/c++/4.9/bits/basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
1768:/usr/include/c++/4.9/bits/basic_string.h ****       template<class _InIterator>
1769:/usr/include/c++/4.9/bits/basic_string.h ****         static _CharT*
1770:/usr/include/c++/4.9/bits/basic_string.h ****          _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a,
1771:/usr/include/c++/4.9/bits/basic_string.h **** 		      input_iterator_tag);
1772:/usr/include/c++/4.9/bits/basic_string.h **** 
1773:/usr/include/c++/4.9/bits/basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
1774:/usr/include/c++/4.9/bits/basic_string.h ****       // string::iterator, _CharT*, etc.
1775:/usr/include/c++/4.9/bits/basic_string.h ****       template<class _FwdIterator>
1776:/usr/include/c++/4.9/bits/basic_string.h ****         static _CharT*
1777:/usr/include/c++/4.9/bits/basic_string.h ****         _S_construct(_FwdIterator __beg, _FwdIterator __end, const _Alloc& __a,
1778:/usr/include/c++/4.9/bits/basic_string.h **** 		     forward_iterator_tag);
1779:/usr/include/c++/4.9/bits/basic_string.h **** 
1780:/usr/include/c++/4.9/bits/basic_string.h ****       static _CharT*
1781:/usr/include/c++/4.9/bits/basic_string.h ****       _S_construct(size_type __req, _CharT __c, const _Alloc& __a);
1782:/usr/include/c++/4.9/bits/basic_string.h **** 
1783:/usr/include/c++/4.9/bits/basic_string.h ****     public:
1784:/usr/include/c++/4.9/bits/basic_string.h **** 
1785:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1786:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Copy substring into C string.
1787:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __s  C string to copy value into.
1788:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __n  Number of characters to copy.
1789:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos  Index of first character to copy.
1790:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Number of characters actually copied
1791:/usr/include/c++/4.9/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
1792:/usr/include/c++/4.9/bits/basic_string.h ****        *
1793:/usr/include/c++/4.9/bits/basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
1794:/usr/include/c++/4.9/bits/basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
1795:/usr/include/c++/4.9/bits/basic_string.h ****        *  out_of_range is thrown.
1796:/usr/include/c++/4.9/bits/basic_string.h ****       */
1797:/usr/include/c++/4.9/bits/basic_string.h ****       size_type
1798:/usr/include/c++/4.9/bits/basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
1799:/usr/include/c++/4.9/bits/basic_string.h **** 
1800:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1801:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Swap contents with another string.
1802:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __s  String to swap with.
1803:/usr/include/c++/4.9/bits/basic_string.h ****        *
1804:/usr/include/c++/4.9/bits/basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
1805:/usr/include/c++/4.9/bits/basic_string.h ****        *  time.
1806:/usr/include/c++/4.9/bits/basic_string.h ****       */
1807:/usr/include/c++/4.9/bits/basic_string.h ****       // PR 58265, this should be noexcept.
1808:/usr/include/c++/4.9/bits/basic_string.h ****       void
1809:/usr/include/c++/4.9/bits/basic_string.h ****       swap(basic_string& __s);
1810:/usr/include/c++/4.9/bits/basic_string.h **** 
1811:/usr/include/c++/4.9/bits/basic_string.h ****       // String operations:
1812:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1813:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
1814:/usr/include/c++/4.9/bits/basic_string.h ****        *
1815:/usr/include/c++/4.9/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
1816:/usr/include/c++/4.9/bits/basic_string.h ****        *  happen.
1817:/usr/include/c++/4.9/bits/basic_string.h ****       */
1818:/usr/include/c++/4.9/bits/basic_string.h ****       const _CharT*
1819:/usr/include/c++/4.9/bits/basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
1820:/usr/include/c++/4.9/bits/basic_string.h ****       { return _M_data(); }
1821:/usr/include/c++/4.9/bits/basic_string.h **** 
1822:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1823:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Return const pointer to contents.
1824:/usr/include/c++/4.9/bits/basic_string.h ****        *
1825:/usr/include/c++/4.9/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
1826:/usr/include/c++/4.9/bits/basic_string.h ****        *  happen.
1827:/usr/include/c++/4.9/bits/basic_string.h ****       */
1828:/usr/include/c++/4.9/bits/basic_string.h ****       const _CharT*
1829:/usr/include/c++/4.9/bits/basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
1830:/usr/include/c++/4.9/bits/basic_string.h ****       { return _M_data(); }
1831:/usr/include/c++/4.9/bits/basic_string.h **** 
1832:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1833:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
1834:/usr/include/c++/4.9/bits/basic_string.h ****       */
1835:/usr/include/c++/4.9/bits/basic_string.h ****       allocator_type
1836:/usr/include/c++/4.9/bits/basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
1837:/usr/include/c++/4.9/bits/basic_string.h ****       { return _M_dataplus; }
1838:/usr/include/c++/4.9/bits/basic_string.h **** 
1839:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1840:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Find position of a C substring.
1841:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __s  C string to locate.
1842:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
1843:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
1844:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
1845:/usr/include/c++/4.9/bits/basic_string.h ****        *
1846:/usr/include/c++/4.9/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
1847:/usr/include/c++/4.9/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
1848:/usr/include/c++/4.9/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
1849:/usr/include/c++/4.9/bits/basic_string.h ****        *  npos.
1850:/usr/include/c++/4.9/bits/basic_string.h ****       */
1851:/usr/include/c++/4.9/bits/basic_string.h ****       size_type
1852:/usr/include/c++/4.9/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const;
1853:/usr/include/c++/4.9/bits/basic_string.h **** 
1854:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1855:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Find position of a string.
1856:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __str  String to locate.
1857:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
1858:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
1859:/usr/include/c++/4.9/bits/basic_string.h ****        *
1860:/usr/include/c++/4.9/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
1861:/usr/include/c++/4.9/bits/basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
1862:/usr/include/c++/4.9/bits/basic_string.h ****        *  found, returns npos.
1863:/usr/include/c++/4.9/bits/basic_string.h ****       */
1864:/usr/include/c++/4.9/bits/basic_string.h ****       size_type
1865:/usr/include/c++/4.9/bits/basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
1866:/usr/include/c++/4.9/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
1867:/usr/include/c++/4.9/bits/basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
1868:/usr/include/c++/4.9/bits/basic_string.h **** 
1869:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1870:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Find position of a C string.
1871:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __s  C string to locate.
1872:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
1873:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
1874:/usr/include/c++/4.9/bits/basic_string.h ****        *
1875:/usr/include/c++/4.9/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
1876:/usr/include/c++/4.9/bits/basic_string.h ****        *  __s within this string.  If found, returns the index where
1877:/usr/include/c++/4.9/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
1878:/usr/include/c++/4.9/bits/basic_string.h ****       */
1879:/usr/include/c++/4.9/bits/basic_string.h ****       size_type
1880:/usr/include/c++/4.9/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const
1881:/usr/include/c++/4.9/bits/basic_string.h ****       {
1882:/usr/include/c++/4.9/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1883:/usr/include/c++/4.9/bits/basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
1884:/usr/include/c++/4.9/bits/basic_string.h ****       }
1885:/usr/include/c++/4.9/bits/basic_string.h **** 
1886:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1887:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Find position of a character.
1888:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __c  Character to locate.
1889:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
1890:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Index of first occurrence.
1891:/usr/include/c++/4.9/bits/basic_string.h ****        *
1892:/usr/include/c++/4.9/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
1893:/usr/include/c++/4.9/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
1894:/usr/include/c++/4.9/bits/basic_string.h ****        *  found.  If not found, returns npos.
1895:/usr/include/c++/4.9/bits/basic_string.h ****       */
1896:/usr/include/c++/4.9/bits/basic_string.h ****       size_type
1897:/usr/include/c++/4.9/bits/basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
1898:/usr/include/c++/4.9/bits/basic_string.h **** 
1899:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1900:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Find last position of a string.
1901:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __str  String to locate.
1902:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
1903:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
1904:/usr/include/c++/4.9/bits/basic_string.h ****        *
1905:/usr/include/c++/4.9/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
1906:/usr/include/c++/4.9/bits/basic_string.h ****        *  __str within this string.  If found, returns the index where
1907:/usr/include/c++/4.9/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
1908:/usr/include/c++/4.9/bits/basic_string.h ****       */
1909:/usr/include/c++/4.9/bits/basic_string.h ****       size_type
1910:/usr/include/c++/4.9/bits/basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
1911:/usr/include/c++/4.9/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
1912:/usr/include/c++/4.9/bits/basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
1913:/usr/include/c++/4.9/bits/basic_string.h **** 
1914:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1915:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Find last position of a C substring.
1916:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __s  C string to locate.
1917:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
1918:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
1919:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
1920:/usr/include/c++/4.9/bits/basic_string.h ****        *
1921:/usr/include/c++/4.9/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
1922:/usr/include/c++/4.9/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
1923:/usr/include/c++/4.9/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
1924:/usr/include/c++/4.9/bits/basic_string.h ****        *  npos.
1925:/usr/include/c++/4.9/bits/basic_string.h ****       */
1926:/usr/include/c++/4.9/bits/basic_string.h ****       size_type
1927:/usr/include/c++/4.9/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const;
1928:/usr/include/c++/4.9/bits/basic_string.h **** 
1929:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1930:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Find last position of a C string.
1931:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __s  C string to locate.
1932:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
1933:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Index of start of  last occurrence.
1934:/usr/include/c++/4.9/bits/basic_string.h ****        *
1935:/usr/include/c++/4.9/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
1936:/usr/include/c++/4.9/bits/basic_string.h ****        *  @a __s within this string.  If found, returns the index
1937:/usr/include/c++/4.9/bits/basic_string.h ****        *  where it begins.  If not found, returns npos.
1938:/usr/include/c++/4.9/bits/basic_string.h ****       */
1939:/usr/include/c++/4.9/bits/basic_string.h ****       size_type
1940:/usr/include/c++/4.9/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const
1941:/usr/include/c++/4.9/bits/basic_string.h ****       {
1942:/usr/include/c++/4.9/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1943:/usr/include/c++/4.9/bits/basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
1944:/usr/include/c++/4.9/bits/basic_string.h ****       }
1945:/usr/include/c++/4.9/bits/basic_string.h **** 
1946:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1947:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Find last position of a character.
1948:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __c  Character to locate.
1949:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
1950:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Index of last occurrence.
1951:/usr/include/c++/4.9/bits/basic_string.h ****        *
1952:/usr/include/c++/4.9/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
1953:/usr/include/c++/4.9/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
1954:/usr/include/c++/4.9/bits/basic_string.h ****        *  found.  If not found, returns npos.
1955:/usr/include/c++/4.9/bits/basic_string.h ****       */
1956:/usr/include/c++/4.9/bits/basic_string.h ****       size_type
1957:/usr/include/c++/4.9/bits/basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
1958:/usr/include/c++/4.9/bits/basic_string.h **** 
1959:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1960:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Find position of a character of string.
1961:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
1962:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
1963:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Index of first occurrence.
1964:/usr/include/c++/4.9/bits/basic_string.h ****        *
1965:/usr/include/c++/4.9/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
1966:/usr/include/c++/4.9/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
1967:/usr/include/c++/4.9/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
1968:/usr/include/c++/4.9/bits/basic_string.h ****        *  npos.
1969:/usr/include/c++/4.9/bits/basic_string.h ****       */
1970:/usr/include/c++/4.9/bits/basic_string.h ****       size_type
1971:/usr/include/c++/4.9/bits/basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
1972:/usr/include/c++/4.9/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
1973:/usr/include/c++/4.9/bits/basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
1974:/usr/include/c++/4.9/bits/basic_string.h **** 
1975:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1976:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Find position of a character of C substring.
1977:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
1978:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
1979:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
1980:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Index of first occurrence.
1981:/usr/include/c++/4.9/bits/basic_string.h ****        *
1982:/usr/include/c++/4.9/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
1983:/usr/include/c++/4.9/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
1984:/usr/include/c++/4.9/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
1985:/usr/include/c++/4.9/bits/basic_string.h ****        *  returns npos.
1986:/usr/include/c++/4.9/bits/basic_string.h ****       */
1987:/usr/include/c++/4.9/bits/basic_string.h ****       size_type
1988:/usr/include/c++/4.9/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const;
1989:/usr/include/c++/4.9/bits/basic_string.h **** 
1990:/usr/include/c++/4.9/bits/basic_string.h ****       /**
1991:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Find position of a character of C string.
1992:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
1993:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
1994:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Index of first occurrence.
1995:/usr/include/c++/4.9/bits/basic_string.h ****        *
1996:/usr/include/c++/4.9/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
1997:/usr/include/c++/4.9/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
1998:/usr/include/c++/4.9/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
1999:/usr/include/c++/4.9/bits/basic_string.h ****       */
2000:/usr/include/c++/4.9/bits/basic_string.h ****       size_type
2001:/usr/include/c++/4.9/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
2002:/usr/include/c++/4.9/bits/basic_string.h ****       {
2003:/usr/include/c++/4.9/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2004:/usr/include/c++/4.9/bits/basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
2005:/usr/include/c++/4.9/bits/basic_string.h ****       }
2006:/usr/include/c++/4.9/bits/basic_string.h **** 
2007:/usr/include/c++/4.9/bits/basic_string.h ****       /**
2008:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Find position of a character.
2009:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __c  Character to locate.
2010:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2011:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Index of first occurrence.
2012:/usr/include/c++/4.9/bits/basic_string.h ****        *
2013:/usr/include/c++/4.9/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the character
2014:/usr/include/c++/4.9/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index
2015:/usr/include/c++/4.9/bits/basic_string.h ****        *  where it was found.  If not found, returns npos.
2016:/usr/include/c++/4.9/bits/basic_string.h ****        *
2017:/usr/include/c++/4.9/bits/basic_string.h ****        *  Note: equivalent to find(__c, __pos).
2018:/usr/include/c++/4.9/bits/basic_string.h ****       */
2019:/usr/include/c++/4.9/bits/basic_string.h ****       size_type
2020:/usr/include/c++/4.9/bits/basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2021:/usr/include/c++/4.9/bits/basic_string.h ****       { return this->find(__c, __pos); }
2022:/usr/include/c++/4.9/bits/basic_string.h **** 
2023:/usr/include/c++/4.9/bits/basic_string.h ****       /**
2024:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
2025:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
2026:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2027:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Index of last occurrence.
2028:/usr/include/c++/4.9/bits/basic_string.h ****        *
2029:/usr/include/c++/4.9/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2030:/usr/include/c++/4.9/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
2031:/usr/include/c++/4.9/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2032:/usr/include/c++/4.9/bits/basic_string.h ****        *  npos.
2033:/usr/include/c++/4.9/bits/basic_string.h ****       */
2034:/usr/include/c++/4.9/bits/basic_string.h ****       size_type
2035:/usr/include/c++/4.9/bits/basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
2036:/usr/include/c++/4.9/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
2037:/usr/include/c++/4.9/bits/basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
2038:/usr/include/c++/4.9/bits/basic_string.h **** 
2039:/usr/include/c++/4.9/bits/basic_string.h ****       /**
2040:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Find last position of a character of C substring.
2041:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
2042:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2043:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2044:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Index of last occurrence.
2045:/usr/include/c++/4.9/bits/basic_string.h ****        *
2046:/usr/include/c++/4.9/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2047:/usr/include/c++/4.9/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2048:/usr/include/c++/4.9/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
2049:/usr/include/c++/4.9/bits/basic_string.h ****        *  returns npos.
2050:/usr/include/c++/4.9/bits/basic_string.h ****       */
2051:/usr/include/c++/4.9/bits/basic_string.h ****       size_type
2052:/usr/include/c++/4.9/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const;
2053:/usr/include/c++/4.9/bits/basic_string.h **** 
2054:/usr/include/c++/4.9/bits/basic_string.h ****       /**
2055:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Find last position of a character of C string.
2056:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
2057:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2058:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Index of last occurrence.
2059:/usr/include/c++/4.9/bits/basic_string.h ****        *
2060:/usr/include/c++/4.9/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2061:/usr/include/c++/4.9/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2062:/usr/include/c++/4.9/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2063:/usr/include/c++/4.9/bits/basic_string.h ****       */
2064:/usr/include/c++/4.9/bits/basic_string.h ****       size_type
2065:/usr/include/c++/4.9/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
2066:/usr/include/c++/4.9/bits/basic_string.h ****       {
2067:/usr/include/c++/4.9/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2068:/usr/include/c++/4.9/bits/basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
2069:/usr/include/c++/4.9/bits/basic_string.h ****       }
2070:/usr/include/c++/4.9/bits/basic_string.h **** 
2071:/usr/include/c++/4.9/bits/basic_string.h ****       /**
2072:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Find last position of a character.
2073:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __c  Character to locate.
2074:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2075:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Index of last occurrence.
2076:/usr/include/c++/4.9/bits/basic_string.h ****        *
2077:/usr/include/c++/4.9/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2078:/usr/include/c++/4.9/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2079:/usr/include/c++/4.9/bits/basic_string.h ****        *  found.  If not found, returns npos.
2080:/usr/include/c++/4.9/bits/basic_string.h ****        *
2081:/usr/include/c++/4.9/bits/basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
2082:/usr/include/c++/4.9/bits/basic_string.h ****       */
2083:/usr/include/c++/4.9/bits/basic_string.h ****       size_type
2084:/usr/include/c++/4.9/bits/basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
2085:/usr/include/c++/4.9/bits/basic_string.h ****       { return this->rfind(__c, __pos); }
2086:/usr/include/c++/4.9/bits/basic_string.h **** 
2087:/usr/include/c++/4.9/bits/basic_string.h ****       /**
2088:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Find position of a character not in string.
2089:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
2090:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2091:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Index of first occurrence.
2092:/usr/include/c++/4.9/bits/basic_string.h ****        *
2093:/usr/include/c++/4.9/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
2094:/usr/include/c++/4.9/bits/basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
2095:/usr/include/c++/4.9/bits/basic_string.h ****        *  was found.  If not found, returns npos.
2096:/usr/include/c++/4.9/bits/basic_string.h ****       */
2097:/usr/include/c++/4.9/bits/basic_string.h ****       size_type
2098:/usr/include/c++/4.9/bits/basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
2099:/usr/include/c++/4.9/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
2100:/usr/include/c++/4.9/bits/basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
2101:/usr/include/c++/4.9/bits/basic_string.h **** 
2102:/usr/include/c++/4.9/bits/basic_string.h ****       /**
2103:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Find position of a character not in C substring.
2104:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2105:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2106:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __n  Number of characters from __s to consider.
2107:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Index of first occurrence.
2108:/usr/include/c++/4.9/bits/basic_string.h ****        *
2109:/usr/include/c++/4.9/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2110:/usr/include/c++/4.9/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within
2111:/usr/include/c++/4.9/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2112:/usr/include/c++/4.9/bits/basic_string.h ****        *  found.  If not found, returns npos.
2113:/usr/include/c++/4.9/bits/basic_string.h ****       */
2114:/usr/include/c++/4.9/bits/basic_string.h ****       size_type
2115:/usr/include/c++/4.9/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
2116:/usr/include/c++/4.9/bits/basic_string.h **** 			size_type __n) const;
2117:/usr/include/c++/4.9/bits/basic_string.h **** 
2118:/usr/include/c++/4.9/bits/basic_string.h ****       /**
2119:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Find position of a character not in C string.
2120:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2121:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2122:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Index of first occurrence.
2123:/usr/include/c++/4.9/bits/basic_string.h ****        *
2124:/usr/include/c++/4.9/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2125:/usr/include/c++/4.9/bits/basic_string.h ****        *  contained in @a __s within this string.  If found, returns
2126:/usr/include/c++/4.9/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2127:/usr/include/c++/4.9/bits/basic_string.h ****       */
2128:/usr/include/c++/4.9/bits/basic_string.h ****       size_type
2129:/usr/include/c++/4.9/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
2130:/usr/include/c++/4.9/bits/basic_string.h ****       {
2131:/usr/include/c++/4.9/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2132:/usr/include/c++/4.9/bits/basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
2133:/usr/include/c++/4.9/bits/basic_string.h ****       }
2134:/usr/include/c++/4.9/bits/basic_string.h **** 
2135:/usr/include/c++/4.9/bits/basic_string.h ****       /**
2136:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Find position of a different character.
2137:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __c  Character to avoid.
2138:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2139:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Index of first occurrence.
2140:/usr/include/c++/4.9/bits/basic_string.h ****        *
2141:/usr/include/c++/4.9/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character
2142:/usr/include/c++/4.9/bits/basic_string.h ****        *  other than @a __c within this string.  If found, returns the
2143:/usr/include/c++/4.9/bits/basic_string.h ****        *  index where it was found.  If not found, returns npos.
2144:/usr/include/c++/4.9/bits/basic_string.h ****       */
2145:/usr/include/c++/4.9/bits/basic_string.h ****       size_type
2146:/usr/include/c++/4.9/bits/basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
2147:/usr/include/c++/4.9/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT;
2148:/usr/include/c++/4.9/bits/basic_string.h **** 
2149:/usr/include/c++/4.9/bits/basic_string.h ****       /**
2150:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Find last position of a character not in string.
2151:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
2152:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2153:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Index of last occurrence.
2154:/usr/include/c++/4.9/bits/basic_string.h ****        *
2155:/usr/include/c++/4.9/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2156:/usr/include/c++/4.9/bits/basic_string.h ****        *  not contained in @a __str within this string.  If found,
2157:/usr/include/c++/4.9/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2158:/usr/include/c++/4.9/bits/basic_string.h ****        *  npos.
2159:/usr/include/c++/4.9/bits/basic_string.h ****       */
2160:/usr/include/c++/4.9/bits/basic_string.h ****       size_type
2161:/usr/include/c++/4.9/bits/basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
2162:/usr/include/c++/4.9/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
2163:/usr/include/c++/4.9/bits/basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
2164:/usr/include/c++/4.9/bits/basic_string.h **** 
2165:/usr/include/c++/4.9/bits/basic_string.h ****       /**
2166:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Find last position of a character not in C substring.
2167:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2168:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2169:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __n  Number of characters from s to consider.
2170:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Index of last occurrence.
2171:/usr/include/c++/4.9/bits/basic_string.h ****        *
2172:/usr/include/c++/4.9/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
2173:/usr/include/c++/4.9/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
2174:/usr/include/c++/4.9/bits/basic_string.h ****        *  If found, returns the index where it was found.  If not found,
2175:/usr/include/c++/4.9/bits/basic_string.h ****        *  returns npos.
2176:/usr/include/c++/4.9/bits/basic_string.h ****       */
2177:/usr/include/c++/4.9/bits/basic_string.h ****       size_type
2178:/usr/include/c++/4.9/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
2179:/usr/include/c++/4.9/bits/basic_string.h **** 		       size_type __n) const;
2180:/usr/include/c++/4.9/bits/basic_string.h ****       /**
2181:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Find last position of a character not in C string.
2182:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2183:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2184:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Index of last occurrence.
2185:/usr/include/c++/4.9/bits/basic_string.h ****        *
2186:/usr/include/c++/4.9/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2187:/usr/include/c++/4.9/bits/basic_string.h ****        *  not contained in @a __s within this string.  If found,
2188:/usr/include/c++/4.9/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2189:/usr/include/c++/4.9/bits/basic_string.h ****        *  npos.
2190:/usr/include/c++/4.9/bits/basic_string.h ****       */
2191:/usr/include/c++/4.9/bits/basic_string.h ****       size_type
2192:/usr/include/c++/4.9/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
2193:/usr/include/c++/4.9/bits/basic_string.h ****       {
2194:/usr/include/c++/4.9/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2195:/usr/include/c++/4.9/bits/basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
2196:/usr/include/c++/4.9/bits/basic_string.h ****       }
2197:/usr/include/c++/4.9/bits/basic_string.h **** 
2198:/usr/include/c++/4.9/bits/basic_string.h ****       /**
2199:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Find last position of a different character.
2200:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __c  Character to avoid.
2201:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2202:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Index of last occurrence.
2203:/usr/include/c++/4.9/bits/basic_string.h ****        *
2204:/usr/include/c++/4.9/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
2205:/usr/include/c++/4.9/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
2206:/usr/include/c++/4.9/bits/basic_string.h ****        *  found.  If not found, returns npos.
2207:/usr/include/c++/4.9/bits/basic_string.h ****       */
2208:/usr/include/c++/4.9/bits/basic_string.h ****       size_type
2209:/usr/include/c++/4.9/bits/basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
2210:/usr/include/c++/4.9/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT;
2211:/usr/include/c++/4.9/bits/basic_string.h **** 
2212:/usr/include/c++/4.9/bits/basic_string.h ****       /**
2213:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Get a substring.
2214:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos  Index of first character (default 0).
2215:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
2216:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  The new string.
2217:/usr/include/c++/4.9/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2218:/usr/include/c++/4.9/bits/basic_string.h ****        *
2219:/usr/include/c++/4.9/bits/basic_string.h ****        *  Construct and return a new string using the @a __n
2220:/usr/include/c++/4.9/bits/basic_string.h ****        *  characters starting at @a __pos.  If the string is too
2221:/usr/include/c++/4.9/bits/basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
2222:/usr/include/c++/4.9/bits/basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
2223:/usr/include/c++/4.9/bits/basic_string.h ****       */
2224:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string
2225:/usr/include/c++/4.9/bits/basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
2226:/usr/include/c++/4.9/bits/basic_string.h ****       { return basic_string(*this,
2227:/usr/include/c++/4.9/bits/basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
2228:/usr/include/c++/4.9/bits/basic_string.h **** 
2229:/usr/include/c++/4.9/bits/basic_string.h ****       /**
2230:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Compare to a string.
2231:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __str  String to compare against.
2232:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2233:/usr/include/c++/4.9/bits/basic_string.h ****        *
2234:/usr/include/c++/4.9/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
2235:/usr/include/c++/4.9/bits/basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
2236:/usr/include/c++/4.9/bits/basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
2237:/usr/include/c++/4.9/bits/basic_string.h ****        *  length rlen of the strings to compare as the smallest of
2238:/usr/include/c++/4.9/bits/basic_string.h ****        *  size() and str.size().  The function then compares the two
2239:/usr/include/c++/4.9/bits/basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
2240:/usr/include/c++/4.9/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2241:/usr/include/c++/4.9/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
2242:/usr/include/c++/4.9/bits/basic_string.h ****       */
2243:/usr/include/c++/4.9/bits/basic_string.h ****       int
2244:/usr/include/c++/4.9/bits/basic_string.h ****       compare(const basic_string& __str) const
2245:/usr/include/c++/4.9/bits/basic_string.h ****       {
2246:/usr/include/c++/4.9/bits/basic_string.h **** 	const size_type __size = this->size();
2247:/usr/include/c++/4.9/bits/basic_string.h **** 	const size_type __osize = __str.size();
2248:/usr/include/c++/4.9/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
2249:/usr/include/c++/4.9/bits/basic_string.h **** 
2250:/usr/include/c++/4.9/bits/basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
2251:/usr/include/c++/4.9/bits/basic_string.h **** 	if (!__r)
2252:/usr/include/c++/4.9/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
2253:/usr/include/c++/4.9/bits/basic_string.h **** 	return __r;
2254:/usr/include/c++/4.9/bits/basic_string.h ****       }
2255:/usr/include/c++/4.9/bits/basic_string.h **** 
2256:/usr/include/c++/4.9/bits/basic_string.h ****       /**
2257:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Compare substring to a string.
2258:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2259:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __n  Number of characters in substring.
2260:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __str  String to compare against.
2261:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2262:/usr/include/c++/4.9/bits/basic_string.h ****        *
2263:/usr/include/c++/4.9/bits/basic_string.h ****        *  Form the substring of this string from the @a __n characters
2264:/usr/include/c++/4.9/bits/basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
2265:/usr/include/c++/4.9/bits/basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
2266:/usr/include/c++/4.9/bits/basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
2267:/usr/include/c++/4.9/bits/basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
2268:/usr/include/c++/4.9/bits/basic_string.h ****        *  to compare as the smallest of the length of the substring
2269:/usr/include/c++/4.9/bits/basic_string.h ****        *  and @a __str.size().  The function then compares the two
2270:/usr/include/c++/4.9/bits/basic_string.h ****        *  strings by calling
2271:/usr/include/c++/4.9/bits/basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
2272:/usr/include/c++/4.9/bits/basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
2273:/usr/include/c++/4.9/bits/basic_string.h ****        *  the shorter one is ordered first.
2274:/usr/include/c++/4.9/bits/basic_string.h ****       */
2275:/usr/include/c++/4.9/bits/basic_string.h ****       int
2276:/usr/include/c++/4.9/bits/basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
2277:/usr/include/c++/4.9/bits/basic_string.h **** 
2278:/usr/include/c++/4.9/bits/basic_string.h ****       /**
2279:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Compare substring to a substring.
2280:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos1  Index of first character of substring.
2281:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2282:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __str  String to compare against.
2283:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
2284:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __n2  Number of characters in substring of str.
2285:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2286:/usr/include/c++/4.9/bits/basic_string.h ****        *
2287:/usr/include/c++/4.9/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
2288:/usr/include/c++/4.9/bits/basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
2289:/usr/include/c++/4.9/bits/basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
2290:/usr/include/c++/4.9/bits/basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
2291:/usr/include/c++/4.9/bits/basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
2292:/usr/include/c++/4.9/bits/basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
2293:/usr/include/c++/4.9/bits/basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
2294:/usr/include/c++/4.9/bits/basic_string.h ****        *  strings to compare as the smallest of the lengths of the
2295:/usr/include/c++/4.9/bits/basic_string.h ****        *  substrings.  The function then compares the two strings by
2296:/usr/include/c++/4.9/bits/basic_string.h ****        *  calling
2297:/usr/include/c++/4.9/bits/basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
2298:/usr/include/c++/4.9/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2299:/usr/include/c++/4.9/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
2300:/usr/include/c++/4.9/bits/basic_string.h ****       */
2301:/usr/include/c++/4.9/bits/basic_string.h ****       int
2302:/usr/include/c++/4.9/bits/basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
2303:/usr/include/c++/4.9/bits/basic_string.h **** 	      size_type __pos2, size_type __n2) const;
2304:/usr/include/c++/4.9/bits/basic_string.h **** 
2305:/usr/include/c++/4.9/bits/basic_string.h ****       /**
2306:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Compare to a C string.
2307:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __s  C string to compare against.
2308:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2309:/usr/include/c++/4.9/bits/basic_string.h ****        *
2310:/usr/include/c++/4.9/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
2311:/usr/include/c++/4.9/bits/basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
2312:/usr/include/c++/4.9/bits/basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
2313:/usr/include/c++/4.9/bits/basic_string.h ****        *  compare as the smallest of size() and the length of a string
2314:/usr/include/c++/4.9/bits/basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
2315:/usr/include/c++/4.9/bits/basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
2316:/usr/include/c++/4.9/bits/basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
2317:/usr/include/c++/4.9/bits/basic_string.h ****        *  ordered first.
2318:/usr/include/c++/4.9/bits/basic_string.h ****       */
2319:/usr/include/c++/4.9/bits/basic_string.h ****       int
2320:/usr/include/c++/4.9/bits/basic_string.h ****       compare(const _CharT* __s) const;
2321:/usr/include/c++/4.9/bits/basic_string.h **** 
2322:/usr/include/c++/4.9/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
2323:/usr/include/c++/4.9/bits/basic_string.h ****       // 5 String::compare specification questionable
2324:/usr/include/c++/4.9/bits/basic_string.h ****       /**
2325:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Compare substring to a C string.
2326:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2327:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2328:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __s  C string to compare against.
2329:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2330:/usr/include/c++/4.9/bits/basic_string.h ****        *
2331:/usr/include/c++/4.9/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
2332:/usr/include/c++/4.9/bits/basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
2333:/usr/include/c++/4.9/bits/basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
2334:/usr/include/c++/4.9/bits/basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
2335:/usr/include/c++/4.9/bits/basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
2336:/usr/include/c++/4.9/bits/basic_string.h ****        *  compare as the smallest of the length of the substring and
2337:/usr/include/c++/4.9/bits/basic_string.h ****        *  the length of a string constructed from @a __s.  The
2338:/usr/include/c++/4.9/bits/basic_string.h ****        *  function then compares the two string by calling
2339:/usr/include/c++/4.9/bits/basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
2340:/usr/include/c++/4.9/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
2341:/usr/include/c++/4.9/bits/basic_string.h ****        *  one is ordered first.
2342:/usr/include/c++/4.9/bits/basic_string.h ****       */
2343:/usr/include/c++/4.9/bits/basic_string.h ****       int
2344:/usr/include/c++/4.9/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
2345:/usr/include/c++/4.9/bits/basic_string.h **** 
2346:/usr/include/c++/4.9/bits/basic_string.h ****       /**
2347:/usr/include/c++/4.9/bits/basic_string.h ****        *  @brief  Compare substring against a character %array.
2348:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2349:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2350:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __s  character %array to compare against.
2351:/usr/include/c++/4.9/bits/basic_string.h ****        *  @param __n2  Number of characters of s.
2352:/usr/include/c++/4.9/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2353:/usr/include/c++/4.9/bits/basic_string.h ****        *
2354:/usr/include/c++/4.9/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
2355:/usr/include/c++/4.9/bits/basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
2356:/usr/include/c++/4.9/bits/basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
2357:/usr/include/c++/4.9/bits/basic_string.h ****        *  if this substring is ordered before the string from @a __s,
2358:/usr/include/c++/4.9/bits/basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
2359:/usr/include/c++/4.9/bits/basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
2360:/usr/include/c++/4.9/bits/basic_string.h ****        *  effective length rlen of the strings to compare as the
2361:/usr/include/c++/4.9/bits/basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
2362:/usr/include/c++/4.9/bits/basic_string.h ****        *  function then compares the two strings by calling
2363:/usr/include/c++/4.9/bits/basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
2364:/usr/include/c++/4.9/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
2365:/usr/include/c++/4.9/bits/basic_string.h ****        *  one is ordered first.
2366:/usr/include/c++/4.9/bits/basic_string.h ****        *
2367:/usr/include/c++/4.9/bits/basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
2368:/usr/include/c++/4.9/bits/basic_string.h ****        *  no special meaning.
2369:/usr/include/c++/4.9/bits/basic_string.h ****       */
2370:/usr/include/c++/4.9/bits/basic_string.h ****       int
2371:/usr/include/c++/4.9/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
2372:/usr/include/c++/4.9/bits/basic_string.h **** 	      size_type __n2) const;
2373:/usr/include/c++/4.9/bits/basic_string.h ****   };
2374:/usr/include/c++/4.9/bits/basic_string.h **** 
2375:/usr/include/c++/4.9/bits/basic_string.h ****   // operator+
2376:/usr/include/c++/4.9/bits/basic_string.h ****   /**
2377:/usr/include/c++/4.9/bits/basic_string.h ****    *  @brief  Concatenate two strings.
2378:/usr/include/c++/4.9/bits/basic_string.h ****    *  @param __lhs  First string.
2379:/usr/include/c++/4.9/bits/basic_string.h ****    *  @param __rhs  Last string.
2380:/usr/include/c++/4.9/bits/basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
2381:/usr/include/c++/4.9/bits/basic_string.h ****    */
2382:/usr/include/c++/4.9/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2383:/usr/include/c++/4.9/bits/basic_string.h ****     basic_string<_CharT, _Traits, _Alloc>
2384:/usr/include/c++/4.9/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
2385:/usr/include/c++/4.9/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
2386:/usr/include/c++/4.9/bits/basic_string.h ****     {
2387:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
2388:/usr/include/c++/4.9/bits/basic_string.h ****       __str.append(__rhs);
2389:/usr/include/c++/4.9/bits/basic_string.h ****       return __str;
2390:/usr/include/c++/4.9/bits/basic_string.h ****     }
2391:/usr/include/c++/4.9/bits/basic_string.h **** 
2392:/usr/include/c++/4.9/bits/basic_string.h ****   /**
2393:/usr/include/c++/4.9/bits/basic_string.h ****    *  @brief  Concatenate C string and string.
2394:/usr/include/c++/4.9/bits/basic_string.h ****    *  @param __lhs  First string.
2395:/usr/include/c++/4.9/bits/basic_string.h ****    *  @param __rhs  Last string.
2396:/usr/include/c++/4.9/bits/basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
2397:/usr/include/c++/4.9/bits/basic_string.h ****    */
2398:/usr/include/c++/4.9/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2399:/usr/include/c++/4.9/bits/basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
2400:/usr/include/c++/4.9/bits/basic_string.h ****     operator+(const _CharT* __lhs,
2401:/usr/include/c++/4.9/bits/basic_string.h **** 	      const basic_string<_CharT,_Traits,_Alloc>& __rhs);
2402:/usr/include/c++/4.9/bits/basic_string.h **** 
2403:/usr/include/c++/4.9/bits/basic_string.h ****   /**
2404:/usr/include/c++/4.9/bits/basic_string.h ****    *  @brief  Concatenate character and string.
2405:/usr/include/c++/4.9/bits/basic_string.h ****    *  @param __lhs  First string.
2406:/usr/include/c++/4.9/bits/basic_string.h ****    *  @param __rhs  Last string.
2407:/usr/include/c++/4.9/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
2408:/usr/include/c++/4.9/bits/basic_string.h ****    */
2409:/usr/include/c++/4.9/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2410:/usr/include/c++/4.9/bits/basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
2411:/usr/include/c++/4.9/bits/basic_string.h ****     operator+(_CharT __lhs, const basic_string<_CharT,_Traits,_Alloc>& __rhs);
2412:/usr/include/c++/4.9/bits/basic_string.h **** 
2413:/usr/include/c++/4.9/bits/basic_string.h ****   /**
2414:/usr/include/c++/4.9/bits/basic_string.h ****    *  @brief  Concatenate string and C string.
2415:/usr/include/c++/4.9/bits/basic_string.h ****    *  @param __lhs  First string.
2416:/usr/include/c++/4.9/bits/basic_string.h ****    *  @param __rhs  Last string.
2417:/usr/include/c++/4.9/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
2418:/usr/include/c++/4.9/bits/basic_string.h ****    */
2419:/usr/include/c++/4.9/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2420:/usr/include/c++/4.9/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
2421:/usr/include/c++/4.9/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
2422:/usr/include/c++/4.9/bits/basic_string.h **** 	     const _CharT* __rhs)
2423:/usr/include/c++/4.9/bits/basic_string.h ****     {
2424:/usr/include/c++/4.9/bits/basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
2425:/usr/include/c++/4.9/bits/basic_string.h ****       __str.append(__rhs);
2426:/usr/include/c++/4.9/bits/basic_string.h ****       return __str;
2427:/usr/include/c++/4.9/bits/basic_string.h ****     }
2428:/usr/include/c++/4.9/bits/basic_string.h **** 
2429:/usr/include/c++/4.9/bits/basic_string.h ****   /**
2430:/usr/include/c++/4.9/bits/basic_string.h ****    *  @brief  Concatenate string and character.
2431:/usr/include/c++/4.9/bits/basic_string.h ****    *  @param __lhs  First string.
2432:/usr/include/c++/4.9/bits/basic_string.h ****    *  @param __rhs  Last string.
2433:/usr/include/c++/4.9/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
2434:/usr/include/c++/4.9/bits/basic_string.h ****    */
2435:/usr/include/c++/4.9/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2436:/usr/include/c++/4.9/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
2437:/usr/include/c++/4.9/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)
2438:/usr/include/c++/4.9/bits/basic_string.h ****     {
2439:/usr/include/c++/4.9/bits/basic_string.h ****       typedef basic_string<_CharT, _Traits, _Alloc>	__string_type;
2440:/usr/include/c++/4.9/bits/basic_string.h ****       typedef typename __string_type::size_type		__size_type;
2441:/usr/include/c++/4.9/bits/basic_string.h ****       __string_type __str(__lhs);
2442:/usr/include/c++/4.9/bits/basic_string.h ****       __str.append(__size_type(1), __rhs);
2443:/usr/include/c++/4.9/bits/basic_string.h ****       return __str;
2444:/usr/include/c++/4.9/bits/basic_string.h ****     }
2445:/usr/include/c++/4.9/bits/basic_string.h **** 
2446:/usr/include/c++/4.9/bits/basic_string.h **** #if __cplusplus >= 201103L
2447:/usr/include/c++/4.9/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2448:/usr/include/c++/4.9/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
2449:/usr/include/c++/4.9/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
2450:/usr/include/c++/4.9/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
2451:/usr/include/c++/4.9/bits/basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
2452:/usr/include/c++/4.9/bits/basic_string.h **** 
2453:/usr/include/c++/4.9/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2454:/usr/include/c++/4.9/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
2455:/usr/include/c++/4.9/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
2456:/usr/include/c++/4.9/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
2457:/usr/include/c++/4.9/bits/basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
2458:/usr/include/c++/4.9/bits/basic_string.h **** 
2459:/usr/include/c++/4.9/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2460:/usr/include/c++/4.9/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
2461:/usr/include/c++/4.9/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
2462:/usr/include/c++/4.9/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
2463:/usr/include/c++/4.9/bits/basic_string.h ****     {
2464:/usr/include/c++/4.9/bits/basic_string.h ****       const auto __size = __lhs.size() + __rhs.size();
2465:/usr/include/c++/4.9/bits/basic_string.h ****       const bool __cond = (__size > __lhs.capacity()
2466:/usr/include/c++/4.9/bits/basic_string.h **** 			   && __size <= __rhs.capacity());
2467:/usr/include/c++/4.9/bits/basic_string.h ****       return __cond ? std::move(__rhs.insert(0, __lhs))
2468:/usr/include/c++/4.9/bits/basic_string.h **** 	            : std::move(__lhs.append(__rhs));
2469:/usr/include/c++/4.9/bits/basic_string.h ****     }
2470:/usr/include/c++/4.9/bits/basic_string.h **** 
2471:/usr/include/c++/4.9/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2472:/usr/include/c++/4.9/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
2473:/usr/include/c++/4.9/bits/basic_string.h ****     operator+(const _CharT* __lhs,
2474:/usr/include/c++/4.9/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
2475:/usr/include/c++/4.9/bits/basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
2476:/usr/include/c++/4.9/bits/basic_string.h **** 
2477:/usr/include/c++/4.9/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2478:/usr/include/c++/4.9/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
2479:/usr/include/c++/4.9/bits/basic_string.h ****     operator+(_CharT __lhs,
2480:/usr/include/c++/4.9/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
2481:/usr/include/c++/4.9/bits/basic_string.h ****     { return std::move(__rhs.insert(0, 1, __lhs)); }
2482:/usr/include/c++/4.9/bits/basic_string.h **** 
2483:/usr/include/c++/4.9/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2484:/usr/include/c++/4.9/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
2485:/usr/include/c++/4.9/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
2486:/usr/include/c++/4.9/bits/basic_string.h **** 	      const _CharT* __rhs)
2487:/usr/include/c++/4.9/bits/basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
2488:/usr/include/c++/4.9/bits/basic_string.h **** 
2489:/usr/include/c++/4.9/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2490:/usr/include/c++/4.9/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
2491:/usr/include/c++/4.9/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
2492:/usr/include/c++/4.9/bits/basic_string.h **** 	      _CharT __rhs)
2493:/usr/include/c++/4.9/bits/basic_string.h ****     { return std::move(__lhs.append(1, __rhs)); }
2494:/usr/include/c++/4.9/bits/basic_string.h **** #endif
2495:/usr/include/c++/4.9/bits/basic_string.h **** 
2496:/usr/include/c++/4.9/bits/basic_string.h ****   // operator ==
2497:/usr/include/c++/4.9/bits/basic_string.h ****   /**
2498:/usr/include/c++/4.9/bits/basic_string.h ****    *  @brief  Test equivalence of two strings.
2499:/usr/include/c++/4.9/bits/basic_string.h ****    *  @param __lhs  First string.
2500:/usr/include/c++/4.9/bits/basic_string.h ****    *  @param __rhs  Second string.
2501:/usr/include/c++/4.9/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
2502:/usr/include/c++/4.9/bits/basic_string.h ****    */
2503:/usr/include/c++/4.9/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2504:/usr/include/c++/4.9/bits/basic_string.h ****     inline bool
2505:/usr/include/c++/4.9/bits/basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
2506:/usr/include/c++/4.9/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
2507:/usr/include/c++/4.9/bits/basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
2508:/usr/include/c++/4.9/bits/basic_string.h **** 
2509:/usr/include/c++/4.9/bits/basic_string.h ****   template<typename _CharT>
2510:/usr/include/c++/4.9/bits/basic_string.h ****     inline
2511:/usr/include/c++/4.9/bits/basic_string.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, bool>::__type
2512:/usr/include/c++/4.9/bits/basic_string.h ****     operator==(const basic_string<_CharT>& __lhs,
2513:/usr/include/c++/4.9/bits/basic_string.h **** 	       const basic_string<_CharT>& __rhs)
2514:/usr/include/c++/4.9/bits/basic_string.h ****     { return (__lhs.size() == __rhs.size()
2515:/usr/include/c++/4.9/bits/basic_string.h **** 	      && !std::char_traits<_CharT>::compare(__lhs.data(), __rhs.data(),
2516:/usr/include/c++/4.9/bits/basic_string.h **** 						    __lhs.size())); }
2517:/usr/include/c++/4.9/bits/basic_string.h **** 
2518:/usr/include/c++/4.9/bits/basic_string.h ****   /**
2519:/usr/include/c++/4.9/bits/basic_string.h ****    *  @brief  Test equivalence of C string and string.
2520:/usr/include/c++/4.9/bits/basic_string.h ****    *  @param __lhs  C string.
2521:/usr/include/c++/4.9/bits/basic_string.h ****    *  @param __rhs  String.
2522:/usr/include/c++/4.9/bits/basic_string.h ****    *  @return  True if @a __rhs.compare(@a __lhs) == 0.  False otherwise.
2523:/usr/include/c++/4.9/bits/basic_string.h ****    */
2524:/usr/include/c++/4.9/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2525:/usr/include/c++/4.9/bits/basic_string.h ****     inline bool
2526:/usr/include/c++/4.9/bits/basic_string.h ****     operator==(const _CharT* __lhs,
 7996              		.loc 10 2526 0
 7997              		.cfi_startproc
 7998 0000 55       		pushq	%rbp
 7999              		.cfi_def_cfa_offset 16
 8000              		.cfi_offset 6, -16
 8001 0001 4889E5   		movq	%rsp, %rbp
 8002              		.cfi_def_cfa_register 6
 8003 0004 4883EC10 		subq	$16, %rsp
 8004 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8005 000c 488975F0 		movq	%rsi, -16(%rbp)
2527:/usr/include/c++/4.9/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
2528:/usr/include/c++/4.9/bits/basic_string.h ****     { return __rhs.compare(__lhs) == 0; }
 8006              		.loc 10 2528 0
 8007 0010 488B55F8 		movq	-8(%rbp), %rdx
 8008 0014 488B45F0 		movq	-16(%rbp), %rax
 8009 0018 4889D6   		movq	%rdx, %rsi
 8010 001b 4889C7   		movq	%rax, %rdi
 8011 001e E8000000 		call	_ZNKSs7compareEPKc
 8011      00
 8012 0023 85C0     		testl	%eax, %eax
 8013 0025 0F94C0   		sete	%al
 8014 0028 C9       		leave
 8015              		.cfi_def_cfa 7, 8
 8016 0029 C3       		ret
 8017              		.cfi_endproc
 8018              	.LFE1521:
 8020              		.section	.text._ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_,"axG",@progbits,_ZN8UnitTest8AreCloseIff
 8021              		.weak	_ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_
 8023              	_ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_:
 8024              	.LFB1523:
  39:../Checks.h   **** {
 8025              		.loc 8 39 0
 8026              		.cfi_startproc
 8027 0000 55       		pushq	%rbp
 8028              		.cfi_def_cfa_offset 16
 8029              		.cfi_offset 6, -16
 8030 0001 4889E5   		movq	%rsp, %rbp
 8031              		.cfi_def_cfa_register 6
 8032 0004 48897DF8 		movq	%rdi, -8(%rbp)
 8033 0008 488975F0 		movq	%rsi, -16(%rbp)
 8034 000c 488955E8 		movq	%rdx, -24(%rbp)
  41:../Checks.h   **** }
 8035              		.loc 8 41 0
 8036 0010 488B45F0 		movq	-16(%rbp), %rax
 8037 0014 F30F1008 		movss	(%rax), %xmm1
 8038 0018 488B45F8 		movq	-8(%rbp), %rax
 8039 001c F30F1000 		movss	(%rax), %xmm0
 8040 0020 488B45E8 		movq	-24(%rbp), %rax
 8041 0024 F30F1010 		movss	(%rax), %xmm2
 8042 0028 F30F5CC2 		subss	%xmm2, %xmm0
 8043 002c 0F2EC8   		ucomiss	%xmm0, %xmm1
 8044 002f 7228     		jb	.L463
  41:../Checks.h   **** }
 8045              		.loc 8 41 0 is_stmt 0 discriminator 1
 8046 0031 488B45F0 		movq	-16(%rbp), %rax
 8047 0035 F30F1008 		movss	(%rax), %xmm1
 8048 0039 488B45F8 		movq	-8(%rbp), %rax
 8049 003d F30F1010 		movss	(%rax), %xmm2
 8050 0041 488B45E8 		movq	-24(%rbp), %rax
 8051 0045 F30F1000 		movss	(%rax), %xmm0
 8052 0049 F30F58C2 		addss	%xmm2, %xmm0
 8053 004d 0F2EC1   		ucomiss	%xmm1, %xmm0
 8054 0050 7207     		jb	.L463
  41:../Checks.h   **** }
 8055              		.loc 8 41 0 discriminator 3
 8056 0052 B8010000 		movl	$1, %eax
 8056      00
 8057 0057 EB05     		jmp	.L467
 8058              	.L463:
  41:../Checks.h   **** }
 8059              		.loc 8 41 0 discriminator 4
 8060 0059 B8000000 		movl	$0, %eax
 8060      00
 8061              	.L467:
  42:../Checks.h   **** 
 8062              		.loc 8 42 0 is_stmt 1 discriminator 7
 8063 005e 5D       		popq	%rbp
 8064              		.cfi_def_cfa 7, 8
 8065 005f C3       		ret
 8066              		.cfi_endproc
 8067              	.LFE1523:
 8069              		.section	.text._ZNKSt6vectorISt4pairIiSsESaIS1_EE14_M_range_checkEm,"axG",@progbits,_ZNKSt6vectorI
 8070              		.align 2
 8071              		.weak	_ZNKSt6vectorISt4pairIiSsESaIS1_EE14_M_range_checkEm
 8073              	_ZNKSt6vectorISt4pairIiSsESaIS1_EE14_M_range_checkEm:
 8074              	.LFB1525:
 800:/usr/include/c++/4.9/bits/stl_vector.h ****       {
 8075              		.loc 6 800 0
 8076              		.cfi_startproc
 8077 0000 55       		pushq	%rbp
 8078              		.cfi_def_cfa_offset 16
 8079              		.cfi_offset 6, -16
 8080 0001 4889E5   		movq	%rsp, %rbp
 8081              		.cfi_def_cfa_register 6
 8082 0004 4883EC10 		subq	$16, %rsp
 8083 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8084 000c 488975F0 		movq	%rsi, -16(%rbp)
 802:/usr/include/c++/4.9/bits/stl_vector.h **** 	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
 8085              		.loc 6 802 0
 8086 0010 488B45F8 		movq	-8(%rbp), %rax
 8087 0014 4889C7   		movq	%rax, %rdi
 8088 0017 E8000000 		call	_ZNKSt6vectorISt4pairIiSsESaIS1_EE4sizeEv
 8088      00
 8089 001c 483B45F0 		cmpq	-16(%rbp), %rax
 8090 0020 0F96C0   		setbe	%al
 8091 0023 84C0     		testb	%al, %al
 8092 0025 7425     		je	.L470
 806:/usr/include/c++/4.9/bits/stl_vector.h ****       }
 8093              		.loc 6 806 0
 8094 0027 488B45F8 		movq	-8(%rbp), %rax
 8095 002b 4889C7   		movq	%rax, %rdi
 8096 002e E8000000 		call	_ZNKSt6vectorISt4pairIiSsESaIS1_EE4sizeEv
 8096      00
 8097 0033 4889C2   		movq	%rax, %rdx
 803:/usr/include/c++/4.9/bits/stl_vector.h **** 				       "(which is %zu) >= this->size() "
 8098              		.loc 6 803 0
 8099 0036 488B45F0 		movq	-16(%rbp), %rax
 8100 003a 4889C6   		movq	%rax, %rsi
 8101 003d BF000000 		movl	$.LC37, %edi
 8101      00
 8102 0042 B8000000 		movl	$0, %eax
 8102      00
 8103 0047 E8000000 		call	_ZSt24__throw_out_of_range_fmtPKcz
 8103      00
 8104              	.L470:
 807:/usr/include/c++/4.9/bits/stl_vector.h **** 
 8105              		.loc 6 807 0
 8106 004c C9       		leave
 8107              		.cfi_def_cfa 7, 8
 8108 004d C3       		ret
 8109              		.cfi_endproc
 8110              	.LFE1525:
 8112              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC2Ev,"axG"
 8113              		.align 2
 8114              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC2Ev
 8116              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC2Ev:
 8117              	.LFB1535:
  86:/usr/include/c++/4.9/bits/stl_vector.h **** 	: _Tp_alloc_type(), _M_start(0), _M_finish(0), _M_end_of_storage(0)
 8118              		.loc 6 86 0
 8119              		.cfi_startproc
 8120 0000 55       		pushq	%rbp
 8121              		.cfi_def_cfa_offset 16
 8122              		.cfi_offset 6, -16
 8123 0001 4889E5   		movq	%rsp, %rbp
 8124              		.cfi_def_cfa_register 6
 8125 0004 4883EC10 		subq	$16, %rsp
 8126 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8127              	.LBB208:
  87:/usr/include/c++/4.9/bits/stl_vector.h **** 	{ }
 8128              		.loc 6 87 0
 8129 000c 488B45F8 		movq	-8(%rbp), %rax
 8130 0010 4889C7   		movq	%rax, %rdi
 8131 0013 E8000000 		call	_ZNSaIN8UnitTest18DeferredTestResultEEC2Ev
 8131      00
 8132 0018 488B45F8 		movq	-8(%rbp), %rax
 8133 001c 48C70000 		movq	$0, (%rax)
 8133      000000
 8134 0023 488B45F8 		movq	-8(%rbp), %rax
 8135 0027 48C74008 		movq	$0, 8(%rax)
 8135      00000000 
 8136 002f 488B45F8 		movq	-8(%rbp), %rax
 8137 0033 48C74010 		movq	$0, 16(%rax)
 8137      00000000 
 8138              	.LBE208:
  88:/usr/include/c++/4.9/bits/stl_vector.h **** 
 8139              		.loc 6 88 0
 8140 003b C9       		leave
 8141              		.cfi_def_cfa 7, 8
 8142 003c C3       		ret
 8143              		.cfi_endproc
 8144              	.LFE1535:
 8146              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC1Ev
 8147              		.set	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC1Ev,_ZNSt12_Vector_
 8148              		.section	.text._ZNSaIN8UnitTest18DeferredTestResultEED2Ev,"axG",@progbits,_ZNSaIN8UnitTest18Deferr
 8149              		.align 2
 8150              		.weak	_ZNSaIN8UnitTest18DeferredTestResultEED2Ev
 8152              	_ZNSaIN8UnitTest18DeferredTestResultEED2Ev:
 8153              	.LFB1538:
 8154              		.file 11 "/usr/include/c++/4.9/bits/allocator.h"
   1:/usr/include/c++/4.9/bits/allocator.h **** // Allocators -*- C++ -*-
   2:/usr/include/c++/4.9/bits/allocator.h **** 
   3:/usr/include/c++/4.9/bits/allocator.h **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   4:/usr/include/c++/4.9/bits/allocator.h **** //
   5:/usr/include/c++/4.9/bits/allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/4.9/bits/allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/4.9/bits/allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/4.9/bits/allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/4.9/bits/allocator.h **** // any later version.
  10:/usr/include/c++/4.9/bits/allocator.h **** 
  11:/usr/include/c++/4.9/bits/allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/4.9/bits/allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/4.9/bits/allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/4.9/bits/allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/4.9/bits/allocator.h **** 
  16:/usr/include/c++/4.9/bits/allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/4.9/bits/allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/4.9/bits/allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/4.9/bits/allocator.h **** 
  20:/usr/include/c++/4.9/bits/allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/4.9/bits/allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/4.9/bits/allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/4.9/bits/allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/4.9/bits/allocator.h **** 
  25:/usr/include/c++/4.9/bits/allocator.h **** /*
  26:/usr/include/c++/4.9/bits/allocator.h ****  * Copyright (c) 1996-1997
  27:/usr/include/c++/4.9/bits/allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:/usr/include/c++/4.9/bits/allocator.h ****  *
  29:/usr/include/c++/4.9/bits/allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/usr/include/c++/4.9/bits/allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/usr/include/c++/4.9/bits/allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:/usr/include/c++/4.9/bits/allocator.h ****  * that both that copyright notice and this permission notice appear
  33:/usr/include/c++/4.9/bits/allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:/usr/include/c++/4.9/bits/allocator.h ****  * representations about the suitability of this software for any
  35:/usr/include/c++/4.9/bits/allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/usr/include/c++/4.9/bits/allocator.h ****  */
  37:/usr/include/c++/4.9/bits/allocator.h **** 
  38:/usr/include/c++/4.9/bits/allocator.h **** /** @file bits/allocator.h
  39:/usr/include/c++/4.9/bits/allocator.h ****  *  This is an internal header file, included by other library headers.
  40:/usr/include/c++/4.9/bits/allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:/usr/include/c++/4.9/bits/allocator.h ****  */
  42:/usr/include/c++/4.9/bits/allocator.h **** 
  43:/usr/include/c++/4.9/bits/allocator.h **** #ifndef _ALLOCATOR_H
  44:/usr/include/c++/4.9/bits/allocator.h **** #define _ALLOCATOR_H 1
  45:/usr/include/c++/4.9/bits/allocator.h **** 
  46:/usr/include/c++/4.9/bits/allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:/usr/include/c++/4.9/bits/allocator.h **** #include <bits/memoryfwd.h>
  48:/usr/include/c++/4.9/bits/allocator.h **** #if __cplusplus >= 201103L
  49:/usr/include/c++/4.9/bits/allocator.h **** #include <type_traits>
  50:/usr/include/c++/4.9/bits/allocator.h **** #endif
  51:/usr/include/c++/4.9/bits/allocator.h **** 
  52:/usr/include/c++/4.9/bits/allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  53:/usr/include/c++/4.9/bits/allocator.h **** {
  54:/usr/include/c++/4.9/bits/allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  55:/usr/include/c++/4.9/bits/allocator.h **** 
  56:/usr/include/c++/4.9/bits/allocator.h ****   /**
  57:/usr/include/c++/4.9/bits/allocator.h ****    *  @addtogroup allocators
  58:/usr/include/c++/4.9/bits/allocator.h ****    *  @{
  59:/usr/include/c++/4.9/bits/allocator.h ****    */
  60:/usr/include/c++/4.9/bits/allocator.h **** 
  61:/usr/include/c++/4.9/bits/allocator.h ****   /// allocator<void> specialization.
  62:/usr/include/c++/4.9/bits/allocator.h ****   template<>
  63:/usr/include/c++/4.9/bits/allocator.h ****     class allocator<void>
  64:/usr/include/c++/4.9/bits/allocator.h ****     {
  65:/usr/include/c++/4.9/bits/allocator.h ****     public:
  66:/usr/include/c++/4.9/bits/allocator.h ****       typedef size_t      size_type;
  67:/usr/include/c++/4.9/bits/allocator.h ****       typedef ptrdiff_t   difference_type;
  68:/usr/include/c++/4.9/bits/allocator.h ****       typedef void*       pointer;
  69:/usr/include/c++/4.9/bits/allocator.h ****       typedef const void* const_pointer;
  70:/usr/include/c++/4.9/bits/allocator.h ****       typedef void        value_type;
  71:/usr/include/c++/4.9/bits/allocator.h **** 
  72:/usr/include/c++/4.9/bits/allocator.h ****       template<typename _Tp1>
  73:/usr/include/c++/4.9/bits/allocator.h ****         struct rebind
  74:/usr/include/c++/4.9/bits/allocator.h ****         { typedef allocator<_Tp1> other; };
  75:/usr/include/c++/4.9/bits/allocator.h **** 
  76:/usr/include/c++/4.9/bits/allocator.h **** #if __cplusplus >= 201103L
  77:/usr/include/c++/4.9/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  78:/usr/include/c++/4.9/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  79:/usr/include/c++/4.9/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
  80:/usr/include/c++/4.9/bits/allocator.h **** #endif
  81:/usr/include/c++/4.9/bits/allocator.h ****     };
  82:/usr/include/c++/4.9/bits/allocator.h **** 
  83:/usr/include/c++/4.9/bits/allocator.h ****   /**
  84:/usr/include/c++/4.9/bits/allocator.h ****    * @brief  The @a standard allocator, as per [20.4].
  85:/usr/include/c++/4.9/bits/allocator.h ****    *
  86:/usr/include/c++/4.9/bits/allocator.h ****    *  See http://gcc.gnu.org/onlinedocs/libstdc++/manual/bk01pt04ch11.html
  87:/usr/include/c++/4.9/bits/allocator.h ****    *  for further details.
  88:/usr/include/c++/4.9/bits/allocator.h ****    *
  89:/usr/include/c++/4.9/bits/allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  90:/usr/include/c++/4.9/bits/allocator.h ****    */
  91:/usr/include/c++/4.9/bits/allocator.h ****   template<typename _Tp>
  92:/usr/include/c++/4.9/bits/allocator.h ****     class allocator: public __allocator_base<_Tp>
  93:/usr/include/c++/4.9/bits/allocator.h ****     {
  94:/usr/include/c++/4.9/bits/allocator.h ****    public:
  95:/usr/include/c++/4.9/bits/allocator.h ****       typedef size_t     size_type;
  96:/usr/include/c++/4.9/bits/allocator.h ****       typedef ptrdiff_t  difference_type;
  97:/usr/include/c++/4.9/bits/allocator.h ****       typedef _Tp*       pointer;
  98:/usr/include/c++/4.9/bits/allocator.h ****       typedef const _Tp* const_pointer;
  99:/usr/include/c++/4.9/bits/allocator.h ****       typedef _Tp&       reference;
 100:/usr/include/c++/4.9/bits/allocator.h ****       typedef const _Tp& const_reference;
 101:/usr/include/c++/4.9/bits/allocator.h ****       typedef _Tp        value_type;
 102:/usr/include/c++/4.9/bits/allocator.h **** 
 103:/usr/include/c++/4.9/bits/allocator.h ****       template<typename _Tp1>
 104:/usr/include/c++/4.9/bits/allocator.h ****         struct rebind
 105:/usr/include/c++/4.9/bits/allocator.h ****         { typedef allocator<_Tp1> other; };
 106:/usr/include/c++/4.9/bits/allocator.h **** 
 107:/usr/include/c++/4.9/bits/allocator.h **** #if __cplusplus >= 201103L
 108:/usr/include/c++/4.9/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 109:/usr/include/c++/4.9/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 110:/usr/include/c++/4.9/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
 111:/usr/include/c++/4.9/bits/allocator.h **** #endif
 112:/usr/include/c++/4.9/bits/allocator.h **** 
 113:/usr/include/c++/4.9/bits/allocator.h ****       allocator() throw() { }
 114:/usr/include/c++/4.9/bits/allocator.h **** 
 115:/usr/include/c++/4.9/bits/allocator.h ****       allocator(const allocator& __a) throw()
 116:/usr/include/c++/4.9/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 117:/usr/include/c++/4.9/bits/allocator.h **** 
 118:/usr/include/c++/4.9/bits/allocator.h ****       template<typename _Tp1>
 119:/usr/include/c++/4.9/bits/allocator.h ****         allocator(const allocator<_Tp1>&) throw() { }
 120:/usr/include/c++/4.9/bits/allocator.h **** 
 121:/usr/include/c++/4.9/bits/allocator.h ****       ~allocator() throw() { }
 8155              		.loc 11 121 0
 8156              		.cfi_startproc
 8157 0000 55       		pushq	%rbp
 8158              		.cfi_def_cfa_offset 16
 8159              		.cfi_offset 6, -16
 8160 0001 4889E5   		movq	%rsp, %rbp
 8161              		.cfi_def_cfa_register 6
 8162 0004 4883EC10 		subq	$16, %rsp
 8163 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8164              	.LBB209:
 8165              		.loc 11 121 0
 8166 000c 488B45F8 		movq	-8(%rbp), %rax
 8167 0010 4889C7   		movq	%rax, %rdi
 8168 0013 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev
 8168      00
 8169              	.LBE209:
 8170 0018 C9       		leave
 8171              		.cfi_def_cfa 7, 8
 8172 0019 C3       		ret
 8173              		.cfi_endproc
 8174              	.LFE1538:
 8176              		.weak	_ZNSaIN8UnitTest18DeferredTestResultEED1Ev
 8177              		.set	_ZNSaIN8UnitTest18DeferredTestResultEED1Ev,_ZNSaIN8UnitTest18DeferredTestResultEED2Ev
 8178              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m,"a
 8179              		.align 2
 8180              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m
 8182              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m:
 8183              	.LFB1540:
 174:/usr/include/c++/4.9/bits/stl_vector.h ****       {
 8184              		.loc 6 174 0
 8185              		.cfi_startproc
 8186 0000 55       		pushq	%rbp
 8187              		.cfi_def_cfa_offset 16
 8188              		.cfi_offset 6, -16
 8189 0001 4889E5   		movq	%rsp, %rbp
 8190              		.cfi_def_cfa_register 6
 8191 0004 4883EC20 		subq	$32, %rsp
 8192 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8193 000c 488975F0 		movq	%rsi, -16(%rbp)
 8194 0010 488955E8 		movq	%rdx, -24(%rbp)
 8195              	.LBB210:
 177:/usr/include/c++/4.9/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 8196              		.loc 6 177 0
 8197 0014 48837DF0 		cmpq	$0, -16(%rbp)
 8197      00
 8198 0019 7417     		je	.L475
 178:/usr/include/c++/4.9/bits/stl_vector.h ****       }
 8199              		.loc 6 178 0
 8200 001b 488B45F8 		movq	-8(%rbp), %rax
 8201 001f 488B55E8 		movq	-24(%rbp), %rdx
 8202 0023 488B4DF0 		movq	-16(%rbp), %rcx
 8203 0027 4889CE   		movq	%rcx, %rsi
 8204 002a 4889C7   		movq	%rax, %rdi
 8205 002d E8000000 		call	_ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE10deallocateERS3_PS2_m
 8205      00
 8206              	.L475:
 8207              	.LBE210:
 179:/usr/include/c++/4.9/bits/stl_vector.h **** 
 8208              		.loc 6 179 0
 8209 0032 C9       		leave
 8210              		.cfi_def_cfa 7, 8
 8211 0033 C3       		ret
 8212              		.cfi_endproc
 8213              	.LFE1540:
 8215              		.section	.text._ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_,"axG",@progbits,_ZSt8_Destroy
 8216              		.weak	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_
 8218              	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_:
 8219              	.LFB1541:
 122:/usr/include/c++/4.9/bits/stl_construct.h ****     {
 8220              		.loc 9 122 0
 8221              		.cfi_startproc
 8222 0000 55       		pushq	%rbp
 8223              		.cfi_def_cfa_offset 16
 8224              		.cfi_offset 6, -16
 8225 0001 4889E5   		movq	%rsp, %rbp
 8226              		.cfi_def_cfa_register 6
 8227 0004 4883EC10 		subq	$16, %rsp
 8228 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8229 000c 488975F0 		movq	%rsi, -16(%rbp)
 8230              	.LBB211:
 126:/usr/include/c++/4.9/bits/stl_construct.h **** 	__destroy(__first, __last);
 8231              		.loc 9 126 0
 8232 0010 488B55F0 		movq	-16(%rbp), %rdx
 8233 0014 488B45F8 		movq	-8(%rbp), %rax
 8234 0018 4889D6   		movq	%rdx, %rsi
 8235 001b 4889C7   		movq	%rax, %rdi
 8236 001e E8000000 		call	_ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_
 8236      00
 8237              	.LBE211:
 128:/usr/include/c++/4.9/bits/stl_construct.h **** 
 8238              		.loc 9 128 0
 8239 0023 C9       		leave
 8240              		.cfi_def_cfa 7, 8
 8241 0024 C3       		ret
 8242              		.cfi_endproc
 8243              	.LFE1541:
 8245              		.section	.text._ZNSaIN8UnitTest18DeferredTestResultEEC2Ev,"axG",@progbits,_ZNSaIN8UnitTest18Deferr
 8246              		.align 2
 8247              		.weak	_ZNSaIN8UnitTest18DeferredTestResultEEC2Ev
 8249              	_ZNSaIN8UnitTest18DeferredTestResultEEC2Ev:
 8250              	.LFB1549:
 113:/usr/include/c++/4.9/bits/allocator.h **** 
 8251              		.loc 11 113 0
 8252              		.cfi_startproc
 8253 0000 55       		pushq	%rbp
 8254              		.cfi_def_cfa_offset 16
 8255              		.cfi_offset 6, -16
 8256 0001 4889E5   		movq	%rsp, %rbp
 8257              		.cfi_def_cfa_register 6
 8258 0004 4883EC10 		subq	$16, %rsp
 8259 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8260              	.LBB212:
 113:/usr/include/c++/4.9/bits/allocator.h **** 
 8261              		.loc 11 113 0
 8262 000c 488B45F8 		movq	-8(%rbp), %rax
 8263 0010 4889C7   		movq	%rax, %rdi
 8264 0013 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC2Ev
 8264      00
 8265              	.LBE212:
 8266 0018 C9       		leave
 8267              		.cfi_def_cfa 7, 8
 8268 0019 C3       		ret
 8269              		.cfi_endproc
 8270              	.LFE1549:
 8272              		.weak	_ZNSaIN8UnitTest18DeferredTestResultEEC1Ev
 8273              		.set	_ZNSaIN8UnitTest18DeferredTestResultEEC1Ev,_ZNSaIN8UnitTest18DeferredTestResultEEC2Ev
 8274              		.section	.text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev,"axG",@progbits,_
 8275              		.align 2
 8276              		.weak	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev
 8278              	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev:
 8279              	.LFB1552:
 8280              		.file 12 "/usr/include/c++/4.9/ext/new_allocator.h"
   1:/usr/include/c++/4.9/ext/new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:/usr/include/c++/4.9/ext/new_allocator.h **** 
   3:/usr/include/c++/4.9/ext/new_allocator.h **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   4:/usr/include/c++/4.9/ext/new_allocator.h **** //
   5:/usr/include/c++/4.9/ext/new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/4.9/ext/new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/4.9/ext/new_allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/4.9/ext/new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/4.9/ext/new_allocator.h **** // any later version.
  10:/usr/include/c++/4.9/ext/new_allocator.h **** 
  11:/usr/include/c++/4.9/ext/new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/4.9/ext/new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/4.9/ext/new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/4.9/ext/new_allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/4.9/ext/new_allocator.h **** 
  16:/usr/include/c++/4.9/ext/new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/4.9/ext/new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/4.9/ext/new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/4.9/ext/new_allocator.h **** 
  20:/usr/include/c++/4.9/ext/new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/4.9/ext/new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/4.9/ext/new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/4.9/ext/new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/4.9/ext/new_allocator.h **** 
  25:/usr/include/c++/4.9/ext/new_allocator.h **** /** @file ext/new_allocator.h
  26:/usr/include/c++/4.9/ext/new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/usr/include/c++/4.9/ext/new_allocator.h ****  */
  28:/usr/include/c++/4.9/ext/new_allocator.h **** 
  29:/usr/include/c++/4.9/ext/new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:/usr/include/c++/4.9/ext/new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:/usr/include/c++/4.9/ext/new_allocator.h **** 
  32:/usr/include/c++/4.9/ext/new_allocator.h **** #include <bits/c++config.h>
  33:/usr/include/c++/4.9/ext/new_allocator.h **** #include <new>
  34:/usr/include/c++/4.9/ext/new_allocator.h **** #include <bits/functexcept.h>
  35:/usr/include/c++/4.9/ext/new_allocator.h **** #include <bits/move.h>
  36:/usr/include/c++/4.9/ext/new_allocator.h **** #if __cplusplus >= 201103L
  37:/usr/include/c++/4.9/ext/new_allocator.h **** #include <type_traits>
  38:/usr/include/c++/4.9/ext/new_allocator.h **** #endif
  39:/usr/include/c++/4.9/ext/new_allocator.h **** 
  40:/usr/include/c++/4.9/ext/new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:/usr/include/c++/4.9/ext/new_allocator.h **** {
  42:/usr/include/c++/4.9/ext/new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:/usr/include/c++/4.9/ext/new_allocator.h **** 
  44:/usr/include/c++/4.9/ext/new_allocator.h ****   using std::size_t;
  45:/usr/include/c++/4.9/ext/new_allocator.h ****   using std::ptrdiff_t;
  46:/usr/include/c++/4.9/ext/new_allocator.h **** 
  47:/usr/include/c++/4.9/ext/new_allocator.h ****   /**
  48:/usr/include/c++/4.9/ext/new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  49:/usr/include/c++/4.9/ext/new_allocator.h ****    *  @ingroup allocators
  50:/usr/include/c++/4.9/ext/new_allocator.h ****    *
  51:/usr/include/c++/4.9/ext/new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard. 
  52:/usr/include/c++/4.9/ext/new_allocator.h ****    *    - all allocation calls operator new
  53:/usr/include/c++/4.9/ext/new_allocator.h ****    *    - all deallocation calls operator delete
  54:/usr/include/c++/4.9/ext/new_allocator.h ****    *
  55:/usr/include/c++/4.9/ext/new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  56:/usr/include/c++/4.9/ext/new_allocator.h ****    */
  57:/usr/include/c++/4.9/ext/new_allocator.h ****   template<typename _Tp>
  58:/usr/include/c++/4.9/ext/new_allocator.h ****     class new_allocator
  59:/usr/include/c++/4.9/ext/new_allocator.h ****     {
  60:/usr/include/c++/4.9/ext/new_allocator.h ****     public:
  61:/usr/include/c++/4.9/ext/new_allocator.h ****       typedef size_t     size_type;
  62:/usr/include/c++/4.9/ext/new_allocator.h ****       typedef ptrdiff_t  difference_type;
  63:/usr/include/c++/4.9/ext/new_allocator.h ****       typedef _Tp*       pointer;
  64:/usr/include/c++/4.9/ext/new_allocator.h ****       typedef const _Tp* const_pointer;
  65:/usr/include/c++/4.9/ext/new_allocator.h ****       typedef _Tp&       reference;
  66:/usr/include/c++/4.9/ext/new_allocator.h ****       typedef const _Tp& const_reference;
  67:/usr/include/c++/4.9/ext/new_allocator.h ****       typedef _Tp        value_type;
  68:/usr/include/c++/4.9/ext/new_allocator.h **** 
  69:/usr/include/c++/4.9/ext/new_allocator.h ****       template<typename _Tp1>
  70:/usr/include/c++/4.9/ext/new_allocator.h ****         struct rebind
  71:/usr/include/c++/4.9/ext/new_allocator.h ****         { typedef new_allocator<_Tp1> other; };
  72:/usr/include/c++/4.9/ext/new_allocator.h **** 
  73:/usr/include/c++/4.9/ext/new_allocator.h **** #if __cplusplus >= 201103L
  74:/usr/include/c++/4.9/ext/new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  75:/usr/include/c++/4.9/ext/new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  76:/usr/include/c++/4.9/ext/new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  77:/usr/include/c++/4.9/ext/new_allocator.h **** #endif
  78:/usr/include/c++/4.9/ext/new_allocator.h **** 
  79:/usr/include/c++/4.9/ext/new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  80:/usr/include/c++/4.9/ext/new_allocator.h **** 
  81:/usr/include/c++/4.9/ext/new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
  82:/usr/include/c++/4.9/ext/new_allocator.h **** 
  83:/usr/include/c++/4.9/ext/new_allocator.h ****       template<typename _Tp1>
  84:/usr/include/c++/4.9/ext/new_allocator.h ****         new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  85:/usr/include/c++/4.9/ext/new_allocator.h **** 
  86:/usr/include/c++/4.9/ext/new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8281              		.loc 12 86 0
 8282              		.cfi_startproc
 8283 0000 55       		pushq	%rbp
 8284              		.cfi_def_cfa_offset 16
 8285              		.cfi_offset 6, -16
 8286 0001 4889E5   		movq	%rsp, %rbp
 8287              		.cfi_def_cfa_register 6
 8288 0004 48897DF8 		movq	%rdi, -8(%rbp)
 8289              		.loc 12 86 0
 8290 0008 5D       		popq	%rbp
 8291              		.cfi_def_cfa 7, 8
 8292 0009 C3       		ret
 8293              		.cfi_endproc
 8294              	.LFE1552:
 8296              		.weak	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED1Ev
 8297              		.set	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED1Ev,_ZN9__gnu_cxx13new_allocato
 8298              		.section	.text._ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE10deallocateERS3_
 8299              		.weak	_ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE10deallocateERS3_PS2_m
 8301              	_ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE10deallocateERS3_PS2_m:
 8302              	.LFB1554:
 8303              		.file 13 "/usr/include/c++/4.9/ext/alloc_traits.h"
   1:/usr/include/c++/4.9/ext/alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:/usr/include/c++/4.9/ext/alloc_traits.h **** 
   3:/usr/include/c++/4.9/ext/alloc_traits.h **** // Copyright (C) 2011-2014 Free Software Foundation, Inc.
   4:/usr/include/c++/4.9/ext/alloc_traits.h **** //
   5:/usr/include/c++/4.9/ext/alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/4.9/ext/alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/4.9/ext/alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/4.9/ext/alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/4.9/ext/alloc_traits.h **** // any later version.
  10:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  11:/usr/include/c++/4.9/ext/alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/4.9/ext/alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/4.9/ext/alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/4.9/ext/alloc_traits.h **** // GNU General Public License for more details.
  15:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  16:/usr/include/c++/4.9/ext/alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/4.9/ext/alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/4.9/ext/alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  20:/usr/include/c++/4.9/ext/alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/4.9/ext/alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/4.9/ext/alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/4.9/ext/alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  25:/usr/include/c++/4.9/ext/alloc_traits.h **** /** @file ext/alloc_traits.h
  26:/usr/include/c++/4.9/ext/alloc_traits.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/usr/include/c++/4.9/ext/alloc_traits.h ****  */
  28:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  29:/usr/include/c++/4.9/ext/alloc_traits.h **** #ifndef _EXT_ALLOC_TRAITS_H
  30:/usr/include/c++/4.9/ext/alloc_traits.h **** #define _EXT_ALLOC_TRAITS_H 1
  31:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  32:/usr/include/c++/4.9/ext/alloc_traits.h **** #pragma GCC system_header
  33:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  34:/usr/include/c++/4.9/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  35:/usr/include/c++/4.9/ext/alloc_traits.h **** # include <bits/move.h>
  36:/usr/include/c++/4.9/ext/alloc_traits.h **** # include <bits/alloc_traits.h>
  37:/usr/include/c++/4.9/ext/alloc_traits.h **** #else
  38:/usr/include/c++/4.9/ext/alloc_traits.h **** # include <bits/allocator.h>  // for __alloc_swap
  39:/usr/include/c++/4.9/ext/alloc_traits.h **** #endif
  40:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  41:/usr/include/c++/4.9/ext/alloc_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  42:/usr/include/c++/4.9/ext/alloc_traits.h **** {
  43:/usr/include/c++/4.9/ext/alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  45:/usr/include/c++/4.9/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  46:/usr/include/c++/4.9/ext/alloc_traits.h ****   template<typename _Alloc>
  47:/usr/include/c++/4.9/ext/alloc_traits.h ****     struct __allocator_always_compares_equal : std::false_type { };
  48:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  49:/usr/include/c++/4.9/ext/alloc_traits.h ****   template<typename _Tp>
  50:/usr/include/c++/4.9/ext/alloc_traits.h ****     struct __allocator_always_compares_equal<std::allocator<_Tp>>
  51:/usr/include/c++/4.9/ext/alloc_traits.h ****     : std::true_type { };
  52:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  53:/usr/include/c++/4.9/ext/alloc_traits.h ****   template<typename, typename> struct array_allocator;
  54:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  55:/usr/include/c++/4.9/ext/alloc_traits.h ****   template<typename _Tp, typename _Array>
  56:/usr/include/c++/4.9/ext/alloc_traits.h ****     struct __allocator_always_compares_equal<array_allocator<_Tp, _Array>>
  57:/usr/include/c++/4.9/ext/alloc_traits.h ****     : std::true_type { };
  58:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  59:/usr/include/c++/4.9/ext/alloc_traits.h ****   template<typename> struct bitmap_allocator;
  60:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  61:/usr/include/c++/4.9/ext/alloc_traits.h ****   template<typename _Tp>
  62:/usr/include/c++/4.9/ext/alloc_traits.h ****     struct __allocator_always_compares_equal<bitmap_allocator<_Tp>>
  63:/usr/include/c++/4.9/ext/alloc_traits.h ****     : std::true_type { };
  64:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  65:/usr/include/c++/4.9/ext/alloc_traits.h ****   template<typename> struct malloc_allocator;
  66:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  67:/usr/include/c++/4.9/ext/alloc_traits.h ****   template<typename _Tp>
  68:/usr/include/c++/4.9/ext/alloc_traits.h ****     struct __allocator_always_compares_equal<malloc_allocator<_Tp>>
  69:/usr/include/c++/4.9/ext/alloc_traits.h ****     : std::true_type { };
  70:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  71:/usr/include/c++/4.9/ext/alloc_traits.h ****   template<typename> struct mt_allocator;
  72:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  73:/usr/include/c++/4.9/ext/alloc_traits.h ****   template<typename _Tp>
  74:/usr/include/c++/4.9/ext/alloc_traits.h ****     struct __allocator_always_compares_equal<mt_allocator<_Tp>>
  75:/usr/include/c++/4.9/ext/alloc_traits.h ****     : std::true_type { };
  76:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  77:/usr/include/c++/4.9/ext/alloc_traits.h ****   template<typename> struct new_allocator;
  78:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  79:/usr/include/c++/4.9/ext/alloc_traits.h ****   template<typename _Tp>
  80:/usr/include/c++/4.9/ext/alloc_traits.h ****     struct __allocator_always_compares_equal<new_allocator<_Tp>>
  81:/usr/include/c++/4.9/ext/alloc_traits.h ****     : std::true_type { };
  82:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  83:/usr/include/c++/4.9/ext/alloc_traits.h ****   template<typename> struct pool_allocator;
  84:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  85:/usr/include/c++/4.9/ext/alloc_traits.h ****   template<typename _Tp>
  86:/usr/include/c++/4.9/ext/alloc_traits.h ****     struct __allocator_always_compares_equal<pool_allocator<_Tp>>
  87:/usr/include/c++/4.9/ext/alloc_traits.h ****     : std::true_type { };
  88:/usr/include/c++/4.9/ext/alloc_traits.h **** #endif
  89:/usr/include/c++/4.9/ext/alloc_traits.h **** 
  90:/usr/include/c++/4.9/ext/alloc_traits.h **** /**
  91:/usr/include/c++/4.9/ext/alloc_traits.h ****  * @brief  Uniform interface to C++98 and C++0x allocators.
  92:/usr/include/c++/4.9/ext/alloc_traits.h ****  * @ingroup allocators
  93:/usr/include/c++/4.9/ext/alloc_traits.h **** */
  94:/usr/include/c++/4.9/ext/alloc_traits.h **** template<typename _Alloc>
  95:/usr/include/c++/4.9/ext/alloc_traits.h ****   struct __alloc_traits
  96:/usr/include/c++/4.9/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  97:/usr/include/c++/4.9/ext/alloc_traits.h ****   : std::allocator_traits<_Alloc>
  98:/usr/include/c++/4.9/ext/alloc_traits.h **** #endif
  99:/usr/include/c++/4.9/ext/alloc_traits.h ****   {
 100:/usr/include/c++/4.9/ext/alloc_traits.h ****     typedef _Alloc allocator_type;
 101:/usr/include/c++/4.9/ext/alloc_traits.h **** #if __cplusplus >= 201103L
 102:/usr/include/c++/4.9/ext/alloc_traits.h ****     typedef std::allocator_traits<_Alloc>           _Base_type;
 103:/usr/include/c++/4.9/ext/alloc_traits.h ****     typedef typename _Base_type::value_type         value_type;
 104:/usr/include/c++/4.9/ext/alloc_traits.h ****     typedef typename _Base_type::pointer            pointer;
 105:/usr/include/c++/4.9/ext/alloc_traits.h ****     typedef typename _Base_type::const_pointer      const_pointer;
 106:/usr/include/c++/4.9/ext/alloc_traits.h ****     typedef typename _Base_type::size_type          size_type;
 107:/usr/include/c++/4.9/ext/alloc_traits.h ****     typedef typename _Base_type::difference_type    difference_type;
 108:/usr/include/c++/4.9/ext/alloc_traits.h ****     // C++11 allocators do not define reference or const_reference
 109:/usr/include/c++/4.9/ext/alloc_traits.h ****     typedef value_type&                             reference;
 110:/usr/include/c++/4.9/ext/alloc_traits.h ****     typedef const value_type&                       const_reference;
 111:/usr/include/c++/4.9/ext/alloc_traits.h ****     using _Base_type::allocate;
 112:/usr/include/c++/4.9/ext/alloc_traits.h ****     using _Base_type::deallocate;
 113:/usr/include/c++/4.9/ext/alloc_traits.h ****     using _Base_type::construct;
 114:/usr/include/c++/4.9/ext/alloc_traits.h ****     using _Base_type::destroy;
 115:/usr/include/c++/4.9/ext/alloc_traits.h ****     using _Base_type::max_size;
 116:/usr/include/c++/4.9/ext/alloc_traits.h **** 
 117:/usr/include/c++/4.9/ext/alloc_traits.h ****   private:
 118:/usr/include/c++/4.9/ext/alloc_traits.h ****     template<typename _Ptr>
 119:/usr/include/c++/4.9/ext/alloc_traits.h ****       using __is_custom_pointer
 120:/usr/include/c++/4.9/ext/alloc_traits.h **** 	= std::__and_<std::is_same<pointer, _Ptr>,
 121:/usr/include/c++/4.9/ext/alloc_traits.h **** 		      std::__not_<std::is_pointer<_Ptr>>>;
 122:/usr/include/c++/4.9/ext/alloc_traits.h **** 
 123:/usr/include/c++/4.9/ext/alloc_traits.h ****   public:
 124:/usr/include/c++/4.9/ext/alloc_traits.h ****     // overload construct for non-standard pointer types
 125:/usr/include/c++/4.9/ext/alloc_traits.h ****     template<typename _Ptr, typename... _Args>
 126:/usr/include/c++/4.9/ext/alloc_traits.h ****       static typename std::enable_if<__is_custom_pointer<_Ptr>::value>::type
 127:/usr/include/c++/4.9/ext/alloc_traits.h ****       construct(_Alloc& __a, _Ptr __p, _Args&&... __args)
 128:/usr/include/c++/4.9/ext/alloc_traits.h ****       {
 129:/usr/include/c++/4.9/ext/alloc_traits.h **** 	_Base_type::construct(__a, std::addressof(*__p),
 130:/usr/include/c++/4.9/ext/alloc_traits.h **** 			      std::forward<_Args>(__args)...);
 131:/usr/include/c++/4.9/ext/alloc_traits.h ****       }
 132:/usr/include/c++/4.9/ext/alloc_traits.h **** 
 133:/usr/include/c++/4.9/ext/alloc_traits.h ****     // overload destroy for non-standard pointer types
 134:/usr/include/c++/4.9/ext/alloc_traits.h ****     template<typename _Ptr>
 135:/usr/include/c++/4.9/ext/alloc_traits.h ****       static typename std::enable_if<__is_custom_pointer<_Ptr>::value>::type
 136:/usr/include/c++/4.9/ext/alloc_traits.h ****       destroy(_Alloc& __a, _Ptr __p)
 137:/usr/include/c++/4.9/ext/alloc_traits.h ****       { _Base_type::destroy(__a, std::addressof(*__p)); }
 138:/usr/include/c++/4.9/ext/alloc_traits.h **** 
 139:/usr/include/c++/4.9/ext/alloc_traits.h ****     static _Alloc _S_select_on_copy(const _Alloc& __a)
 140:/usr/include/c++/4.9/ext/alloc_traits.h ****     { return _Base_type::select_on_container_copy_construction(__a); }
 141:/usr/include/c++/4.9/ext/alloc_traits.h **** 
 142:/usr/include/c++/4.9/ext/alloc_traits.h ****     static void _S_on_swap(_Alloc& __a, _Alloc& __b)
 143:/usr/include/c++/4.9/ext/alloc_traits.h ****     { std::__alloc_on_swap(__a, __b); }
 144:/usr/include/c++/4.9/ext/alloc_traits.h **** 
 145:/usr/include/c++/4.9/ext/alloc_traits.h ****     static constexpr bool _S_propagate_on_copy_assign()
 146:/usr/include/c++/4.9/ext/alloc_traits.h ****     { return _Base_type::propagate_on_container_copy_assignment::value; }
 147:/usr/include/c++/4.9/ext/alloc_traits.h **** 
 148:/usr/include/c++/4.9/ext/alloc_traits.h ****     static constexpr bool _S_propagate_on_move_assign()
 149:/usr/include/c++/4.9/ext/alloc_traits.h ****     { return _Base_type::propagate_on_container_move_assignment::value; }
 150:/usr/include/c++/4.9/ext/alloc_traits.h **** 
 151:/usr/include/c++/4.9/ext/alloc_traits.h ****     static constexpr bool _S_propagate_on_swap()
 152:/usr/include/c++/4.9/ext/alloc_traits.h ****     { return _Base_type::propagate_on_container_swap::value; }
 153:/usr/include/c++/4.9/ext/alloc_traits.h **** 
 154:/usr/include/c++/4.9/ext/alloc_traits.h ****     static constexpr bool _S_always_equal()
 155:/usr/include/c++/4.9/ext/alloc_traits.h ****     { return __allocator_always_compares_equal<_Alloc>::value; }
 156:/usr/include/c++/4.9/ext/alloc_traits.h **** 
 157:/usr/include/c++/4.9/ext/alloc_traits.h ****     static constexpr bool _S_nothrow_move()
 158:/usr/include/c++/4.9/ext/alloc_traits.h ****     { return _S_propagate_on_move_assign() || _S_always_equal(); }
 159:/usr/include/c++/4.9/ext/alloc_traits.h **** 
 160:/usr/include/c++/4.9/ext/alloc_traits.h ****     static constexpr bool _S_nothrow_swap()
 161:/usr/include/c++/4.9/ext/alloc_traits.h ****     {
 162:/usr/include/c++/4.9/ext/alloc_traits.h ****       using std::swap;
 163:/usr/include/c++/4.9/ext/alloc_traits.h ****       return !_S_propagate_on_swap()
 164:/usr/include/c++/4.9/ext/alloc_traits.h ****        	|| noexcept(swap(std::declval<_Alloc&>(), std::declval<_Alloc&>()));
 165:/usr/include/c++/4.9/ext/alloc_traits.h ****     }
 166:/usr/include/c++/4.9/ext/alloc_traits.h **** 
 167:/usr/include/c++/4.9/ext/alloc_traits.h ****     template<typename _Tp>
 168:/usr/include/c++/4.9/ext/alloc_traits.h ****       struct rebind
 169:/usr/include/c++/4.9/ext/alloc_traits.h ****       { typedef typename _Base_type::template rebind_alloc<_Tp> other; };
 170:/usr/include/c++/4.9/ext/alloc_traits.h **** #else
 171:/usr/include/c++/4.9/ext/alloc_traits.h **** 
 172:/usr/include/c++/4.9/ext/alloc_traits.h ****     typedef typename _Alloc::pointer                pointer;
 173:/usr/include/c++/4.9/ext/alloc_traits.h ****     typedef typename _Alloc::const_pointer          const_pointer;
 174:/usr/include/c++/4.9/ext/alloc_traits.h ****     typedef typename _Alloc::value_type             value_type;
 175:/usr/include/c++/4.9/ext/alloc_traits.h ****     typedef typename _Alloc::reference              reference;
 176:/usr/include/c++/4.9/ext/alloc_traits.h ****     typedef typename _Alloc::const_reference        const_reference;
 177:/usr/include/c++/4.9/ext/alloc_traits.h ****     typedef typename _Alloc::size_type              size_type;
 178:/usr/include/c++/4.9/ext/alloc_traits.h ****     typedef typename _Alloc::difference_type        difference_type;
 179:/usr/include/c++/4.9/ext/alloc_traits.h **** 
 180:/usr/include/c++/4.9/ext/alloc_traits.h ****     static pointer
 181:/usr/include/c++/4.9/ext/alloc_traits.h ****     allocate(_Alloc& __a, size_type __n)
 182:/usr/include/c++/4.9/ext/alloc_traits.h ****     { return __a.allocate(__n); }
 183:/usr/include/c++/4.9/ext/alloc_traits.h **** 
 184:/usr/include/c++/4.9/ext/alloc_traits.h ****     static void deallocate(_Alloc& __a, pointer __p, size_type __n)
 8304              		.loc 13 184 0
 8305              		.cfi_startproc
 8306 0000 55       		pushq	%rbp
 8307              		.cfi_def_cfa_offset 16
 8308              		.cfi_offset 6, -16
 8309 0001 4889E5   		movq	%rsp, %rbp
 8310              		.cfi_def_cfa_register 6
 8311 0004 4883EC20 		subq	$32, %rsp
 8312 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8313 000c 488975F0 		movq	%rsi, -16(%rbp)
 8314 0010 488955E8 		movq	%rdx, -24(%rbp)
 185:/usr/include/c++/4.9/ext/alloc_traits.h ****     { __a.deallocate(__p, __n); }
 8315              		.loc 13 185 0
 8316 0014 488B55E8 		movq	-24(%rbp), %rdx
 8317 0018 488B4DF0 		movq	-16(%rbp), %rcx
 8318 001c 488B45F8 		movq	-8(%rbp), %rax
 8319 0020 4889CE   		movq	%rcx, %rsi
 8320 0023 4889C7   		movq	%rax, %rdi
 8321 0026 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m
 8321      00
 8322 002b C9       		leave
 8323              		.cfi_def_cfa 7, 8
 8324 002c C3       		ret
 8325              		.cfi_endproc
 8326              	.LFE1554:
 8328              		.section	.text._ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_,"axG",
 8329              		.weak	_ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_
 8331              	_ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_:
 8332              	.LFB1555:
 100:/usr/include/c++/4.9/bits/stl_construct.h **** 	{
 8333              		.loc 9 100 0
 8334              		.cfi_startproc
 8335 0000 55       		pushq	%rbp
 8336              		.cfi_def_cfa_offset 16
 8337              		.cfi_offset 6, -16
 8338 0001 4889E5   		movq	%rsp, %rbp
 8339              		.cfi_def_cfa_register 6
 8340 0004 4883EC10 		subq	$16, %rsp
 8341 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8342 000c 488975F0 		movq	%rsi, -16(%rbp)
 102:/usr/include/c++/4.9/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 8343              		.loc 9 102 0
 8344 0010 EB19     		jmp	.L483
 8345              	.L484:
 103:/usr/include/c++/4.9/bits/stl_construct.h **** 	}
 8346              		.loc 9 103 0 discriminator 2
 8347 0012 488B45F8 		movq	-8(%rbp), %rax
 8348 0016 4889C7   		movq	%rax, %rdi
 8349 0019 E8000000 		call	_ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_
 8349      00
 8350 001e 4889C7   		movq	%rax, %rdi
 8351 0021 E8000000 		call	_ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_
 8351      00
 102:/usr/include/c++/4.9/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 8352              		.loc 9 102 0 discriminator 2
 8353 0026 488345F8 		addq	$56, -8(%rbp)
 8353      38
 8354              	.L483:
 102:/usr/include/c++/4.9/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 8355              		.loc 9 102 0 is_stmt 0 discriminator 1
 8356 002b 488B45F8 		movq	-8(%rbp), %rax
 8357 002f 483B45F0 		cmpq	-16(%rbp), %rax
 8358 0033 75DD     		jne	.L484
 104:/usr/include/c++/4.9/bits/stl_construct.h ****     };
 8359              		.loc 9 104 0 is_stmt 1
 8360 0035 C9       		leave
 8361              		.cfi_def_cfa 7, 8
 8362 0036 C3       		ret
 8363              		.cfi_endproc
 8364              	.LFE1555:
 8366              		.section	.text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC2Ev,"axG",@progbits,_
 8367              		.align 2
 8368              		.weak	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC2Ev
 8370              	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC2Ev:
 8371              	.LFB1557:
  79:/usr/include/c++/4.9/ext/new_allocator.h **** 
 8372              		.loc 12 79 0
 8373              		.cfi_startproc
 8374 0000 55       		pushq	%rbp
 8375              		.cfi_def_cfa_offset 16
 8376              		.cfi_offset 6, -16
 8377 0001 4889E5   		movq	%rsp, %rbp
 8378              		.cfi_def_cfa_register 6
 8379 0004 48897DF8 		movq	%rdi, -8(%rbp)
  79:/usr/include/c++/4.9/ext/new_allocator.h **** 
 8380              		.loc 12 79 0
 8381 0008 5D       		popq	%rbp
 8382              		.cfi_def_cfa 7, 8
 8383 0009 C3       		ret
 8384              		.cfi_endproc
 8385              	.LFE1557:
 8387              		.weak	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC1Ev
 8388              		.set	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC1Ev,_ZN9__gnu_cxx13new_allocato
 8389              		.section	.text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m,"ax
 8390              		.align 2
 8391              		.weak	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m
 8393              	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m:
 8394              	.LFB1559:
  87:/usr/include/c++/4.9/ext/new_allocator.h **** 
  88:/usr/include/c++/4.9/ext/new_allocator.h ****       pointer
  89:/usr/include/c++/4.9/ext/new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  90:/usr/include/c++/4.9/ext/new_allocator.h ****       { return std::__addressof(__x); }
  91:/usr/include/c++/4.9/ext/new_allocator.h **** 
  92:/usr/include/c++/4.9/ext/new_allocator.h ****       const_pointer
  93:/usr/include/c++/4.9/ext/new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  94:/usr/include/c++/4.9/ext/new_allocator.h ****       { return std::__addressof(__x); }
  95:/usr/include/c++/4.9/ext/new_allocator.h **** 
  96:/usr/include/c++/4.9/ext/new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
  97:/usr/include/c++/4.9/ext/new_allocator.h ****       // about what the return value is when __n == 0.
  98:/usr/include/c++/4.9/ext/new_allocator.h ****       pointer
  99:/usr/include/c++/4.9/ext/new_allocator.h ****       allocate(size_type __n, const void* = 0)
 100:/usr/include/c++/4.9/ext/new_allocator.h ****       { 
 101:/usr/include/c++/4.9/ext/new_allocator.h **** 	if (__n > this->max_size())
 102:/usr/include/c++/4.9/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 103:/usr/include/c++/4.9/ext/new_allocator.h **** 
 104:/usr/include/c++/4.9/ext/new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 105:/usr/include/c++/4.9/ext/new_allocator.h ****       }
 106:/usr/include/c++/4.9/ext/new_allocator.h **** 
 107:/usr/include/c++/4.9/ext/new_allocator.h ****       // __p is not permitted to be a null pointer.
 108:/usr/include/c++/4.9/ext/new_allocator.h ****       void
 109:/usr/include/c++/4.9/ext/new_allocator.h ****       deallocate(pointer __p, size_type)
 8395              		.loc 12 109 0
 8396              		.cfi_startproc
 8397 0000 55       		pushq	%rbp
 8398              		.cfi_def_cfa_offset 16
 8399              		.cfi_offset 6, -16
 8400 0001 4889E5   		movq	%rsp, %rbp
 8401              		.cfi_def_cfa_register 6
 8402 0004 4883EC20 		subq	$32, %rsp
 8403 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8404 000c 488975F0 		movq	%rsi, -16(%rbp)
 8405 0010 488955E8 		movq	%rdx, -24(%rbp)
 110:/usr/include/c++/4.9/ext/new_allocator.h ****       { ::operator delete(__p); }
 8406              		.loc 12 110 0
 8407 0014 488B45F0 		movq	-16(%rbp), %rax
 8408 0018 4889C7   		movq	%rax, %rdi
 8409 001b E8000000 		call	_ZdlPv
 8409      00
 8410 0020 C9       		leave
 8411              		.cfi_def_cfa 7, 8
 8412 0021 C3       		ret
 8413              		.cfi_endproc
 8414              	.LFE1559:
 8416              		.section	.text._ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_,"axG",@progbits,_ZSt11__a
 8417              		.weak	_ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_
 8419              	_ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_:
 8420              	.LFB1560:
 8421              		.file 14 "/usr/include/c++/4.9/bits/move.h"
   1:/usr/include/c++/4.9/bits/move.h **** // Move, forward and identity for C++0x + swap -*- C++ -*-
   2:/usr/include/c++/4.9/bits/move.h **** 
   3:/usr/include/c++/4.9/bits/move.h **** // Copyright (C) 2007-2014 Free Software Foundation, Inc.
   4:/usr/include/c++/4.9/bits/move.h **** //
   5:/usr/include/c++/4.9/bits/move.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/4.9/bits/move.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/4.9/bits/move.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/4.9/bits/move.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/4.9/bits/move.h **** // any later version.
  10:/usr/include/c++/4.9/bits/move.h **** 
  11:/usr/include/c++/4.9/bits/move.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/4.9/bits/move.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/4.9/bits/move.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/4.9/bits/move.h **** // GNU General Public License for more details.
  15:/usr/include/c++/4.9/bits/move.h **** 
  16:/usr/include/c++/4.9/bits/move.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/4.9/bits/move.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/4.9/bits/move.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/4.9/bits/move.h **** 
  20:/usr/include/c++/4.9/bits/move.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/4.9/bits/move.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/4.9/bits/move.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/4.9/bits/move.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/4.9/bits/move.h **** 
  25:/usr/include/c++/4.9/bits/move.h **** /** @file bits/move.h
  26:/usr/include/c++/4.9/bits/move.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/4.9/bits/move.h ****  *  Do not attempt to use it directly. @headername{utility}
  28:/usr/include/c++/4.9/bits/move.h ****  */
  29:/usr/include/c++/4.9/bits/move.h **** 
  30:/usr/include/c++/4.9/bits/move.h **** #ifndef _MOVE_H
  31:/usr/include/c++/4.9/bits/move.h **** #define _MOVE_H 1
  32:/usr/include/c++/4.9/bits/move.h **** 
  33:/usr/include/c++/4.9/bits/move.h **** #include <bits/c++config.h>
  34:/usr/include/c++/4.9/bits/move.h **** #include <bits/concept_check.h>
  35:/usr/include/c++/4.9/bits/move.h **** 
  36:/usr/include/c++/4.9/bits/move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  37:/usr/include/c++/4.9/bits/move.h **** {
  38:/usr/include/c++/4.9/bits/move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  39:/usr/include/c++/4.9/bits/move.h **** 
  40:/usr/include/c++/4.9/bits/move.h ****   // Used, in C++03 mode too, by allocators, etc.
  41:/usr/include/c++/4.9/bits/move.h ****   /**
  42:/usr/include/c++/4.9/bits/move.h ****    *  @brief Same as C++11 std::addressof
  43:/usr/include/c++/4.9/bits/move.h ****    *  @ingroup utilities
  44:/usr/include/c++/4.9/bits/move.h ****    */
  45:/usr/include/c++/4.9/bits/move.h ****   template<typename _Tp>
  46:/usr/include/c++/4.9/bits/move.h ****     inline _Tp*
  47:/usr/include/c++/4.9/bits/move.h ****     __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8422              		.loc 14 47 0
 8423              		.cfi_startproc
 8424 0000 55       		pushq	%rbp
 8425              		.cfi_def_cfa_offset 16
 8426              		.cfi_offset 6, -16
 8427 0001 4889E5   		movq	%rsp, %rbp
 8428              		.cfi_def_cfa_register 6
 8429 0004 48897DF8 		movq	%rdi, -8(%rbp)
  48:/usr/include/c++/4.9/bits/move.h ****     {
  49:/usr/include/c++/4.9/bits/move.h ****       return reinterpret_cast<_Tp*>
  50:/usr/include/c++/4.9/bits/move.h **** 	(&const_cast<char&>(reinterpret_cast<const volatile char&>(__r)));
 8430              		.loc 14 50 0
 8431 0008 488B45F8 		movq	-8(%rbp), %rax
  51:/usr/include/c++/4.9/bits/move.h ****     }
 8432              		.loc 14 51 0
 8433 000c 5D       		popq	%rbp
 8434              		.cfi_def_cfa 7, 8
 8435 000d C3       		ret
 8436              		.cfi_endproc
 8437              	.LFE1560:
 8439              		.section	.text._ZN8UnitTest18DeferredTestResultD2Ev,"axG",@progbits,_ZN8UnitTest18DeferredTestResu
 8440              		.align 2
 8441              		.weak	_ZN8UnitTest18DeferredTestResultD2Ev
 8443              	_ZN8UnitTest18DeferredTestResultD2Ev:
 8444              	.LFB1563:
 8445              		.file 15 "../DeferredTestResult.h"
   1:../DeferredTestResult.h **** #ifndef UNITTEST_DEFERREDTESTRESULT_H
   2:../DeferredTestResult.h **** #define UNITTEST_DEFERREDTESTRESULT_H
   3:../DeferredTestResult.h **** 
   4:../DeferredTestResult.h **** #include <string>
   5:../DeferredTestResult.h **** #include <vector>
   6:../DeferredTestResult.h **** 
   7:../DeferredTestResult.h **** namespace UnitTest
   8:../DeferredTestResult.h **** {
   9:../DeferredTestResult.h **** 
  10:../DeferredTestResult.h **** struct DeferredTestResult
 8446              		.loc 15 10 0
 8447              		.cfi_startproc
 8448              		.cfi_personality 0x3,__gxx_personality_v0
 8449              		.cfi_lsda 0x3,.LLSDA1563
 8450 0000 55       		pushq	%rbp
 8451              		.cfi_def_cfa_offset 16
 8452              		.cfi_offset 6, -16
 8453 0001 4889E5   		movq	%rsp, %rbp
 8454              		.cfi_def_cfa_register 6
 8455 0004 53       		pushq	%rbx
 8456 0005 4883EC18 		subq	$24, %rsp
 8457              		.cfi_offset 3, -24
 8458 0009 48897DE8 		movq	%rdi, -24(%rbp)
 8459              	.LBB213:
 8460              		.loc 15 10 0
 8461 000d 488B45E8 		movq	-24(%rbp), %rax
 8462 0011 4883C018 		addq	$24, %rax
 8463 0015 4889C7   		movq	%rax, %rdi
 8464              	.LEHB233:
 8465 0018 E8000000 		call	_ZNSt6vectorISt4pairIiSsESaIS1_EED1Ev
 8465      00
 8466              	.LEHE233:
 8467              		.loc 15 10 0 is_stmt 0 discriminator 2
 8468 001d 488B45E8 		movq	-24(%rbp), %rax
 8469 0021 4883C010 		addq	$16, %rax
 8470 0025 4889C7   		movq	%rax, %rdi
 8471              	.LEHB234:
 8472 0028 E8000000 		call	_ZNSsD1Ev
 8472      00
 8473              	.LEHE234:
 8474              		.loc 15 10 0 discriminator 4
 8475 002d 488B45E8 		movq	-24(%rbp), %rax
 8476 0031 4883C008 		addq	$8, %rax
 8477 0035 4889C7   		movq	%rax, %rdi
 8478              	.LEHB235:
 8479 0038 E8000000 		call	_ZNSsD1Ev
 8479      00
 8480              	.LEHE235:
 8481              		.loc 15 10 0 discriminator 6
 8482 003d 488B45E8 		movq	-24(%rbp), %rax
 8483 0041 4889C7   		movq	%rax, %rdi
 8484              	.LEHB236:
 8485 0044 E8000000 		call	_ZNSsD1Ev
 8485      00
 8486              	.LEHE236:
 8487 0049 EB44     		jmp	.L497
 8488              	.L494:
 8489 004b 4889C3   		movq	%rax, %rbx
 8490              		.loc 15 10 0
 8491 004e 488B45E8 		movq	-24(%rbp), %rax
 8492 0052 4883C010 		addq	$16, %rax
 8493 0056 4889C7   		movq	%rax, %rdi
 8494 0059 E8000000 		call	_ZNSsD1Ev
 8494      00
 8495 005e EB03     		jmp	.L492
 8496              	.L495:
 8497 0060 4889C3   		movq	%rax, %rbx
 8498              	.L492:
 8499              		.loc 15 10 0 discriminator 3
 8500 0063 488B45E8 		movq	-24(%rbp), %rax
 8501 0067 4883C008 		addq	$8, %rax
 8502 006b 4889C7   		movq	%rax, %rdi
 8503 006e E8000000 		call	_ZNSsD1Ev
 8503      00
 8504 0073 EB03     		jmp	.L493
 8505              	.L496:
 8506 0075 4889C3   		movq	%rax, %rbx
 8507              	.L493:
 8508              		.loc 15 10 0 discriminator 5
 8509 0078 488B45E8 		movq	-24(%rbp), %rax
 8510 007c 4889C7   		movq	%rax, %rdi
 8511 007f E8000000 		call	_ZNSsD1Ev
 8511      00
 8512 0084 4889D8   		movq	%rbx, %rax
 8513 0087 4889C7   		movq	%rax, %rdi
 8514              	.LEHB237:
 8515 008a E8000000 		call	_Unwind_Resume
 8515      00
 8516              	.LEHE237:
 8517              	.L497:
 8518              	.LBE213:
 8519              		.loc 15 10 0
 8520 008f 4883C418 		addq	$24, %rsp
 8521 0093 5B       		popq	%rbx
 8522 0094 5D       		popq	%rbp
 8523              		.cfi_def_cfa 7, 8
 8524 0095 C3       		ret
 8525              		.cfi_endproc
 8526              	.LFE1563:
 8527              		.section	.gcc_except_table
 8528              	.LLSDA1563:
 8529 064c FF       		.byte	0xff
 8530 064d FF       		.byte	0xff
 8531 064e 01       		.byte	0x1
 8532 064f 15       		.uleb128 .LLSDACSE1563-.LLSDACSB1563
 8533              	.LLSDACSB1563:
 8534 0650 18       		.uleb128 .LEHB233-.LFB1563
 8535 0651 05       		.uleb128 .LEHE233-.LEHB233
 8536 0652 4B       		.uleb128 .L494-.LFB1563
 8537 0653 00       		.uleb128 0
 8538 0654 28       		.uleb128 .LEHB234-.LFB1563
 8539 0655 05       		.uleb128 .LEHE234-.LEHB234
 8540 0656 60       		.uleb128 .L495-.LFB1563
 8541 0657 00       		.uleb128 0
 8542 0658 38       		.uleb128 .LEHB235-.LFB1563
 8543 0659 05       		.uleb128 .LEHE235-.LEHB235
 8544 065a 75       		.uleb128 .L496-.LFB1563
 8545 065b 00       		.uleb128 0
 8546 065c 44       		.uleb128 .LEHB236-.LFB1563
 8547 065d 05       		.uleb128 .LEHE236-.LEHB236
 8548 065e 00       		.uleb128 0
 8549 065f 00       		.uleb128 0
 8550 0660 8A01     		.uleb128 .LEHB237-.LFB1563
 8551 0662 05       		.uleb128 .LEHE237-.LEHB237
 8552 0663 00       		.uleb128 0
 8553 0664 00       		.uleb128 0
 8554              	.LLSDACSE1563:
 8555              		.section	.text._ZN8UnitTest18DeferredTestResultD2Ev,"axG",@progbits,_ZN8UnitTest18DeferredTestResu
 8557              		.weak	_ZN8UnitTest18DeferredTestResultD1Ev
 8558              		.set	_ZN8UnitTest18DeferredTestResultD1Ev,_ZN8UnitTest18DeferredTestResultD2Ev
 8559              		.section	.text._ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_,"axG",@progbits,_ZSt8_DestroyIN8
 8560              		.weak	_ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_
 8562              	_ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_:
 8563              	.LFB1561:
  92:/usr/include/c++/4.9/bits/stl_construct.h ****     { __pointer->~_Tp(); }
 8564              		.loc 9 92 0 is_stmt 1
 8565              		.cfi_startproc
 8566 0000 55       		pushq	%rbp
 8567              		.cfi_def_cfa_offset 16
 8568              		.cfi_offset 6, -16
 8569 0001 4889E5   		movq	%rsp, %rbp
 8570              		.cfi_def_cfa_register 6
 8571 0004 4883EC10 		subq	$16, %rsp
 8572 0008 48897DF8 		movq	%rdi, -8(%rbp)
  93:/usr/include/c++/4.9/bits/stl_construct.h **** 
 8573              		.loc 9 93 0
 8574 000c 488B45F8 		movq	-8(%rbp), %rax
 8575 0010 4889C7   		movq	%rax, %rdi
 8576 0013 E8000000 		call	_ZN8UnitTest18DeferredTestResultD1Ev
 8576      00
 8577 0018 C9       		leave
 8578              		.cfi_def_cfa 7, 8
 8579 0019 C3       		ret
 8580              		.cfi_endproc
 8581              	.LFE1561:
 8583              		.section	.text._ZNSt6vectorISt4pairIiSsESaIS1_EED2Ev,"axG",@progbits,_ZNSt6vectorISt4pairIiSsESaIS
 8584              		.align 2
 8585              		.weak	_ZNSt6vectorISt4pairIiSsESaIS1_EED2Ev
 8587              	_ZNSt6vectorISt4pairIiSsESaIS1_EED2Ev:
 8588              	.LFB1566:
 423:/usr/include/c++/4.9/bits/stl_vector.h ****       { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 8589              		.loc 6 423 0
 8590              		.cfi_startproc
 8591              		.cfi_personality 0x3,__gxx_personality_v0
 8592              		.cfi_lsda 0x3,.LLSDA1566
 8593 0000 55       		pushq	%rbp
 8594              		.cfi_def_cfa_offset 16
 8595              		.cfi_offset 6, -16
 8596 0001 4889E5   		movq	%rsp, %rbp
 8597              		.cfi_def_cfa_register 6
 8598 0004 53       		pushq	%rbx
 8599 0005 4883EC18 		subq	$24, %rsp
 8600              		.cfi_offset 3, -24
 8601 0009 48897DE8 		movq	%rdi, -24(%rbp)
 8602              	.LBB214:
 425:/usr/include/c++/4.9/bits/stl_vector.h **** 
 8603              		.loc 6 425 0
 8604 000d 488B45E8 		movq	-24(%rbp), %rax
 8605 0011 4889C7   		movq	%rax, %rdi
 8606 0014 E8000000 		call	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE19_M_get_Tp_allocatorEv
 8606      00
 8607 0019 4889C2   		movq	%rax, %rdx
 8608 001c 488B45E8 		movq	-24(%rbp), %rax
 8609 0020 488B4808 		movq	8(%rax), %rcx
 8610 0024 488B45E8 		movq	-24(%rbp), %rax
 8611 0028 488B00   		movq	(%rax), %rax
 424:/usr/include/c++/4.9/bits/stl_vector.h **** 		      _M_get_Tp_allocator()); }
 8612              		.loc 6 424 0
 8613 002b 4889CE   		movq	%rcx, %rsi
 8614 002e 4889C7   		movq	%rax, %rdi
 8615              	.LEHB238:
 8616 0031 E8000000 		call	_ZSt8_DestroyIPSt4pairIiSsES1_EvT_S3_RSaIT0_E
 8616      00
 8617              	.LEHE238:
 425:/usr/include/c++/4.9/bits/stl_vector.h **** 
 8618              		.loc 6 425 0
 8619 0036 488B45E8 		movq	-24(%rbp), %rax
 8620 003a 4889C7   		movq	%rax, %rdi
 8621              	.LEHB239:
 8622 003d E8000000 		call	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EED2Ev
 8622      00
 8623              	.LEHE239:
 8624 0042 EB1A     		jmp	.L503
 8625              	.L502:
 8626 0044 4889C3   		movq	%rax, %rbx
 8627 0047 488B45E8 		movq	-24(%rbp), %rax
 8628 004b 4889C7   		movq	%rax, %rdi
 8629 004e E8000000 		call	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EED2Ev
 8629      00
 8630 0053 4889D8   		movq	%rbx, %rax
 8631 0056 4889C7   		movq	%rax, %rdi
 8632              	.LEHB240:
 8633 0059 E8000000 		call	_Unwind_Resume
 8633      00
 8634              	.LEHE240:
 8635              	.L503:
 8636              	.LBE214:
 8637 005e 4883C418 		addq	$24, %rsp
 8638 0062 5B       		popq	%rbx
 8639 0063 5D       		popq	%rbp
 8640              		.cfi_def_cfa 7, 8
 8641 0064 C3       		ret
 8642              		.cfi_endproc
 8643              	.LFE1566:
 8644              		.section	.gcc_except_table
 8645              	.LLSDA1566:
 8646 0665 FF       		.byte	0xff
 8647 0666 FF       		.byte	0xff
 8648 0667 01       		.byte	0x1
 8649 0668 0C       		.uleb128 .LLSDACSE1566-.LLSDACSB1566
 8650              	.LLSDACSB1566:
 8651 0669 31       		.uleb128 .LEHB238-.LFB1566
 8652 066a 05       		.uleb128 .LEHE238-.LEHB238
 8653 066b 44       		.uleb128 .L502-.LFB1566
 8654 066c 00       		.uleb128 0
 8655 066d 3D       		.uleb128 .LEHB239-.LFB1566
 8656 066e 05       		.uleb128 .LEHE239-.LEHB239
 8657 066f 00       		.uleb128 0
 8658 0670 00       		.uleb128 0
 8659 0671 59       		.uleb128 .LEHB240-.LFB1566
 8660 0672 05       		.uleb128 .LEHE240-.LEHB240
 8661 0673 00       		.uleb128 0
 8662 0674 00       		.uleb128 0
 8663              	.LLSDACSE1566:
 8664              		.section	.text._ZNSt6vectorISt4pairIiSsESaIS1_EED2Ev,"axG",@progbits,_ZNSt6vectorISt4pairIiSsESaIS
 8666              		.weak	_ZNSt6vectorISt4pairIiSsESaIS1_EED1Ev
 8667              		.set	_ZNSt6vectorISt4pairIiSsESaIS1_EED1Ev,_ZNSt6vectorISt4pairIiSsESaIS1_EED2Ev
 8668              		.section	.text._ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE12_Vector_implD2Ev,"axG",@progbits,_ZNSt12_
 8669              		.align 2
 8670              		.weak	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE12_Vector_implD2Ev
 8672              	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE12_Vector_implD2Ev:
 8673              	.LFB1570:
  79:/usr/include/c++/4.9/bits/stl_vector.h ****       : public _Tp_alloc_type
 8674              		.loc 6 79 0
 8675              		.cfi_startproc
 8676 0000 55       		pushq	%rbp
 8677              		.cfi_def_cfa_offset 16
 8678              		.cfi_offset 6, -16
 8679 0001 4889E5   		movq	%rsp, %rbp
 8680              		.cfi_def_cfa_register 6
 8681 0004 4883EC10 		subq	$16, %rsp
 8682 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8683              	.LBB215:
  79:/usr/include/c++/4.9/bits/stl_vector.h ****       : public _Tp_alloc_type
 8684              		.loc 6 79 0
 8685 000c 488B45F8 		movq	-8(%rbp), %rax
 8686 0010 4889C7   		movq	%rax, %rdi
 8687 0013 E8000000 		call	_ZNSaISt4pairIiSsEED2Ev
 8687      00
 8688              	.LBE215:
 8689 0018 C9       		leave
 8690              		.cfi_def_cfa 7, 8
 8691 0019 C3       		ret
 8692              		.cfi_endproc
 8693              	.LFE1570:
 8695              		.weak	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE12_Vector_implD1Ev
 8696              		.set	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE12_Vector_implD1Ev,_ZNSt12_Vector_baseISt4pairIiSsESa
 8697              		.section	.text._ZNSt12_Vector_baseISt4pairIiSsESaIS1_EED2Ev,"axG",@progbits,_ZNSt12_Vector_baseISt
 8698              		.align 2
 8699              		.weak	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EED2Ev
 8701              	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EED2Ev:
 8702              	.LFB1572:
 159:/usr/include/c++/4.9/bits/stl_vector.h ****       { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 8703              		.loc 6 159 0
 8704              		.cfi_startproc
 8705              		.cfi_personality 0x3,__gxx_personality_v0
 8706              		.cfi_lsda 0x3,.LLSDA1572
 8707 0000 55       		pushq	%rbp
 8708              		.cfi_def_cfa_offset 16
 8709              		.cfi_offset 6, -16
 8710 0001 4889E5   		movq	%rsp, %rbp
 8711              		.cfi_def_cfa_register 6
 8712 0004 53       		pushq	%rbx
 8713 0005 4883EC18 		subq	$24, %rsp
 8714              		.cfi_offset 3, -24
 8715 0009 48897DE8 		movq	%rdi, -24(%rbp)
 8716              	.LBB216:
 161:/usr/include/c++/4.9/bits/stl_vector.h **** 
 8717              		.loc 6 161 0
 8718 000d 488B45E8 		movq	-24(%rbp), %rax
 8719 0011 488B4010 		movq	16(%rax), %rax
 8720 0015 4889C2   		movq	%rax, %rdx
 8721 0018 488B45E8 		movq	-24(%rbp), %rax
 8722 001c 488B00   		movq	(%rax), %rax
 8723 001f 4829C2   		subq	%rax, %rdx
 8724 0022 4889D0   		movq	%rdx, %rax
 8725 0025 48C1F804 		sarq	$4, %rax
 8726 0029 4889C2   		movq	%rax, %rdx
 8727 002c 488B45E8 		movq	-24(%rbp), %rax
 8728 0030 488B08   		movq	(%rax), %rcx
 160:/usr/include/c++/4.9/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 8729              		.loc 6 160 0
 8730 0033 488B45E8 		movq	-24(%rbp), %rax
 8731 0037 4889CE   		movq	%rcx, %rsi
 8732 003a 4889C7   		movq	%rax, %rdi
 8733              	.LEHB241:
 8734 003d E8000000 		call	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE13_M_deallocateEPS1_m
 8734      00
 8735              	.LEHE241:
 161:/usr/include/c++/4.9/bits/stl_vector.h **** 
 8736              		.loc 6 161 0
 8737 0042 488B45E8 		movq	-24(%rbp), %rax
 8738 0046 4889C7   		movq	%rax, %rdi
 8739 0049 E8000000 		call	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE12_Vector_implD1Ev
 8739      00
 8740 004e EB1A     		jmp	.L510
 8741              	.L509:
 8742 0050 4889C3   		movq	%rax, %rbx
 8743 0053 488B45E8 		movq	-24(%rbp), %rax
 8744 0057 4889C7   		movq	%rax, %rdi
 8745 005a E8000000 		call	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE12_Vector_implD1Ev
 8745      00
 8746 005f 4889D8   		movq	%rbx, %rax
 8747 0062 4889C7   		movq	%rax, %rdi
 8748              	.LEHB242:
 8749 0065 E8000000 		call	_Unwind_Resume
 8749      00
 8750              	.LEHE242:
 8751              	.L510:
 8752              	.LBE216:
 8753 006a 4883C418 		addq	$24, %rsp
 8754 006e 5B       		popq	%rbx
 8755 006f 5D       		popq	%rbp
 8756              		.cfi_def_cfa 7, 8
 8757 0070 C3       		ret
 8758              		.cfi_endproc
 8759              	.LFE1572:
 8760              		.section	.gcc_except_table
 8761              	.LLSDA1572:
 8762 0675 FF       		.byte	0xff
 8763 0676 FF       		.byte	0xff
 8764 0677 01       		.byte	0x1
 8765 0678 08       		.uleb128 .LLSDACSE1572-.LLSDACSB1572
 8766              	.LLSDACSB1572:
 8767 0679 3D       		.uleb128 .LEHB241-.LFB1572
 8768 067a 05       		.uleb128 .LEHE241-.LEHB241
 8769 067b 50       		.uleb128 .L509-.LFB1572
 8770 067c 00       		.uleb128 0
 8771 067d 65       		.uleb128 .LEHB242-.LFB1572
 8772 067e 05       		.uleb128 .LEHE242-.LEHB242
 8773 067f 00       		.uleb128 0
 8774 0680 00       		.uleb128 0
 8775              	.LLSDACSE1572:
 8776              		.section	.text._ZNSt12_Vector_baseISt4pairIiSsESaIS1_EED2Ev,"axG",@progbits,_ZNSt12_Vector_baseISt
 8778              		.weak	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EED1Ev
 8779              		.set	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EED1Ev,_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EED2Ev
 8780              		.section	.text._ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZN
 8781              		.align 2
 8782              		.weak	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE19_M_get_Tp_allocatorEv
 8784              	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE19_M_get_Tp_allocatorEv:
 8785              	.LFB1574:
 113:/usr/include/c++/4.9/bits/stl_vector.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 8786              		.loc 6 113 0
 8787              		.cfi_startproc
 8788 0000 55       		pushq	%rbp
 8789              		.cfi_def_cfa_offset 16
 8790              		.cfi_offset 6, -16
 8791 0001 4889E5   		movq	%rsp, %rbp
 8792              		.cfi_def_cfa_register 6
 8793 0004 48897DF8 		movq	%rdi, -8(%rbp)
 114:/usr/include/c++/4.9/bits/stl_vector.h **** 
 8794              		.loc 6 114 0
 8795 0008 488B45F8 		movq	-8(%rbp), %rax
 8796 000c 5D       		popq	%rbp
 8797              		.cfi_def_cfa 7, 8
 8798 000d C3       		ret
 8799              		.cfi_endproc
 8800              	.LFE1574:
 8802              		.section	.text._ZSt8_DestroyIPSt4pairIiSsES1_EvT_S3_RSaIT0_E,"axG",@progbits,_ZSt8_DestroyIPSt4pai
 8803              		.weak	_ZSt8_DestroyIPSt4pairIiSsES1_EvT_S3_RSaIT0_E
 8805              	_ZSt8_DestroyIPSt4pairIiSsES1_EvT_S3_RSaIT0_E:
 8806              	.LFB1575:
 148:/usr/include/c++/4.9/bits/stl_construct.h **** 	     allocator<_Tp>&)
 8807              		.loc 9 148 0
 8808              		.cfi_startproc
 8809 0000 55       		pushq	%rbp
 8810              		.cfi_def_cfa_offset 16
 8811              		.cfi_offset 6, -16
 8812 0001 4889E5   		movq	%rsp, %rbp
 8813              		.cfi_def_cfa_register 6
 8814 0004 4883EC20 		subq	$32, %rsp
 8815 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8816 000c 488975F0 		movq	%rsi, -16(%rbp)
 8817 0010 488955E8 		movq	%rdx, -24(%rbp)
 151:/usr/include/c++/4.9/bits/stl_construct.h ****     }
 8818              		.loc 9 151 0
 8819 0014 488B55F0 		movq	-16(%rbp), %rdx
 8820 0018 488B45F8 		movq	-8(%rbp), %rax
 8821 001c 4889D6   		movq	%rdx, %rsi
 8822 001f 4889C7   		movq	%rax, %rdi
 8823 0022 E8000000 		call	_ZSt8_DestroyIPSt4pairIiSsEEvT_S3_
 8823      00
 8824              		.loc 9 152 0
 8825 0027 C9       		leave
 8826              		.cfi_def_cfa 7, 8
 8827 0028 C3       		ret
 8828              		.cfi_endproc
 8829              	.LFE1575:
 8831              		.section	.text._ZNSaISt4pairIiSsEED2Ev,"axG",@progbits,_ZNSaISt4pairIiSsEED5Ev,comdat
 8832              		.align 2
 8833              		.weak	_ZNSaISt4pairIiSsEED2Ev
 8835              	_ZNSaISt4pairIiSsEED2Ev:
 8836              	.LFB1577:
 8837              		.loc 11 121 0
 8838              		.cfi_startproc
 8839 0000 55       		pushq	%rbp
 8840              		.cfi_def_cfa_offset 16
 8841              		.cfi_offset 6, -16
 8842 0001 4889E5   		movq	%rsp, %rbp
 8843              		.cfi_def_cfa_register 6
 8844 0004 4883EC10 		subq	$16, %rsp
 8845 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8846              	.LBB217:
 8847              		.loc 11 121 0
 8848 000c 488B45F8 		movq	-8(%rbp), %rax
 8849 0010 4889C7   		movq	%rax, %rdi
 8850 0013 E8000000 		call	_ZN9__gnu_cxx13new_allocatorISt4pairIiSsEED2Ev
 8850      00
 8851              	.LBE217:
 8852 0018 C9       		leave
 8853              		.cfi_def_cfa 7, 8
 8854 0019 C3       		ret
 8855              		.cfi_endproc
 8856              	.LFE1577:
 8858              		.weak	_ZNSaISt4pairIiSsEED1Ev
 8859              		.set	_ZNSaISt4pairIiSsEED1Ev,_ZNSaISt4pairIiSsEED2Ev
 8860              		.section	.text._ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE13_M_deallocateEPS1_m,"axG",@progbits,_ZNSt
 8861              		.align 2
 8862              		.weak	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE13_M_deallocateEPS1_m
 8864              	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE13_M_deallocateEPS1_m:
 8865              	.LFB1579:
 174:/usr/include/c++/4.9/bits/stl_vector.h ****       {
 8866              		.loc 6 174 0
 8867              		.cfi_startproc
 8868 0000 55       		pushq	%rbp
 8869              		.cfi_def_cfa_offset 16
 8870              		.cfi_offset 6, -16
 8871 0001 4889E5   		movq	%rsp, %rbp
 8872              		.cfi_def_cfa_register 6
 8873 0004 4883EC20 		subq	$32, %rsp
 8874 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8875 000c 488975F0 		movq	%rsi, -16(%rbp)
 8876 0010 488955E8 		movq	%rdx, -24(%rbp)
 8877              	.LBB218:
 177:/usr/include/c++/4.9/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 8878              		.loc 6 177 0
 8879 0014 48837DF0 		cmpq	$0, -16(%rbp)
 8879      00
 8880 0019 7417     		je	.L516
 178:/usr/include/c++/4.9/bits/stl_vector.h ****       }
 8881              		.loc 6 178 0
 8882 001b 488B45F8 		movq	-8(%rbp), %rax
 8883 001f 488B55E8 		movq	-24(%rbp), %rdx
 8884 0023 488B4DF0 		movq	-16(%rbp), %rcx
 8885 0027 4889CE   		movq	%rcx, %rsi
 8886 002a 4889C7   		movq	%rax, %rdi
 8887 002d E8000000 		call	_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiSsEEE10deallocateERS3_PS2_m
 8887      00
 8888              	.L516:
 8889              	.LBE218:
 179:/usr/include/c++/4.9/bits/stl_vector.h **** 
 8890              		.loc 6 179 0
 8891 0032 C9       		leave
 8892              		.cfi_def_cfa 7, 8
 8893 0033 C3       		ret
 8894              		.cfi_endproc
 8895              	.LFE1579:
 8897              		.section	.text._ZSt8_DestroyIPSt4pairIiSsEEvT_S3_,"axG",@progbits,_ZSt8_DestroyIPSt4pairIiSsEEvT_S
 8898              		.weak	_ZSt8_DestroyIPSt4pairIiSsEEvT_S3_
 8900              	_ZSt8_DestroyIPSt4pairIiSsEEvT_S3_:
 8901              	.LFB1580:
 122:/usr/include/c++/4.9/bits/stl_construct.h ****     {
 8902              		.loc 9 122 0
 8903              		.cfi_startproc
 8904 0000 55       		pushq	%rbp
 8905              		.cfi_def_cfa_offset 16
 8906              		.cfi_offset 6, -16
 8907 0001 4889E5   		movq	%rsp, %rbp
 8908              		.cfi_def_cfa_register 6
 8909 0004 4883EC10 		subq	$16, %rsp
 8910 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8911 000c 488975F0 		movq	%rsi, -16(%rbp)
 8912              	.LBB219:
 126:/usr/include/c++/4.9/bits/stl_construct.h **** 	__destroy(__first, __last);
 8913              		.loc 9 126 0
 8914 0010 488B55F0 		movq	-16(%rbp), %rdx
 8915 0014 488B45F8 		movq	-8(%rbp), %rax
 8916 0018 4889D6   		movq	%rdx, %rsi
 8917 001b 4889C7   		movq	%rax, %rdi
 8918 001e E8000000 		call	_ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiSsEEEvT_S5_
 8918      00
 8919              	.LBE219:
 128:/usr/include/c++/4.9/bits/stl_construct.h **** 
 8920              		.loc 9 128 0
 8921 0023 C9       		leave
 8922              		.cfi_def_cfa 7, 8
 8923 0024 C3       		ret
 8924              		.cfi_endproc
 8925              	.LFE1580:
 8927              		.section	.text._ZN9__gnu_cxx13new_allocatorISt4pairIiSsEED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_a
 8928              		.align 2
 8929              		.weak	_ZN9__gnu_cxx13new_allocatorISt4pairIiSsEED2Ev
 8931              	_ZN9__gnu_cxx13new_allocatorISt4pairIiSsEED2Ev:
 8932              	.LFB1582:
  86:/usr/include/c++/4.9/ext/new_allocator.h **** 
 8933              		.loc 12 86 0
 8934              		.cfi_startproc
 8935 0000 55       		pushq	%rbp
 8936              		.cfi_def_cfa_offset 16
 8937              		.cfi_offset 6, -16
 8938 0001 4889E5   		movq	%rsp, %rbp
 8939              		.cfi_def_cfa_register 6
 8940 0004 48897DF8 		movq	%rdi, -8(%rbp)
  86:/usr/include/c++/4.9/ext/new_allocator.h **** 
 8941              		.loc 12 86 0
 8942 0008 5D       		popq	%rbp
 8943              		.cfi_def_cfa 7, 8
 8944 0009 C3       		ret
 8945              		.cfi_endproc
 8946              	.LFE1582:
 8948              		.weak	_ZN9__gnu_cxx13new_allocatorISt4pairIiSsEED1Ev
 8949              		.set	_ZN9__gnu_cxx13new_allocatorISt4pairIiSsEED1Ev,_ZN9__gnu_cxx13new_allocatorISt4pairIiSsEED2Ev
 8950              		.section	.text._ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiSsEEE10deallocateERS3_PS2_m,"axG",@progbi
 8951              		.weak	_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiSsEEE10deallocateERS3_PS2_m
 8953              	_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiSsEEE10deallocateERS3_PS2_m:
 8954              	.LFB1584:
 184:/usr/include/c++/4.9/ext/alloc_traits.h ****     { __a.deallocate(__p, __n); }
 8955              		.loc 13 184 0
 8956              		.cfi_startproc
 8957 0000 55       		pushq	%rbp
 8958              		.cfi_def_cfa_offset 16
 8959              		.cfi_offset 6, -16
 8960 0001 4889E5   		movq	%rsp, %rbp
 8961              		.cfi_def_cfa_register 6
 8962 0004 4883EC20 		subq	$32, %rsp
 8963 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8964 000c 488975F0 		movq	%rsi, -16(%rbp)
 8965 0010 488955E8 		movq	%rdx, -24(%rbp)
 8966              		.loc 13 185 0
 8967 0014 488B55E8 		movq	-24(%rbp), %rdx
 8968 0018 488B4DF0 		movq	-16(%rbp), %rcx
 8969 001c 488B45F8 		movq	-8(%rbp), %rax
 8970 0020 4889CE   		movq	%rcx, %rsi
 8971 0023 4889C7   		movq	%rax, %rdi
 8972 0026 E8000000 		call	_ZN9__gnu_cxx13new_allocatorISt4pairIiSsEE10deallocateEPS2_m
 8972      00
 8973 002b C9       		leave
 8974              		.cfi_def_cfa 7, 8
 8975 002c C3       		ret
 8976              		.cfi_endproc
 8977              	.LFE1584:
 8979              		.section	.text._ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiSsEEEvT_S5_,"axG",@progbits,_ZNSt12_D
 8980              		.weak	_ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiSsEEEvT_S5_
 8982              	_ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiSsEEEvT_S5_:
 8983              	.LFB1585:
 100:/usr/include/c++/4.9/bits/stl_construct.h **** 	{
 8984              		.loc 9 100 0
 8985              		.cfi_startproc
 8986 0000 55       		pushq	%rbp
 8987              		.cfi_def_cfa_offset 16
 8988              		.cfi_offset 6, -16
 8989 0001 4889E5   		movq	%rsp, %rbp
 8990              		.cfi_def_cfa_register 6
 8991 0004 4883EC10 		subq	$16, %rsp
 8992 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8993 000c 488975F0 		movq	%rsi, -16(%rbp)
 102:/usr/include/c++/4.9/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 8994              		.loc 9 102 0
 8995 0010 EB19     		jmp	.L523
 8996              	.L524:
 103:/usr/include/c++/4.9/bits/stl_construct.h **** 	}
 8997              		.loc 9 103 0 discriminator 2
 8998 0012 488B45F8 		movq	-8(%rbp), %rax
 8999 0016 4889C7   		movq	%rax, %rdi
 9000 0019 E8000000 		call	_ZSt11__addressofISt4pairIiSsEEPT_RS2_
 9000      00
 9001 001e 4889C7   		movq	%rax, %rdi
 9002 0021 E8000000 		call	_ZSt8_DestroyISt4pairIiSsEEvPT_
 9002      00
 102:/usr/include/c++/4.9/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 9003              		.loc 9 102 0 discriminator 2
 9004 0026 488345F8 		addq	$16, -8(%rbp)
 9004      10
 9005              	.L523:
 102:/usr/include/c++/4.9/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 9006              		.loc 9 102 0 is_stmt 0 discriminator 1
 9007 002b 488B45F8 		movq	-8(%rbp), %rax
 9008 002f 483B45F0 		cmpq	-16(%rbp), %rax
 9009 0033 75DD     		jne	.L524
 104:/usr/include/c++/4.9/bits/stl_construct.h ****     };
 9010              		.loc 9 104 0 is_stmt 1
 9011 0035 C9       		leave
 9012              		.cfi_def_cfa 7, 8
 9013 0036 C3       		ret
 9014              		.cfi_endproc
 9015              	.LFE1585:
 9017              		.section	.text._ZN9__gnu_cxx13new_allocatorISt4pairIiSsEE10deallocateEPS2_m,"axG",@progbits,_ZN9__
 9018              		.align 2
 9019              		.weak	_ZN9__gnu_cxx13new_allocatorISt4pairIiSsEE10deallocateEPS2_m
 9021              	_ZN9__gnu_cxx13new_allocatorISt4pairIiSsEE10deallocateEPS2_m:
 9022              	.LFB1586:
 109:/usr/include/c++/4.9/ext/new_allocator.h ****       { ::operator delete(__p); }
 9023              		.loc 12 109 0
 9024              		.cfi_startproc
 9025 0000 55       		pushq	%rbp
 9026              		.cfi_def_cfa_offset 16
 9027              		.cfi_offset 6, -16
 9028 0001 4889E5   		movq	%rsp, %rbp
 9029              		.cfi_def_cfa_register 6
 9030 0004 4883EC20 		subq	$32, %rsp
 9031 0008 48897DF8 		movq	%rdi, -8(%rbp)
 9032 000c 488975F0 		movq	%rsi, -16(%rbp)
 9033 0010 488955E8 		movq	%rdx, -24(%rbp)
 9034              		.loc 12 110 0
 9035 0014 488B45F0 		movq	-16(%rbp), %rax
 9036 0018 4889C7   		movq	%rax, %rdi
 9037 001b E8000000 		call	_ZdlPv
 9037      00
 9038 0020 C9       		leave
 9039              		.cfi_def_cfa 7, 8
 9040 0021 C3       		ret
 9041              		.cfi_endproc
 9042              	.LFE1586:
 9044              		.section	.text._ZSt11__addressofISt4pairIiSsEEPT_RS2_,"axG",@progbits,_ZSt11__addressofISt4pairIiS
 9045              		.weak	_ZSt11__addressofISt4pairIiSsEEPT_RS2_
 9047              	_ZSt11__addressofISt4pairIiSsEEPT_RS2_:
 9048              	.LFB1587:
  47:/usr/include/c++/4.9/bits/move.h ****     {
 9049              		.loc 14 47 0
 9050              		.cfi_startproc
 9051 0000 55       		pushq	%rbp
 9052              		.cfi_def_cfa_offset 16
 9053              		.cfi_offset 6, -16
 9054 0001 4889E5   		movq	%rsp, %rbp
 9055              		.cfi_def_cfa_register 6
 9056 0004 48897DF8 		movq	%rdi, -8(%rbp)
  50:/usr/include/c++/4.9/bits/move.h ****     }
 9057              		.loc 14 50 0
 9058 0008 488B45F8 		movq	-8(%rbp), %rax
 9059              		.loc 14 51 0
 9060 000c 5D       		popq	%rbp
 9061              		.cfi_def_cfa 7, 8
 9062 000d C3       		ret
 9063              		.cfi_endproc
 9064              	.LFE1587:
 9066              		.section	.text._ZNSt4pairIiSsED2Ev,"axG",@progbits,_ZNSt4pairIiSsED5Ev,comdat
 9067              		.align 2
 9068              		.weak	_ZNSt4pairIiSsED2Ev
 9070              	_ZNSt4pairIiSsED2Ev:
 9071              	.LFB1590:
 9072              		.file 16 "/usr/include/c++/4.9/bits/stl_pair.h"
   1:/usr/include/c++/4.9/bits/stl_pair.h **** // Pair implementation -*- C++ -*-
   2:/usr/include/c++/4.9/bits/stl_pair.h **** 
   3:/usr/include/c++/4.9/bits/stl_pair.h **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   4:/usr/include/c++/4.9/bits/stl_pair.h **** //
   5:/usr/include/c++/4.9/bits/stl_pair.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/4.9/bits/stl_pair.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/4.9/bits/stl_pair.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/4.9/bits/stl_pair.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/4.9/bits/stl_pair.h **** // any later version.
  10:/usr/include/c++/4.9/bits/stl_pair.h **** 
  11:/usr/include/c++/4.9/bits/stl_pair.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/4.9/bits/stl_pair.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/4.9/bits/stl_pair.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/4.9/bits/stl_pair.h **** // GNU General Public License for more details.
  15:/usr/include/c++/4.9/bits/stl_pair.h **** 
  16:/usr/include/c++/4.9/bits/stl_pair.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/4.9/bits/stl_pair.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/4.9/bits/stl_pair.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/4.9/bits/stl_pair.h **** 
  20:/usr/include/c++/4.9/bits/stl_pair.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/4.9/bits/stl_pair.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/4.9/bits/stl_pair.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/4.9/bits/stl_pair.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/4.9/bits/stl_pair.h **** 
  25:/usr/include/c++/4.9/bits/stl_pair.h **** /*
  26:/usr/include/c++/4.9/bits/stl_pair.h ****  *
  27:/usr/include/c++/4.9/bits/stl_pair.h ****  * Copyright (c) 1994
  28:/usr/include/c++/4.9/bits/stl_pair.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/4.9/bits/stl_pair.h ****  *
  30:/usr/include/c++/4.9/bits/stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/4.9/bits/stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/4.9/bits/stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/4.9/bits/stl_pair.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/4.9/bits/stl_pair.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/4.9/bits/stl_pair.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/4.9/bits/stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/4.9/bits/stl_pair.h ****  *
  38:/usr/include/c++/4.9/bits/stl_pair.h ****  *
  39:/usr/include/c++/4.9/bits/stl_pair.h ****  * Copyright (c) 1996,1997
  40:/usr/include/c++/4.9/bits/stl_pair.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/4.9/bits/stl_pair.h ****  *
  42:/usr/include/c++/4.9/bits/stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/4.9/bits/stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/4.9/bits/stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/4.9/bits/stl_pair.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/4.9/bits/stl_pair.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/4.9/bits/stl_pair.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/4.9/bits/stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/4.9/bits/stl_pair.h ****  */
  50:/usr/include/c++/4.9/bits/stl_pair.h **** 
  51:/usr/include/c++/4.9/bits/stl_pair.h **** /** @file bits/stl_pair.h
  52:/usr/include/c++/4.9/bits/stl_pair.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/4.9/bits/stl_pair.h ****  *  Do not attempt to use it directly. @headername{utility}
  54:/usr/include/c++/4.9/bits/stl_pair.h ****  */
  55:/usr/include/c++/4.9/bits/stl_pair.h **** 
  56:/usr/include/c++/4.9/bits/stl_pair.h **** #ifndef _STL_PAIR_H
  57:/usr/include/c++/4.9/bits/stl_pair.h **** #define _STL_PAIR_H 1
  58:/usr/include/c++/4.9/bits/stl_pair.h **** 
  59:/usr/include/c++/4.9/bits/stl_pair.h **** #include <bits/move.h> // for std::move / std::forward, and std::swap
  60:/usr/include/c++/4.9/bits/stl_pair.h **** 
  61:/usr/include/c++/4.9/bits/stl_pair.h **** #if __cplusplus >= 201103L
  62:/usr/include/c++/4.9/bits/stl_pair.h **** #include <type_traits> // for std::__decay_and_strip too
  63:/usr/include/c++/4.9/bits/stl_pair.h **** #endif
  64:/usr/include/c++/4.9/bits/stl_pair.h **** 
  65:/usr/include/c++/4.9/bits/stl_pair.h **** namespace std _GLIBCXX_VISIBILITY(default)
  66:/usr/include/c++/4.9/bits/stl_pair.h **** {
  67:/usr/include/c++/4.9/bits/stl_pair.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  68:/usr/include/c++/4.9/bits/stl_pair.h **** 
  69:/usr/include/c++/4.9/bits/stl_pair.h ****   /**
  70:/usr/include/c++/4.9/bits/stl_pair.h ****    *  @addtogroup utilities
  71:/usr/include/c++/4.9/bits/stl_pair.h ****    *  @{
  72:/usr/include/c++/4.9/bits/stl_pair.h ****    */
  73:/usr/include/c++/4.9/bits/stl_pair.h **** 
  74:/usr/include/c++/4.9/bits/stl_pair.h **** #if __cplusplus >= 201103L
  75:/usr/include/c++/4.9/bits/stl_pair.h ****   /// piecewise_construct_t
  76:/usr/include/c++/4.9/bits/stl_pair.h ****   struct piecewise_construct_t { };
  77:/usr/include/c++/4.9/bits/stl_pair.h **** 
  78:/usr/include/c++/4.9/bits/stl_pair.h ****   /// piecewise_construct
  79:/usr/include/c++/4.9/bits/stl_pair.h ****   constexpr piecewise_construct_t piecewise_construct = piecewise_construct_t();
  80:/usr/include/c++/4.9/bits/stl_pair.h **** 
  81:/usr/include/c++/4.9/bits/stl_pair.h ****   // Forward declarations.
  82:/usr/include/c++/4.9/bits/stl_pair.h ****   template<typename...>
  83:/usr/include/c++/4.9/bits/stl_pair.h ****     class tuple;
  84:/usr/include/c++/4.9/bits/stl_pair.h **** 
  85:/usr/include/c++/4.9/bits/stl_pair.h ****   template<std::size_t...>
  86:/usr/include/c++/4.9/bits/stl_pair.h ****     struct _Index_tuple;
  87:/usr/include/c++/4.9/bits/stl_pair.h **** #endif
  88:/usr/include/c++/4.9/bits/stl_pair.h **** 
  89:/usr/include/c++/4.9/bits/stl_pair.h ****  /**
  90:/usr/include/c++/4.9/bits/stl_pair.h ****    *  @brief Struct holding two objects of arbitrary type.
  91:/usr/include/c++/4.9/bits/stl_pair.h ****    *
  92:/usr/include/c++/4.9/bits/stl_pair.h ****    *  @tparam _T1  Type of first object.
  93:/usr/include/c++/4.9/bits/stl_pair.h ****    *  @tparam _T2  Type of second object.
  94:/usr/include/c++/4.9/bits/stl_pair.h ****    */
  95:/usr/include/c++/4.9/bits/stl_pair.h ****   template<class _T1, class _T2>
  96:/usr/include/c++/4.9/bits/stl_pair.h ****     struct pair
 9073              		.loc 16 96 0
 9074              		.cfi_startproc
 9075 0000 55       		pushq	%rbp
 9076              		.cfi_def_cfa_offset 16
 9077              		.cfi_offset 6, -16
 9078 0001 4889E5   		movq	%rsp, %rbp
 9079              		.cfi_def_cfa_register 6
 9080 0004 4883EC10 		subq	$16, %rsp
 9081 0008 48897DF8 		movq	%rdi, -8(%rbp)
 9082              	.LBB220:
 9083              		.loc 16 96 0
 9084 000c 488B45F8 		movq	-8(%rbp), %rax
 9085 0010 4883C008 		addq	$8, %rax
 9086 0014 4889C7   		movq	%rax, %rdi
 9087 0017 E8000000 		call	_ZNSsD1Ev
 9087      00
 9088              	.LBE220:
 9089 001c C9       		leave
 9090              		.cfi_def_cfa 7, 8
 9091 001d C3       		ret
 9092              		.cfi_endproc
 9093              	.LFE1590:
 9095              		.weak	_ZNSt4pairIiSsED1Ev
 9096              		.set	_ZNSt4pairIiSsED1Ev,_ZNSt4pairIiSsED2Ev
 9097              		.section	.text._ZSt8_DestroyISt4pairIiSsEEvPT_,"axG",@progbits,_ZSt8_DestroyISt4pairIiSsEEvPT_,com
 9098              		.weak	_ZSt8_DestroyISt4pairIiSsEEvPT_
 9100              	_ZSt8_DestroyISt4pairIiSsEEvPT_:
 9101              	.LFB1588:
  92:/usr/include/c++/4.9/bits/stl_construct.h ****     { __pointer->~_Tp(); }
 9102              		.loc 9 92 0
 9103              		.cfi_startproc
 9104 0000 55       		pushq	%rbp
 9105              		.cfi_def_cfa_offset 16
 9106              		.cfi_offset 6, -16
 9107 0001 4889E5   		movq	%rsp, %rbp
 9108              		.cfi_def_cfa_register 6
 9109 0004 4883EC10 		subq	$16, %rsp
 9110 0008 48897DF8 		movq	%rdi, -8(%rbp)
  93:/usr/include/c++/4.9/bits/stl_construct.h **** 
 9111              		.loc 9 93 0
 9112 000c 488B45F8 		movq	-8(%rbp), %rax
 9113 0010 4889C7   		movq	%rax, %rdi
 9114 0013 E8000000 		call	_ZNSt4pairIiSsED1Ev
 9114      00
 9115 0018 C9       		leave
 9116              		.cfi_def_cfa 7, 8
 9117 0019 C3       		ret
 9118              		.cfi_endproc
 9119              	.LFE1588:
 9121              		.section	.rodata
 9122 05c2 00000000 		.align 32
 9122      00000000 
 9122      00000000 
 9122      00000000 
 9122      00000000 
 9125              	_ZTVN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailure
 9126 05e0 00000000 		.quad	0
 9126      00000000 
 9127 05e8 00000000 		.quad	_ZTIN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOf
 9127      00000000 
 9128 05f0 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFa
 9128      00000000 
 9129 05f8 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFa
 9129      00000000 
 9130 0600 00000000 		.quad	_ZNK8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfF
 9130      00000000 
 9131              		.text
 9132              		.align 2
 9134              	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMe
 9135              	.LFB1593:
  98:TestDeferredTestReporter.cpp **** {
 9136              		.loc 3 98 0
 9137              		.cfi_startproc
 9138 32bc 55       		pushq	%rbp
 9139              		.cfi_def_cfa_offset 16
 9140              		.cfi_offset 6, -16
 9141 32bd 4889E5   		movq	%rsp, %rbp
 9142              		.cfi_def_cfa_register 6
 9143 32c0 4883EC10 		subq	$16, %rsp
 9144 32c4 48897DF8 		movq	%rdi, -8(%rbp)
 9145              	.LBB221:
  98:TestDeferredTestReporter.cpp **** {
 9146              		.loc 3 98 0
 9147 32c8 488B45F8 		movq	-8(%rbp), %rax
 9148 32cc 48C70000 		movq	$_ZTVN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOf
 9148      000000
 9149 32d3 488B45F8 		movq	-8(%rbp), %rax
 9150 32d7 4889C7   		movq	%rax, %rdi
 9151 32da E8000000 		call	_ZN8UnitTest4TestD2Ev
 9151      00
 9152              	.LBE221:
 9153 32df B8000000 		movl	$0, %eax
 9153      00
 9154 32e4 85C0     		testl	%eax, %eax
 9155 32e6 740C     		je	.L531
  98:TestDeferredTestReporter.cpp **** {
 9156              		.loc 3 98 0 is_stmt 0 discriminator 4
 9157 32e8 488B45F8 		movq	-8(%rbp), %rax
 9158 32ec 4889C7   		movq	%rax, %rdi
 9159 32ef E8000000 		call	_ZdlPv
 9159      00
 9160              	.L531:
  98:TestDeferredTestReporter.cpp **** {
 9161              		.loc 3 98 0
 9162 32f4 C9       		leave
 9163              		.cfi_def_cfa 7, 8
 9164 32f5 C3       		ret
 9165              		.cfi_endproc
 9166              	.LFE1593:
 9168              		.set	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFai
 9169              		.align 2
 9171              	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMe
 9172              	.LFB1595:
  98:TestDeferredTestReporter.cpp **** {
 9173              		.loc 3 98 0 is_stmt 1
 9174              		.cfi_startproc
 9175 32f6 55       		pushq	%rbp
 9176              		.cfi_def_cfa_offset 16
 9177              		.cfi_offset 6, -16
 9178 32f7 4889E5   		movq	%rsp, %rbp
 9179              		.cfi_def_cfa_register 6
 9180 32fa 4883EC10 		subq	$16, %rsp
 9181 32fe 48897DF8 		movq	%rdi, -8(%rbp)
  98:TestDeferredTestReporter.cpp **** {
 9182              		.loc 3 98 0
 9183 3302 488B45F8 		movq	-8(%rbp), %rax
 9184 3306 4889C7   		movq	%rax, %rdi
 9185 3309 E8AEFFFF 		call	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFai
 9185      FF
 9186 330e 488B45F8 		movq	-8(%rbp), %rax
 9187 3312 4889C7   		movq	%rax, %rdi
 9188 3315 E8000000 		call	_ZdlPv
 9188      00
 9189 331a C9       		leave
 9190              		.cfi_def_cfa 7, 8
 9191 331b C3       		ret
 9192              		.cfi_endproc
 9193              	.LFE1595:
 9195              		.section	.rodata
 9196 0608 00000000 		.align 32
 9196      00000000 
 9196      00000000 
 9196      00000000 
 9196      00000000 
 9199              	_ZTVN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMul
 9200 0620 00000000 		.quad	0
 9200      00000000 
 9201 0628 00000000 		.quad	_ZTIN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetail
 9201      00000000 
 9202 0630 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsF
 9202      00000000 
 9203 0638 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsF
 9203      00000000 
 9204 0640 00000000 		.quad	_ZNK8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetails
 9204      00000000 
 9205              		.text
 9206              		.align 2
 9208              	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMulti
 9209              	.LFB1597:
  83:TestDeferredTestReporter.cpp **** {
 9210              		.loc 3 83 0
 9211              		.cfi_startproc
 9212 331c 55       		pushq	%rbp
 9213              		.cfi_def_cfa_offset 16
 9214              		.cfi_offset 6, -16
 9215 331d 4889E5   		movq	%rsp, %rbp
 9216              		.cfi_def_cfa_register 6
 9217 3320 4883EC10 		subq	$16, %rsp
 9218 3324 48897DF8 		movq	%rdi, -8(%rbp)
 9219              	.LBB222:
  83:TestDeferredTestReporter.cpp **** {
 9220              		.loc 3 83 0
 9221 3328 488B45F8 		movq	-8(%rbp), %rax
 9222 332c 48C70000 		movq	$_ZTVN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetail
 9222      000000
 9223 3333 488B45F8 		movq	-8(%rbp), %rax
 9224 3337 4889C7   		movq	%rax, %rdi
 9225 333a E8000000 		call	_ZN8UnitTest4TestD2Ev
 9225      00
 9226              	.LBE222:
 9227 333f B8000000 		movl	$0, %eax
 9227      00
 9228 3344 85C0     		testl	%eax, %eax
 9229 3346 740C     		je	.L536
  83:TestDeferredTestReporter.cpp **** {
 9230              		.loc 3 83 0 is_stmt 0 discriminator 4
 9231 3348 488B45F8 		movq	-8(%rbp), %rax
 9232 334c 4889C7   		movq	%rax, %rdi
 9233 334f E8000000 		call	_ZdlPv
 9233      00
 9234              	.L536:
  83:TestDeferredTestReporter.cpp **** {
 9235              		.loc 3 83 0
 9236 3354 C9       		leave
 9237              		.cfi_def_cfa 7, 8
 9238 3355 C3       		ret
 9239              		.cfi_endproc
 9240              	.LFE1597:
 9242              		.set	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsFo
 9243              		.align 2
 9245              	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMulti
 9246              	.LFB1599:
  83:TestDeferredTestReporter.cpp **** {
 9247              		.loc 3 83 0 is_stmt 1
 9248              		.cfi_startproc
 9249 3356 55       		pushq	%rbp
 9250              		.cfi_def_cfa_offset 16
 9251              		.cfi_offset 6, -16
 9252 3357 4889E5   		movq	%rsp, %rbp
 9253              		.cfi_def_cfa_register 6
 9254 335a 4883EC10 		subq	$16, %rsp
 9255 335e 48897DF8 		movq	%rdi, -8(%rbp)
  83:TestDeferredTestReporter.cpp **** {
 9256              		.loc 3 83 0
 9257 3362 488B45F8 		movq	-8(%rbp), %rax
 9258 3366 4889C7   		movq	%rax, %rdi
 9259 3369 E8AEFFFF 		call	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsFo
 9259      FF
 9260 336e 488B45F8 		movq	-8(%rbp), %rax
 9261 3372 4889C7   		movq	%rax, %rdi
 9262 3375 E8000000 		call	_ZdlPv
 9262      00
 9263 337a C9       		leave
 9264              		.cfi_def_cfa 7, 8
 9265 337b C3       		ret
 9266              		.cfi_endproc
 9267              	.LFE1599:
 9269              		.section	.rodata
 9270 0648 00000000 		.align 32
 9270      00000000 
 9270      00000000 
 9270      00000000 
 9270      00000000 
 9273              	_ZTVN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsE:
 9274 0660 00000000 		.quad	0
 9274      00000000 
 9275 0668 00000000 		.quad	_ZTIN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetail
 9275      00000000 
 9276 0670 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD
 9276      00000000 
 9277 0678 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD
 9277      00000000 
 9278 0680 00000000 		.quad	_ZNK8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetails
 9278      00000000 
 9279              		.text
 9280              		.align 2
 9282              	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD2Ev:
 9283              	.LFB1601:
  71:TestDeferredTestReporter.cpp **** {
 9284              		.loc 3 71 0
 9285              		.cfi_startproc
 9286 337c 55       		pushq	%rbp
 9287              		.cfi_def_cfa_offset 16
 9288              		.cfi_offset 6, -16
 9289 337d 4889E5   		movq	%rsp, %rbp
 9290              		.cfi_def_cfa_register 6
 9291 3380 4883EC10 		subq	$16, %rsp
 9292 3384 48897DF8 		movq	%rdi, -8(%rbp)
 9293              	.LBB223:
  71:TestDeferredTestReporter.cpp **** {
 9294              		.loc 3 71 0
 9295 3388 488B45F8 		movq	-8(%rbp), %rax
 9296 338c 48C70000 		movq	$_ZTVN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetail
 9296      000000
 9297 3393 488B45F8 		movq	-8(%rbp), %rax
 9298 3397 4889C7   		movq	%rax, %rdi
 9299 339a E8000000 		call	_ZN8UnitTest4TestD2Ev
 9299      00
 9300              	.LBE223:
 9301 339f B8000000 		movl	$0, %eax
 9301      00
 9302 33a4 85C0     		testl	%eax, %eax
 9303 33a6 740C     		je	.L541
  71:TestDeferredTestReporter.cpp **** {
 9304              		.loc 3 71 0 is_stmt 0 discriminator 4
 9305 33a8 488B45F8 		movq	-8(%rbp), %rax
 9306 33ac 4889C7   		movq	%rax, %rdi
 9307 33af E8000000 		call	_ZdlPv
 9307      00
 9308              	.L541:
  71:TestDeferredTestReporter.cpp **** {
 9309              		.loc 3 71 0
 9310 33b4 C9       		leave
 9311              		.cfi_def_cfa 7, 8
 9312 33b5 C3       		ret
 9313              		.cfi_endproc
 9314              	.LFE1601:
 9316              		.set	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD1
 9317              		.align 2
 9319              	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD0Ev:
 9320              	.LFB1603:
  71:TestDeferredTestReporter.cpp **** {
 9321              		.loc 3 71 0 is_stmt 1
 9322              		.cfi_startproc
 9323 33b6 55       		pushq	%rbp
 9324              		.cfi_def_cfa_offset 16
 9325              		.cfi_offset 6, -16
 9326 33b7 4889E5   		movq	%rsp, %rbp
 9327              		.cfi_def_cfa_register 6
 9328 33ba 4883EC10 		subq	$16, %rsp
 9329 33be 48897DF8 		movq	%rdi, -8(%rbp)
  71:TestDeferredTestReporter.cpp **** {
 9330              		.loc 3 71 0
 9331 33c2 488B45F8 		movq	-8(%rbp), %rax
 9332 33c6 4889C7   		movq	%rax, %rdi
 9333 33c9 E8AEFFFF 		call	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD2
 9333      FF
 9334 33ce 488B45F8 		movq	-8(%rbp), %rax
 9335 33d2 4889C7   		movq	%rax, %rdi
 9336 33d5 E8000000 		call	_ZdlPv
 9336      00
 9337 33da C9       		leave
 9338              		.cfi_def_cfa 7, 8
 9339 33db C3       		ret
 9340              		.cfi_endproc
 9341              	.LFE1603:
 9343              		.section	.rodata
 9344 0688 00000000 		.align 32
 9344      00000000 
 9344      00000000 
 9344      00000000 
 9344      00000000 
 9347              	_ZTVN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE:
 9348 06a0 00000000 		.quad	0
 9348      00000000 
 9349 06a8 00000000 		.quad	_ZTIN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE
 9349      00000000 
 9350 06b0 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD1Ev
 9350      00000000 
 9351 06b8 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD0Ev
 9351      00000000 
 9352 06c0 00000000 		.quad	_ZNK8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTime7Ru
 9352      00000000 
 9353              		.text
 9354              		.align 2
 9356              	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD2Ev:
 9357              	.LFB1605:
  61:TestDeferredTestReporter.cpp **** {
 9358              		.loc 3 61 0
 9359              		.cfi_startproc
 9360 33dc 55       		pushq	%rbp
 9361              		.cfi_def_cfa_offset 16
 9362              		.cfi_offset 6, -16
 9363 33dd 4889E5   		movq	%rsp, %rbp
 9364              		.cfi_def_cfa_register 6
 9365 33e0 4883EC10 		subq	$16, %rsp
 9366 33e4 48897DF8 		movq	%rdi, -8(%rbp)
 9367              	.LBB224:
  61:TestDeferredTestReporter.cpp **** {
 9368              		.loc 3 61 0
 9369 33e8 488B45F8 		movq	-8(%rbp), %rax
 9370 33ec 48C70000 		movq	$_ZTVN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE+
 9370      000000
 9371 33f3 488B45F8 		movq	-8(%rbp), %rax
 9372 33f7 4889C7   		movq	%rax, %rdi
 9373 33fa E8000000 		call	_ZN8UnitTest4TestD2Ev
 9373      00
 9374              	.LBE224:
 9375 33ff B8000000 		movl	$0, %eax
 9375      00
 9376 3404 85C0     		testl	%eax, %eax
 9377 3406 740C     		je	.L546
  61:TestDeferredTestReporter.cpp **** {
 9378              		.loc 3 61 0 is_stmt 0 discriminator 4
 9379 3408 488B45F8 		movq	-8(%rbp), %rax
 9380 340c 4889C7   		movq	%rax, %rdi
 9381 340f E8000000 		call	_ZdlPv
 9381      00
 9382              	.L546:
  61:TestDeferredTestReporter.cpp **** {
 9383              		.loc 3 61 0
 9384 3414 C9       		leave
 9385              		.cfi_def_cfa 7, 8
 9386 3415 C3       		ret
 9387              		.cfi_endproc
 9388              	.LFE1605:
 9390              		.set	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD1Ev,
 9391              		.align 2
 9393              	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD0Ev:
 9394              	.LFB1607:
  61:TestDeferredTestReporter.cpp **** {
 9395              		.loc 3 61 0 is_stmt 1
 9396              		.cfi_startproc
 9397 3416 55       		pushq	%rbp
 9398              		.cfi_def_cfa_offset 16
 9399              		.cfi_offset 6, -16
 9400 3417 4889E5   		movq	%rsp, %rbp
 9401              		.cfi_def_cfa_register 6
 9402 341a 4883EC10 		subq	$16, %rsp
 9403 341e 48897DF8 		movq	%rdi, -8(%rbp)
  61:TestDeferredTestReporter.cpp **** {
 9404              		.loc 3 61 0
 9405 3422 488B45F8 		movq	-8(%rbp), %rax
 9406 3426 4889C7   		movq	%rax, %rdi
 9407 3429 E8AEFFFF 		call	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD2Ev
 9407      FF
 9408 342e 488B45F8 		movq	-8(%rbp), %rax
 9409 3432 4889C7   		movq	%rax, %rdi
 9410 3435 E8000000 		call	_ZdlPv
 9410      00
 9411 343a C9       		leave
 9412              		.cfi_def_cfa 7, 8
 9413 343b C3       		ret
 9414              		.cfi_endproc
 9415              	.LFE1607:
 9417              		.section	.rodata
 9418 06c8 00000000 		.align 32
 9418      00000000 
 9418      00000000 
 9418      00000000 
 9418      00000000 
 9421              	_ZTVN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuit
 9422 06e0 00000000 		.quad	0
 9422      00000000 
 9423 06e8 00000000 		.quad	_ZTIN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestName
 9423      00000000 
 9424 06f0 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAn
 9424      00000000 
 9425 06f8 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAn
 9425      00000000 
 9426 0700 00000000 		.quad	_ZNK8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameA
 9426      00000000 
 9427              		.text
 9428              		.align 2
 9430              	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteD
 9431              	.LFB1609:
  52:TestDeferredTestReporter.cpp **** {
 9432              		.loc 3 52 0
 9433              		.cfi_startproc
 9434 343c 55       		pushq	%rbp
 9435              		.cfi_def_cfa_offset 16
 9436              		.cfi_offset 6, -16
 9437 343d 4889E5   		movq	%rsp, %rbp
 9438              		.cfi_def_cfa_register 6
 9439 3440 4883EC10 		subq	$16, %rsp
 9440 3444 48897DF8 		movq	%rdi, -8(%rbp)
 9441              	.LBB225:
  52:TestDeferredTestReporter.cpp **** {
 9442              		.loc 3 52 0
 9443 3448 488B45F8 		movq	-8(%rbp), %rax
 9444 344c 48C70000 		movq	$_ZTVN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestName
 9444      000000
 9445 3453 488B45F8 		movq	-8(%rbp), %rax
 9446 3457 4889C7   		movq	%rax, %rdi
 9447 345a E8000000 		call	_ZN8UnitTest4TestD2Ev
 9447      00
 9448              	.LBE225:
 9449 345f B8000000 		movl	$0, %eax
 9449      00
 9450 3464 85C0     		testl	%eax, %eax
 9451 3466 740C     		je	.L551
  52:TestDeferredTestReporter.cpp **** {
 9452              		.loc 3 52 0 is_stmt 0 discriminator 4
 9453 3468 488B45F8 		movq	-8(%rbp), %rax
 9454 346c 4889C7   		movq	%rax, %rdi
 9455 346f E8000000 		call	_ZdlPv
 9455      00
 9456              	.L551:
  52:TestDeferredTestReporter.cpp **** {
 9457              		.loc 3 52 0
 9458 3474 C9       		leave
 9459              		.cfi_def_cfa 7, 8
 9460 3475 C3       		ret
 9461              		.cfi_endproc
 9462              	.LFE1609:
 9464              		.set	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAnd
 9465              		.align 2
 9467              	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteD
 9468              	.LFB1611:
  52:TestDeferredTestReporter.cpp **** {
 9469              		.loc 3 52 0 is_stmt 1
 9470              		.cfi_startproc
 9471 3476 55       		pushq	%rbp
 9472              		.cfi_def_cfa_offset 16
 9473              		.cfi_offset 6, -16
 9474 3477 4889E5   		movq	%rsp, %rbp
 9475              		.cfi_def_cfa_register 6
 9476 347a 4883EC10 		subq	$16, %rsp
 9477 347e 48897DF8 		movq	%rdi, -8(%rbp)
  52:TestDeferredTestReporter.cpp **** {
 9478              		.loc 3 52 0
 9479 3482 488B45F8 		movq	-8(%rbp), %rax
 9480 3486 4889C7   		movq	%rax, %rdi
 9481 3489 E8AEFFFF 		call	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAnd
 9481      FF
 9482 348e 488B45F8 		movq	-8(%rbp), %rax
 9483 3492 4889C7   		movq	%rax, %rdi
 9484 3495 E8000000 		call	_ZdlPv
 9484      00
 9485 349a C9       		leave
 9486              		.cfi_def_cfa 7, 8
 9487 349b C3       		ret
 9488              		.cfi_endproc
 9489              	.LFE1611:
 9491              		.section	.rodata
 9492 0708 00000000 		.align 32
 9492      00000000 
 9492      00000000 
 9492      00000000 
 9492      00000000 
 9495              	_ZTVN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest
 9496 0720 00000000 		.quad	0
 9496      00000000 
 9497 0728 00000000 		.quad	_ZTIN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDefer
 9497      00000000 
 9498 0730 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferre
 9498      00000000 
 9499 0738 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferre
 9499      00000000 
 9500 0740 00000000 		.quad	_ZNK8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferr
 9500      00000000 
 9501              		.text
 9502              		.align 2
 9504              	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestD2
 9505              	.LFB1613:
  46:TestDeferredTestReporter.cpp **** {
 9506              		.loc 3 46 0
 9507              		.cfi_startproc
 9508 349c 55       		pushq	%rbp
 9509              		.cfi_def_cfa_offset 16
 9510              		.cfi_offset 6, -16
 9511 349d 4889E5   		movq	%rsp, %rbp
 9512              		.cfi_def_cfa_register 6
 9513 34a0 4883EC10 		subq	$16, %rsp
 9514 34a4 48897DF8 		movq	%rdi, -8(%rbp)
 9515              	.LBB226:
  46:TestDeferredTestReporter.cpp **** {
 9516              		.loc 3 46 0
 9517 34a8 488B45F8 		movq	-8(%rbp), %rax
 9518 34ac 48C70000 		movq	$_ZTVN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDefer
 9518      000000
 9519 34b3 488B45F8 		movq	-8(%rbp), %rax
 9520 34b7 4889C7   		movq	%rax, %rdi
 9521 34ba E8000000 		call	_ZN8UnitTest4TestD2Ev
 9521      00
 9522              	.LBE226:
 9523 34bf B8000000 		movl	$0, %eax
 9523      00
 9524 34c4 85C0     		testl	%eax, %eax
 9525 34c6 740C     		je	.L556
  46:TestDeferredTestReporter.cpp **** {
 9526              		.loc 3 46 0 is_stmt 0 discriminator 4
 9527 34c8 488B45F8 		movq	-8(%rbp), %rax
 9528 34cc 4889C7   		movq	%rax, %rdi
 9529 34cf E8000000 		call	_ZdlPv
 9529      00
 9530              	.L556:
  46:TestDeferredTestReporter.cpp **** {
 9531              		.loc 3 46 0
 9532 34d4 C9       		leave
 9533              		.cfi_def_cfa 7, 8
 9534 34d5 C3       		ret
 9535              		.cfi_endproc
 9536              	.LFE1613:
 9538              		.set	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferred
 9539              		.align 2
 9541              	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestD0
 9542              	.LFB1615:
  46:TestDeferredTestReporter.cpp **** {
 9543              		.loc 3 46 0 is_stmt 1
 9544              		.cfi_startproc
 9545 34d6 55       		pushq	%rbp
 9546              		.cfi_def_cfa_offset 16
 9547              		.cfi_offset 6, -16
 9548 34d7 4889E5   		movq	%rsp, %rbp
 9549              		.cfi_def_cfa_register 6
 9550 34da 4883EC10 		subq	$16, %rsp
 9551 34de 48897DF8 		movq	%rdi, -8(%rbp)
  46:TestDeferredTestReporter.cpp **** {
 9552              		.loc 3 46 0
 9553 34e2 488B45F8 		movq	-8(%rbp), %rax
 9554 34e6 4889C7   		movq	%rax, %rdi
 9555 34e9 E8AEFFFF 		call	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferred
 9555      FF
 9556 34ee 488B45F8 		movq	-8(%rbp), %rax
 9557 34f2 4889C7   		movq	%rax, %rdi
 9558 34f5 E8000000 		call	_ZdlPv
 9558      00
 9559 34fa C9       		leave
 9560              		.cfi_def_cfa 7, 8
 9561 34fb C3       		ret
 9562              		.cfi_endproc
 9563              	.LFE1615:
 9565              		.section	.rodata
 9566 0748 00000000 		.align 64
 9566      00000000 
 9566      00000000 
 9566      00000000 
 9566      00000000 
 9569              	_ZTVN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE:
 9570 0780 00000000 		.quad	0
 9570      00000000 
 9571 0788 00000000 		.quad	_ZTIN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE
 9571      00000000 
 9572 0790 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD1Ev
 9572      00000000 
 9573 0798 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD0Ev
 9573      00000000 
 9574 07a0 00000000 		.quad	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
 9574      00000000 
 9575 07a8 00000000 		.quad	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc
 9575      00000000 
 9576 07b0 00000000 		.quad	_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf
 9576      00000000 
 9577 07b8 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporter13ReportSummaryEiiif
 9577      00000000 
 9578              		.text
 9579              		.align 2
 9581              	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD2Ev:
 9582              	.LFB1617:
  20:TestDeferredTestReporter.cpp **** {
 9583              		.loc 3 20 0
 9584              		.cfi_startproc
 9585 34fc 55       		pushq	%rbp
 9586              		.cfi_def_cfa_offset 16
 9587              		.cfi_offset 6, -16
 9588 34fd 4889E5   		movq	%rsp, %rbp
 9589              		.cfi_def_cfa_register 6
 9590 3500 4883EC10 		subq	$16, %rsp
 9591 3504 48897DF8 		movq	%rdi, -8(%rbp)
 9592              	.LBB227:
  20:TestDeferredTestReporter.cpp **** {
 9593              		.loc 3 20 0
 9594 3508 488B45F8 		movq	-8(%rbp), %rax
 9595 350c 48C70000 		movq	$_ZTVN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE+16, (%rax)
 9595      000000
 9596 3513 488B45F8 		movq	-8(%rbp), %rax
 9597 3517 4889C7   		movq	%rax, %rdi
 9598 351a E8000000 		call	_ZN8UnitTest20DeferredTestReporterD2Ev
 9598      00
 9599              	.LBE227:
 9600 351f B8000000 		movl	$0, %eax
 9600      00
 9601 3524 85C0     		testl	%eax, %eax
 9602 3526 740C     		je	.L561
  20:TestDeferredTestReporter.cpp **** {
 9603              		.loc 3 20 0 is_stmt 0 discriminator 4
 9604 3528 488B45F8 		movq	-8(%rbp), %rax
 9605 352c 4889C7   		movq	%rax, %rdi
 9606 352f E8000000 		call	_ZdlPv
 9606      00
 9607              	.L561:
  20:TestDeferredTestReporter.cpp **** {
 9608              		.loc 3 20 0
 9609 3534 C9       		leave
 9610              		.cfi_def_cfa 7, 8
 9611 3535 C3       		ret
 9612              		.cfi_endproc
 9613              	.LFE1617:
 9615              		.set	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD1Ev,_ZN8UnitTest12_GLOBAL__N_124MockDefe
 9616              		.align 2
 9618              	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD0Ev:
 9619              	.LFB1619:
  20:TestDeferredTestReporter.cpp **** {
 9620              		.loc 3 20 0 is_stmt 1
 9621              		.cfi_startproc
 9622 3536 55       		pushq	%rbp
 9623              		.cfi_def_cfa_offset 16
 9624              		.cfi_offset 6, -16
 9625 3537 4889E5   		movq	%rsp, %rbp
 9626              		.cfi_def_cfa_register 6
 9627 353a 4883EC10 		subq	$16, %rsp
 9628 353e 48897DF8 		movq	%rdi, -8(%rbp)
  20:TestDeferredTestReporter.cpp **** {
 9629              		.loc 3 20 0
 9630 3542 488B45F8 		movq	-8(%rbp), %rax
 9631 3546 4889C7   		movq	%rax, %rdi
 9632 3549 E8AEFFFF 		call	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD2Ev
 9632      FF
 9633 354e 488B45F8 		movq	-8(%rbp), %rax
 9634 3552 4889C7   		movq	%rax, %rdi
 9635 3555 E8000000 		call	_ZdlPv
 9635      00
 9636 355a C9       		leave
 9637              		.cfi_def_cfa 7, 8
 9638 355b C3       		ret
 9639              		.cfi_endproc
 9640              	.LFE1619:
 9642              		.weak	_ZTVN8UnitTest15MemoryOutStreamE
 9643              		.section	.rodata._ZTVN8UnitTest15MemoryOutStreamE,"aG",@progbits,_ZTVN8UnitTest15MemoryOutStreamE,
 9644              		.align 64
 9647              	_ZTVN8UnitTest15MemoryOutStreamE:
 9648 0000 60000000 		.quad	96
 9648      00000000 
 9649 0008 00000000 		.quad	0
 9649      00000000 
 9650 0010 00000000 		.quad	_ZTIN8UnitTest15MemoryOutStreamE
 9650      00000000 
 9651 0018 00000000 		.quad	_ZN8UnitTest15MemoryOutStreamD1Ev
 9651      00000000 
 9652 0020 00000000 		.quad	_ZN8UnitTest15MemoryOutStreamD0Ev
 9652      00000000 
 9653 0028 A0FFFFFF 		.quad	-96
 9653      FFFFFFFF 
 9654 0030 A0FFFFFF 		.quad	-96
 9654      FFFFFFFF 
 9655 0038 00000000 		.quad	_ZTIN8UnitTest15MemoryOutStreamE
 9655      00000000 
 9656 0040 00000000 		.quad	_ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev
 9656      00000000 
 9657 0048 00000000 		.quad	_ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev
 9657      00000000 
 9658              		.section	.text._ZN8UnitTest15MemoryOutStreamD1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamD1Ev
 9659              		.align 2
 9660              		.weak	_ZN8UnitTest15MemoryOutStreamD1Ev
 9662              	_ZN8UnitTest15MemoryOutStreamD1Ev:
 9663              	.LFB1622:
  13:../MemoryOutStream.h **** {
 9664              		.loc 2 13 0
 9665              		.cfi_startproc
 9666              		.cfi_personality 0x3,__gxx_personality_v0
 9667              		.cfi_lsda 0x3,.LLSDA1622
 9668 0000 55       		pushq	%rbp
 9669              		.cfi_def_cfa_offset 16
 9670              		.cfi_offset 6, -16
 9671 0001 4889E5   		movq	%rsp, %rbp
 9672              		.cfi_def_cfa_register 6
 9673 0004 53       		pushq	%rbx
 9674 0005 4883EC18 		subq	$24, %rsp
 9675              		.cfi_offset 3, -24
 9676 0009 48897DE8 		movq	%rdi, -24(%rbp)
 9677              	.LBB228:
  13:../MemoryOutStream.h **** {
 9678              		.loc 2 13 0
 9679 000d BA000000 		movl	$_ZTVN8UnitTest15MemoryOutStreamE+24, %edx
 9679      00
 9680 0012 488B45E8 		movq	-24(%rbp), %rax
 9681 0016 488910   		movq	%rdx, (%rax)
 9682 0019 BA600000 		movl	$96, %edx
 9682      00
 9683 001e 488B45E8 		movq	-24(%rbp), %rax
 9684 0022 4801D0   		addq	%rdx, %rax
 9685 0025 BA000000 		movl	$_ZTVN8UnitTest15MemoryOutStreamE+64, %edx
 9685      00
 9686 002a 488910   		movq	%rdx, (%rax)
 9687 002d 488B45E8 		movq	-24(%rbp), %rax
 9688 0031 4883C058 		addq	$88, %rax
 9689 0035 4889C7   		movq	%rax, %rdi
 9690              	.LEHB243:
 9691 0038 E8000000 		call	_ZNSsD1Ev
 9691      00
 9692              	.LEHE243:
  13:../MemoryOutStream.h **** {
 9693              		.loc 2 13 0 is_stmt 0 discriminator 14
 9694 003d BA000000 		movl	$_ZTTN8UnitTest15MemoryOutStreamE+8, %edx
 9694      00
 9695 0042 488B45E8 		movq	-24(%rbp), %rax
 9696 0046 4889D6   		movq	%rdx, %rsi
 9697 0049 4889C7   		movq	%rax, %rdi
 9698              	.LEHB244:
 9699 004c E8000000 		call	_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev
 9699      00
 9700              	.LEHE244:
  13:../MemoryOutStream.h **** {
 9701              		.loc 2 13 0 discriminator 20
 9702 0051 B8020000 		movl	$2, %eax
 9702      00
 9703 0056 85C0     		testl	%eax, %eax
 9704 0058 7410     		je	.L568
  13:../MemoryOutStream.h **** {
 9705              		.loc 2 13 0 discriminator 21
 9706 005a 488B45E8 		movq	-24(%rbp), %rax
 9707 005e 4883C060 		addq	$96, %rax
 9708 0062 4889C7   		movq	%rax, %rdi
 9709              	.LEHB245:
 9710 0065 E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev
 9710      00
 9711              	.LEHE245:
 9712              	.L568:
 9713              	.LBE228:
  13:../MemoryOutStream.h **** {
 9714              		.loc 2 13 0 discriminator 24
 9715 006a B8000000 		movl	$0, %eax
 9715      00
 9716 006f 85C0     		testl	%eax, %eax
 9717 0071 744E     		je	.L575
  13:../MemoryOutStream.h **** {
 9718              		.loc 2 13 0 discriminator 25
 9719 0073 488B45E8 		movq	-24(%rbp), %rax
 9720 0077 4889C7   		movq	%rax, %rdi
 9721 007a E8000000 		call	_ZdlPv
 9721      00
 9722 007f EB40     		jmp	.L575
 9723              	.L573:
 9724 0081 4889C3   		movq	%rax, %rbx
 9725              	.LBB229:
  13:../MemoryOutStream.h **** {
 9726              		.loc 2 13 0
 9727 0084 BA000000 		movl	$_ZTTN8UnitTest15MemoryOutStreamE+8, %edx
 9727      00
 9728 0089 488B45E8 		movq	-24(%rbp), %rax
 9729 008d 4889D6   		movq	%rdx, %rsi
 9730 0090 4889C7   		movq	%rax, %rdi
 9731 0093 E8000000 		call	_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev
 9731      00
 9732 0098 EB03     		jmp	.L571
 9733              	.L574:
 9734 009a 4889C3   		movq	%rax, %rbx
 9735              	.L571:
  13:../MemoryOutStream.h **** {
 9736              		.loc 2 13 0 discriminator 19
 9737 009d B8020000 		movl	$2, %eax
 9737      00
 9738 00a2 85C0     		testl	%eax, %eax
 9739 00a4 7410     		je	.L572
  13:../MemoryOutStream.h **** {
 9740              		.loc 2 13 0 discriminator 32
 9741 00a6 488B45E8 		movq	-24(%rbp), %rax
 9742 00aa 4883C060 		addq	$96, %rax
 9743 00ae 4889C7   		movq	%rax, %rdi
 9744 00b1 E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev
 9744      00
 9745              	.L572:
 9746 00b6 4889D8   		movq	%rbx, %rax
 9747 00b9 4889C7   		movq	%rax, %rdi
 9748              	.LEHB246:
 9749 00bc E8000000 		call	_Unwind_Resume
 9749      00
 9750              	.LEHE246:
 9751              	.L575:
 9752              	.LBE229:
  13:../MemoryOutStream.h **** {
 9753              		.loc 2 13 0
 9754 00c1 4883C418 		addq	$24, %rsp
 9755 00c5 5B       		popq	%rbx
 9756 00c6 5D       		popq	%rbp
 9757              		.cfi_def_cfa 7, 8
 9758 00c7 C3       		ret
 9759              		.cfi_endproc
 9760              	.LFE1622:
 9761              		.section	.gcc_except_table
 9762              	.LLSDA1622:
 9763 0681 FF       		.byte	0xff
 9764 0682 FF       		.byte	0xff
 9765 0683 01       		.byte	0x1
 9766 0684 13       		.uleb128 .LLSDACSE1622-.LLSDACSB1622
 9767              	.LLSDACSB1622:
 9768 0685 38       		.uleb128 .LEHB243-.LFB1622
 9769 0686 05       		.uleb128 .LEHE243-.LEHB243
 9770 0687 8101     		.uleb128 .L573-.LFB1622
 9771 0689 00       		.uleb128 0
 9772 068a 4C       		.uleb128 .LEHB244-.LFB1622
 9773 068b 05       		.uleb128 .LEHE244-.LEHB244
 9774 068c 9A01     		.uleb128 .L574-.LFB1622
 9775 068e 00       		.uleb128 0
 9776 068f 65       		.uleb128 .LEHB245-.LFB1622
 9777 0690 05       		.uleb128 .LEHE245-.LEHB245
 9778 0691 00       		.uleb128 0
 9779 0692 00       		.uleb128 0
 9780 0693 BC01     		.uleb128 .LEHB246-.LFB1622
 9781 0695 05       		.uleb128 .LEHE246-.LEHB246
 9782 0696 00       		.uleb128 0
 9783 0697 00       		.uleb128 0
 9784              	.LLSDACSE1622:
 9785              		.section	.text._ZN8UnitTest15MemoryOutStreamD1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamD1Ev
 9787              		.set	.LTHUNK0,_ZN8UnitTest15MemoryOutStreamD1Ev
 9788              		.weak	_ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev
 9790              	_ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev:
 9791              	.LFB1626:
  13:../MemoryOutStream.h **** {
 9792              		.loc 2 13 0 is_stmt 1
 9793              		.cfi_startproc
 9794 00c8 4C8B17   		movq	(%rdi), %r10
 9795 00cb 49037AE8 		addq	-24(%r10), %rdi
 9796 00cf E92CFFFF 		jmp	.LTHUNK0
 9796      FF
 9797              		.cfi_endproc
 9798              	.LFE1626:
 9800              		.section	.text._ZN8UnitTest15MemoryOutStreamD0Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamD0Ev
 9801              		.align 2
 9802              		.weak	_ZN8UnitTest15MemoryOutStreamD0Ev
 9804              	_ZN8UnitTest15MemoryOutStreamD0Ev:
 9805              	.LFB1623:
  13:../MemoryOutStream.h **** {
 9806              		.loc 2 13 0
 9807              		.cfi_startproc
 9808 0000 55       		pushq	%rbp
 9809              		.cfi_def_cfa_offset 16
 9810              		.cfi_offset 6, -16
 9811 0001 4889E5   		movq	%rsp, %rbp
 9812              		.cfi_def_cfa_register 6
 9813 0004 4883EC10 		subq	$16, %rsp
 9814 0008 48897DF8 		movq	%rdi, -8(%rbp)
  13:../MemoryOutStream.h **** {
 9815              		.loc 2 13 0
 9816 000c 488B45F8 		movq	-8(%rbp), %rax
 9817 0010 4889C7   		movq	%rax, %rdi
 9818 0013 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 9818      00
 9819 0018 488B45F8 		movq	-8(%rbp), %rax
 9820 001c 4889C7   		movq	%rax, %rdi
 9821 001f E8000000 		call	_ZdlPv
 9821      00
 9822 0024 C9       		leave
 9823              		.cfi_def_cfa 7, 8
 9824 0025 C3       		ret
 9825              		.cfi_endproc
 9826              	.LFE1623:
 9828              		.set	.LTHUNK1,_ZN8UnitTest15MemoryOutStreamD0Ev
 9829              		.weak	_ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev
 9831              	_ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev:
 9832              	.LFB1627:
  13:../MemoryOutStream.h **** {
 9833              		.loc 2 13 0
 9834              		.cfi_startproc
 9835 0026 4C8B17   		movq	(%rdi), %r10
 9836 0029 49037AE8 		addq	-24(%r10), %rdi
 9837 002d EBD1     		jmp	.LTHUNK1
 9838              		.cfi_endproc
 9839              	.LFE1627:
 9841              		.weak	_ZTTN8UnitTest15MemoryOutStreamE
 9842              		.section	.rodata._ZTTN8UnitTest15MemoryOutStreamE,"aG",@progbits,_ZTVN8UnitTest15MemoryOutStreamE,
 9843              		.align 32
 9846              	_ZTTN8UnitTest15MemoryOutStreamE:
 9847 0000 00000000 		.quad	_ZTVN8UnitTest15MemoryOutStreamE+24
 9847      00000000 
 9848 0008 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_St19basic_ostringstreamIcSt11char_traitsIcESaIcEE+24
 9848      00000000 
 9849 0010 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_So+24
 9849      00000000 
 9850 0018 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_So+64
 9850      00000000 
 9851 0020 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_St19basic_ostringstreamIcSt11char_traitsIcESaIcEE+64
 9851      00000000 
 9852 0028 00000000 		.quad	_ZTVN8UnitTest15MemoryOutStreamE+64
 9852      00000000 
 9853              		.hidden	_ZTCN8UnitTest15MemoryOutStreamE0_St19basic_ostringstreamIcSt11char_traitsIcESaIcEE
 9854              		.weak	_ZTCN8UnitTest15MemoryOutStreamE0_St19basic_ostringstreamIcSt11char_traitsIcESaIcEE
 9855              		.section	.rodata._ZTCN8UnitTest15MemoryOutStreamE0_St19basic_ostringstreamIcSt11char_traitsIcESaIc
 9856              		.align 64
 9859              	_ZTCN8UnitTest15MemoryOutStreamE0_St19basic_ostringstreamIcSt11char_traitsIcESaIcEE:
 9860 0000 60000000 		.quad	96
 9860      00000000 
 9861 0008 00000000 		.quad	0
 9861      00000000 
 9862 0010 00000000 		.quad	_ZTISt19basic_ostringstreamIcSt11char_traitsIcESaIcEE
 9862      00000000 
 9863 0018 00000000 		.quad	0
 9863      00000000 
 9864 0020 00000000 		.quad	0
 9864      00000000 
 9865 0028 A0FFFFFF 		.quad	-96
 9865      FFFFFFFF 
 9866 0030 A0FFFFFF 		.quad	-96
 9866      FFFFFFFF 
 9867 0038 00000000 		.quad	_ZTISt19basic_ostringstreamIcSt11char_traitsIcESaIcEE
 9867      00000000 
 9868 0040 00000000 		.quad	0
 9868      00000000 
 9869 0048 00000000 		.quad	0
 9869      00000000 
 9870              		.hidden	_ZTCN8UnitTest15MemoryOutStreamE0_So
 9871              		.weak	_ZTCN8UnitTest15MemoryOutStreamE0_So
 9872              		.section	.rodata._ZTCN8UnitTest15MemoryOutStreamE0_So,"aG",@progbits,_ZTVN8UnitTest15MemoryOutStre
 9873              		.align 64
 9876              	_ZTCN8UnitTest15MemoryOutStreamE0_So:
 9877 0000 60000000 		.quad	96
 9877      00000000 
 9878 0008 00000000 		.quad	0
 9878      00000000 
 9879 0010 00000000 		.quad	_ZTISo
 9879      00000000 
 9880 0018 00000000 		.quad	0
 9880      00000000 
 9881 0020 00000000 		.quad	0
 9881      00000000 
 9882 0028 A0FFFFFF 		.quad	-96
 9882      FFFFFFFF 
 9883 0030 A0FFFFFF 		.quad	-96
 9883      FFFFFFFF 
 9884 0038 00000000 		.quad	_ZTISo
 9884      00000000 
 9885 0040 00000000 		.quad	0
 9885      00000000 
 9886 0048 00000000 		.quad	0
 9886      00000000 
 9887              		.weak	_ZTSN8UnitTest15MemoryOutStreamE
 9888              		.section	.rodata._ZTSN8UnitTest15MemoryOutStreamE,"aG",@progbits,_ZTSN8UnitTest15MemoryOutStreamE,
 9889              		.align 16
 9892              	_ZTSN8UnitTest15MemoryOutStreamE:
 9893 0000 4E38556E 		.string	"N8UnitTest15MemoryOutStreamE"
 9893      69745465 
 9893      73743135 
 9893      4D656D6F 
 9893      72794F75 
 9894              		.weak	_ZTIN8UnitTest15MemoryOutStreamE
 9895              		.section	.rodata._ZTIN8UnitTest15MemoryOutStreamE,"aG",@progbits,_ZTIN8UnitTest15MemoryOutStreamE,
 9896              		.align 16
 9899              	_ZTIN8UnitTest15MemoryOutStreamE:
 9900 0000 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9900      00000000 
 9901 0008 00000000 		.quad	_ZTSN8UnitTest15MemoryOutStreamE
 9901      00000000 
 9902 0010 00000000 		.quad	_ZTISt19basic_ostringstreamIcSt11char_traitsIcESaIcEE
 9902      00000000 
 9903              		.text
 9905              	_Z41__static_initialization_and_destruction_0ii:
 9906              	.LFB1624:
 116:TestDeferredTestReporter.cpp **** 
 117:TestDeferredTestReporter.cpp **** }}
 9907              		.loc 3 117 0
 9908              		.cfi_startproc
 9909 355c 55       		pushq	%rbp
 9910              		.cfi_def_cfa_offset 16
 9911              		.cfi_offset 6, -16
 9912 355d 4889E5   		movq	%rsp, %rbp
 9913              		.cfi_def_cfa_register 6
 9914 3560 4883EC10 		subq	$16, %rsp
 9915 3564 897DFC   		movl	%edi, -4(%rbp)
 9916 3567 8975F8   		movl	%esi, -8(%rbp)
 9917              		.loc 3 117 0
 9918 356a 837DFC01 		cmpl	$1, -4(%rbp)
 9919 356e 0F854B01 		jne	.L578
 9919      0000
 9920              		.loc 3 117 0 is_stmt 0 discriminator 1
 9921 3574 817DF8FF 		cmpl	$65535, -8(%rbp)
 9921      FF0000
 9922 357b 0F853E01 		jne	.L578
 9922      0000
  46:TestDeferredTestReporter.cpp **** {
 9923              		.loc 3 46 0 is_stmt 1
 9924 3581 BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_177testDeferredTestReporterFixtureReportTestStartCreatesANewDeferre
 9924      00
 9925 3586 E83DCDFF 		call	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferred
 9925      FF
 9926 358b BA000000 		movl	$__dso_handle, %edx
 9926      00
 9927 3590 BE000000 		movl	$_ZN8UnitTest12_GLOBAL__N_177testDeferredTestReporterFixtureReportTestStartCreatesANewDeferre
 9927      00
 9928 3595 BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferre
 9928      00
 9929 359a E8000000 		call	__cxa_atexit
 9929      00
 9930 359f E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9930      00
 9931 35a4 BA000000 		movl	$_ZN8UnitTest12_GLOBAL__N_177testDeferredTestReporterFixtureReportTestStartCreatesANewDeferre
 9931      00
 9932 35a9 4889C6   		movq	%rax, %rsi
 9933 35ac BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_170adderDeferredTestReporterFixtureReportTestStartCreatesANewDeferr
 9933      00
 9934 35b1 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9934      00
  52:TestDeferredTestReporter.cpp **** {
 9935              		.loc 3 52 0
 9936 35b6 BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_178testDeferredTestReporterFixtureReportTestStartCapturesTestNameAn
 9936      00
 9937 35bb E890D1FF 		call	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAnd
 9937      FF
 9938 35c0 BA000000 		movl	$__dso_handle, %edx
 9938      00
 9939 35c5 BE000000 		movl	$_ZN8UnitTest12_GLOBAL__N_178testDeferredTestReporterFixtureReportTestStartCapturesTestNameAn
 9939      00
 9940 35ca BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAn
 9940      00
 9941 35cf E8000000 		call	__cxa_atexit
 9941      00
 9942 35d4 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9942      00
 9943 35d9 BA000000 		movl	$_ZN8UnitTest12_GLOBAL__N_178testDeferredTestReporterFixtureReportTestStartCapturesTestNameAn
 9943      00
 9944 35de 4889C6   		movq	%rax, %rsi
 9945 35e1 BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_171adderDeferredTestReporterFixtureReportTestStartCapturesTestNameA
 9945      00
 9946 35e6 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9946      00
  61:TestDeferredTestReporter.cpp **** {
 9947              		.loc 3 61 0
 9948 35eb BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_168testDeferredTestReporterFixtureReportTestEndCapturesTestTimeInst
 9948      00
 9949 35f0 E8B1D6FF 		call	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeC2Ev
 9949      FF
 9950 35f5 BA000000 		movl	$__dso_handle, %edx
 9950      00
 9951 35fa BE000000 		movl	$_ZN8UnitTest12_GLOBAL__N_168testDeferredTestReporterFixtureReportTestEndCapturesTestTimeInst
 9951      00
 9952 35ff BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD1Ev
 9952      00
 9953 3604 E8000000 		call	__cxa_atexit
 9953      00
 9954 3609 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9954      00
 9955 360e BA000000 		movl	$_ZN8UnitTest12_GLOBAL__N_168testDeferredTestReporterFixtureReportTestEndCapturesTestTimeInst
 9955      00
 9956 3613 4889C6   		movq	%rax, %rsi
 9957 3616 BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_161adderDeferredTestReporterFixtureReportTestEndCapturesTestTimeE, 
 9957      00
 9958 361b E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9958      00
  71:TestDeferredTestReporter.cpp **** {
 9959              		.loc 3 71 0
 9960 3620 BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_171testDeferredTestReporterFixtureReportFailureSavesFailureDetailsI
 9960      00
 9961 3625 E844DBFF 		call	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsC2
 9961      FF
 9962 362a BA000000 		movl	$__dso_handle, %edx
 9962      00
 9963 362f BE000000 		movl	$_ZN8UnitTest12_GLOBAL__N_171testDeferredTestReporterFixtureReportFailureSavesFailureDetailsI
 9963      00
 9964 3634 BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD
 9964      00
 9965 3639 E8000000 		call	__cxa_atexit
 9965      00
 9966 363e E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9966      00
 9967 3643 BA000000 		movl	$_ZN8UnitTest12_GLOBAL__N_171testDeferredTestReporterFixtureReportFailureSavesFailureDetailsI
 9967      00
 9968 3648 4889C6   		movq	%rax, %rsi
 9969 364b BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_164adderDeferredTestReporterFixtureReportFailureSavesFailureDetails
 9969      00
 9970 3650 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9970      00
  83:TestDeferredTestReporter.cpp **** {
 9971              		.loc 3 83 0
 9972 3655 BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_190testDeferredTestReporterFixtureReportFailureSavesFailureDetailsF
 9972      00
 9973 365a E887E0FF 		call	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsFo
 9973      FF
 9974 365f BA000000 		movl	$__dso_handle, %edx
 9974      00
 9975 3664 BE000000 		movl	$_ZN8UnitTest12_GLOBAL__N_190testDeferredTestReporterFixtureReportFailureSavesFailureDetailsF
 9975      00
 9976 3669 BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsF
 9976      00
 9977 366e E8000000 		call	__cxa_atexit
 9977      00
 9978 3673 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9978      00
 9979 3678 BA000000 		movl	$_ZN8UnitTest12_GLOBAL__N_190testDeferredTestReporterFixtureReportFailureSavesFailureDetailsF
 9979      00
 9980 367d 4889C6   		movq	%rax, %rsi
 9981 3680 BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_183adderDeferredTestReporterFixtureReportFailureSavesFailureDetails
 9981      00
 9982 3685 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9982      00
  98:TestDeferredTestReporter.cpp **** {
 9983              		.loc 3 98 0
 9984 368a BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_184testDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFa
 9984      00
 9985 368f E89CE6FF 		call	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFai
 9985      FF
 9986 3694 BA000000 		movl	$__dso_handle, %edx
 9986      00
 9987 3699 BE000000 		movl	$_ZN8UnitTest12_GLOBAL__N_184testDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFa
 9987      00
 9988 369e BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFa
 9988      00
 9989 36a3 E8000000 		call	__cxa_atexit
 9989      00
 9990 36a8 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9990      00
 9991 36ad BA000000 		movl	$_ZN8UnitTest12_GLOBAL__N_184testDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFa
 9991      00
 9992 36b2 4889C6   		movq	%rax, %rsi
 9993 36b5 BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_177adderDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfF
 9993      00
 9994 36ba E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9994      00
 9995              	.L578:
 9996              		.loc 3 117 0
 9997 36bf C9       		leave
 9998              		.cfi_def_cfa 7, 8
 9999 36c0 C3       		ret
 10000              		.cfi_endproc
 10001              	.LFE1624:
 10003              		.section	.rodata
 10004              		.align 16
 10007              	_ZTIN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE:
 10008 07c0 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 10008      00000000 
 10009 07c8 00000000 		.quad	_ZTSN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE
 10009      00000000 
 10010 07d0 00000000 		.quad	_ZTIN8UnitTest20DeferredTestReporterE
 10010      00000000 
 10011 07d8 00000000 		.align 16
 10011      00000000 
 10014              	_ZTIN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest
 10015 07e0 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 10015      00000000 
 10016 07e8 00000000 		.quad	_ZTSN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDefer
 10016      00000000 
 10017 07f0 00000000 		.quad	_ZTIN8UnitTest4TestE
 10017      00000000 
 10018 07f8 00000000 		.align 16
 10018      00000000 
 10021              	_ZTIN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuit
 10022 0800 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 10022      00000000 
 10023 0808 00000000 		.quad	_ZTSN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestName
 10023      00000000 
 10024 0810 00000000 		.quad	_ZTIN8UnitTest4TestE
 10024      00000000 
 10025 0818 00000000 		.align 16
 10025      00000000 
 10028              	_ZTIN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE:
 10029 0820 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 10029      00000000 
 10030 0828 00000000 		.quad	_ZTSN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE
 10030      00000000 
 10031 0830 00000000 		.quad	_ZTIN8UnitTest4TestE
 10031      00000000 
 10032 0838 00000000 		.align 16
 10032      00000000 
 10035              	_ZTIN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsE:
 10036 0840 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 10036      00000000 
 10037 0848 00000000 		.quad	_ZTSN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetail
 10037      00000000 
 10038 0850 00000000 		.quad	_ZTIN8UnitTest4TestE
 10038      00000000 
 10039 0858 00000000 		.align 16
 10039      00000000 
 10042              	_ZTIN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMul
 10043 0860 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 10043      00000000 
 10044 0868 00000000 		.quad	_ZTSN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetail
 10044      00000000 
 10045 0870 00000000 		.quad	_ZTIN8UnitTest4TestE
 10045      00000000 
 10046 0878 00000000 		.align 16
 10046      00000000 
 10049              	_ZTIN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailure
 10050 0880 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 10050      00000000 
 10051 0888 00000000 		.quad	_ZTSN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOf
 10051      00000000 
 10052 0890 00000000 		.quad	_ZTIN8UnitTest4TestE
 10052      00000000 
 10053 0898 00000000 		.align 64
 10053      00000000 
 10053      00000000 
 10053      00000000 
 10053      00000000 
 10056              	_ZTSN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailure
 10057 08c0 2A4E3855 		.string	"*N8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOf
 10057      6E697454 
 10057      65737431 
 10057      325F474C 
 10057      4F42414C 
 10058 0929 00000000 		.align 64
 10058      00000000 
 10058      00000000 
 10058      00000000 
 10058      00000000 
 10061              	_ZTSN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMul
 10062 0940 2A4E3855 		.string	"*N8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetail
 10062      6E697454 
 10062      65737431 
 10062      325F474C 
 10062      4F42414C 
 10063 09af 00000000 		.align 64
 10063      00000000 
 10063      00000000 
 10063      00000000 
 10063      00
 10066              	_ZTSN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsE:
 10067 09c0 2A4E3855 		.string	"*N8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetail
 10067      6E697454 
 10067      65737431 
 10067      325F474C 
 10067      4F42414C 
 10068 0a1c 00000000 		.align 64
 10068      00000000 
 10068      00000000 
 10068      00000000 
 10068      00000000 
 10071              	_ZTSN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE:
 10072 0a40 2A4E3855 		.string	"*N8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE"
 10072      6E697454 
 10072      65737431 
 10072      325F474C 
 10072      4F42414C 
 10073 0a99 00000000 		.align 64
 10073      00000000 
 10073      00000000 
 10073      00000000 
 10073      00000000 
 10076              	_ZTSN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuit
 10077 0ac0 2A4E3855 		.string	"*N8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestName
 10077      6E697454 
 10077      65737431 
 10077      325F474C 
 10077      4F42414C 
 10078 0b23 00000000 		.align 64
 10078      00000000 
 10078      00000000 
 10078      00000000 
 10078      00000000 
 10081              	_ZTSN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest
 10082 0b40 2A4E3855 		.string	"*N8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDefer
 10082      6E697454 
 10082      65737431 
 10082      325F474C 
 10082      4F42414C 
 10083 0ba2 00000000 		.align 32
 10083      00000000 
 10083      00000000 
 10083      00000000 
 10083      00000000 
 10086              	_ZTSN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE:
 10087 0bc0 2A4E3855 		.string	"*N8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE"
 10087      6E697454 
 10087      65737431 
 10087      325F474C 
 10087      4F42414C 
 10088              		.text
 10090              	_GLOBAL__sub_I_TestDeferredTestReporter.cpp:
 10091              	.LFB1625:
 10092              		.loc 3 117 0
 10093              		.cfi_startproc
 10094 36c1 55       		pushq	%rbp
 10095              		.cfi_def_cfa_offset 16
 10096              		.cfi_offset 6, -16
 10097 36c2 4889E5   		movq	%rsp, %rbp
 10098              		.cfi_def_cfa_register 6
 10099              		.loc 3 117 0
 10100 36c5 BEFFFF00 		movl	$65535, %esi
 10100      00
 10101 36ca BF010000 		movl	$1, %edi
 10101      00
 10102 36cf E888FEFF 		call	_Z41__static_initialization_and_destruction_0ii
 10102      FF
 10103 36d4 5D       		popq	%rbp
 10104              		.cfi_def_cfa 7, 8
 10105 36d5 C3       		ret
 10106              		.cfi_endproc
 10107              	.LFE1625:
 10109              		.section	.init_array,"aw"
 10110              		.align 8
 10111 0000 00000000 		.quad	_GLOBAL__sub_I_TestDeferredTestReporter.cpp
 10111      00000000 
 10112              		.section	.rodata
 10113 0bf5 000000   		.align 8
 10116              	_ZZL18__gthread_active_pvE20__gthread_active_ptr:
 10117 0bf8 00000000 		.quad	_ZL28__gthrw___pthread_key_createPjPFvPvE
 10117      00000000 
 10118              		.weakref	_ZL28__gthrw___pthread_key_createPjPFvPvE,__pthread_key_create
 10119              		.align 4
 10120              	.LC14:
 10121 0c00 66E6F642 		.long	1123477094
 10122              		.align 4
 10123              	.LC15:
 10124 0c04 17B7D138 		.long	953267991
 10125              		.text
 10126              	.Letext0:
 10127              		.file 17 "../TestDetails.h"
 10128              		.file 18 "../TestList.h"
 10129              		.file 19 "../TestResults.h"
 10130              		.file 20 "../PosixUtils/SignalTranslator.h"
 10131              		.file 21 "/usr/include/stdio.h"
 10132              		.file 22 "<built-in>"
 10133              		.file 23 "/usr/lib/gcc/x86_64-linux-gnu/4.9/include/stddef.h"
 10134              		.file 24 "/usr/include/wchar.h"
 10135              		.file 25 "/usr/include/c++/4.9/cwchar"
 10136              		.file 26 "/usr/include/c++/4.9/bits/char_traits.h"
 10137              		.file 27 "/usr/include/x86_64-linux-gnu/c++/4.9/bits/c++config.h"
 10138              		.file 28 "/usr/include/c++/4.9/clocale"
 10139              		.file 29 "/usr/include/c++/4.9/bits/basic_string.tcc"
 10140              		.file 30 "/usr/include/c++/4.9/bits/stringfwd.h"
 10141              		.file 31 "/usr/include/c++/4.9/cwctype"
 10142              		.file 32 "/usr/include/c++/4.9/bits/vector.tcc"
 10143              		.file 33 "/usr/include/c++/4.9/cstring"
 10144              		.file 34 "/usr/include/time.h"
 10145              		.file 35 "/usr/include/c++/4.9/debug/debug.h"
 10146              		.file 36 "/usr/include/c++/4.9/bits/predefined_ops.h"
 10147              		.file 37 "/usr/include/c++/4.9/ext/numeric_traits.h"
 10148              		.file 38 "/usr/include/locale.h"
 10149              		.file 39 "/usr/include/x86_64-linux-gnu/bits/types.h"
 10150              		.file 40 "/usr/include/x86_64-linux-gnu/bits/setjmp.h"
 10151              		.file 41 "/usr/include/x86_64-linux-gnu/c++/4.9/bits/atomic_word.h"
 10152              		.file 42 "/usr/include/wctype.h"
 10153              		.file 43 "/usr/include/x86_64-linux-gnu/bits/sigset.h"
 10154              		.file 44 "/usr/include/setjmp.h"
 10155              		.file 45 "/usr/include/x86_64-linux-gnu/bits/siginfo.h"
 10156              		.file 46 "/usr/include/signal.h"
 10157              		.file 47 "/usr/include/x86_64-linux-gnu/bits/sigaction.h"
 10158              		.file 48 "/usr/include/string.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 TestDeferredTestReporter.cpp
     /tmp/cceTwzZJ.s:10     .text._ZN13UnitTestSuite12GetSuiteNameEv:0000000000000000 _ZN13UnitTestSuite12GetSuiteNameEv
     /tmp/cceTwzZJ.s:33     .text._ZN8UnitTest15MemoryOutStreamC1Ev:0000000000000000 _ZN8UnitTest15MemoryOutStreamC1Ev
     /tmp/cceTwzZJ.s:9846   .rodata._ZTTN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTTN8UnitTest15MemoryOutStreamE
     /tmp/cceTwzZJ.s:9647   .rodata._ZTVN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTVN8UnitTest15MemoryOutStreamE
     /tmp/cceTwzZJ.s:145    .text:0000000000000000 _ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporter13ReportSummaryEiiif
     /tmp/cceTwzZJ.s:171    .text._ZN8UnitTest12TestReporterC2Ev:0000000000000000 _ZN8UnitTest12TestReporterC2Ev
     /tmp/cceTwzZJ.s:171    .text._ZN8UnitTest12TestReporterC2Ev:0000000000000000 _ZN8UnitTest12TestReporterC1Ev
     /tmp/cceTwzZJ.s:199    .text._ZN8UnitTest20DeferredTestReporterC2Ev:0000000000000000 _ZN8UnitTest20DeferredTestReporterC2Ev
     /tmp/cceTwzZJ.s:4801   .text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC1Ev
     /tmp/cceTwzZJ.s:199    .text._ZN8UnitTest20DeferredTestReporterC2Ev:0000000000000000 _ZN8UnitTest20DeferredTestReporterC1Ev
     /tmp/cceTwzZJ.s:274    .text._ZN8UnitTest20DeferredTestReporterD2Ev:0000000000000000 _ZN8UnitTest20DeferredTestReporterD2Ev
     /tmp/cceTwzZJ.s:4831   .text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
     /tmp/cceTwzZJ.s:274    .text._ZN8UnitTest20DeferredTestReporterD2Ev:0000000000000000 _ZN8UnitTest20DeferredTestReporterD1Ev
     /tmp/cceTwzZJ.s:363    .text._ZN8UnitTest20DeferredTestReporterD0Ev:0000000000000000 _ZN8UnitTest20DeferredTestReporterD0Ev
     /tmp/cceTwzZJ.s:390    .text:0000000000000018 _ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterC2Ev
     /tmp/cceTwzZJ.s:9569   .rodata:0000000000000780 _ZTVN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE
     /tmp/cceTwzZJ.s:425    .text:000000000000003e _ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureC2Ev
     /tmp/cceTwzZJ.s:9581   .text:00000000000034fc _ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD2Ev
     /tmp/cceTwzZJ.s:634    .text:0000000000000208 _ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureD2Ev
     /tmp/cceTwzZJ.s:749    .text:000000000000029e _ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestHelperC2ERKNS_11TestDetailsE
     /tmp/cceTwzZJ.s:785    .text:00000000000002c8 _ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestC2Ev
     /tmp/cceTwzZJ.s:9495   .rodata:0000000000000720 _ZTVN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestE
     /tmp/cceTwzZJ.s:816    .bss:0000000000000000 _ZN8UnitTest12_GLOBAL__N_177testDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestInstanceE
     /tmp/cceTwzZJ.s:816    .bss:0000000000000038 _ZN8UnitTest12_GLOBAL__N_170adderDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestE
     /tmp/cceTwzZJ.s:821    .text:0000000000000306 _ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestHelperD2Ev
     /tmp/cceTwzZJ.s:856    .text:0000000000000320 _ZNK8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest7RunImplEv
     /tmp/cceTwzZJ.s:4919   .text:0000000000002248 _ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/cceTwzZJ.s:9662   .text._ZN8UnitTest15MemoryOutStreamD1Ev:0000000000000000 _ZN8UnitTest15MemoryOutStreamD1Ev
     /tmp/cceTwzZJ.s:1213   .text:0000000000000626 _ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestHelper7RunImplEv
     /tmp/cceTwzZJ.s:5281   .text._ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv:0000000000000000 _ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv
     /tmp/cceTwzZJ.s:5317   .text._ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE:0000000000000000 _ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
     /tmp/cceTwzZJ.s:1358   .text:0000000000000726 _ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteHelperC2ERKNS_11TestDetailsE
     /tmp/cceTwzZJ.s:1392   .text:0000000000000750 _ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteC2Ev
     /tmp/cceTwzZJ.s:9421   .rodata:00000000000006e0 _ZTVN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteE
     /tmp/cceTwzZJ.s:1423   .bss:0000000000000040 _ZN8UnitTest12_GLOBAL__N_178testDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteInstanceE
     /tmp/cceTwzZJ.s:1423   .bss:0000000000000078 _ZN8UnitTest12_GLOBAL__N_171adderDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteE
     /tmp/cceTwzZJ.s:1428   .text:000000000000078e _ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteHelperD2Ev
     /tmp/cceTwzZJ.s:1453   .text:00000000000007a8 _ZNK8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuite7RunImplEv
     /tmp/cceTwzZJ.s:5462   .text:0000000000002506 _ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/cceTwzZJ.s:1813   .text:0000000000000aae _ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteHelper7RunImplEv
     /tmp/cceTwzZJ.s:5823   .text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm
     /tmp/cceTwzZJ.s:5857   .text._ZN8UnitTest10CheckEqualIPKcSsEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE:0000000000000000 _ZN8UnitTest10CheckEqualIPKcSsEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
     /tmp/cceTwzZJ.s:2048   .text:0000000000000c7c _ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperC2ERKNS_11TestDetailsE
     /tmp/cceTwzZJ.s:2081   .text:0000000000000ca6 _ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeC2Ev
     /tmp/cceTwzZJ.s:9347   .rodata:00000000000006a0 _ZTVN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE
     /tmp/cceTwzZJ.s:2112   .bss:0000000000000080 _ZN8UnitTest12_GLOBAL__N_168testDeferredTestReporterFixtureReportTestEndCapturesTestTimeInstanceE
     /tmp/cceTwzZJ.s:2112   .bss:00000000000000b8 _ZN8UnitTest12_GLOBAL__N_161adderDeferredTestReporterFixtureReportTestEndCapturesTestTimeE
     /tmp/cceTwzZJ.s:2117   .text:0000000000000ce4 _ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperD2Ev
     /tmp/cceTwzZJ.s:2142   .text:0000000000000cfe _ZNK8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTime7RunImplEv
     /tmp/cceTwzZJ.s:6001   .text:00000000000027c4 _ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/cceTwzZJ.s:2499   .text:0000000000001004 _ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelper7RunImplEv
     /tmp/cceTwzZJ.s:6364   .text._ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE:0000000000000000 _ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE
     /tmp/cceTwzZJ.s:2666   .text:0000000000001144 _ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelperC2ERKNS_11TestDetailsE
     /tmp/cceTwzZJ.s:2700   .text:000000000000116e _ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsC2Ev
     /tmp/cceTwzZJ.s:9273   .rodata:0000000000000660 _ZTVN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsE
     /tmp/cceTwzZJ.s:2731   .bss:00000000000000c0 _ZN8UnitTest12_GLOBAL__N_171testDeferredTestReporterFixtureReportFailureSavesFailureDetailsInstanceE
     /tmp/cceTwzZJ.s:2731   .bss:00000000000000f8 _ZN8UnitTest12_GLOBAL__N_164adderDeferredTestReporterFixtureReportFailureSavesFailureDetailsE
     /tmp/cceTwzZJ.s:2736   .text:00000000000011ac _ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelperD2Ev
     /tmp/cceTwzZJ.s:2761   .text:00000000000011c6 _ZNK8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetails7RunImplEv
     /tmp/cceTwzZJ.s:6528   .text:0000000000002a82 _ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/cceTwzZJ.s:3125   .text:00000000000014cc _ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelper7RunImplEv
     /tmp/cceTwzZJ.s:6888   .text._ZN8UnitTest5CheckIbEEbT_:0000000000000000 _ZN8UnitTest5CheckIbEEbT_
     /tmp/cceTwzZJ.s:3371   .text:00000000000016bc _ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresHelperC2ERKNS_11TestDetailsE
     /tmp/cceTwzZJ.s:3405   .text:00000000000016e6 _ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresC2Ev
     /tmp/cceTwzZJ.s:9199   .rodata:0000000000000620 _ZTVN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresE
     /tmp/cceTwzZJ.s:3436   .bss:0000000000000100 _ZN8UnitTest12_GLOBAL__N_190testDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresInstanceE
     /tmp/cceTwzZJ.s:3436   .bss:0000000000000138 _ZN8UnitTest12_GLOBAL__N_183adderDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresE
     /tmp/cceTwzZJ.s:3441   .text:0000000000001724 _ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresHelperD2Ev
     /tmp/cceTwzZJ.s:3466   .text:000000000000173e _ZNK8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailures7RunImplEv
     /tmp/cceTwzZJ.s:6910   .text:0000000000002d40 _ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/cceTwzZJ.s:3833   .text:0000000000001a44 _ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresHelper7RunImplEv
     /tmp/cceTwzZJ.s:7271   .text._ZNKSt6vectorISt4pairIiSsESaIS1_EE4sizeEv:0000000000000000 _ZNKSt6vectorISt4pairIiSsESaIS1_EE4sizeEv
     /tmp/cceTwzZJ.s:7300   .text._ZNKSt6vectorISt4pairIiSsESaIS1_EEixEm:0000000000000000 _ZNKSt6vectorISt4pairIiSsESaIS1_EEixEm
     /tmp/cceTwzZJ.s:4160   .text:0000000000001d06 _ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageHelperC2ERKNS_11TestDetailsE
     /tmp/cceTwzZJ.s:4194   .text:0000000000001d30 _ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageC2Ev
     /tmp/cceTwzZJ.s:9125   .rodata:00000000000005e0 _ZTVN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageE
     /tmp/cceTwzZJ.s:4225   .bss:0000000000000140 _ZN8UnitTest12_GLOBAL__N_184testDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageInstanceE
     /tmp/cceTwzZJ.s:4225   .bss:0000000000000178 _ZN8UnitTest12_GLOBAL__N_177adderDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageE
     /tmp/cceTwzZJ.s:4230   .text:0000000000001d6e _ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageHelperD2Ev
     /tmp/cceTwzZJ.s:4255   .text:0000000000001d88 _ZNK8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessage7RunImplEv
     /tmp/cceTwzZJ.s:7325   .text:0000000000002ffe _ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/cceTwzZJ.s:4616   .text:000000000000208e _ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageHelper7RunImplEv
     /tmp/cceTwzZJ.s:7686   .text._ZNKSt6vectorISt4pairIiSsESaIS1_EE2atEm:0000000000000000 _ZNKSt6vectorISt4pairIiSsESaIS1_EE2atEm
     /tmp/cceTwzZJ.s:4801   .text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev
     /tmp/cceTwzZJ.s:7750   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev
     /tmp/cceTwzZJ.s:4831   .text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
     /tmp/cceTwzZJ.s:7865   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv
     /tmp/cceTwzZJ.s:7886   .text._ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E:0000000000000000 _ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E
     /tmp/cceTwzZJ.s:7779   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
     /tmp/cceTwzZJ.s:7921   .text._ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE14_M_range_checkEm:0000000000000000 _ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE14_M_range_checkEm
     /tmp/cceTwzZJ.s:7964   .text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEixEm:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEixEm
     /tmp/cceTwzZJ.s:7993   .text._ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKSbIS3_T0_T1_E:0000000000000000 _ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKSbIS3_T0_T1_E
     /tmp/cceTwzZJ.s:8023   .text._ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_:0000000000000000 _ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_
     /tmp/cceTwzZJ.s:8073   .text._ZNKSt6vectorISt4pairIiSsESaIS1_EE14_M_range_checkEm:0000000000000000 _ZNKSt6vectorISt4pairIiSsESaIS1_EE14_M_range_checkEm
     /tmp/cceTwzZJ.s:7721   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev
     /tmp/cceTwzZJ.s:8152   .text._ZNSaIN8UnitTest18DeferredTestResultEED2Ev:0000000000000000 _ZNSaIN8UnitTest18DeferredTestResultEED2Ev
     /tmp/cceTwzZJ.s:7721   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev
     /tmp/cceTwzZJ.s:8116   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC1Ev
     /tmp/cceTwzZJ.s:7750   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC1Ev
     /tmp/cceTwzZJ.s:8182   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m
     /tmp/cceTwzZJ.s:7779   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
     /tmp/cceTwzZJ.s:8218   .text._ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_:0000000000000000 _ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_
     /tmp/cceTwzZJ.s:8116   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC2Ev
     /tmp/cceTwzZJ.s:8249   .text._ZNSaIN8UnitTest18DeferredTestResultEEC2Ev:0000000000000000 _ZNSaIN8UnitTest18DeferredTestResultEEC2Ev
     /tmp/cceTwzZJ.s:8278   .text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev
     /tmp/cceTwzZJ.s:8152   .text._ZNSaIN8UnitTest18DeferredTestResultEED2Ev:0000000000000000 _ZNSaIN8UnitTest18DeferredTestResultEED1Ev
     /tmp/cceTwzZJ.s:8301   .text._ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE10deallocateERS3_PS2_m:0000000000000000 _ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE10deallocateERS3_PS2_m
     /tmp/cceTwzZJ.s:8331   .text._ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_:0000000000000000 _ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_
     /tmp/cceTwzZJ.s:8370   .text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC2Ev
     /tmp/cceTwzZJ.s:8249   .text._ZNSaIN8UnitTest18DeferredTestResultEEC2Ev:0000000000000000 _ZNSaIN8UnitTest18DeferredTestResultEEC1Ev
     /tmp/cceTwzZJ.s:8278   .text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED1Ev
     /tmp/cceTwzZJ.s:8393   .text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m
     /tmp/cceTwzZJ.s:8419   .text._ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_:0000000000000000 _ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_
     /tmp/cceTwzZJ.s:8562   .text._ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_:0000000000000000 _ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_
     /tmp/cceTwzZJ.s:8370   .text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC1Ev
     /tmp/cceTwzZJ.s:8443   .text._ZN8UnitTest18DeferredTestResultD2Ev:0000000000000000 _ZN8UnitTest18DeferredTestResultD2Ev
     /tmp/cceTwzZJ.s:8587   .text._ZNSt6vectorISt4pairIiSsESaIS1_EED2Ev:0000000000000000 _ZNSt6vectorISt4pairIiSsESaIS1_EED1Ev
     /tmp/cceTwzZJ.s:8443   .text._ZN8UnitTest18DeferredTestResultD2Ev:0000000000000000 _ZN8UnitTest18DeferredTestResultD1Ev
     /tmp/cceTwzZJ.s:8587   .text._ZNSt6vectorISt4pairIiSsESaIS1_EED2Ev:0000000000000000 _ZNSt6vectorISt4pairIiSsESaIS1_EED2Ev
     /tmp/cceTwzZJ.s:8784   .text._ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE19_M_get_Tp_allocatorEv:0000000000000000 _ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE19_M_get_Tp_allocatorEv
     /tmp/cceTwzZJ.s:8805   .text._ZSt8_DestroyIPSt4pairIiSsES1_EvT_S3_RSaIT0_E:0000000000000000 _ZSt8_DestroyIPSt4pairIiSsES1_EvT_S3_RSaIT0_E
     /tmp/cceTwzZJ.s:8701   .text._ZNSt12_Vector_baseISt4pairIiSsESaIS1_EED2Ev:0000000000000000 _ZNSt12_Vector_baseISt4pairIiSsESaIS1_EED2Ev
     /tmp/cceTwzZJ.s:8672   .text._ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE12_Vector_implD2Ev
     /tmp/cceTwzZJ.s:8835   .text._ZNSaISt4pairIiSsEED2Ev:0000000000000000 _ZNSaISt4pairIiSsEED2Ev
     /tmp/cceTwzZJ.s:8672   .text._ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE12_Vector_implD1Ev
     /tmp/cceTwzZJ.s:8864   .text._ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE13_M_deallocateEPS1_m:0000000000000000 _ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE13_M_deallocateEPS1_m
     /tmp/cceTwzZJ.s:8701   .text._ZNSt12_Vector_baseISt4pairIiSsESaIS1_EED2Ev:0000000000000000 _ZNSt12_Vector_baseISt4pairIiSsESaIS1_EED1Ev
     /tmp/cceTwzZJ.s:8900   .text._ZSt8_DestroyIPSt4pairIiSsEEvT_S3_:0000000000000000 _ZSt8_DestroyIPSt4pairIiSsEEvT_S3_
     /tmp/cceTwzZJ.s:8931   .text._ZN9__gnu_cxx13new_allocatorISt4pairIiSsEED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiSsEED2Ev
     /tmp/cceTwzZJ.s:8835   .text._ZNSaISt4pairIiSsEED2Ev:0000000000000000 _ZNSaISt4pairIiSsEED1Ev
     /tmp/cceTwzZJ.s:8953   .text._ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiSsEEE10deallocateERS3_PS2_m:0000000000000000 _ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiSsEEE10deallocateERS3_PS2_m
     /tmp/cceTwzZJ.s:8982   .text._ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiSsEEEvT_S5_:0000000000000000 _ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiSsEEEvT_S5_
     /tmp/cceTwzZJ.s:8931   .text._ZN9__gnu_cxx13new_allocatorISt4pairIiSsEED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiSsEED1Ev
     /tmp/cceTwzZJ.s:9021   .text._ZN9__gnu_cxx13new_allocatorISt4pairIiSsEE10deallocateEPS2_m:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiSsEE10deallocateEPS2_m
     /tmp/cceTwzZJ.s:9047   .text._ZSt11__addressofISt4pairIiSsEEPT_RS2_:0000000000000000 _ZSt11__addressofISt4pairIiSsEEPT_RS2_
     /tmp/cceTwzZJ.s:9100   .text._ZSt8_DestroyISt4pairIiSsEEvPT_:0000000000000000 _ZSt8_DestroyISt4pairIiSsEEvPT_
     /tmp/cceTwzZJ.s:9070   .text._ZNSt4pairIiSsED2Ev:0000000000000000 _ZNSt4pairIiSsED2Ev
     /tmp/cceTwzZJ.s:9070   .text._ZNSt4pairIiSsED2Ev:0000000000000000 _ZNSt4pairIiSsED1Ev
     /tmp/cceTwzZJ.s:10049  .rodata:0000000000000880 _ZTIN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageE
     /tmp/cceTwzZJ.s:9134   .text:00000000000032bc _ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageD1Ev
     /tmp/cceTwzZJ.s:9171   .text:00000000000032f6 _ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageD0Ev
     /tmp/cceTwzZJ.s:9134   .text:00000000000032bc _ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageD2Ev
     /tmp/cceTwzZJ.s:10042  .rodata:0000000000000860 _ZTIN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresE
     /tmp/cceTwzZJ.s:9208   .text:000000000000331c _ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresD1Ev
     /tmp/cceTwzZJ.s:9245   .text:0000000000003356 _ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresD0Ev
     /tmp/cceTwzZJ.s:9208   .text:000000000000331c _ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresD2Ev
     /tmp/cceTwzZJ.s:10035  .rodata:0000000000000840 _ZTIN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsE
     /tmp/cceTwzZJ.s:9282   .text:000000000000337c _ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD1Ev
     /tmp/cceTwzZJ.s:9319   .text:00000000000033b6 _ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD0Ev
     /tmp/cceTwzZJ.s:9282   .text:000000000000337c _ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD2Ev
     /tmp/cceTwzZJ.s:10028  .rodata:0000000000000820 _ZTIN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE
     /tmp/cceTwzZJ.s:9356   .text:00000000000033dc _ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD1Ev
     /tmp/cceTwzZJ.s:9393   .text:0000000000003416 _ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD0Ev
     /tmp/cceTwzZJ.s:9356   .text:00000000000033dc _ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD2Ev
     /tmp/cceTwzZJ.s:10021  .rodata:0000000000000800 _ZTIN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteE
     /tmp/cceTwzZJ.s:9430   .text:000000000000343c _ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteD1Ev
     /tmp/cceTwzZJ.s:9467   .text:0000000000003476 _ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteD0Ev
     /tmp/cceTwzZJ.s:9430   .text:000000000000343c _ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteD2Ev
     /tmp/cceTwzZJ.s:10014  .rodata:00000000000007e0 _ZTIN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestE
     /tmp/cceTwzZJ.s:9504   .text:000000000000349c _ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestD1Ev
     /tmp/cceTwzZJ.s:9541   .text:00000000000034d6 _ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestD0Ev
     /tmp/cceTwzZJ.s:9504   .text:000000000000349c _ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestD2Ev
     /tmp/cceTwzZJ.s:10007  .rodata:00000000000007c0 _ZTIN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE
     /tmp/cceTwzZJ.s:9581   .text:00000000000034fc _ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD1Ev
     /tmp/cceTwzZJ.s:9618   .text:0000000000003536 _ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD0Ev
     /tmp/cceTwzZJ.s:9899   .rodata._ZTIN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTIN8UnitTest15MemoryOutStreamE
     /tmp/cceTwzZJ.s:9804   .text._ZN8UnitTest15MemoryOutStreamD0Ev:0000000000000000 _ZN8UnitTest15MemoryOutStreamD0Ev
     /tmp/cceTwzZJ.s:9790   .text._ZN8UnitTest15MemoryOutStreamD1Ev:00000000000000c8 _ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev
     /tmp/cceTwzZJ.s:9831   .text._ZN8UnitTest15MemoryOutStreamD0Ev:0000000000000026 _ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev
     /tmp/cceTwzZJ.s:9859   .rodata._ZTCN8UnitTest15MemoryOutStreamE0_St19basic_ostringstreamIcSt11char_traitsIcESaIcEE:0000000000000000 _ZTCN8UnitTest15MemoryOutStreamE0_St19basic_ostringstreamIcSt11char_traitsIcESaIcEE
     /tmp/cceTwzZJ.s:9876   .rodata._ZTCN8UnitTest15MemoryOutStreamE0_So:0000000000000000 _ZTCN8UnitTest15MemoryOutStreamE0_So
     /tmp/cceTwzZJ.s:9892   .rodata._ZTSN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTSN8UnitTest15MemoryOutStreamE
     /tmp/cceTwzZJ.s:9905   .text:000000000000355c _Z41__static_initialization_and_destruction_0ii
     /tmp/cceTwzZJ.s:10086  .rodata:0000000000000bc0 _ZTSN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE
     /tmp/cceTwzZJ.s:10081  .rodata:0000000000000b40 _ZTSN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestE
     /tmp/cceTwzZJ.s:10076  .rodata:0000000000000ac0 _ZTSN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteE
     /tmp/cceTwzZJ.s:10071  .rodata:0000000000000a40 _ZTSN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE
     /tmp/cceTwzZJ.s:10066  .rodata:00000000000009c0 _ZTSN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsE
     /tmp/cceTwzZJ.s:10061  .rodata:0000000000000940 _ZTSN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresE
     /tmp/cceTwzZJ.s:10056  .rodata:00000000000008c0 _ZTSN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageE
     /tmp/cceTwzZJ.s:10090  .text:00000000000036c1 _GLOBAL__sub_I_TestDeferredTestReporter.cpp
     /tmp/cceTwzZJ.s:10116  .rodata:0000000000000bf8 _ZZL18__gthread_active_pvE20__gthread_active_ptr
                           .group:0000000000000000 _ZN8UnitTest12TestReporterC5Ev
                           .group:0000000000000000 _ZN8UnitTest20DeferredTestReporterC5Ev
                           .group:0000000000000000 _ZN8UnitTest20DeferredTestReporterD5Ev
                           .group:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC5Ev
                           .group:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC5Ev
                           .group:0000000000000000 _ZNSaIN8UnitTest18DeferredTestResultEED5Ev
                           .group:0000000000000000 _ZNSaIN8UnitTest18DeferredTestResultEEC5Ev
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED5Ev
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC5Ev
                           .group:0000000000000000 _ZN8UnitTest18DeferredTestResultD5Ev
                           .group:0000000000000000 _ZNSt6vectorISt4pairIiSsESaIS1_EED5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE12_Vector_implD5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseISt4pairIiSsESaIS1_EED5Ev
                           .group:0000000000000000 _ZNSaISt4pairIiSsEED5Ev
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiSsEED5Ev
                           .group:0000000000000000 _ZNSt4pairIiSsED5Ev

UNDEFINED SYMBOLS
__gxx_personality_v0
_ZNSt9basic_iosIcSt11char_traitsIcEEC2Ev
_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEEC2ESt13_Ios_Openmode
_ZNSsC1Ev
_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev
_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev
_Unwind_Resume
_ZTVN8UnitTest12TestReporterE
_ZTVN8UnitTest20DeferredTestReporterE
_ZN8UnitTest12TestReporterD2Ev
_ZdlPv
_ZNSaIcEC1Ev
_ZNSsC1EPKcRKSaIcE
_ZNSaIcED1Ev
_ZNKSs5c_strEv
_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
_ZNSsD1Ev
__stack_chk_fail
_ZN8UnitTest4TestC2EPKcS2_S2_i
__cxa_end_catch
__cxa_begin_catch
_ZNK8UnitTest15AssertException10LineNumberEv
_ZNK8UnitTest15AssertException8FilenameEv
_ZN8UnitTest11CurrentTest7ResultsEv
_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
_ZNK8UnitTest15MemoryOutStream7GetTextEv
_ZN8UnitTest11TestDetailsC1ERKS0_i
_ZTISt9exception
_ZTIN8UnitTest15AssertExceptionE
_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
_ZN8UnitTest11CurrentTest7DetailsEv
_ZN8UnitTest20DeferredTestReporter10GetResultsEv
_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf
_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc
strcpy
_ZN8UnitTest16SignalTranslatorC1Ev
_ZN8UnitTest16SignalTranslator12s_jumpTargetE
__sigsetjmp
__cxa_allocate_exception
_ZTIPKc
__cxa_throw
_ZN8UnitTest16SignalTranslatorD1Ev
_ZNSolsEi
_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKSbIS4_S5_T1_E
_ZNSolsEf
_ZSt24__throw_out_of_range_fmtPKcz
_ZNKSs7compareEPKc
_ZN8UnitTest4TestD2Ev
_ZTISt19basic_ostringstreamIcSt11char_traitsIcESaIcEE
_ZTISo
_ZTVN10__cxxabiv120__si_class_type_infoE
__dso_handle
__cxa_atexit
_ZN8UnitTest4Test11GetTestListEv
_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
_ZTIN8UnitTest20DeferredTestReporterE
_ZTIN8UnitTest4TestE
__pthread_key_create
