   1              		.file	"hexio.c"
   2              		.text
   3              		.section	.rodata.str1.1,"aMS",@progbits,1
   4              	.LC0:
   5 0000 4A756E6B 		.string	"Junk start code at line %lu"
   5      20737461 
   5      72742063 
   5      6F646520 
   5      6174206C 
   6              	.LC1:
   7 001c 4A756E6B 		.string	"Junk byte count at line %lu"
   7      20627974 
   7      6520636F 
   7      756E7420 
   7      6174206C 
   8              	.LC2:
   9 0038 4A756E6B 		.string	"Junk address MSB at line %lu"
   9      20616464 
   9      72657373 
   9      204D5342 
   9      20617420 
  10              	.LC3:
  11 0055 4A756E6B 		.string	"Junk address LSB at line %lu"
  11      20616464 
  11      72657373 
  11      204C5342 
  11      20617420 
  12              	.LC4:
  13 0072 4A756E6B 		.string	"Junk record type at line %lu"
  13      20726563 
  13      6F726420 
  13      74797065 
  13      20617420 
  14              	.LC5:
  15 008f 4A756E6B 		.string	"Junk data byte %d at line %lu"
  15      20646174 
  15      61206279 
  15      74652025 
  15      64206174 
  16              	.LC6:
  17 00ad 4A756E6B 		.string	"Junk checksum at line %lu"
  17      20636865 
  17      636B7375 
  17      6D206174 
  17      206C696E 
  18              		.section	.rodata.str1.8,"aMS",@progbits,1
  19              		.align 8
  20              	.LC7:
  21 0000 52656164 		.string	"Read checksum 0x%02X differs from calculated checksum 0x%02X at line %lu"
  21      20636865 
  21      636B7375 
  21      6D203078 
  21      25303258 
  22              		.section	.rodata.str1.1
  23              	.LC8:
  24 00c7 3A253032 		.string	":%02X%04X%02X"
  24      58253034 
  24      58253032 
  24      5800
  25              	.LC9:
  26 00d5 25303258 		.string	"%02X"
  26      00
  27              		.section	.rodata.str1.8
  28 0049 00000000 		.align 8
  28      000000
  29              	.LC10:
  30 0050 536F6D65 		.string	"Some corruption detected at line %lu - some junk at the end of the line perhaps?"
  30      20636F72 
  30      72757074 
  30      696F6E20 
  30      64657465 
  31 00a1 00000000 		.align 8
  31      000000
  32              	.LC11:
  33 00a8 466F7220 		.string	"For record type EXT_SEG_RECORD, address must be 0x0000 and byteCount must be 0x02 at line
  33      7265636F 
  33      72642074 
  33      79706520 
  33      4558545F 
  34 0106 0000     		.align 8
  35              	.LC12:
  36 0108 5265636F 		.string	"Record type START_SEG_RECORD not supported at line %lu"
  36      72642074 
  36      79706520 
  36      53544152 
  36      545F5345 
  37 013f 00       		.align 8
  38              	.LC13:
  39 0140 5265636F 		.string	"Record type EXT_LIN_RECORD not supported at line %lu"
  39      72642074 
  39      79706520 
  39      4558545F 
  39      4C494E5F 
  40 0175 000000   		.align 8
  41              	.LC14:
  42 0178 5265636F 		.string	"Record type START_LIN_RECORD not supported at line %lu"
  42      72642074 
  42      79706520 
  42      53544152 
  42      545F4C49 
  43 01af 00       		.align 8
  44              	.LC15:
  45 01b0 5265636F 		.string	"Record type 0x%02X not supported at line %lu"
  45      72642074 
  45      79706520 
  45      30782530 
  45      3258206E 
  46              		.text
  47              		.p2align 4
  48              		.globl	bufProcessLine
  50              	bufProcessLine:
  51              	.LFB24:
  52              		.cfi_startproc
  53 0000 F30F1EFA 		endbr64
  54 0004 4157     		pushq	%r15
  55              		.cfi_def_cfa_offset 16
  56              		.cfi_offset 15, -16
  57 0006 4156     		pushq	%r14
  58              		.cfi_def_cfa_offset 24
  59              		.cfi_offset 14, -24
  60 0008 4155     		pushq	%r13
  61              		.cfi_def_cfa_offset 32
  62              		.cfi_offset 13, -32
  63 000a 4154     		pushq	%r12
  64              		.cfi_def_cfa_offset 40
  65              		.cfi_offset 12, -40
  66 000c 55       		pushq	%rbp
  67              		.cfi_def_cfa_offset 48
  68              		.cfi_offset 6, -48
  69 000d 53       		pushq	%rbx
  70              		.cfi_def_cfa_offset 56
  71              		.cfi_offset 3, -56
  72 000e 4881EC58 		subq	$856, %rsp
  72      030000
  73              		.cfi_def_cfa_offset 912
  74 0015 89742404 		movl	%esi, 4(%rsp)
  75 0019 4C8BAC24 		movq	912(%rsp), %r13
  75      90030000 
  76 0021 48895424 		movq	%rdx, 32(%rsp)
  76      20
  77 0026 48894C24 		movq	%rcx, 24(%rsp)
  77      18
  78 002b 4C894424 		movq	%r8, 16(%rsp)
  78      10
  79 0030 4C894C24 		movq	%r9, 8(%rsp)
  79      08
  80 0035 64488B04 		movq	%fs:40, %rax
  80      25280000 
  80      00
  81 003e 48898424 		movq	%rax, 840(%rsp)
  81      48030000 
  82 0046 31C0     		xorl	%eax, %eax
  83 0048 803F3A   		cmpb	$58, (%rdi)
  84 004b 0F85E700 		jne	.L41
  84      0000
  85 0051 4889FD   		movq	%rdi, %rbp
  86 0054 488D7424 		leaq	62(%rsp), %rsi
  86      3E
  87 0059 488D7F01 		leaq	1(%rdi), %rdi
  88 005d E8000000 		call	getHexByte@PLT
  88      00
  89 0062 84C0     		testb	%al, %al
  90 0064 0F853601 		jne	.L42
  90      0000
  91 006a 4C8D6424 		leaq	61(%rsp), %r12
  91      3D
  92 006f 488D7D03 		leaq	3(%rbp), %rdi
  93 0073 0FB65C24 		movzbl	62(%rsp), %ebx
  93      3E
  94 0078 4C89E6   		movq	%r12, %rsi
  95 007b E8000000 		call	getHexByte@PLT
  95      00
  96 0080 84C0     		testb	%al, %al
  97 0082 0F85F800 		jne	.L43
  97      0000
  98 0088 0FB64424 		movzbl	61(%rsp), %eax
  98      3D
  99 008d 488D7D05 		leaq	5(%rbp), %rdi
 100 0091 4C89E6   		movq	%r12, %rsi
 101 0094 01C3     		addl	%eax, %ebx
 102 0096 88442428 		movb	%al, 40(%rsp)
 103 009a E8000000 		call	getHexByte@PLT
 103      00
 104 009f 84C0     		testb	%al, %al
 105 00a1 0F857902 		jne	.L44
 105      0000
 106 00a7 0FB64424 		movzbl	61(%rsp), %eax
 106      3D
 107 00ac 488B7424 		movq	8(%rsp), %rsi
 107      08
 108 00b1 488D7D07 		leaq	7(%rbp), %rdi
 109 00b5 01C3     		addl	%eax, %ebx
 110 00b7 8844242E 		movb	%al, 46(%rsp)
 111 00bb E8000000 		call	getHexByte@PLT
 111      00
 112 00c0 84C0     		testb	%al, %al
 113 00c2 0F859803 		jne	.L45
 113      0000
 114 00c8 488B4424 		movq	8(%rsp), %rax
 114      08
 115 00cd 4C8D7509 		leaq	9(%rbp), %r14
 116 00d1 0218     		addb	(%rax), %bl
 117 00d3 807C243E 		cmpb	$0, 62(%rsp)
 117      00
 118 00d8 0F84E200 		je	.L8
 118      0000
 119 00de 4531FF   		xorl	%r15d, %r15d
 120 00e1 EB23     		jmp	.L10
 121              		.p2align 4,,10
 122 00e3 0F1F4400 		.p2align 3
 122      00
 123              	.L9:
 124 00e8 0FB64424 		movzbl	61(%rsp), %eax
 124      3D
 125 00ed 4983C602 		addq	$2, %r14
 126 00f1 4183C701 		addl	$1, %r15d
 127 00f5 88441440 		movb	%al, 64(%rsp,%rdx)
 128 00f9 01C3     		addl	%eax, %ebx
 129 00fb 443A7C24 		cmpb	62(%rsp), %r15b
 129      3E
 130 0100 0F83BA00 		jnb	.L8
 130      0000
 131              	.L10:
 132 0106 4C89E6   		movq	%r12, %rsi
 133 0109 4C89F7   		movq	%r14, %rdi
 134 010c E8000000 		call	getHexByte@PLT
 134      00
 135 0111 410FB6D7 		movzbl	%r15b, %edx
 136 0115 84C0     		testb	%al, %al
 137 0117 74CF     		je	.L9
 138 0119 8B4C2404 		movl	4(%rsp), %ecx
 139 011d 31C0     		xorl	%eax, %eax
 140 011f 488D3500 		leaq	.LC5(%rip), %rsi
 140      000000
 141 0126 4C89EF   		movq	%r13, %rdi
 142 0129 E8000000 		call	errRender@PLT
 142      00
 143 012e B80D0000 		movl	$13, %eax
 143      00
 144 0133 EB19     		jmp	.L1
 145              		.p2align 4,,10
 146 0135 0F1F00   		.p2align 3
 147              	.L41:
 148 0138 89F2     		movl	%esi, %edx
 149 013a 4C89EF   		movq	%r13, %rdi
 150 013d 488D3500 		leaq	.LC0(%rip), %rsi
 150      000000
 151 0144 E8000000 		call	errRender@PLT
 151      00
 152 0149 B8070000 		movl	$7, %eax
 152      00
 153              	.L1:
 154 014e 488B9424 		movq	840(%rsp), %rdx
 154      48030000 
 155 0156 64482B14 		subq	%fs:40, %rdx
 155      25280000 
 155      00
 156 015f 0F85A503 		jne	.L46
 156      0000
 157 0165 4881C458 		addq	$856, %rsp
 157      030000
 158              		.cfi_remember_state
 159              		.cfi_def_cfa_offset 56
 160 016c 5B       		popq	%rbx
 161              		.cfi_def_cfa_offset 48
 162 016d 5D       		popq	%rbp
 163              		.cfi_def_cfa_offset 40
 164 016e 415C     		popq	%r12
 165              		.cfi_def_cfa_offset 32
 166 0170 415D     		popq	%r13
 167              		.cfi_def_cfa_offset 24
 168 0172 415E     		popq	%r14
 169              		.cfi_def_cfa_offset 16
 170 0174 415F     		popq	%r15
 171              		.cfi_def_cfa_offset 8
 172 0176 C3       		ret
 173 0177 660F1F84 		.p2align 4,,10
 173      00000000 
 173      00
 174              		.p2align 3
 175              	.L43:
 176              		.cfi_restore_state
 177 0180 8B542404 		movl	4(%rsp), %edx
 178 0184 31C0     		xorl	%eax, %eax
 179 0186 488D3500 		leaq	.LC2(%rip), %rsi
 179      000000
 180 018d 4C89EF   		movq	%r13, %rdi
 181 0190 E8000000 		call	errRender@PLT
 181      00
 182 0195 B8090000 		movl	$9, %eax
 182      00
 183 019a EBB2     		jmp	.L1
 184 019c 0F1F4000 		.p2align 4,,10
 185              		.p2align 3
 186              	.L42:
 187 01a0 8B542404 		movl	4(%rsp), %edx
 188 01a4 31C0     		xorl	%eax, %eax
 189 01a6 488D3500 		leaq	.LC1(%rip), %rsi
 189      000000
 190 01ad 4C89EF   		movq	%r13, %rdi
 191 01b0 E8000000 		call	errRender@PLT
 191      00
 192 01b5 B8080000 		movl	$8, %eax
 192      00
 193 01ba EB92     		jmp	.L1
 194 01bc 0F1F4000 		.p2align 4,,10
 195              		.p2align 3
 196              	.L8:
 197 01c0 488D7424 		leaq	63(%rsp), %rsi
 197      3F
 198 01c5 4C89F7   		movq	%r14, %rdi
 199 01c8 E8000000 		call	getHexByte@PLT
 199      00
 200 01cd 84C0     		testb	%al, %al
 201 01cf 0F85AA02 		jne	.L47
 201      0000
 202 01d5 0FB65424 		movzbl	63(%rsp), %edx
 202      3F
 203 01da F7DB     		negl	%ebx
 204 01dc 38DA     		cmpb	%bl, %dl
 205 01de 0F855402 		jne	.L48
 205      0000
 206 01e4 0FB74424 		movzwl	40(%rsp), %eax
 206      28
 207 01e9 440FB67C 		movzbl	46(%rsp), %r15d
 207      242E
 208 01ef 488D9C24 		leaq	320(%rsp), %rbx
 208      40010000 
 209 01f7 4883EC08 		subq	$8, %rsp
 210              		.cfi_def_cfa_offset 920
 211 01fb BA000200 		movl	$512, %edx
 211      00
 212 0200 488D0D00 		leaq	.LC8(%rip), %rcx
 212      000000
 213 0207 BE010000 		movl	$1, %esi
 213      00
 214 020c 4889DF   		movq	%rbx, %rdi
 215 020f C1E008   		sall	$8, %eax
 216 0212 4109C7   		orl	%eax, %r15d
 217 0215 450FB7CF 		movzwl	%r15w, %r9d
 218 0219 6644897C 		movw	%r15w, 54(%rsp)
 218      2436
 219 021f 44894C24 		movl	%r9d, 48(%rsp)
 219      30
 220 0224 488B4424 		movq	16(%rsp), %rax
 220      10
 221 0229 0FB600   		movzbl	(%rax), %eax
 222 022c 50       		pushq	%rax
 223              		.cfi_def_cfa_offset 928
 224 022d 440FB644 		movzbl	78(%rsp), %r8d
 224      244E
 225 0233 31C0     		xorl	%eax, %eax
 226 0235 E8000000 		call	__sprintf_chk@PLT
 226      00
 227 023a 58       		popq	%rax
 228              		.cfi_def_cfa_offset 920
 229 023b 5A       		popq	%rdx
 230              		.cfi_def_cfa_offset 912
 231 023c 807C243E 		cmpb	$0, 62(%rsp)
 231      00
 232 0241 0F847602 		je	.L32
 232      0000
 233 0247 4531FF   		xorl	%r15d, %r15d
 234 024a 4C8D2500 		leaq	.LC9(%rip), %r12
 234      000000
 235              		.p2align 4,,10
 236 0251 0F1F8000 		.p2align 3
 236      000000
 237              	.L14:
 238 0258 410FB6C7 		movzbl	%r15b, %eax
 239 025c 4C89E1   		movq	%r12, %rcx
 240 025f 48C7C2FF 		movq	$-1, %rdx
 240      FFFFFF
 241 0266 BE010000 		movl	$1, %esi
 241      00
 242 026b 440FB644 		movzbl	64(%rsp,%rax), %r8d
 242      0440
 243 0271 488D7C43 		leaq	9(%rbx,%rax,2), %rdi
 243      09
 244 0276 31C0     		xorl	%eax, %eax
 245 0278 4183C701 		addl	$1, %r15d
 246 027c E8000000 		call	__sprintf_chk@PLT
 246      00
 247 0281 0FB64424 		movzbl	62(%rsp), %eax
 247      3E
 248 0286 4138C7   		cmpb	%al, %r15b
 249 0289 72CD     		jb	.L14
 250 028b 488D7C00 		leaq	9(%rax,%rax), %rdi
 250      09
 251              	.L13:
 252 0290 440FB644 		movzbl	63(%rsp), %r8d
 252      243F
 253 0296 4801DF   		addq	%rbx, %rdi
 254 0299 4C89E1   		movq	%r12, %rcx
 255 029c 31C0     		xorl	%eax, %eax
 256 029e 48C7C2FF 		movq	$-1, %rdx
 256      FFFFFF
 257 02a5 BE010000 		movl	$1, %esi
 257      00
 258 02aa E8000000 		call	__sprintf_chk@PLT
 258      00
 259 02af 410FB606 		movzbl	(%r14), %eax
 260 02b3 3C0D     		cmpb	$13, %al
 261 02b5 0F868500 		jbe	.L49
 261      0000
 262              	.L15:
 263 02bb 48C7C2FE 		movq	$-9218, %rdx
 263      DBFFFF
 264              		.p2align 4,,10
 265 02c2 660F1F44 		.p2align 3
 265      0000
 266              	.L37:
 267 02c8 410FB646 		movzbl	1(%r14), %eax
 267      01
 268 02cd 4983C601 		addq	$1, %r14
 269 02d1 3C0D     		cmpb	$13, %al
 270 02d3 77F3     		ja	.L37
 271 02d5 480FA3C2 		btq	%rax, %rdx
 272 02d9 72ED     		jc	.L37
 273              	.L16:
 274 02db 4C89F2   		movq	%r14, %rdx
 275 02de 4889DE   		movq	%rbx, %rsi
 276 02e1 4889EF   		movq	%rbp, %rdi
 277 02e4 4829EA   		subq	%rbp, %rdx
 278 02e7 E8000000 		call	strncmp@PLT
 278      00
 279 02ec 85C0     		testl	%eax, %eax
 280 02ee 0F85AA01 		jne	.L50
 280      0000
 281 02f4 488B4424 		movq	8(%rsp), %rax
 281      08
 282 02f9 0FB600   		movzbl	(%rax), %eax
 283 02fc 84C0     		testb	%al, %al
 284 02fe 7453     		je	.L51
 285 0300 3C05     		cmpb	$5, %al
 286 0302 0F87C601 		ja	.L22
 286      0000
 287 0308 488D0D00 		leaq	.L24(%rip), %rcx
 287      000000
 288 030f 0FB6D0   		movzbl	%al, %edx
 289 0312 48631491 		movslq	(%rcx,%rdx,4), %rdx
 290 0316 4801CA   		addq	%rcx, %rdx
 291 0319 3EFFE2   		notrack jmp	*%rdx
 292              		.section	.rodata
 293              		.align 4
 294              		.align 4
 295              	.L24:
 296 0000 00000000 		.long	.L22-.L24
 297 0004 00000000 		.long	.L21-.L24
 298 0008 00000000 		.long	.L27-.L24
 299 000c 00000000 		.long	.L26-.L24
 300 0010 00000000 		.long	.L25-.L24
 301 0014 00000000 		.long	.L23-.L24
 302              		.text
 303 031c 0F1F4000 		.p2align 4,,10
 304              		.p2align 3
 305              	.L44:
 306 0320 8B542404 		movl	4(%rsp), %edx
 307 0324 31C0     		xorl	%eax, %eax
 308 0326 488D3500 		leaq	.LC3(%rip), %rsi
 308      000000
 309 032d 4C89EF   		movq	%r13, %rdi
 310 0330 E8000000 		call	errRender@PLT
 310      00
 311 0335 B80A0000 		movl	$10, %eax
 311      00
 312 033a E90FFEFF 		jmp	.L1
 312      FF
 313 033f 90       		.p2align 4,,10
 314              		.p2align 3
 315              	.L49:
 316 0340 48C7C2FE 		movq	$-9218, %rdx
 316      DBFFFF
 317 0347 480FA3C2 		btq	%rax, %rdx
 318 034b 0F826AFF 		jc	.L15
 318      FFFF
 319 0351 EB88     		jmp	.L16
 320              	.L51:
 321 0353 488B4424 		movq	16(%rsp), %rax
 321      10
 322 0358 8B742428 		movl	40(%rsp), %esi
 323 035c 488D5424 		leaq	64(%rsp), %rdx
 323      40
 324 0361 4D89E8   		movq	%r13, %r8
 325 0364 0FB64C24 		movzbl	62(%rsp), %ecx
 325      3E
 326 0369 488B7C24 		movq	32(%rsp), %rdi
 326      20
 327 036e 0330     		addl	(%rax), %esi
 328 0370 E8000000 		call	bufWriteBlock@PLT
 328      00
 329 0375 85C0     		testl	%eax, %eax
 330 0377 0F85D1FD 		jne	.L1
 330      FFFF
 331 037d 48837C24 		cmpq	$0, 24(%rsp)
 331      1800
 332 0383 0F84A100 		je	.L21
 332      0000
 333 0389 488B4424 		movq	16(%rsp), %rax
 333      10
 334 038e 8B742428 		movl	40(%rsp), %esi
 335 0392 4D89E8   		movq	%r13, %r8
 336 0395 BA010000 		movl	$1, %edx
 336      00
 337 039a 0FB64C24 		movzbl	62(%rsp), %ecx
 337      3E
 338 039f 488B7C24 		movq	24(%rsp), %rdi
 338      18
 339 03a4 0330     		addl	(%rax), %esi
 340 03a6 E8000000 		call	bufWriteConst@PLT
 340      00
 341 03ab E99EFDFF 		jmp	.L1
 341      FF
 342              	.L23:
 343 03b0 8B542404 		movl	4(%rsp), %edx
 344 03b4 488D3500 		leaq	.LC14(%rip), %rsi
 344      000000
 345 03bb 4C89EF   		movq	%r13, %rdi
 346 03be 31C0     		xorl	%eax, %eax
 347 03c0 E8000000 		call	errRender@PLT
 347      00
 348              	.L30:
 349 03c5 B80C0000 		movl	$12, %eax
 349      00
 350 03ca E97FFDFF 		jmp	.L1
 350      FF
 351              	.L25:
 352 03cf 8B542404 		movl	4(%rsp), %edx
 353 03d3 488D3500 		leaq	.LC13(%rip), %rsi
 353      000000
 354 03da 4C89EF   		movq	%r13, %rdi
 355 03dd 31C0     		xorl	%eax, %eax
 356 03df E8000000 		call	errRender@PLT
 356      00
 357 03e4 EBDF     		jmp	.L30
 358              	.L26:
 359 03e6 8B542404 		movl	4(%rsp), %edx
 360 03ea 488D3500 		leaq	.LC12(%rip), %rsi
 360      000000
 361 03f1 4C89EF   		movq	%r13, %rdi
 362 03f4 31C0     		xorl	%eax, %eax
 363 03f6 E8000000 		call	errRender@PLT
 363      00
 364 03fb EBC8     		jmp	.L30
 365              	.L27:
 366 03fd 66837C24 		cmpw	$0, 46(%rsp)
 366      2E00
 367 0403 0F85E200 		jne	.L28
 367      0000
 368 0409 807C243E 		cmpb	$2, 62(%rsp)
 368      02
 369 040e 0F85D700 		jne	.L28
 369      0000
 370 0414 0FB74424 		movzwl	64(%rsp), %eax
 370      40
 371 0419 488B4C24 		movq	16(%rsp), %rcx
 371      10
 372 041e 66C1C008 		rolw	$8, %ax
 373 0422 0FB7C0   		movzwl	%ax, %eax
 374 0425 C1E004   		sall	$4, %eax
 375 0428 8901     		movl	%eax, (%rcx)
 376              	.L21:
 377 042a 31C0     		xorl	%eax, %eax
 378 042c E91DFDFF 		jmp	.L1
 378      FF
 379              		.p2align 4,,10
 380 0431 0F1F8000 		.p2align 3
 380      000000
 381              	.L48:
 382 0438 448B4424 		movl	4(%rsp), %r8d
 382      04
 383 043d 31C0     		xorl	%eax, %eax
 384 043f 0FB6CB   		movzbl	%bl, %ecx
 385 0442 4C89EF   		movq	%r13, %rdi
 386 0445 488D3500 		leaq	.LC7(%rip), %rsi
 386      000000
 387 044c E8000000 		call	errRender@PLT
 387      00
 388 0451 B80F0000 		movl	$15, %eax
 388      00
 389 0456 E9F3FCFF 		jmp	.L1
 389      FF
 390 045b 0F1F4400 		.p2align 4,,10
 390      00
 391              		.p2align 3
 392              	.L45:
 393 0460 8B542404 		movl	4(%rsp), %edx
 394 0464 31C0     		xorl	%eax, %eax
 395 0466 488D3500 		leaq	.LC4(%rip), %rsi
 395      000000
 396 046d 4C89EF   		movq	%r13, %rdi
 397 0470 E8000000 		call	errRender@PLT
 397      00
 398 0475 B80B0000 		movl	$11, %eax
 398      00
 399 047a E9CFFCFF 		jmp	.L1
 399      FF
 400              	.L47:
 401 047f 8B542404 		movl	4(%rsp), %edx
 402 0483 31C0     		xorl	%eax, %eax
 403 0485 488D3500 		leaq	.LC6(%rip), %rsi
 403      000000
 404 048c 4C89EF   		movq	%r13, %rdi
 405 048f E8000000 		call	errRender@PLT
 405      00
 406 0494 B80E0000 		movl	$14, %eax
 406      00
 407 0499 E9B0FCFF 		jmp	.L1
 407      FF
 408              	.L50:
 409 049e 8B542404 		movl	4(%rsp), %edx
 410 04a2 31C0     		xorl	%eax, %eax
 411 04a4 488D3500 		leaq	.LC10(%rip), %rsi
 411      000000
 412 04ab 4C89EF   		movq	%r13, %rdi
 413 04ae E8000000 		call	errRender@PLT
 413      00
 414 04b3 B8100000 		movl	$16, %eax
 414      00
 415 04b8 E991FCFF 		jmp	.L1
 415      FF
 416              	.L32:
 417 04bd BF090000 		movl	$9, %edi
 417      00
 418 04c2 4C8D2500 		leaq	.LC9(%rip), %r12
 418      000000
 419 04c9 E9C2FDFF 		jmp	.L13
 419      FF
 420              	.L22:
 421 04ce 8B4C2404 		movl	4(%rsp), %ecx
 422 04d2 0FB6D0   		movzbl	%al, %edx
 423 04d5 488D3500 		leaq	.LC15(%rip), %rsi
 423      000000
 424 04dc 4C89EF   		movq	%r13, %rdi
 425 04df 31C0     		xorl	%eax, %eax
 426 04e1 E8000000 		call	errRender@PLT
 426      00
 427 04e6 E9DAFEFF 		jmp	.L30
 427      FF
 428              	.L28:
 429 04eb 8B542404 		movl	4(%rsp), %edx
 430 04ef 31C0     		xorl	%eax, %eax
 431 04f1 488D3500 		leaq	.LC11(%rip), %rsi
 431      000000
 432 04f8 4C89EF   		movq	%r13, %rdi
 433 04fb E8000000 		call	errRender@PLT
 433      00
 434 0500 B8120000 		movl	$18, %eax
 434      00
 435 0505 E944FCFF 		jmp	.L1
 435      FF
 436              	.L46:
 437 050a E8000000 		call	__stack_chk_fail@PLT
 437      00
 438              		.cfi_endproc
 439              	.LFE24:
 441              		.section	.rodata.str1.1
 442              	.LC16:
 443 00da 726200   		.string	"rb"
 444              	.LC17:
 445 00dd 456D7074 		.string	"Empty file!"
 445      79206669 
 445      6C652100 
 446              		.section	.rodata.str1.8
 447 01dd 000000   		.align 8
 448              	.LC18:
 449 01e0 5072656D 		.string	"Premature end of file - no EOF_RECORD found!"
 449      61747572 
 449      6520656E 
 449      64206F66 
 449      2066696C 
 450              		.text
 451 050f 90       		.p2align 4
 452              		.globl	bufReadFromIntelHexFile
 454              	bufReadFromIntelHexFile:
 455              	.LFB25:
 456              		.cfi_startproc
 457 0510 F30F1EFA 		endbr64
 458 0514 4157     		pushq	%r15
 459              		.cfi_def_cfa_offset 16
 460              		.cfi_offset 15, -16
 461 0516 4989CF   		movq	%rcx, %r15
 462 0519 4156     		pushq	%r14
 463              		.cfi_def_cfa_offset 24
 464              		.cfi_offset 14, -24
 465 051b 4155     		pushq	%r13
 466              		.cfi_def_cfa_offset 32
 467              		.cfi_offset 13, -32
 468 051d 4989F5   		movq	%rsi, %r13
 469 0520 488D3500 		leaq	.LC16(%rip), %rsi
 469      000000
 470 0527 4154     		pushq	%r12
 471              		.cfi_def_cfa_offset 40
 472              		.cfi_offset 12, -40
 473 0529 55       		pushq	%rbp
 474              		.cfi_def_cfa_offset 48
 475              		.cfi_offset 6, -48
 476 052a 53       		pushq	%rbx
 477              		.cfi_def_cfa_offset 56
 478              		.cfi_offset 3, -56
 479 052b 4881EC48 		subq	$584, %rsp
 479      020000
 480              		.cfi_def_cfa_offset 640
 481 0532 48897C24 		movq	%rdi, 8(%rsp)
 481      08
 482 0537 4889D7   		movq	%rdx, %rdi
 483 053a 64488B04 		movq	%fs:40, %rax
 483      25280000 
 483      00
 484 0543 48898424 		movq	%rax, 568(%rsp)
 484      38020000 
 485 054b 31C0     		xorl	%eax, %eax
 486 054d C744242C 		movl	$0, 44(%rsp)
 486      00000000 
 487 0555 E8000000 		call	fopen@PLT
 487      00
 488 055a 4885C0   		testq	%rax, %rax
 489 055d 0F841E01 		je	.L68
 489      0000
 490 0563 488B7C24 		movq	8(%rsp), %rdi
 490      08
 491 0568 4989C4   		movq	%rax, %r12
 492 056b E8000000 		call	bufZeroLength@PLT
 492      00
 493 0570 4D85ED   		testq	%r13, %r13
 494 0573 7408     		je	.L55
 495 0575 4C89EF   		movq	%r13, %rdi
 496 0578 E8000000 		call	bufZeroLength@PLT
 496      00
 497              	.L55:
 498 057d 488D6C24 		leaq	48(%rsp), %rbp
 498      30
 499 0582 4C89E2   		movq	%r12, %rdx
 500 0585 BE000200 		movl	$512, %esi
 500      00
 501 058a BB010000 		movl	$1, %ebx
 501      00
 502 058f 4889EF   		movq	%rbp, %rdi
 503 0592 E8000000 		call	fgets@PLT
 503      00
 504 0597 488D4C24 		leaq	43(%rsp), %rcx
 504      2B
 505 059c 48894C24 		movq	%rcx, 16(%rsp)
 505      10
 506 05a1 488D4C24 		leaq	44(%rsp), %rcx
 506      2C
 507 05a6 48894C24 		movq	%rcx, 24(%rsp)
 507      18
 508 05ab 4885C0   		testq	%rax, %rax
 509 05ae 7529     		jne	.L56
 510 05b0 E9AD0000 		jmp	.L69
 510      00
 511              		.p2align 4,,10
 512 05b5 0F1F00   		.p2align 3
 513              	.L57:
 514 05b8 0FB64424 		movzbl	43(%rsp), %eax
 514      2B
 515 05bd 83C301   		addl	$1, %ebx
 516 05c0 A8FD     		testb	$-3, %al
 517 05c2 7579     		jne	.L58
 518 05c4 4C89E2   		movq	%r12, %rdx
 519 05c7 BE000200 		movl	$512, %esi
 519      00
 520 05cc 4889EF   		movq	%rbp, %rdi
 521 05cf E8000000 		call	fgets@PLT
 521      00
 522 05d4 4885C0   		testq	%rax, %rax
 523 05d7 745F     		je	.L70
 524              	.L56:
 525 05d9 4883EC08 		subq	$8, %rsp
 526              		.cfi_def_cfa_offset 648
 527 05dd 4C89E9   		movq	%r13, %rcx
 528 05e0 89DE     		movl	%ebx, %esi
 529 05e2 4889EF   		movq	%rbp, %rdi
 530 05e5 4157     		pushq	%r15
 531              		.cfi_def_cfa_offset 656
 532 05e7 4C8B4C24 		movq	32(%rsp), %r9
 532      20
 533 05ec 4C8B4424 		movq	40(%rsp), %r8
 533      28
 534 05f1 488B5424 		movq	24(%rsp), %rdx
 534      18
 535 05f6 E8000000 		call	bufProcessLine@PLT
 535      00
 536 05fb 4189C6   		movl	%eax, %r14d
 537 05fe 58       		popq	%rax
 538              		.cfi_def_cfa_offset 648
 539 05ff 5A       		popq	%rdx
 540              		.cfi_def_cfa_offset 640
 541 0600 4585F6   		testl	%r14d, %r14d
 542 0603 74B3     		je	.L57
 543              	.L59:
 544 0605 4C89E7   		movq	%r12, %rdi
 545 0608 E8000000 		call	fclose@PLT
 545      00
 546              	.L52:
 547 060d 488B8424 		movq	568(%rsp), %rax
 547      38020000 
 548 0615 64482B04 		subq	%fs:40, %rax
 548      25280000 
 548      00
 549 061e 7574     		jne	.L71
 550 0620 4881C448 		addq	$584, %rsp
 550      020000
 551              		.cfi_remember_state
 552              		.cfi_def_cfa_offset 56
 553 0627 4489F0   		movl	%r14d, %eax
 554 062a 5B       		popq	%rbx
 555              		.cfi_def_cfa_offset 48
 556 062b 5D       		popq	%rbp
 557              		.cfi_def_cfa_offset 40
 558 062c 415C     		popq	%r12
 559              		.cfi_def_cfa_offset 32
 560 062e 415D     		popq	%r13
 561              		.cfi_def_cfa_offset 24
 562 0630 415E     		popq	%r14
 563              		.cfi_def_cfa_offset 16
 564 0632 415F     		popq	%r15
 565              		.cfi_def_cfa_offset 8
 566 0634 C3       		ret
 567              		.p2align 4,,10
 568 0635 0F1F00   		.p2align 3
 569              	.L70:
 570              		.cfi_restore_state
 571 0638 0FB64424 		movzbl	43(%rsp), %eax
 571      2B
 572              	.L58:
 573 063d 3C01     		cmpb	$1, %al
 574 063f 74C4     		je	.L59
 575 0641 488D3500 		leaq	.LC18(%rip), %rsi
 575      000000
 576 0648 4C89FF   		movq	%r15, %rdi
 577 064b 31C0     		xorl	%eax, %eax
 578 064d 41BE1100 		movl	$17, %r14d
 578      0000
 579 0653 E8000000 		call	errRender@PLT
 579      00
 580 0658 4C89E7   		movq	%r12, %rdi
 581 065b E8000000 		call	fclose@PLT
 581      00
 582 0660 EBAB     		jmp	.L52
 583              	.L69:
 584 0662 488D3500 		leaq	.LC17(%rip), %rsi
 584      000000
 585 0669 4C89FF   		movq	%r15, %rdi
 586 066c 41BE0600 		movl	$6, %r14d
 586      0000
 587 0672 E8000000 		call	errRender@PLT
 587      00
 588 0677 4C89E7   		movq	%r12, %rdi
 589 067a E8000000 		call	fclose@PLT
 589      00
 590 067f EB8C     		jmp	.L52
 591              	.L68:
 592 0681 4C89FF   		movq	%r15, %rdi
 593 0684 41BE0200 		movl	$2, %r14d
 593      0000
 594 068a E8000000 		call	errRenderStd@PLT
 594      00
 595 068f E979FFFF 		jmp	.L52
 595      FF
 596              	.L71:
 597 0694 E8000000 		call	__stack_chk_fail@PLT
 597      00
 598              		.cfi_endproc
 599              	.LFE25:
 601 0699 0F1F8000 		.p2align 4
 601      000000
 602              		.globl	bufDeriveMask
 604              	bufDeriveMask:
 605              	.LFB28:
 606              		.cfi_startproc
 607 06a0 F30F1EFA 		endbr64
 608 06a4 4154     		pushq	%r12
 609              		.cfi_def_cfa_offset 16
 610              		.cfi_offset 12, -16
 611 06a6 4989D4   		movq	%rdx, %r12
 612 06a9 55       		pushq	%rbp
 613              		.cfi_def_cfa_offset 24
 614              		.cfi_offset 6, -24
 615 06aa 4889F5   		movq	%rsi, %rbp
 616 06ad 53       		pushq	%rbx
 617              		.cfi_def_cfa_offset 32
 618              		.cfi_offset 3, -32
 619 06ae 4889FB   		movq	%rdi, %rbx
 620 06b1 4889F7   		movq	%rsi, %rdi
 621 06b4 E8000000 		call	bufZeroLength@PLT
 621      00
 622 06b9 8B5308   		movl	8(%rbx), %edx
 623 06bc 4C89E1   		movq	%r12, %rcx
 624 06bf BE010000 		movl	$1, %esi
 624      00
 625 06c4 4889EF   		movq	%rbp, %rdi
 626 06c7 E8000000 		call	bufAppendConst@PLT
 626      00
 627 06cc 4189C1   		movl	%eax, %r9d
 628 06cf 85C0     		testl	%eax, %eax
 629 06d1 7573     		jne	.L72
 630 06d3 8B7508   		movl	8(%rbp), %esi
 631 06d6 31C0     		xorl	%eax, %eax
 632 06d8 85F6     		testl	%esi, %esi
 633 06da 746A     		je	.L72
 634 06dc 0F1F4000 		.p2align 4,,10
 635              		.p2align 3
 636              	.L74:
 637 06e0 39F0     		cmpl	%esi, %eax
 638 06e2 731B     		jnb	.L82
 639 06e4 89C2     		movl	%eax, %edx
 640 06e6 0FB64B10 		movzbl	16(%rbx), %ecx
 641 06ea 480313   		addq	(%rbx), %rdx
 642 06ed EB0C     		jmp	.L83
 643 06ef 90       		.p2align 4,,10
 644              		.p2align 3
 645              	.L76:
 646 06f0 83C001   		addl	$1, %eax
 647 06f3 4883C201 		addq	$1, %rdx
 648 06f7 39F0     		cmpl	%esi, %eax
 649 06f9 744B     		je	.L72
 650              	.L83:
 651 06fb 380A     		cmpb	%cl, (%rdx)
 652 06fd 75F1     		jne	.L76
 653              	.L82:
 654 06ff 39F0     		cmpl	%esi, %eax
 655 0701 7443     		je	.L72
 656 0703 448D4001 		leal	1(%rax), %r8d
 657 0707 4489C1   		movl	%r8d, %ecx
 658 070a 4139F0   		cmpl	%esi, %r8d
 659 070d 7337     		jnb	.L72
 660 070f 4489C2   		movl	%r8d, %edx
 661 0712 440FB653 		movzbl	16(%rbx), %r10d
 661      10
 662 0717 480313   		addq	(%rbx), %rdx
 663 071a BF010000 		movl	$1, %edi
 663      00
 664 071f EB15     		jmp	.L77
 665              		.p2align 4,,10
 666 0721 0F1F8000 		.p2align 3
 666      000000
 667              	.L79:
 668 0728 83C101   		addl	$1, %ecx
 669 072b 83C701   		addl	$1, %edi
 670 072e 4883C201 		addq	$1, %rdx
 671 0732 39F1     		cmpl	%esi, %ecx
 672 0734 731A     		jnb	.L78
 673              	.L77:
 674 0736 443812   		cmpb	%r10b, (%rdx)
 675 0739 74ED     		je	.L79
 676 073b 83FF07   		cmpl	$7, %edi
 677 073e 7715     		ja	.L84
 678 0740 89C8     		movl	%ecx, %eax
 679              	.L80:
 680 0742 39F1     		cmpl	%esi, %ecx
 681 0744 729A     		jb	.L74
 682              	.L72:
 683 0746 5B       		popq	%rbx
 684              		.cfi_remember_state
 685              		.cfi_def_cfa_offset 24
 686 0747 4489C8   		movl	%r9d, %eax
 687 074a 5D       		popq	%rbp
 688              		.cfi_def_cfa_offset 16
 689 074b 415C     		popq	%r12
 690              		.cfi_def_cfa_offset 8
 691 074d C3       		ret
 692 074e 6690     		.p2align 4,,10
 693              		.p2align 3
 694              	.L78:
 695              		.cfi_restore_state
 696 0750 83FF07   		cmpl	$7, %edi
 697 0753 76F1     		jbe	.L72
 698              	.L84:
 699 0755 01C7     		addl	%eax, %edi
 700 0757 EB0B     		jmp	.L81
 701 0759 0F1F8000 		.p2align 4,,10
 701      000000
 702              		.p2align 3
 703              	.L91:
 704 0760 4183C001 		addl	$1, %r8d
 705              	.L81:
 706 0764 488B5500 		movq	0(%rbp), %rdx
 707 0768 C6040200 		movb	$0, (%rdx,%rax)
 708 076c 4489C0   		movl	%r8d, %eax
 709 076f 39C7     		cmpl	%eax, %edi
 710 0771 75ED     		jne	.L91
 711 0773 8B7508   		movl	8(%rbp), %esi
 712 0776 89C8     		movl	%ecx, %eax
 713 0778 EBC8     		jmp	.L80
 714              		.cfi_endproc
 715              	.LFE28:
 717              		.section	.rodata.str1.1
 718              	.LC19:
 719 00e9 776200   		.string	"wb"
 720              	.LC20:
 721 00ec 3A303030 		.string	":00000001FF\n"
 721      30303030 
 721      3146460A 
 721      00
 722              		.section	.rodata.str1.8
 723 020d 000000   		.align 8
 724              	.LC21:
 725 0210 5365676D 		.string	"Segment addresses > 0xFFFF are not supported"
 725      656E7420 
 725      61646472 
 725      65737365 
 725      73203E20 
 726              		.section	.rodata.str1.1
 727              	.LC22:
 728 00f9 3A303230 		.string	":020000"
 728      30303000 
 729              		.text
 730 077a 660F1F44 		.p2align 4
 730      0000
 731              		.globl	bufWriteToIntelHexFile
 733              	bufWriteToIntelHexFile:
 734              	.LFB29:
 735              		.cfi_startproc
 736 0780 F30F1EFA 		endbr64
 737 0784 4157     		pushq	%r15
 738              		.cfi_def_cfa_offset 16
 739              		.cfi_offset 15, -16
 740 0786 4156     		pushq	%r14
 741              		.cfi_def_cfa_offset 24
 742              		.cfi_offset 14, -24
 743 0788 4155     		pushq	%r13
 744              		.cfi_def_cfa_offset 32
 745              		.cfi_offset 13, -32
 746 078a 4154     		pushq	%r12
 747              		.cfi_def_cfa_offset 40
 748              		.cfi_offset 12, -40
 749 078c 55       		pushq	%rbp
 750              		.cfi_def_cfa_offset 48
 751              		.cfi_offset 6, -48
 752 078d 4489C5   		movl	%r8d, %ebp
 753 0790 53       		pushq	%rbx
 754              		.cfi_def_cfa_offset 56
 755              		.cfi_offset 3, -56
 756 0791 4883EC58 		subq	$88, %rsp
 757              		.cfi_def_cfa_offset 144
 758 0795 48897C24 		movq	%rdi, 8(%rsp)
 758      08
 759 079a 4889D7   		movq	%rdx, %rdi
 760 079d 48897424 		movq	%rsi, 24(%rsp)
 760      18
 761 07a2 488D3500 		leaq	.LC19(%rip), %rsi
 761      000000
 762 07a9 4C894C24 		movq	%r9, 40(%rsp)
 762      28
 763 07ae 884C2426 		movb	%cl, 38(%rsp)
 764 07b2 64488B04 		movq	%fs:40, %rax
 764      25280000 
 764      00
 765 07bb 48894424 		movq	%rax, 72(%rsp)
 765      48
 766 07c0 31C0     		xorl	%eax, %eax
 767 07c2 E8000000 		call	fopen@PLT
 767      00
 768 07c7 4885C0   		testq	%rax, %rax
 769 07ca 0F84D504 		je	.L142
 769      0000
 770 07d0 4531E4   		xorl	%r12d, %r12d
 771 07d3 48837C24 		cmpq	$0, 24(%rsp)
 771      1800
 772 07d9 4889C3   		movq	%rax, %rbx
 773 07dc 0F844A04 		je	.L143
 773      0000
 774              	.L95:
 775 07e2 0FB64C24 		movzbl	38(%rsp), %ecx
 775      26
 776 07e7 488B4424 		movq	24(%rsp), %rax
 776      18
 777 07ec 4531FF   		xorl	%r15d, %r15d
 778 07ef 4531C0   		xorl	%r8d, %r8d
 779 07f2 44886424 		movb	%r12b, 39(%rsp)
 779      27
 780 07f7 4589FE   		movl	%r15d, %r14d
 781 07fa 894C2420 		movl	%ecx, 32(%rsp)
 782 07fe 8B4008   		movl	8(%rax), %eax
 783              		.p2align 4,,10
 784 0801 0F1F8000 		.p2align 3
 784      000000
 785              	.L118:
 786 0808 458D8E00 		leal	65536(%r14), %r9d
 786      000100
 787 080f 4139C1   		cmpl	%eax, %r9d
 788 0812 440F47C8 		cmova	%eax, %r9d
 789 0816 4589CE   		movl	%r9d, %r14d
 790 0819 4539C8   		cmpl	%r9d, %r8d
 791 081c 0F83C003 		jnb	.L144
 791      0000
 792 0822 44894424 		movl	%r8d, 16(%rsp)
 792      10
 793 0827 440FB67C 		movzbl	38(%rsp), %r15d
 793      2426
 794 082d 0F1F00   		.p2align 4,,10
 795              		.p2align 3
 796              	.L125:
 797 0830 488B4C24 		movq	24(%rsp), %rcx
 797      18
 798 0835 8B442410 		movl	16(%rsp), %eax
 799 0839 488B39   		movq	(%rcx), %rdi
 800 083c 4989C4   		movq	%rax, %r12
 801 083f 4801F8   		addq	%rdi, %rax
 802 0842 EB15     		jmp	.L113
 803              		.p2align 4,,10
 804 0844 0F1F4000 		.p2align 3
 805              	.L103:
 806 0848 4183C401 		addl	$1, %r12d
 807 084c 4883C001 		addq	$1, %rax
 808 0850 4539F4   		cmpl	%r14d, %r12d
 809 0853 0F845703 		je	.L121
 809      0000
 810              	.L113:
 811 0859 803800   		cmpb	$0, (%rax)
 812 085c 74EA     		je	.L103
 813 085e 4539E6   		cmpl	%r12d, %r14d
 814 0861 0F844903 		je	.L121
 814      0000
 815 0867 8B442420 		movl	32(%rsp), %eax
 816 086b 4489F6   		movl	%r14d, %esi
 817 086e 4489E5   		movl	%r12d, %ebp
 818 0871 4429E6   		subl	%r12d, %esi
 819 0874 4401E0   		addl	%r12d, %eax
 820 0877 4139C6   		cmpl	%eax, %r14d
 821 087a 410F43F7 		cmovnb	%r15d, %esi
 822 087e 4084F6   		testb	%sil, %sil
 823 0881 0F844B03 		je	.L123
 823      0000
 824 0887 4489E2   		movl	%r12d, %edx
 825 088a 4531C9   		xorl	%r9d, %r9d
 826 088d EB11     		jmp	.L108
 827 088f 90       		.p2align 4,,10
 828              		.p2align 3
 829              	.L109:
 830 0890 4183C101 		addl	$1, %r9d
 831 0894 83C201   		addl	$1, %edx
 832 0897 4438CE   		cmpb	%r9b, %sil
 833 089a 0F842003 		je	.L145
 833      0000
 834              	.L108:
 835 08a0 89D0     		movl	%edx, %eax
 836 08a2 803C0700 		cmpb	$0, (%rdi,%rax)
 837 08a6 75E8     		jne	.L109
 838 08a8 89542410 		movl	%edx, 16(%rsp)
 839 08ac 450FB6E9 		movzbl	%r9b, %r13d
 840              	.L107:
 841 08b0 4889DE   		movq	%rbx, %rsi
 842 08b3 BF3A0000 		movl	$58, %edi
 842      00
 843 08b8 44884C24 		movb	%r9b, 20(%rsp)
 843      14
 844 08bd E8000000 		call	fputc@PLT
 844      00
 845 08c2 4489EF   		movl	%r13d, %edi
 846 08c5 E8000000 		call	getHexUpperNibble@PLT
 846      00
 847 08ca 4889DE   		movq	%rbx, %rsi
 848 08cd 0FBEF8   		movsbl	%al, %edi
 849 08d0 E8000000 		call	fputc@PLT
 849      00
 850 08d5 4489EF   		movl	%r13d, %edi
 851 08d8 E8000000 		call	getHexLowerNibble@PLT
 851      00
 852 08dd 4889DE   		movq	%rbx, %rsi
 853 08e0 0FBEF8   		movsbl	%al, %edi
 854 08e3 E8000000 		call	fputc@PLT
 854      00
 855 08e8 4489E0   		movl	%r12d, %eax
 856 08eb 0FB6C4   		movzbl	%ah, %eax
 857 08ee 89C7     		movl	%eax, %edi
 858 08f0 4189C5   		movl	%eax, %r13d
 859 08f3 E8000000 		call	getHexUpperNibble@PLT
 859      00
 860 08f8 4889DE   		movq	%rbx, %rsi
 861 08fb 0FBEF8   		movsbl	%al, %edi
 862 08fe E8000000 		call	fputc@PLT
 862      00
 863 0903 4489EF   		movl	%r13d, %edi
 864 0906 450FB6EC 		movzbl	%r12b, %r13d
 865 090a E8000000 		call	getHexLowerNibble@PLT
 865      00
 866 090f 4889DE   		movq	%rbx, %rsi
 867 0912 0FBEF8   		movsbl	%al, %edi
 868 0915 E8000000 		call	fputc@PLT
 868      00
 869 091a 4489EF   		movl	%r13d, %edi
 870 091d E8000000 		call	getHexUpperNibble@PLT
 870      00
 871 0922 4889DE   		movq	%rbx, %rsi
 872 0925 0FBEF8   		movsbl	%al, %edi
 873 0928 E8000000 		call	fputc@PLT
 873      00
 874 092d 4489EF   		movl	%r13d, %edi
 875 0930 E8000000 		call	getHexLowerNibble@PLT
 875      00
 876 0935 4889DE   		movq	%rbx, %rsi
 877 0938 0FBEF8   		movsbl	%al, %edi
 878 093b E8000000 		call	fputc@PLT
 878      00
 879 0940 31FF     		xorl	%edi, %edi
 880 0942 E8000000 		call	getHexUpperNibble@PLT
 880      00
 881 0947 4889DE   		movq	%rbx, %rsi
 882 094a 0FBEF8   		movsbl	%al, %edi
 883 094d E8000000 		call	fputc@PLT
 883      00
 884 0952 31FF     		xorl	%edi, %edi
 885 0954 E8000000 		call	getHexLowerNibble@PLT
 885      00
 886 0959 4889DE   		movq	%rbx, %rsi
 887 095c 0FBEF8   		movsbl	%al, %edi
 888 095f E8000000 		call	fputc@PLT
 888      00
 889 0964 4489E0   		movl	%r12d, %eax
 890 0967 440FB64C 		movzbl	20(%rsp), %r9d
 890      2414
 891 096d C1E808   		shrl	$8, %eax
 892 0970 01C5     		addl	%eax, %ebp
 893 0972 4401CD   		addl	%r9d, %ebp
 894 0975 4584C9   		testb	%r9b, %r9b
 895 0978 7474     		je	.L110
 896 097a 488B4424 		movq	8(%rsp), %rax
 896      08
 897 097f 44887C24 		movb	%r15b, 37(%rsp)
 897      25
 898 0984 450FB6E9 		movzbl	%r9b, %r13d
 899 0988 44897424 		movl	%r14d, 20(%rsp)
 899      14
 900 098d 4501E5   		addl	%r12d, %r13d
 901 0990 4589E6   		movl	%r12d, %r14d
 902 0993 488B00   		movq	(%rax), %rax
 903 0996 662E0F1F 		.p2align 4,,10
 903      84000000 
 903      0000
 904              		.p2align 3
 905              	.L111:
 906 09a0 4589F7   		movl	%r14d, %r15d
 907 09a3 4183C601 		addl	$1, %r14d
 908 09a7 460FB624 		movzbl	(%rax,%r15), %r12d
 908      38
 909 09ac 4489E7   		movl	%r12d, %edi
 910 09af E8000000 		call	getHexUpperNibble@PLT
 910      00
 911 09b4 4889DE   		movq	%rbx, %rsi
 912 09b7 0FBEF8   		movsbl	%al, %edi
 913 09ba E8000000 		call	fputc@PLT
 913      00
 914 09bf 4489E7   		movl	%r12d, %edi
 915 09c2 E8000000 		call	getHexLowerNibble@PLT
 915      00
 916 09c7 4889DE   		movq	%rbx, %rsi
 917 09ca 0FBEF8   		movsbl	%al, %edi
 918 09cd E8000000 		call	fputc@PLT
 918      00
 919 09d2 488B4424 		movq	8(%rsp), %rax
 919      08
 920 09d7 488B00   		movq	(%rax), %rax
 921 09da 42022C38 		addb	(%rax,%r15), %bpl
 922 09de 4539EE   		cmpl	%r13d, %r14d
 923 09e1 75BD     		jne	.L111
 924 09e3 448B7424 		movl	20(%rsp), %r14d
 924      14
 925 09e8 440FB67C 		movzbl	37(%rsp), %r15d
 925      2425
 926              	.L110:
 927 09ee F7DD     		negl	%ebp
 928 09f0 400FB6ED 		movzbl	%bpl, %ebp
 929 09f4 89EF     		movl	%ebp, %edi
 930 09f6 E8000000 		call	getHexUpperNibble@PLT
 930      00
 931 09fb 4889DE   		movq	%rbx, %rsi
 932 09fe 0FBEF8   		movsbl	%al, %edi
 933 0a01 E8000000 		call	fputc@PLT
 933      00
 934 0a06 89EF     		movl	%ebp, %edi
 935 0a08 E8000000 		call	getHexLowerNibble@PLT
 935      00
 936 0a0d 4889DE   		movq	%rbx, %rsi
 937 0a10 0FBEF8   		movsbl	%al, %edi
 938 0a13 E8000000 		call	fputc@PLT
 938      00
 939 0a18 4889DE   		movq	%rbx, %rsi
 940 0a1b BF0A0000 		movl	$10, %edi
 940      00
 941 0a20 E8000000 		call	fputc@PLT
 941      00
 942 0a25 44397424 		cmpl	%r14d, 16(%rsp)
 942      10
 943 0a2a 0F8200FE 		jb	.L125
 943      FFFF
 944 0a30 448B4424 		movl	16(%rsp), %r8d
 944      10
 945              		.p2align 4,,10
 946 0a35 0F1F00   		.p2align 3
 947              	.L141:
 948 0a38 488B4424 		movq	24(%rsp), %rax
 948      18
 949 0a3d 8B4008   		movl	8(%rax), %eax
 950 0a40 4139C0   		cmpl	%eax, %r8d
 951 0a43 0F830D01 		jnb	.L139
 951      0000
 952 0a49 4489C5   		movl	%r8d, %ebp
 953 0a4c C1ED04   		shrl	$4, %ebp
 954 0a4f 4181F8FF 		cmpl	$1048575, %r8d
 954      FF0F00
 955 0a56 0F87AC01 		ja	.L146
 955      0000
 956              	.L115:
 957 0a5c 4889D9   		movq	%rbx, %rcx
 958 0a5f BA070000 		movl	$7, %edx
 958      00
 959 0a64 BE010000 		movl	$1, %esi
 959      00
 960 0a69 44894424 		movl	%r8d, 16(%rsp)
 960      10
 961 0a6e 488D3D00 		leaq	.LC22(%rip), %rdi
 961      000000
 962 0a75 E8000000 		call	fwrite@PLT
 962      00
 963 0a7a BF020000 		movl	$2, %edi
 963      00
 964 0a7f E8000000 		call	getHexUpperNibble@PLT
 964      00
 965 0a84 4889DE   		movq	%rbx, %rsi
 966 0a87 0FBEF8   		movsbl	%al, %edi
 967 0a8a E8000000 		call	fputc@PLT
 967      00
 968 0a8f BF020000 		movl	$2, %edi
 968      00
 969 0a94 E8000000 		call	getHexLowerNibble@PLT
 969      00
 970 0a99 4889DE   		movq	%rbx, %rsi
 971 0a9c 0FBEF8   		movsbl	%al, %edi
 972 0a9f E8000000 		call	fputc@PLT
 972      00
 973 0aa4 89E8     		movl	%ebp, %eax
 974 0aa6 0FB6C4   		movzbl	%ah, %eax
 975 0aa9 89C7     		movl	%eax, %edi
 976 0aab 4189C5   		movl	%eax, %r13d
 977 0aae E8000000 		call	getHexUpperNibble@PLT
 977      00
 978 0ab3 4889DE   		movq	%rbx, %rsi
 979 0ab6 0FBEF8   		movsbl	%al, %edi
 980 0ab9 E8000000 		call	fputc@PLT
 980      00
 981 0abe 4489EF   		movl	%r13d, %edi
 982 0ac1 440FB6ED 		movzbl	%bpl, %r13d
 983 0ac5 E8000000 		call	getHexLowerNibble@PLT
 983      00
 984 0aca 4889DE   		movq	%rbx, %rsi
 985 0acd 0FBEF8   		movsbl	%al, %edi
 986 0ad0 E8000000 		call	fputc@PLT
 986      00
 987 0ad5 4489EF   		movl	%r13d, %edi
 988 0ad8 E8000000 		call	getHexUpperNibble@PLT
 988      00
 989 0add 4889DE   		movq	%rbx, %rsi
 990 0ae0 0FBEF8   		movsbl	%al, %edi
 991 0ae3 E8000000 		call	fputc@PLT
 991      00
 992 0ae8 4489EF   		movl	%r13d, %edi
 993 0aeb E8000000 		call	getHexLowerNibble@PLT
 993      00
 994 0af0 4889DE   		movq	%rbx, %rsi
 995 0af3 0FBEF8   		movsbl	%al, %edi
 996 0af6 E8000000 		call	fputc@PLT
 996      00
 997 0afb 8B442410 		movl	16(%rsp), %eax
 998 0aff C1E80C   		shrl	$12, %eax
 999 0b02 01E8     		addl	%ebp, %eax
 1000 0b04 BDFCFFFF 		movl	$-4, %ebp
 1000      FF
 1001 0b09 29C5     		subl	%eax, %ebp
 1002 0b0b 400FB6ED 		movzbl	%bpl, %ebp
 1003 0b0f 89EF     		movl	%ebp, %edi
 1004 0b11 E8000000 		call	getHexUpperNibble@PLT
 1004      00
 1005 0b16 4889DE   		movq	%rbx, %rsi
 1006 0b19 0FBEF8   		movsbl	%al, %edi
 1007 0b1c E8000000 		call	fputc@PLT
 1007      00
 1008 0b21 89EF     		movl	%ebp, %edi
 1009 0b23 E8000000 		call	getHexLowerNibble@PLT
 1009      00
 1010 0b28 4889DE   		movq	%rbx, %rsi
 1011 0b2b 0FBEF8   		movsbl	%al, %edi
 1012 0b2e E8000000 		call	fputc@PLT
 1012      00
 1013 0b33 4889DE   		movq	%rbx, %rsi
 1014 0b36 BF0A0000 		movl	$10, %edi
 1014      00
 1015 0b3b E8000000 		call	fputc@PLT
 1015      00
 1016 0b40 488B4424 		movq	24(%rsp), %rax
 1016      18
 1017 0b45 448B4424 		movl	16(%rsp), %r8d
 1017      10
 1018 0b4a 8B4008   		movl	8(%rax), %eax
 1019 0b4d 4139C0   		cmpl	%eax, %r8d
 1020 0b50 0F82B2FC 		jb	.L118
 1020      FFFF
 1021              	.L139:
 1022 0b56 4889D9   		movq	%rbx, %rcx
 1023 0b59 BA0C0000 		movl	$12, %edx
 1023      00
 1024 0b5e BE010000 		movl	$1, %esi
 1024      00
 1025 0b63 4531ED   		xorl	%r13d, %r13d
 1026 0b66 488D3D00 		leaq	.LC20(%rip), %rdi
 1026      000000
 1027 0b6d 440FB664 		movzbl	39(%rsp), %r12d
 1027      2427
 1028 0b73 E8000000 		call	fwrite@PLT
 1028      00
 1029              	.L117:
 1030 0b78 4584E4   		testb	%r12b, %r12b
 1031 0b7b 7579     		jne	.L147
 1032              	.L96:
 1033 0b7d 4889DF   		movq	%rbx, %rdi
 1034 0b80 E8000000 		call	fclose@PLT
 1034      00
 1035              	.L92:
 1036 0b85 488B4424 		movq	72(%rsp), %rax
 1036      48
 1037 0b8a 64482B04 		subq	%fs:40, %rax
 1037      25280000 
 1037      00
 1038 0b93 0F852101 		jne	.L148
 1038      0000
 1039 0b99 4883C458 		addq	$88, %rsp
 1040              		.cfi_remember_state
 1041              		.cfi_def_cfa_offset 56
 1042 0b9d 4489E8   		movl	%r13d, %eax
 1043 0ba0 5B       		popq	%rbx
 1044              		.cfi_def_cfa_offset 48
 1045 0ba1 5D       		popq	%rbp
 1046              		.cfi_def_cfa_offset 40
 1047 0ba2 415C     		popq	%r12
 1048              		.cfi_def_cfa_offset 32
 1049 0ba4 415D     		popq	%r13
 1050              		.cfi_def_cfa_offset 24
 1051 0ba6 415E     		popq	%r14
 1052              		.cfi_def_cfa_offset 16
 1053 0ba8 415F     		popq	%r15
 1054              		.cfi_def_cfa_offset 8
 1055 0baa C3       		ret
 1056 0bab 0F1F4400 		.p2align 4,,10
 1056      00
 1057              		.p2align 3
 1058              	.L121:
 1059              		.cfi_restore_state
 1060 0bb0 4589F0   		movl	%r14d, %r8d
 1061 0bb3 E980FEFF 		jmp	.L141
 1061      FF
 1062 0bb8 0F1F8400 		.p2align 4,,10
 1062      00000000 
 1063              		.p2align 3
 1064              	.L145:
 1065 0bc0 450FB6E9 		movzbl	%r9b, %r13d
 1066 0bc4 438D4425 		leal	0(%r13,%r12), %eax
 1066      00
 1067 0bc9 89442410 		movl	%eax, 16(%rsp)
 1068 0bcd E9DEFCFF 		jmp	.L107
 1068      FF
 1069              	.L123:
 1070 0bd2 44896424 		movl	%r12d, 16(%rsp)
 1070      10
 1071 0bd7 4531C9   		xorl	%r9d, %r9d
 1072 0bda 4531ED   		xorl	%r13d, %r13d
 1073 0bdd E9CEFCFF 		jmp	.L107
 1073      FF
 1074              	.L144:
 1075 0be2 4139C0   		cmpl	%eax, %r8d
 1076 0be5 0F836BFF 		jnb	.L139
 1076      FFFF
 1077 0beb 4489C5   		movl	%r8d, %ebp
 1078 0bee C1ED04   		shrl	$4, %ebp
 1079 0bf1 E966FEFF 		jmp	.L115
 1079      FF
 1080              	.L147:
 1081 0bf6 4C8D7424 		leaq	48(%rsp), %r14
 1081      30
 1082              	.L98:
 1083 0bfb 4C89F7   		movq	%r14, %rdi
 1084 0bfe E8000000 		call	bufDestroy@PLT
 1084      00
 1085 0c03 E975FFFF 		jmp	.L96
 1085      FF
 1086              	.L146:
 1087 0c08 488B7C24 		movq	40(%rsp), %rdi
 1087      28
 1088 0c0d 488D3500 		leaq	.LC21(%rip), %rsi
 1088      000000
 1089 0c14 31C0     		xorl	%eax, %eax
 1090 0c16 440FB664 		movzbl	39(%rsp), %r12d
 1090      2427
 1091 0c1c 41BD1200 		movl	$18, %r13d
 1091      0000
 1092 0c22 E8000000 		call	errRender@PLT
 1092      00
 1093 0c27 E94CFFFF 		jmp	.L117
 1093      FF
 1094              	.L143:
 1095 0c2c 4C8B7C24 		movq	40(%rsp), %r15
 1095      28
 1096 0c31 4C8D7424 		leaq	48(%rsp), %r14
 1096      30
 1097 0c36 31D2     		xorl	%edx, %edx
 1098 0c38 BE000400 		movl	$1024, %esi
 1098      00
 1099 0c3d 4C89F7   		movq	%r14, %rdi
 1100 0c40 4C89F9   		movq	%r15, %rcx
 1101 0c43 E8000000 		call	bufInitialise@PLT
 1101      00
 1102 0c48 4189C5   		movl	%eax, %r13d
 1103 0c4b 85C0     		testl	%eax, %eax
 1104 0c4d 0F852AFF 		jne	.L96
 1104      FFFF
 1105 0c53 4084ED   		testb	%bpl, %bpl
 1106 0c56 7427     		je	.L97
 1107 0c58 488B7C24 		movq	8(%rsp), %rdi
 1107      08
 1108 0c5d 4C89FA   		movq	%r15, %rdx
 1109 0c60 4C89F6   		movq	%r14, %rsi
 1110 0c63 E8000000 		call	bufDeriveMask@PLT
 1110      00
 1111 0c68 4189C5   		movl	%eax, %r13d
 1112 0c6b 85C0     		testl	%eax, %eax
 1113 0c6d 758C     		jne	.L98
 1114              	.L99:
 1115 0c6f 4C897424 		movq	%r14, 24(%rsp)
 1115      18
 1116 0c74 41BC0100 		movl	$1, %r12d
 1116      0000
 1117 0c7a E963FBFF 		jmp	.L95
 1117      FF
 1118              	.L97:
 1119 0c7f 488B4424 		movq	8(%rsp), %rax
 1119      08
 1120 0c84 488B4C24 		movq	40(%rsp), %rcx
 1120      28
 1121 0c89 BE010000 		movl	$1, %esi
 1121      00
 1122 0c8e 4C89F7   		movq	%r14, %rdi
 1123 0c91 8B5008   		movl	8(%rax), %edx
 1124 0c94 E8000000 		call	bufAppendConst@PLT
 1124      00
 1125 0c99 4189C5   		movl	%eax, %r13d
 1126 0c9c 85C0     		testl	%eax, %eax
 1127 0c9e 74CF     		je	.L99
 1128 0ca0 E956FFFF 		jmp	.L98
 1128      FF
 1129              	.L142:
 1130 0ca5 488B7C24 		movq	40(%rsp), %rdi
 1130      28
 1131 0caa 41BD0200 		movl	$2, %r13d
 1131      0000
 1132 0cb0 E8000000 		call	errRenderStd@PLT
 1132      00
 1133 0cb5 E9CBFEFF 		jmp	.L92
 1133      FF
 1134              	.L148:
 1135 0cba E8000000 		call	__stack_chk_fail@PLT
 1135      00
 1136              		.cfi_endproc
 1137              	.LFE29:
 1139              		.ident	"GCC: (Ubuntu 12.2.0-17ubuntu1) 12.2.0"
 1140              		.section	.note.GNU-stack,"",@progbits
 1141              		.section	.note.gnu.property,"a"
 1142              		.align 8
 1143 0000 04000000 		.long	1f - 0f
 1144 0004 10000000 		.long	4f - 1f
 1145 0008 05000000 		.long	5
 1146              	0:
 1147 000c 474E5500 		.string	"GNU"
 1148              	1:
 1149              		.align 8
 1150 0010 020000C0 		.long	0xc0000002
 1151 0014 04000000 		.long	3f - 2f
 1152              	2:
 1153 0018 03000000 		.long	0x3
 1154              	3:
 1155 001c 00000000 		.align 8
 1156              	4:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 hexio.c
     /tmp/ccq2KH8N.s:50     .text:0000000000000000 bufProcessLine
     /tmp/ccq2KH8N.s:14     .rodata.str1.1:000000000000008f .LC5
     /tmp/ccq2KH8N.s:4      .rodata.str1.1:0000000000000000 .LC0
     /tmp/ccq2KH8N.s:8      .rodata.str1.1:0000000000000038 .LC2
     /tmp/ccq2KH8N.s:6      .rodata.str1.1:000000000000001c .LC1
     /tmp/ccq2KH8N.s:23     .rodata.str1.1:00000000000000c7 .LC8
     /tmp/ccq2KH8N.s:25     .rodata.str1.1:00000000000000d5 .LC9
     /tmp/ccq2KH8N.s:10     .rodata.str1.1:0000000000000055 .LC3
     /tmp/ccq2KH8N.s:41     .rodata.str1.8:0000000000000178 .LC14
     /tmp/ccq2KH8N.s:38     .rodata.str1.8:0000000000000140 .LC13
     /tmp/ccq2KH8N.s:35     .rodata.str1.8:0000000000000108 .LC12
     /tmp/ccq2KH8N.s:20     .rodata.str1.8:0000000000000000 .LC7
     /tmp/ccq2KH8N.s:12     .rodata.str1.1:0000000000000072 .LC4
     /tmp/ccq2KH8N.s:16     .rodata.str1.1:00000000000000ad .LC6
     /tmp/ccq2KH8N.s:29     .rodata.str1.8:0000000000000050 .LC10
     /tmp/ccq2KH8N.s:44     .rodata.str1.8:00000000000001b0 .LC15
     /tmp/ccq2KH8N.s:32     .rodata.str1.8:00000000000000a8 .LC11
     /tmp/ccq2KH8N.s:454    .text:0000000000000510 bufReadFromIntelHexFile
     /tmp/ccq2KH8N.s:442    .rodata.str1.1:00000000000000da .LC16
     /tmp/ccq2KH8N.s:448    .rodata.str1.8:00000000000001e0 .LC18
     /tmp/ccq2KH8N.s:444    .rodata.str1.1:00000000000000dd .LC17
     /tmp/ccq2KH8N.s:604    .text:00000000000006a0 bufDeriveMask
     /tmp/ccq2KH8N.s:733    .text:0000000000000780 bufWriteToIntelHexFile
     /tmp/ccq2KH8N.s:718    .rodata.str1.1:00000000000000e9 .LC19
     /tmp/ccq2KH8N.s:727    .rodata.str1.1:00000000000000f9 .LC22
     /tmp/ccq2KH8N.s:720    .rodata.str1.1:00000000000000ec .LC20
     /tmp/ccq2KH8N.s:724    .rodata.str1.8:0000000000000210 .LC21

UNDEFINED SYMBOLS
getHexByte
errRender
__sprintf_chk
strncmp
bufWriteBlock
bufWriteConst
__stack_chk_fail
fopen
bufZeroLength
fgets
fclose
errRenderStd
bufAppendConst
fputc
getHexUpperNibble
getHexLowerNibble
fwrite
bufDestroy
bufInitialise
